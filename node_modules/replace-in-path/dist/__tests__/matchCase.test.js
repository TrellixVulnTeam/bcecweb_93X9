"use strict";

var _ = require("..");

var _ncp = require("ncp");

var _path = _interopRequireDefault(require("path"));

var _fs = _interopRequireDefault(require("fs"));

var _rimraf = _interopRequireDefault(require("rimraf"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

test("must correctly replace in path", async () => {
  const dirs = {
    mock: _path.default.join(__dirname, "matchCaseMock"),
    test: _path.default.join(__dirname, "matchCase")
  };
  await new Promise(resolve => {
    (0, _ncp.ncp)(dirs.mock, dirs.test, resolve);
  });
  (0, _.replaceInPath)(`${dirs.test}/**/*.txt`, [{
    find: "CHANGED",
    replaceWith: "changed"
  }, {
    find: "LOWERCASE",
    replaceWith: "lowercase"
  }]); // Assert that the match-case replacements have been made successfully.

  const someFileContent = _fs.default.readFileSync(_path.default.join(dirs.test, "someFile.txt"), "utf8");

  expect(someFileContent).toBe(`This should be changed to lowercase.

But this should not be changed, as it's already lowercase.
`);

  _rimraf.default.sync(dirs.test);
});
//# sourceMappingURL=matchCase.test.js.map