{"version":3,"sources":["../../src/__tests__/matchCase.test.ts"],"names":["test","dirs","mock","path","join","__dirname","Promise","resolve","find","replaceWith","someFileContent","fs","readFileSync","expect","toBe","rimraf","sync"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,IAAI,CAAC,gCAAD,EAAmC,YAAY;AAC/C,QAAMC,IAAI,GAAG;AACTC,IAAAA,IAAI,EAAEC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,eAArB,CADG;AAETL,IAAAA,IAAI,EAAEG,cAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB;AAFG,GAAb;AAKA,QAAM,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACzB,kBAAIN,IAAI,CAACC,IAAT,EAAeD,IAAI,CAACD,IAApB,EAA0BO,OAA1B;AACH,GAFK,CAAN;AAIA,uBAAe,GAAEN,IAAI,CAACD,IAAK,WAA3B,EAAuC,CACnC;AAAEQ,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,WAAW,EAAE;AAAhC,GADmC,EAEnC;AAAED,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,WAAW,EAAE;AAAlC,GAFmC,CAAvC,EAV+C,CAe/C;;AACA,QAAMC,eAAe,GAAGC,YAAGC,YAAH,CAAgBT,cAAKC,IAAL,CAAUH,IAAI,CAACD,IAAf,EAAqB,cAArB,CAAhB,EAAsD,MAAtD,CAAxB;;AACAa,EAAAA,MAAM,CAACH,eAAD,CAAN,CAAwBI,IAAxB,CAA8B;;;CAA9B;;AAKAC,kBAAOC,IAAP,CAAYf,IAAI,CAACD,IAAjB;AACH,CAvBG,CAAJ","sourcesContent":["import { replaceInPath } from \"..\";\nimport { ncp } from \"ncp\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport rimraf from \"rimraf\";\n\ntest(\"must correctly replace in path\", async () => {\n    const dirs = {\n        mock: path.join(__dirname, \"matchCaseMock\"),\n        test: path.join(__dirname, \"matchCase\")\n    };\n\n    await new Promise(resolve => {\n        ncp(dirs.mock, dirs.test, resolve);\n    });\n\n    replaceInPath(`${dirs.test}/**/*.txt`, [\n        { find: \"CHANGED\", replaceWith: \"changed\" },\n        { find: \"LOWERCASE\", replaceWith: \"lowercase\" }\n    ]);\n\n    // Assert that the match-case replacements have been made successfully.\n    const someFileContent = fs.readFileSync(path.join(dirs.test, \"someFile.txt\"), \"utf8\");\n    expect(someFileContent).toBe(`This should be changed to lowercase.\n\nBut this should not be changed, as it's already lowercase.\n`);\n\n    rimraf.sync(dirs.test);\n});\n"],"file":"matchCase.test.js"}