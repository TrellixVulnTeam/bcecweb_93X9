{"version":3,"sources":["../src/index.ts"],"names":["replaceInPath","path","replacement","replace","paths","globby","sync","replacements","Array","isArray","i","length","currentPath","file","fs","readFileSync","j","currentReplacement","findRegex","find","RegExp","replaceWith","writeFileSync"],"mappings":";;;;;;;AAAA;;AACA;;;;AAWO,MAAMA,aAAa,GAAG,CAACC,IAAD,EAAkBC,WAAlB,KAAsD;AAC/E;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAa,KAAb,EAAoB,GAApB,CAAP;;AAEA,QAAMC,KAAK,GAAGC,gBAAOC,IAAP,CAAYL,IAAZ,CAAd;;AACA,QAAMM,YAAY,GAAGC,KAAK,CAACC,OAAN,CAAcP,WAAd,IAA6BA,WAA7B,GAA2C,CAACA,WAAD,CAAhE;;AAEA,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,UAAME,WAAW,GAAGR,KAAK,CAACM,CAAD,CAAzB;;AACA,QAAIG,IAAI,GAAGC,YAAGC,YAAH,CAAgBH,WAAhB,EAA6B,MAA7B,CAAX;;AAEA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,YAAY,CAACI,MAAjC,EAAyCK,CAAC,EAA1C,EAA8C;AAC1C,YAAMC,kBAAkB,GAAGV,YAAY,CAACS,CAAD,CAAvC;AACA,YAAME,SAAS,GACX,OAAOD,kBAAkB,CAACE,IAA1B,KAAmC,QAAnC,GACM,IAAIC,MAAJ,CAAWH,kBAAkB,CAACE,IAA9B,EAAoC,GAApC,CADN,GAEMF,kBAAkB,CAACE,IAH7B;AAKAN,MAAAA,IAAI,GAAGA,IAAI,CAACV,OAAL,CAAae,SAAb,EAAwBD,kBAAkB,CAACI,WAA3C,CAAP;AACH;;AAEDP,gBAAGQ,aAAH,CAAiBV,WAAjB,EAA8BC,IAA9B;AACH;AACJ,CAvBM","sourcesContent":["import globby from 'globby';\nimport fs from 'fs';\n\ntype PathParam = string;\n\ntype Replacement = {\n    find: string | RegExp;\n    replaceWith: string;\n};\n\ntype ReplaceInPathParam = Replacement | Replacement[];\n\nexport const replaceInPath = (path: PathParam, replacement: ReplaceInPathParam) => {\n    // Make sure that file paths use forward-slashes.\n    path = path.replace(/\\\\/g, \"/\");\n\n    const paths = globby.sync(path);\n    const replacements = Array.isArray(replacement) ? replacement : [replacement];\n\n    for (let i = 0; i < paths.length; i++) {\n        const currentPath = paths[i];\n        let file = fs.readFileSync(currentPath, \"utf8\");\n\n        for (let j = 0; j < replacements.length; j++) {\n            const currentReplacement = replacements[j];\n            const findRegex =\n                typeof currentReplacement.find === \"string\"\n                    ? new RegExp(currentReplacement.find, \"g\")\n                    : currentReplacement.find;\n\n            file = file.replace(findRegex, currentReplacement.replaceWith);\n        }\n\n        fs.writeFileSync(currentPath, file);\n    }\n};\n"],"file":"index.js"}