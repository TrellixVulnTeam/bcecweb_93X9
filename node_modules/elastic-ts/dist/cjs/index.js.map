{"version":3,"file":"index.js","sources":["../../src/elasticBuilder/buildAggregation.ts","../../src/elasticBuilder/buildClause.ts","../../src/elasticBuilder/buildSort.ts","../../src/elasticBuilder/utils.ts","../../src/elasticBuilder/buildBody.ts","../../src/elasticBuilder/index.ts"],"sourcesContent":["import is from '@sindresorhus/is'\nimport {AggregationArgs, BuilderFn, WithBuilderFns} from './types'\nimport {PlainObject} from './utils'\n\n/** buildAggregation takes arguments passed to a query or filter and transforms them into a query clause */\nexport function buildAggregation(args: WithBuilderFns<AggregationArgs>): object {\n  switch (args.length) {\n    case 3:\n      return buildAggregation3(args)\n    case 4:\n      return buildAggregation4(args)\n    case 5:\n      return buildAggregation5(args)\n    default:\n      throw new TypeError('invalid arguments')\n  }\n}\n\nfunction buildAggregation3([name, type, fieldOrConfig]: [string, string, string | PlainObject]) {\n  if (is.string(fieldOrConfig)) {\n    const field = fieldOrConfig\n    return {[name]: {[type]: {field}}}\n  }\n\n  const config = fieldOrConfig\n  return {[name]: {[type]: {...config}}}\n}\n\nfunction buildAggregation4([name, type, fieldOrConfig, configOrBuilder]:\n  | [string, string, string, PlainObject | BuilderFn]\n  | [string, string, PlainObject, BuilderFn]) {\n  if (is.string(fieldOrConfig)) {\n    const field = fieldOrConfig\n\n    if (is.function_(configOrBuilder)) {\n      const builder = configOrBuilder\n      return {[name]: {[type]: {field}, ...builder().build()}}\n    }\n\n    const config = configOrBuilder\n    return {[name]: {[type]: {field, ...config}}}\n  }\n\n  if (is.function_(configOrBuilder)) {\n    const config = fieldOrConfig\n    const builder = configOrBuilder\n    return {[name]: {[type]: {...config}, ...builder().build()}}\n  }\n  throw new TypeError('invalid arguments')\n}\n\nfunction buildAggregation5([name, type, field, config, builder]: [string, string, string, PlainObject, BuilderFn]) {\n  return {[name]: {[type]: {field, ...config}, ...builder().build()}}\n}\n","import is from '@sindresorhus/is'\nimport {BuilderFn, FilterArgs, QueryArgs, QueryData, WithBuilderFns} from './types'\nimport {PlainObject, Primitive} from './utils'\n\n/** buildClause takes arguments passed to a query or filter and transforms them into a query clause */\nexport function buildClause(data: QueryData, args: WithBuilderFns<FilterArgs | QueryArgs>): object {\n  switch (args.length) {\n    case 1:\n      return buildClause1(data, args)\n    case 2:\n      return buildClause2(args)\n    case 3:\n      return buildClause3(args)\n    case 4:\n      return buildClause4(args)\n    case 5:\n      return buildClause5(args)\n    default:\n      throw new TypeError('invalid args')\n  }\n}\n\nfunction buildClause1(data: QueryData, [builder]: [BuilderFn]) {\n  const built = builder().build()\n  return (data.parent ? built[data.parent] : built.filter || built.query) || {}\n}\n\nfunction buildClause2([type, fieldOrConfig]: [string, string | object]) {\n  if (is.string(fieldOrConfig)) {\n    const field = fieldOrConfig\n    return {[type]: {field}}\n  }\n\n  const config = fieldOrConfig\n  return {[type]: {...config}}\n}\n\nfunction buildClause3([type, fieldOrConfig, valueOrConfigOrBuilder]:\n  | [string, string, Primitive | Primitive[] | BuilderFn | PlainObject]\n  | [string, object, BuilderFn]) {\n  if (is.string(fieldOrConfig)) {\n    const field = fieldOrConfig\n\n    if (is.function_(valueOrConfigOrBuilder)) {\n      const builder = valueOrConfigOrBuilder\n      return {[type]: {[field]: builder().build()}}\n    }\n\n    if (is.plainObject(valueOrConfigOrBuilder)) {\n      const config = valueOrConfigOrBuilder\n      return {[type]: {[field]: config}}\n    }\n\n    const value = valueOrConfigOrBuilder\n    return {[type]: {[field]: value}}\n  }\n\n  if (is.function_(valueOrConfigOrBuilder)) {\n    const config = fieldOrConfig\n    const builder = valueOrConfigOrBuilder\n    return {[type]: {...config, ...builder().build()}}\n  }\n\n  throw new TypeError('invalid argument')\n}\n\nfunction buildClause4([type, field, value, configOrBuilder]: [\n  string,\n  string,\n  Primitive | Primitive[],\n  BuilderFn | PlainObject,\n]) {\n  if (is.function_(configOrBuilder)) {\n    const builder = configOrBuilder\n    return {[type]: {[field]: value, ...builder().build()}}\n  }\n\n  const config = configOrBuilder\n  return {[type]: {[field]: value, ...config}}\n}\n\nfunction buildClause5([type, field, value, config, builder]: [\n  string,\n  string,\n  Primitive | Primitive[],\n  PlainObject,\n  BuilderFn,\n]) {\n  return {[type]: {[field]: value, ...config, ...builder().build()}}\n}\n","import is from '@sindresorhus/is'\nimport {SortType} from '../types/common'\nimport {SortArgs} from './types'\nimport {PlainObject} from './utils'\n\ninterface SortObject {\n  [field: string]: string | object\n}\n\nexport function deduplicateSort(configs: SortObject[]) {\n  const seenFields = new Set<string>()\n\n  return configs\n    .reverse()\n    .filter((config) => {\n      const field = Object.keys(config)[0]\n      if (seenFields.has(field) && field !== '_geo_distance') {\n        return false\n      }\n      seenFields.add(field)\n      return true\n    })\n    .reverse()\n}\n\n/** buildSort takes arguments passed to the sort function and transforms them into configs */\nexport function buildSort(args: SortArgs) {\n  switch (args.length) {\n    case 1:\n      return buildSort1(args)\n    case 2:\n      return buildSort2(args)\n    default:\n      throw new TypeError('invalid arguments')\n  }\n}\n\nfunction buildSort1([fieldOrConfigArray]: [string] | [SortType[]]) {\n  if (is.string(fieldOrConfigArray)) {\n    const field = fieldOrConfigArray\n    return {[field]: {order: 'asc'}}\n  }\n\n  const configArray = fieldOrConfigArray\n  return configArray.map((item) => {\n    if (is.string(item)) {\n      const field = item\n      return {[field]: {order: 'asc'}}\n    } else {\n      const keys = Object.keys(item)\n      if (keys.length !== 1) {\n        throw new TypeError('invalid argument')\n      }\n      const field = keys[0]\n      const orderOrConfig = (item as Record<string, string | object>)[field]\n      if (is.string(orderOrConfig)) {\n        const order = orderOrConfig\n        return {[field]: {order}}\n      } else {\n        const config = orderOrConfig\n        return {[field]: {...config}}\n      }\n    }\n  })\n}\n\nfunction buildSort2([field, orderOrConfig]: [string, string] | [string, PlainObject]) {\n  if (is.string(orderOrConfig)) {\n    const order = orderOrConfig\n    return {[field]: {order}}\n  }\n  const config = orderOrConfig\n  return {[field]: {...config}}\n}\n","export type NotFunction<T> = T extends Function ? never : T\n\nexport type PlainObject = NotFunction<object>\n\nexport type Primitive = null | undefined | string | number | boolean | symbol\n\nexport type Optional<T, K extends string> = Omit<T, K> & {[P in Extract<keyof T, K>]?: T[P] | undefined}\n\nexport function assertNever(value: never): never {\n  throw new TypeError(`Unexpected value: ${value}`)\n}\n\nexport function flatMap<U, T = any>(items: T[], callbackfn: (value: T, index: number, array: T[]) => U | U[]): U[] {\n  const results: U[] = []\n  let idx = 0\n\n  for (const item of items) {\n    const result = callbackfn(item, idx++, items)\n    if (Array.isArray(result)) {\n      for (const r of result) {\n        results.push(r)\n      }\n    } else {\n      results.push(result)\n    }\n  }\n\n  return results\n}\n","import is from '@sindresorhus/is'\nimport {buildAggregation} from './buildAggregation'\nimport {buildClause} from './buildClause'\nimport {buildSort, deduplicateSort} from './buildSort'\nimport {BuiltQuery, FilterArgs, QueryArgs, QueryData, WithBuilderFns} from './types'\nimport {flatMap} from './utils'\n\ninterface BoolData {\n  and: object[]\n  or: object[]\n  not: object[]\n  filter?: object\n  minimumShouldMatch?: number | string\n}\n\n/**\n * simplifyClauses transforms an array into a single value if length === 1,\n * otherwise it returns the original array.\n */\nfunction simplifyClauses<T>(items: T[]): T | T[] {\n  if (items.length === 1) {\n    return items[0]\n  }\n  return items\n}\n\nfunction buildBool(data: BoolData): object | undefined {\n  if (data.or.length === 0 && data.not.length === 0 && !data.filter) {\n    if (data.and.length === 1) {\n      return data.and[0]\n    } else if (data.and.length === 0) {\n      return undefined\n    }\n  }\n\n  const totalCount = data.and.length + data.or.length + data.not.length\n\n  return {\n    bool: {\n      ...(data.and.length ? {must: simplifyClauses(data.and)} : {}),\n      ...(data.or.length ? {should: simplifyClauses(data.or)} : {}),\n      ...(data.not.length ? {must_not: simplifyClauses(data.not)} : {}),\n      ...(data.filter ? {filter: data.filter} : {}),\n      ...(data.minimumShouldMatch != null && totalCount > 1 ? {minimum_should_match: data.minimumShouldMatch} : {}),\n    },\n  }\n}\n\nexport function buildBody(data: QueryData) {\n  const built: BuiltQuery = {}\n  const {aggregations, filter, query} = data\n\n  function buildClauses(clauses: WithBuilderFns<FilterArgs | QueryArgs>[]) {\n    return clauses.map((args) => buildClause(data, args)).filter((c) => c)\n  }\n\n  const builtFilter = buildBool({\n    and: buildClauses(filter.and),\n    or: buildClauses(filter.or),\n    not: buildClauses(filter.not),\n    minimumShouldMatch: filter.minimumShouldMatch,\n  })\n\n  if (data.inChildContext) {\n    if (builtFilter) {\n      built.filter = builtFilter\n    }\n  }\n\n  const builtQuery = buildBool({\n    and: buildClauses(query.and),\n    or: buildClauses(query.or),\n    not: buildClauses(query.not),\n    filter: data.inChildContext ? undefined : builtFilter,\n    minimumShouldMatch: query.minimumShouldMatch,\n  })\n\n  if (builtQuery) {\n    built.query = builtQuery\n  }\n\n  if (data.from != null) {\n    built.from = data.from\n  }\n\n  if (data.size != null) {\n    built.size = data.size\n  }\n\n  if (data.sort.length) {\n    built.sort = deduplicateSort(flatMap(data.sort, (args) => buildSort(args)))\n  }\n\n  if (is.nonEmptyObject(aggregations)) {\n    built.aggs = aggregations.reduce(\n      (acc, args) => ({\n        ...acc,\n        ...buildAggregation(args),\n      }),\n      {},\n    )\n  }\n\n  return {...built, ...data.rawOption}\n}\n","import is from '@sindresorhus/is'\nimport {buildBody} from './buildBody'\nimport {AggregationArgs, ESBuilder, FilterArgs, QueryArgs, QueryData, SortArgs, WithBuilderFns} from './types'\n\n/** Returns a new Elasticsearch query builder instance */\nexport function esBuilder() {\n  return builderBuilder()\n}\n\nexport * from './types'\n\nfunction defaultData(): QueryData {\n  return {\n    aggregations: [],\n    filter: {\n      and: [],\n      or: [],\n      not: [],\n      minimumShouldMatch: undefined,\n    },\n    from: undefined,\n    inChildContext: false,\n    size: undefined,\n    sort: [],\n    query: {\n      and: [],\n      or: [],\n      not: [],\n      minimumShouldMatch: undefined,\n    },\n    rawOption: {},\n  }\n}\n\nfunction prepareSubBuilderArgs<T extends unknown[], R>(args: T, replacement: () => R): WithBuilderFns<T> {\n  args.forEach((arg, i) => {\n    if (is.function_(arg)) {\n      args[i] = () => arg(replacement())\n    }\n  })\n\n  return args as WithBuilderFns<T>\n}\n\n/** Returns the entire ES query builder */\nfunction builderBuilder(data: QueryData = defaultData()): ESBuilder {\n  return {\n    from(quantity: number) {\n      return builderBuilder({...data, from: quantity})\n    },\n    size(quantity: number) {\n      return builderBuilder({...data, size: quantity})\n    },\n    rawOption(key: string, value: unknown) {\n      return builderBuilder({...data, rawOption: {...data.rawOption, [key]: value}})\n    },\n    sort(...args: SortArgs) {\n      return builderBuilder({...data, sort: [...data.sort, args]})\n    },\n    ...aggregationBuilder(data),\n    ...baseBuilder(data),\n    ...filterBuilder(data),\n    ...queryBuilder(data),\n  }\n}\n\n/** Returns builder functions for aggregations */\nfunction aggregationBuilder(data: QueryData) {\n  const {aggregations} = data\n\n  function bindSubBuilder(args: AggregationArgs) {\n    return prepareSubBuilderArgs(args, () => {\n      const next: QueryData = {...defaultData(), inChildContext: true}\n      return {...aggregationBuilder(next), ...baseBuilder(next), ...filterBuilder(next), ...queryBuilder(next)}\n    })\n  }\n\n  const aggregation = (...args: AggregationArgs) => {\n    return builderBuilder({\n      ...data,\n      aggregations: [...aggregations, bindSubBuilder(args)],\n    })\n  }\n\n  return {\n    agg: aggregation,\n    aggregation,\n  }\n}\n\n/** Returns base builder function */\nfunction baseBuilder(data: QueryData) {\n  return {\n    build() {\n      return buildBody(data)\n    },\n  }\n}\n\n/** Returns builder functions for filters */\nfunction filterBuilder(data: QueryData) {\n  const {filter} = data\n\n  function bindSubBuilder(args: FilterArgs) {\n    return prepareSubBuilderArgs(args, () => {\n      const next: QueryData = {parent: 'filter', ...defaultData(), inChildContext: true}\n      return {...baseBuilder(next), ...filterBuilder(next), ...(data.parent === 'query' ? queryBuilder(next) : {})}\n    })\n  }\n\n  return {\n    filter(...args: FilterArgs) {\n      return builderBuilder({\n        ...data,\n        filter: {...filter, and: [...filter.and, bindSubBuilder(args)]},\n      })\n    },\n    andFilter(...args: FilterArgs) {\n      return builderBuilder({\n        ...data,\n        filter: {...filter, and: [...filter.and, bindSubBuilder(args)]},\n      })\n    },\n    orFilter(...args: FilterArgs) {\n      return builderBuilder({\n        ...data,\n        filter: {...filter, or: [...filter.or, bindSubBuilder(args)]},\n      })\n    },\n    notFilter(...args: FilterArgs) {\n      return builderBuilder({\n        ...data,\n        filter: {...filter, not: [...filter.not, bindSubBuilder(args)]},\n      })\n    },\n    filterMinimumShouldMatch(minimumShouldMatch: number | string) {\n      return builderBuilder({...data, filter: {...filter, minimumShouldMatch}})\n    },\n  }\n}\n\n/** Returns builder functions for queries */\nfunction queryBuilder(data: QueryData) {\n  const {query} = data\n\n  function bindSubBuilder(args: QueryArgs) {\n    return prepareSubBuilderArgs(args, () => {\n      const next: QueryData = {parent: 'query', ...defaultData(), inChildContext: true}\n      return {...baseBuilder(next), ...filterBuilder(next), ...queryBuilder(next)}\n    })\n  }\n\n  return {\n    query(...args: QueryArgs) {\n      return builderBuilder({...data, query: {...query, and: [...query.and, bindSubBuilder(args)]}})\n    },\n    andQuery(...args: QueryArgs) {\n      return builderBuilder({...data, query: {...query, and: [...query.and, bindSubBuilder(args)]}})\n    },\n    orQuery(...args: QueryArgs) {\n      return builderBuilder({...data, query: {...query, or: [...query.or, bindSubBuilder(args)]}})\n    },\n    notQuery(...args: QueryArgs) {\n      return builderBuilder({...data, query: {...query, not: [...query.not, bindSubBuilder(args)]}})\n    },\n    queryMinimumShouldMatch(minimumShouldMatch: number | string) {\n      return builderBuilder({...data, query: {...query, minimumShouldMatch}})\n    },\n  }\n}\n"],"names":["is"],"mappings":"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"}