{"version":3,"sources":["../../src/fields/number.js"],"names":["number","list","rest","field","type","value","Infinity"],"mappings":";;;;;;;;;;;;;AAEA;;AACA;;;;;;AAEA,MAAMA,MAAoB,GAAG,CAAC,OAAoB,EAArB,KAA4B;AAAA,MAA3B;AAAEC,IAAAA;AAAF,GAA2B;AAAA,MAAhBC,IAAgB;AACrD,QAAMC,KAAK,GAAG,0DAAiBD,IAAjB;AAAuBD,IAAAA,IAAvB;AAA6BG,IAAAA,IAAI,EAAE;AAAnC,KAAd;AACA,4CAA4BC,KAAK,IAAI;AACjC,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,GAAG,CAACC,QAAtC,IAAkDD,KAAK,GAAGC,QAAjE;AACH,GAFD,EAEGH,KAFH;AAIA,SAAOA,KAAP;AACH,CAPD;;eASeH,M","sourcesContent":["// @flow\nimport type { FieldFactory } from \"@commodo/fields/types\";\nimport withFieldDataTypeValidation from \"./withFieldDataTypeValidation\";\nimport createField from \"./createField\";\n\nconst number: FieldFactory = ({ list, ...rest } = {}) => {\n    const field = createField({ ...rest, list, type: \"number\" });\n    withFieldDataTypeValidation(value => {\n        return typeof value === \"number\" && value > -Infinity && value < Infinity;\n    })(field);\n\n    return field;\n};\n\nexport default number;\n"],"file":"number.js"}