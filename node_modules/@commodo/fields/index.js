"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  withFields: true,
  hasFields: true,
  WithFieldsError: true,
  setOnce: true,
  skipOnPopulate: true,
  onGet: true,
  onSet: true
};
Object.defineProperty(exports, "withFields", {
  enumerable: true,
  get: function () {
    return _withFields.default;
  }
});
Object.defineProperty(exports, "hasFields", {
  enumerable: true,
  get: function () {
    return _hasFields.default;
  }
});
Object.defineProperty(exports, "WithFieldsError", {
  enumerable: true,
  get: function () {
    return _WithFieldsError.default;
  }
});
Object.defineProperty(exports, "setOnce", {
  enumerable: true,
  get: function () {
    return _setOnce.default;
  }
});
Object.defineProperty(exports, "skipOnPopulate", {
  enumerable: true,
  get: function () {
    return _skipOnPopulate.default;
  }
});
Object.defineProperty(exports, "onGet", {
  enumerable: true,
  get: function () {
    return _onGet.default;
  }
});
Object.defineProperty(exports, "onSet", {
  enumerable: true,
  get: function () {
    return _onSet.default;
  }
});

var _withFields = _interopRequireDefault(require("./withFields"));

var _fields = require("./fields");

Object.keys(_fields).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _fields[key];
    }
  });
});

var _hasFields = _interopRequireDefault(require("./hasFields"));

var _WithFieldsError = _interopRequireDefault(require("./WithFieldsError"));

var _setOnce = _interopRequireDefault(require("./setOnce"));

var _skipOnPopulate = _interopRequireDefault(require("./skipOnPopulate"));

var _onGet = _interopRequireDefault(require("./onGet"));

var _onSet = _interopRequireDefault(require("./onSet"));
//# sourceMappingURL=index.js.map