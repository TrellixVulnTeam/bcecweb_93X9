import execa from "execa";
declare type Command = string | string[];
declare type PulumiArgs = {
    [key: string]: string | boolean;
};
declare type ExecaArgs = {
    [key: string]: any;
};
declare type DefaultArgs = {
    args?: PulumiArgs;
    execa?: ExecaArgs;
    beforePulumiInstall?: () => any;
    afterPulumiInstall?: () => any;
};
declare type RunArgs = {
    command: Command;
    args?: PulumiArgs;
    execa?: ExecaArgs;
    beforePulumiInstall?: () => any;
    afterPulumiInstall?: () => any;
};
declare type InstallArgs = {
    beforePulumiInstall?: () => any;
    afterPulumiInstall?: () => any;
};
export declare const FLAG_NON_INTERACTIVE = "--non-interactive";
export declare const PULUMI_FOLDER: string;
export declare const PULUMI_BINARY_PATH: string;
export declare class Pulumi {
    defaultArgs: DefaultArgs;
    constructor(options?: DefaultArgs);
    run(rawArgs: RunArgs): execa.ExecaChildProcess<string>;
    install(rawArgs?: InstallArgs): Promise<boolean>;
}
export {};
