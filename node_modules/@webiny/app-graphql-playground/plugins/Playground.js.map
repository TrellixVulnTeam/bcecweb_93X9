{"version":3,"sources":["../../src/plugins/Playground.tsx"],"names":["React","Fragment","useEffect","useRef","useCallback","useState","ApolloLink","setContext","loadScript","Global","plugins","useI18N","useSecurity","CircularProgress","playgroundDialog","PlaygroundContainer","settings","withHeaders","link","headers","from","_","req","initScripts","Promise","resolve","window","GraphQLPlayground","Playground","createApolloClient","loading","setLoading","getCurrentLocale","identity","links","locale","tabs","byType","map","pl","tab","filter","Boolean","createApolloLink","endpoint","includes","process","env","REACT_APP_API_URL","Object","values","current","uri","then","init","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useRef, useCallback, useState } from \"react\";\nimport { ApolloLink } from \"apollo-link\";\nimport { setContext } from \"apollo-link-context\";\nimport loadScript from \"load-script\";\nimport { Global } from \"@emotion/core\";\nimport { plugins } from \"@webiny/plugins\";\nimport { useI18N } from \"@webiny/app-i18n/hooks/useI18N\";\nimport { useSecurity } from \"@webiny/app-security\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { playgroundDialog, PlaygroundContainer } from \"./Playground.styles\";\nimport { settings } from \"./settings\";\n\nconst withHeaders = (link, headers) => {\n    return ApolloLink.from([\n        setContext(async (_, req) => {\n            return {\n                headers: {\n                    ...req.headers,\n                    ...headers\n                }\n            };\n        }),\n        link\n    ]);\n};\n\nconst initScripts = () => {\n    return new Promise((resolve: any) => {\n        // @ts-ignore\n        if (window.GraphQLPlayground) {\n            return resolve();\n        }\n\n        return loadScript(\n            \"https://cdn.jsdelivr.net/npm/@apollographql/graphql-playground-react@1.7.32/build/static/js/middleware.js\",\n            resolve\n        );\n    });\n};\n\nconst Playground = ({ createApolloClient }) => {\n    const [loading, setLoading] = useState(true);\n    const { getCurrentLocale } = useI18N();\n    const { identity } = useSecurity();\n    const links = useRef({});\n\n    const locale = getCurrentLocale(\"content\");\n\n    const tabs = plugins\n        .byType(\"graphql-playground-tab\")\n        .map(pl => pl.tab({ locale, identity }))\n        .filter(Boolean);\n\n    const createApolloLink = useCallback(({ endpoint, headers }) => {\n        // If the request endpoint is not know to us, return the first available\n        if (!endpoint.includes(process.env.REACT_APP_API_URL)) {\n            return { link: withHeaders(Object.values(links.current)[0], headers) };\n        }\n\n        if (!links.current[endpoint]) {\n            links.current[endpoint] = createApolloClient({ uri: endpoint }).link;\n        }\n\n        return {\n            link: withHeaders(links.current[endpoint], headers)\n        };\n    }, []);\n\n    useEffect(() => {\n        initScripts().then(() => {\n            setLoading(false);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (!loading) {\n            // @ts-ignore\n            window.GraphQLPlayground.init(document.getElementById(\"graphql-playground\"), {\n                tabs,\n                createApolloLink,\n                settings\n            });\n        }\n    }, [loading]);\n\n    return (\n        <Fragment>\n            {loading ? (\n                <CircularProgress label={\"Loading playground...\"} />\n            ) : (\n                <PlaygroundContainer id={\"graphql-playground\"} />\n            )}\n            <Global styles={playgroundDialog} />\n        </Fragment>\n    );\n};\n\nexport default Playground;\n"],"file":"Playground.js"}