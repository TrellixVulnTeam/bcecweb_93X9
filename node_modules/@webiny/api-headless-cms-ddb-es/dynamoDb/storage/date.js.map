{"version":3,"sources":["../../../src/dynamoDb/storage/date.ts"],"names":["excludeTypes","type","name","fieldType","fromStorage","field","value","settings","includes","Date","toStorage","toISOString","WebinyError","fieldId"],"mappings":";;;;;;;;;AAAA;;AAMA,MAAMA,YAAY,GAAG,CAAC,MAAD,EAAS,sBAAT,CAArB;;eAEe,OAA4D;AACvEC,EAAAA,IAAI,EAAE,4BADiE;AAEvEC,EAAAA,IAAI,EAAE,qCAFiE;AAGvEC,EAAAA,SAAS,EAAE,UAH4D;;AAIvE,QAAMC,WAAN,CAAkB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAlB,EAAoC;AAChC,UAAM;AAAEL,MAAAA;AAAF,QAAYI,KAAD,CAAwCE,QAAzD;;AACA,QAAI,CAACD,KAAD,IAAU,CAACL,IAAX,IAAmBD,YAAY,CAACQ,QAAb,CAAsBP,IAAtB,CAAvB,EAAoD;AAChD,aAAOK,KAAP;AACH;;AACD,QAAI;AACA,aAAO,IAAIG,IAAJ,CAASH,KAAT,CAAP;AACH,KAFD,CAEE,MAAM;AACJ,aAAOA,KAAP;AACH;AACJ,GAdsE;;AAevE,QAAMI,SAAN,CAAgB;AAAEJ,IAAAA,KAAF;AAASD,IAAAA;AAAT,GAAhB,EAAkC;AAC9B,UAAM;AAAEJ,MAAAA;AAAF,QAAYI,KAAD,CAAwCE,QAAzD;;AACA,QAAI,CAACD,KAAD,IAAU,CAACL,IAAX,IAAmBD,YAAY,CAACQ,QAAb,CAAsBP,IAAtB,CAAvB,EAAoD;AAChD,aAAOK,KAAP;AACH;;AACD,QAAKA,KAAD,CAAeK,WAAnB,EAAgC;AAC5B,aAAQL,KAAD,CAAgBK,WAAhB,EAAP;AACH,KAFD,MAEO,IAAI,OAAOL,KAAP,KAAiB,QAArB,EAA+B;AAClC,aAAOA,KAAP;AACH;;AACD,UAAM,IAAIM,cAAJ,CAAgB,2CAAhB,EAA6D,kBAA7D,EAAiF;AACnFN,MAAAA,KADmF;AAEnFO,MAAAA,OAAO,EAAER,KAAK,CAACQ;AAFoE,KAAjF,CAAN;AAIH;;AA7BsE,CAA5D,C","sourcesContent":["import WebinyError from \"@webiny/error\";\nimport {\n    CmsContentModelDateTimeField,\n    CmsModelFieldToStoragePlugin\n} from \"@webiny/api-headless-cms/types\";\n\nconst excludeTypes = [\"time\", \"dateTimeWithTimezone\"];\n\nexport default (): CmsModelFieldToStoragePlugin<Date | string, string> => ({\n    type: \"cms-model-field-to-storage\",\n    name: \"cms-model-field-to-storage-datetime\",\n    fieldType: \"datetime\",\n    async fromStorage({ field, value }) {\n        const { type } = (field as CmsContentModelDateTimeField).settings;\n        if (!value || !type || excludeTypes.includes(type)) {\n            return value;\n        }\n        try {\n            return new Date(value);\n        } catch {\n            return value;\n        }\n    },\n    async toStorage({ value, field }) {\n        const { type } = (field as CmsContentModelDateTimeField).settings;\n        if (!value || !type || excludeTypes.includes(type)) {\n            return value as string;\n        }\n        if ((value as any).toISOString) {\n            return (value as Date).toISOString();\n        } else if (typeof value === \"string\") {\n            return value as string;\n        }\n        throw new WebinyError(\"Error converting value to a storage type.\", \"TO_STORAGE_ERROR\", {\n            value,\n            fieldId: field.fieldId\n        });\n    }\n});\n"],"file":"date.js"}