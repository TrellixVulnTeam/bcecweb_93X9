"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _error = _interopRequireDefault(require("@webiny/error"));

const excludeTypes = ["time", "dateTimeWithTimezone"];

var _default = () => ({
  type: "cms-model-field-to-storage",
  name: "cms-model-field-to-storage-datetime",
  fieldType: "datetime",

  async fromStorage({
    field,
    value
  }) {
    const {
      type
    } = field.settings;

    if (!value || !type || excludeTypes.includes(type)) {
      return value;
    }

    try {
      return new Date(value);
    } catch {
      return value;
    }
  },

  async toStorage({
    value,
    field
  }) {
    const {
      type
    } = field.settings;

    if (!value || !type || excludeTypes.includes(type)) {
      return value;
    }

    if (value.toISOString) {
      return value.toISOString();
    } else if (typeof value === "string") {
      return value;
    }

    throw new _error.default("Error converting value to a storage type.", "TO_STORAGE_ERROR", {
      value,
      fieldId: field.fieldId
    });
  }

});

exports.default = _default;
//# sourceMappingURL=date.js.map