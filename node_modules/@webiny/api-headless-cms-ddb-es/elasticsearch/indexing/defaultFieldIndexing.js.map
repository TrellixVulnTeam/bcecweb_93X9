{"version":3,"sources":["../../../src/elasticsearch/indexing/defaultFieldIndexing.ts"],"names":["type","name","fieldType","toIndex","field","getFieldTypePlugin","value","fieldTypePlugin","isSearchable","rawValue","fromIndex"],"mappings":";;;;;;;eAEe,OAA2C;AACtDA,EAAAA,IAAI,EAAE,mCADgD;AAEtDC,EAAAA,IAAI,EAAE,2CAFgD;AAGtDC,EAAAA,SAAS,EAAE,GAH2C;;AAItDC,EAAAA,OAAO,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,kBAAT;AAA6BC,IAAAA;AAA7B,GAAD,EAAuC;AAC1C,UAAMC,eAAe,GAAGF,kBAAkB,CAACD,KAAK,CAACJ,IAAP,CAA1C,CAD0C,CAG1C;;AACA,QAAIO,eAAe,CAACC,YAAhB,KAAiC,IAArC,EAA2C;AACvC,aAAO;AAAEF,QAAAA;AAAF,OAAP;AACH,KANyC,CAQ1C;AACA;;;AACA,WAAO;AAAEG,MAAAA,QAAQ,EAAEH;AAAZ,KAAP;AACH,GAfqD;;AAgBtDI,EAAAA,SAAS,CAAC;AAAEN,IAAAA,KAAF;AAASC,IAAAA,kBAAT;AAA6BC,IAAAA,KAA7B;AAAoCG,IAAAA;AAApC,GAAD,EAAiD;AACtD,UAAM;AAAED,MAAAA;AAAF,QAAmBH,kBAAkB,CAACD,KAAK,CAACJ,IAAP,CAA3C;AAEA,WAAOQ,YAAY,KAAK,IAAjB,GAAwBF,KAAxB,GAAgCG,QAAvC;AACH;;AApBqD,CAA3C,C","sourcesContent":["import { CmsModelFieldToElasticsearchPlugin } from \"~/types\";\n\nexport default (): CmsModelFieldToElasticsearchPlugin => ({\n    type: \"cms-model-field-to-elastic-search\",\n    name: \"cms-model-field-to-elastic-search-default\",\n    fieldType: \"*\",\n    toIndex({ field, getFieldTypePlugin, value }) {\n        const fieldTypePlugin = getFieldTypePlugin(field.type);\n\n        // when field is searchable, assign it to `values`\n        if (fieldTypePlugin.isSearchable === true) {\n            return { value };\n        }\n\n        // when field is not searchable, move its value to `rawValues`.\n        // `rawValues` is a field in ES index that's not being indexed.\n        return { rawValue: value };\n    },\n    fromIndex({ field, getFieldTypePlugin, value, rawValue }) {\n        const { isSearchable } = getFieldTypePlugin(field.type);\n\n        return isSearchable === true ? value : rawValue;\n    }\n});\n"],"file":"defaultFieldIndexing.js"}