{"version":3,"sources":["../../src/definitions/elasticsearchEntry.ts"],"names":["params","table","Entity","name","attributes","PK","type","partitionKey","SK","sortKey","index","data"],"mappings":";;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;eACgBA,MAAD,IAAgE;AAC3E,QAAM;AAAEC,IAAAA;AAAF,MAAYD,MAAlB;AACA,SAAO,IAAIE,uBAAJ,CAAW;AACdC,IAAAA,IAAI,EAAE,2BADQ;AAEdF,IAAAA,KAFc;AAGdG,IAAAA,UAAU,EAAE;AACRC,MAAAA,EAAE,EAAE;AACAC,QAAAA,IAAI,EAAE,QADN;AAEAC,QAAAA,YAAY,EAAE;AAFd,OADI;AAKRC,MAAAA,EAAE,EAAE;AACAF,QAAAA,IAAI,EAAE,QADN;AAEAG,QAAAA,OAAO,EAAE;AAFT,OALI;AASRC,MAAAA,KAAK,EAAE;AACHJ,QAAAA,IAAI,EAAE;AADH,OATC;AAYRK,MAAAA,IAAI,EAAE;AACFL,QAAAA,IAAI,EAAE;AADJ;AAZE;AAHE,GAAX,CAAP;AAoBH,C","sourcesContent":["import { Entity, Table } from \"dynamodb-toolbox\";\nimport { CmsContext } from \"@webiny/api-headless-cms/types\";\n/**\n * TODO when saving this entity remove fields:\n * - ignore\n * - version\n * - savedOn\n */\nexport default (params: { table: Table; context: CmsContext }): Entity<any> => {\n    const { table } = params;\n    return new Entity({\n        name: \"ContentElasticsearchEntry\",\n        table,\n        attributes: {\n            PK: {\n                type: \"string\",\n                partitionKey: true\n            },\n            SK: {\n                type: \"string\",\n                sortKey: true\n            },\n            index: {\n                type: \"string\"\n            },\n            data: {\n                type: \"map\"\n            }\n        }\n    });\n};\n"],"file":"elasticsearchEntry.js"}