"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CmsSystemInstallationPlugin = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _InstallationPlugin = require("@webiny/api-headless-cms/plugins/InstallationPlugin");

var _error = _interopRequireDefault(require("@webiny/error"));

/**
 * We're creating a new plugin class and giving it a fixed name.
 * This will ensure that there's only 1 instance of this plugin registered at any given time.
 */
class CmsSystemInstallationPlugin extends _InstallationPlugin.InstallationPlugin {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "name", "cms.system.ddb-es-installation");
  }

  async beforeInstall({
    context
  }) {
    const {
      elasticsearch
    } = context;

    try {
      await elasticsearch.indices.putTemplate({
        name: "headless-cms-entries-index",
        body: {
          index_patterns: ["*headless-cms*"],
          settings: {
            analysis: {
              analyzer: {
                lowercase_analyzer: {
                  type: "custom",
                  filter: ["lowercase", "trim"],
                  tokenizer: "keyword"
                }
              }
            }
          },
          mappings: {
            properties: {
              property: {
                type: "text",
                fields: {
                  keyword: {
                    type: "keyword",
                    ignore_above: 256
                  }
                },
                analyzer: "lowercase_analyzer"
              },
              rawValues: {
                type: "object",
                enabled: false
              }
            }
          }
        }
      });
    } catch (err) {
      console.log(err);
      throw new _error.default("Index template creation failed!", "CMS_INSTALLATION_INDEX_TEMPLATE_ERROR");
    }
  }

}

exports.CmsSystemInstallationPlugin = CmsSystemInstallationPlugin;
//# sourceMappingURL=CmsSystemInstallationPlugin.js.map