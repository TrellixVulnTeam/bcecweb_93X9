import { CmsContentEntry, CmsContentModel, CmsContext } from "@webiny/api-headless-cms/types";
import CmsContentEntryDynamoElastic from "./CmsContentEntryDynamoElastic";
export declare class DataLoadersHandler {
    private readonly _loaders;
    private readonly _context;
    private readonly _storageOperations;
    constructor(context: CmsContext, storageOperations: CmsContentEntryDynamoElastic);
    getAllEntryRevisions(model: CmsContentModel, ids: readonly string[]): Promise<CmsContentEntry[]>;
    clearAllEntryRevisions(model: CmsContentModel, entry?: CmsContentEntry): void;
    getRevisionById(model: CmsContentModel, ids: readonly string[]): Promise<CmsContentEntry[]>;
    clearRevisionById(model: CmsContentModel, entry?: CmsContentEntry): void;
    getPublishedRevisionByEntryId(model: CmsContentModel, ids: readonly string[]): Promise<CmsContentEntry[]>;
    clearPublishedRevisionByEntryId(model: CmsContentModel, entry?: CmsContentEntry): void;
    getLatestRevisionByEntryId(model: CmsContentModel, ids: readonly string[]): Promise<CmsContentEntry[]>;
    clearLatestRevisionByEntryId(model: CmsContentModel, entry?: CmsContentEntry): void;
    private getLoader;
    private loadMany;
    /**
     * Helper to clear the cache for certain data loader.
     * If entry is passed then clear target key only.
     */
    private clear;
}
