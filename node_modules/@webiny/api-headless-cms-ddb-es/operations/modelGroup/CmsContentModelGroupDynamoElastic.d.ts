import { CmsContentModelGroup, CmsContentModelGroupStorageOperations, CmsContentModelGroupStorageOperationsCreateArgs, CmsContentModelGroupStorageOperationsDeleteArgs, CmsContentModelGroupStorageOperationsGetArgs, CmsContentModelGroupStorageOperationsListArgs, CmsContentModelGroupStorageOperationsUpdateArgs, CmsContext } from "@webiny/api-headless-cms/types";
interface ConstructorArgs {
    context: CmsContext;
}
export default class CmsContentModelGroupDynamoElastic implements CmsContentModelGroupStorageOperations {
    private readonly _context;
    private get context();
    private get partitionKey();
    constructor({ context }: ConstructorArgs);
    create({ data }: CmsContentModelGroupStorageOperationsCreateArgs): Promise<{
        webinyVersion: string;
        id: string;
        name: string;
        slug: string;
        locale?: string;
        description?: string;
        icon?: string;
        createdBy?: import("@webiny/api-headless-cms/types").CreatedBy;
        createdOn?: Date;
        savedOn?: Date;
        PK: string;
        SK: string;
        TYPE: string;
    }>;
    delete({ group }: CmsContentModelGroupStorageOperationsDeleteArgs): Promise<boolean>;
    get({ id }: CmsContentModelGroupStorageOperationsGetArgs): Promise<CmsContentModelGroup>;
    list({ where, limit }: CmsContentModelGroupStorageOperationsListArgs): Promise<CmsContentModelGroup[]>;
    update({ group, data }: CmsContentModelGroupStorageOperationsUpdateArgs): Promise<{
        id: string;
        name: string;
        slug: string;
        locale?: string;
        description?: string;
        icon?: string;
        createdBy?: import("@webiny/api-headless-cms/types").CreatedBy;
        createdOn?: Date;
        savedOn?: Date;
    }>;
}
export {};
