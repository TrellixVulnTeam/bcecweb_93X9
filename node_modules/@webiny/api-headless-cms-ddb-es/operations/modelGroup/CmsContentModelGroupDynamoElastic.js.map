{"version":3,"sources":["../../../src/operations/modelGroup/CmsContentModelGroupDynamoElastic.ts"],"names":["whereKeySuffix","join","removeWhereKeySuffix","key","replace","RegExp","compare","compareValue","value","endsWith","String","includes","Array","isArray","length","WebinyError","whereFilterFactory","where","model","whereValue","CmsContentModelGroupDynamoElastic","context","_context","partitionKey","constructor","create","data","db","dbData","PK","SK","id","TYPE","webinyVersion","WEBINY_VERSION","configurations","delete","group","query","get","read","list","limit","groups","$gt","whereKeys","Object","keys","filteredGroups","filter","slice","update"],"mappings":"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","sourcesContent":["import {\n    CmsContentModelGroup,\n    CmsContentModelGroupStorageOperations,\n    CmsContentModelGroupStorageOperationsCreateArgs,\n    CmsContentModelGroupStorageOperationsDeleteArgs,\n    CmsContentModelGroupStorageOperationsGetArgs,\n    CmsContentModelGroupStorageOperationsListArgs,\n    CmsContentModelGroupStorageOperationsUpdateArgs,\n    CmsContext\n} from \"@webiny/api-headless-cms/types\";\nimport WebinyError from \"@webiny/error\";\nimport configurations from \"../../configurations\";\nimport { createBasePartitionKey } from \"../../utils\";\n\nconst whereKeySuffix = [\n    \"_not\",\n    \"_not_in\",\n    \"_in\",\n    \"_gt\",\n    \"_gte\",\n    \"_lt\",\n    \"_lte\",\n    \"_not_between\",\n    \"_between\"\n].join(\"|\");\n\nconst removeWhereKeySuffix = (key: string): string => {\n    return key.replace(new RegExp(`${whereKeySuffix}$`), \"\");\n};\n\nconst compare = (key: string, compareValue: any, value: any): boolean => {\n    if (key.endsWith(\"_not\")) {\n        return String(value) !== compareValue;\n    } else if (key.endsWith(\"_not_in\")) {\n        return !compareValue.includes(value);\n    } else if (key.endsWith(\"_in\")) {\n        return compareValue.includes(value);\n    } else if (key.endsWith(\"_gt\")) {\n        return value > compareValue;\n    } else if (key.endsWith(\"_gte\")) {\n        return value >= compareValue;\n    } else if (key.endsWith(\"_lt\")) {\n        return value < compareValue;\n    } else if (key.endsWith(\"_lte\")) {\n        return value <= compareValue;\n    } else if (key.endsWith(\"_not_between\")) {\n        if (!Array.isArray(compareValue) || compareValue.length === 0) {\n            throw new WebinyError(`Wrong compareValue for \"${key}\".`);\n        }\n        return value < compareValue[0] && value > compareValue[1];\n    } else if (key.endsWith(\"_between\")) {\n        if (!Array.isArray(compareValue) || compareValue.length === 0) {\n            throw new WebinyError(`Wrong compareValue for \"${key}\".`);\n        }\n        return value >= compareValue[0] && value <= compareValue[1];\n    }\n    return compareValue === value;\n};\n\nconst whereFilterFactory = (where: Record<string, any> = {}) => {\n    return model => {\n        if (!where) {\n            return true;\n        }\n        for (const key in where) {\n            const whereValue = where[key];\n            const value = model[removeWhereKeySuffix(key)];\n            return compare(key, whereValue, value);\n        }\n        return true;\n    };\n};\n\ninterface ConstructorArgs {\n    context: CmsContext;\n}\nexport default class CmsContentModelGroupDynamoElastic\n    implements CmsContentModelGroupStorageOperations\n{\n    private readonly _context: CmsContext;\n\n    private get context(): CmsContext {\n        return this._context;\n    }\n\n    private get partitionKey(): string {\n        return `${createBasePartitionKey(this.context)}#CMG`;\n    }\n\n    public constructor({ context }: ConstructorArgs) {\n        this._context = context;\n    }\n\n    public async create({ data }: CmsContentModelGroupStorageOperationsCreateArgs) {\n        const { db } = this.context;\n        const dbData = {\n            PK: this.partitionKey,\n            SK: data.id,\n            TYPE: \"cms.group\",\n            ...data,\n            webinyVersion: this.context.WEBINY_VERSION\n        };\n\n        await db.create({\n            ...configurations.db(),\n            data: dbData\n        });\n        return dbData;\n    }\n    public async delete({ group }: CmsContentModelGroupStorageOperationsDeleteArgs) {\n        const { db } = this.context;\n        const { id } = group;\n        await db.delete({\n            ...configurations.db(),\n            query: {\n                PK: this.partitionKey,\n                SK: id\n            }\n        });\n        return true;\n    }\n    public async get({ id }: CmsContentModelGroupStorageOperationsGetArgs) {\n        const { db } = this.context;\n        const [[group]] = await db.read<CmsContentModelGroup>({\n            ...configurations.db(),\n            query: { PK: this.partitionKey, SK: id }\n        });\n        return group || null;\n    }\n    public async list({ where, limit }: CmsContentModelGroupStorageOperationsListArgs) {\n        const { db } = this.context;\n        const [groups] = await db.read<CmsContentModelGroup>({\n            ...configurations.db(),\n            query: {\n                PK: this.partitionKey,\n                SK: { $gt: \" \" }\n            }\n        });\n\n        const whereKeys = Object.keys(where || {});\n        if (whereKeys.length === 0) {\n            return groups;\n        }\n\n        const filteredGroups = groups.filter(whereFilterFactory(where));\n\n        return typeof limit !== \"undefined\" ? filteredGroups.slice(0, limit) : filteredGroups;\n    }\n\n    public async update({ group, data }: CmsContentModelGroupStorageOperationsUpdateArgs) {\n        const { db } = this.context;\n        await db.update({\n            ...configurations.db(),\n            query: { PK: this.partitionKey, SK: group.id },\n            data: {\n                ...data,\n                webinyVersion: this.context.WEBINY_VERSION\n            }\n        });\n        return {\n            ...group,\n            ...data\n        };\n    }\n}\n"],"file":"CmsContentModelGroupDynamoElastic.js"}