{"version":3,"sources":["../src/configurations.ts"],"names":["configurations","db","table","process","env","DB_TABLE_HEADLESS_CMS","keys","primary","unique","name","fields","esDb","DB_TABLE_HEADLESS_CMS_ELASTICSEARCH","DB_TABLE_ELASTICSEARCH","es","context","model","tenant","tenancy","getCurrentTenant","Error","sharedIndex","ELASTICSEARCH_SHARED_INDEXES","locale","cms","getLocale","code","index","id","modelId","join","toLowerCase","prefix","ELASTIC_SEARCH_INDEX_PREFIX"],"mappings":";;;;;;AA4BA,MAAMA,cAA8B,GAAG;AACnCC,EAAAA,EAAE,EAAE,OAAO;AACPC,IAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,qBADZ;AAEPC,IAAAA,IAAI,EAAE,CACF;AACIC,MAAAA,OAAO,EAAE,IADb;AAEIC,MAAAA,MAAM,EAAE,IAFZ;AAGIC,MAAAA,IAAI,EAAE,SAHV;AAIIC,MAAAA,MAAM,EAAE,CAAC;AAAED,QAAAA,IAAI,EAAE;AAAR,OAAD,EAAiB;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAAjB;AAJZ,KADE;AAFC,GAAP,CAD+B;AAYnCE,EAAAA,IAAI,EAAE,OAAO;AACTT,IAAAA,KAAK,EACDC,OAAO,CAACC,GAAR,CAAYQ,mCAAZ,IAAmDT,OAAO,CAACC,GAAR,CAAYS,sBAF1D;AAGTP,IAAAA,IAAI,EAAE,CACF;AACIC,MAAAA,OAAO,EAAE,IADb;AAEIC,MAAAA,MAAM,EAAE,IAFZ;AAGIC,MAAAA,IAAI,EAAE,SAHV;AAIIC,MAAAA,MAAM,EAAE,CAAC;AAAED,QAAAA,IAAI,EAAE;AAAR,OAAD,EAAiB;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAAjB;AAJZ,KADE;AAHG,GAAP,CAZ6B;;AAwBnCK,EAAAA,EAAE,CAACC,OAAD,EAAUC,KAAV,EAAiB;AACf,UAAMC,MAAM,GAAGF,OAAO,CAACG,OAAR,CAAgBC,gBAAhB,EAAf;;AACA,QAAI,CAACF,MAAL,EAAa;AACT,YAAM,IAAIG,KAAJ,CAAW,2CAAX,CAAN;AACH;;AAED,UAAMC,WAAW,GAAGlB,OAAO,CAACC,GAAR,CAAYkB,4BAAZ,KAA6C,MAAjE;AACA,UAAMC,MAAM,GAAGR,OAAO,CAACS,GAAR,CAAYC,SAAZ,GAAwBC,IAAvC;AACA,UAAMC,KAAK,GAAG,CAACN,WAAW,GAAG,MAAH,GAAYJ,MAAM,CAACW,EAA/B,EAAmC,cAAnC,EAAmDL,MAAnD,EAA2DP,KAAK,CAACa,OAAjE,EACTC,IADS,CACJ,GADI,EAETC,WAFS,EAAd;AAIA,UAAMC,MAAM,GAAG7B,OAAO,CAACC,GAAR,CAAY6B,2BAA3B;;AACA,QAAID,MAAJ,EAAY;AACR,aAAO;AAAEL,QAAAA,KAAK,EAAEK,MAAM,GAAGL;AAAlB,OAAP;AACH;;AACD,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACH;;AAzCkC,CAAvC;eA4Ce3B,c","sourcesContent":["import { CmsContentModel, CmsContext } from \"@webiny/api-headless-cms/types\";\n\ninterface DatabaseConfigKeyFields {\n    name: string;\n}\n\ninterface DatabaseConfigKeys {\n    primary: boolean;\n    unique: boolean;\n    name: string;\n    fields: DatabaseConfigKeyFields[];\n}\n\nexport interface CmsDatabaseConfig {\n    table: string;\n    keys: DatabaseConfigKeys[];\n}\n\ninterface ElasticsearchConfig {\n    index: string;\n}\n\ninterface Configurations {\n    db: () => CmsDatabaseConfig;\n    esDb: () => CmsDatabaseConfig;\n    es: (context: CmsContext, model: CmsContentModel) => ElasticsearchConfig;\n}\n\nconst configurations: Configurations = {\n    db: () => ({\n        table: process.env.DB_TABLE_HEADLESS_CMS,\n        keys: [\n            {\n                primary: true,\n                unique: true,\n                name: \"primary\",\n                fields: [{ name: \"PK\" }, { name: \"SK\" }]\n            }\n        ]\n    }),\n    esDb: () => ({\n        table:\n            process.env.DB_TABLE_HEADLESS_CMS_ELASTICSEARCH || process.env.DB_TABLE_ELASTICSEARCH,\n        keys: [\n            {\n                primary: true,\n                unique: true,\n                name: \"primary\",\n                fields: [{ name: \"PK\" }, { name: \"SK\" }]\n            }\n        ]\n    }),\n    es(context, model) {\n        const tenant = context.tenancy.getCurrentTenant();\n        if (!tenant) {\n            throw new Error(`There is no tenant on \"context.security\".`);\n        }\n\n        const sharedIndex = process.env.ELASTICSEARCH_SHARED_INDEXES === \"true\";\n        const locale = context.cms.getLocale().code;\n        const index = [sharedIndex ? \"root\" : tenant.id, \"headless-cms\", locale, model.modelId]\n            .join(\"-\")\n            .toLowerCase();\n\n        const prefix = process.env.ELASTIC_SEARCH_INDEX_PREFIX;\n        if (prefix) {\n            return { index: prefix + index };\n        }\n        return { index };\n    }\n};\n\nexport default configurations;\n"],"file":"configurations.js"}