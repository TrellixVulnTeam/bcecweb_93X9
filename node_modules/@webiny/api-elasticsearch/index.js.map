{"version":3,"sources":["../src/index.ts"],"names":["options","endpoint","node","rest","ContextPlugin","context","elasticsearch","WebinyError","clientOptions","auth","Object","assign","AWS","config","Client","plugins","register","ElasticsearchQueryBuilderOperatorBetweenPlugin","ElasticsearchQueryBuilderOperatorNotBetweenPlugin","ElasticsearchQueryBuilderOperatorContainsPlugin","ElasticsearchQueryBuilderOperatorNotContainsPlugin","ElasticsearchQueryBuilderOperatorEqualPlugin","ElasticsearchQueryBuilderOperatorNotPlugin","ElasticsearchQueryBuilderOperatorGreaterThanPlugin","ElasticsearchQueryBuilderOperatorGreaterThanOrEqualToPlugin","ElasticsearchQueryBuilderOperatorLesserThanPlugin","ElasticsearchQueryBuilderOperatorLesserThanOrEqualToPlugin","ElasticsearchQueryBuilderOperatorInPlugin","ElasticsearchQueryBuilderOperatorNotInPlugin"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAcA;;;;;;;;eAMgBA,OAAD,IAA8E;AACzF,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA8BF,OAApC;AAAA,QAA2BG,IAA3B,0CAAoCH,OAApC;AACA,SAAO,IAAII,4BAAJ,CAAwCC,OAAO,IAAI;AACtD,QAAIA,OAAO,CAACC,aAAZ,EAA2B;AACvB,YAAM,IAAIC,cAAJ,CACF,yHADE,EAEF,mCAFE,CAAN;AAIH;;AACD,UAAMC,aAA4B;AAC9BN,MAAAA,IAAI,EAAED,QAAQ,IAAIC;AADY,OAE3BC,IAF2B,CAAlC;;AAKA,QAAI,CAACK,aAAa,CAACC,IAAnB,EAAyB;AACrB;AACZ;AACA;AACYC,MAAAA,MAAM,CAACC,MAAP,CAAcH,aAAd,EAA6B,wCAAgCI,gBAAIC,MAApC,CAA7B;AACH;AACD;AACR;AACA;;;AACQR,IAAAA,OAAO,CAACC,aAAR,GAAwB,IAAIQ,qBAAJ,CAAWN,aAAX,CAAxB;AAEAH,IAAAA,OAAO,CAACU,OAAR,CAAgBC,QAAhB,CAAyB,CACrB,IAAIC,wDAAJ,EADqB,EAErB,IAAIC,2DAAJ,EAFqB,EAGrB,IAAIC,yDAAJ,EAHqB,EAIrB,IAAIC,4DAAJ,EAJqB,EAKrB,IAAIC,sDAAJ,EALqB,EAMrB,IAAIC,oDAAJ,EANqB,EAOrB,IAAIC,4DAAJ,EAPqB,EAQrB,IAAIC,qEAAJ,EARqB,EASrB,IAAIC,2DAAJ,EATqB,EAUrB,IAAIC,oEAAJ,EAVqB,EAWrB,IAAIC,mDAAJ,EAXqB,EAYrB,IAAIC,sDAAJ,EAZqB,CAAzB;AAcH,GArCM,CAAP;AAsCH,C","sourcesContent":["import { Client, ClientOptions } from \"@elastic/elasticsearch\";\nimport AWS from \"aws-sdk\";\nimport createAwsElasticsearchConnector from \"aws-elasticsearch-connector\";\nimport { ElasticsearchContext } from \"~/types\";\nimport { ContextPlugin } from \"@webiny/handler/plugins/ContextPlugin\";\nimport {\n    ElasticsearchQueryBuilderOperatorBetweenPlugin,\n    ElasticsearchQueryBuilderOperatorNotBetweenPlugin,\n    ElasticsearchQueryBuilderOperatorContainsPlugin,\n    ElasticsearchQueryBuilderOperatorNotContainsPlugin,\n    ElasticsearchQueryBuilderOperatorEqualPlugin,\n    ElasticsearchQueryBuilderOperatorNotPlugin,\n    ElasticsearchQueryBuilderOperatorGreaterThanPlugin,\n    ElasticsearchQueryBuilderOperatorGreaterThanOrEqualToPlugin,\n    ElasticsearchQueryBuilderOperatorLesserThanPlugin,\n    ElasticsearchQueryBuilderOperatorLesserThanOrEqualToPlugin,\n    ElasticsearchQueryBuilderOperatorInPlugin,\n    ElasticsearchQueryBuilderOperatorNotInPlugin\n} from \"~/plugins/operator\";\nimport WebinyError from \"@webiny/error\";\n\ninterface ElasticsearchClientOptions extends ClientOptions {\n    endpoint?: string;\n}\n\nexport default (options: ElasticsearchClientOptions): ContextPlugin<ElasticsearchContext> => {\n    const { endpoint, node, ...rest } = options;\n    return new ContextPlugin<ElasticsearchContext>(context => {\n        if (context.elasticsearch) {\n            throw new WebinyError(\n                \"Elasticsearch client is already initialized, no need to define it again. Check your code for duplicate initializations.\",\n                \"ELASTICSEARCH_ALREADY_INITIALIZED\"\n            );\n        }\n        const clientOptions: ClientOptions = {\n            node: endpoint || node,\n            ...rest\n        };\n\n        if (!clientOptions.auth) {\n            /**\n             * If no `auth` configuration is present, we setup AWS connector.\n             */\n            Object.assign(clientOptions, createAwsElasticsearchConnector(AWS.config));\n        }\n        /**\n         * Initialize the Elasticsearch client.\n         */\n        context.elasticsearch = new Client(clientOptions);\n\n        context.plugins.register([\n            new ElasticsearchQueryBuilderOperatorBetweenPlugin(),\n            new ElasticsearchQueryBuilderOperatorNotBetweenPlugin(),\n            new ElasticsearchQueryBuilderOperatorContainsPlugin(),\n            new ElasticsearchQueryBuilderOperatorNotContainsPlugin(),\n            new ElasticsearchQueryBuilderOperatorEqualPlugin(),\n            new ElasticsearchQueryBuilderOperatorNotPlugin(),\n            new ElasticsearchQueryBuilderOperatorGreaterThanPlugin(),\n            new ElasticsearchQueryBuilderOperatorGreaterThanOrEqualToPlugin(),\n            new ElasticsearchQueryBuilderOperatorLesserThanPlugin(),\n            new ElasticsearchQueryBuilderOperatorLesserThanOrEqualToPlugin(),\n            new ElasticsearchQueryBuilderOperatorInPlugin(),\n            new ElasticsearchQueryBuilderOperatorNotInPlugin()\n        ]);\n    });\n};\n"],"file":"index.js"}