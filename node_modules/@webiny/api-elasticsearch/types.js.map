{"version":3,"sources":["../src/types.ts"],"names":[],"mappings":";;;;;;AAGA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { Client } from \"@elastic/elasticsearch\";\nimport { BoolQueryConfig as esBoolQueryConfig, Query as esQuery } from \"elastic-ts\";\nimport { ContextInterface } from \"@webiny/handler/types\";\nexport * from \"elastic-ts\";\n\nexport interface ElasticsearchContext extends ContextInterface {\n    elasticsearch: Client;\n}\n\n/**\n * To simplify our plugins, we say that query contains arrays of objects, not single objects.\n * And that they all are defined as empty arrays at the start.\n */\nexport interface ElasticsearchBoolQueryConfig extends esBoolQueryConfig {\n    must: esQuery[];\n    filter: esQuery[];\n    should: esQuery[];\n    must_not: esQuery[];\n}\n\n/**\n * Definitions of possible Elasticsearch operators.\n *\n * @category Elasticsearch\n */\nexport type ElasticsearchQueryOperator =\n    | \"eq\"\n    | \"not\"\n    | \"in\"\n    | \"not_in\"\n    | \"contains\"\n    | \"not_contains\"\n    | \"between\"\n    | \"not_between\"\n    | \"gt\"\n    | \"gte\"\n    | \"lt\"\n    | \"lte\";\n\n/**\n * Definition for arguments of the ElasticsearchQueryBuilderOperatorPlugin.apply method.\n *\n * @see ElasticsearchQueryBuilderOperatorPlugin.apply\n *\n * @category Plugin\n * @category Elasticsearch\n */\nexport interface ElasticsearchQueryBuilderArgsPlugin<\n    T extends ContextInterface = ContextInterface\n> {\n    /**\n     * A full path to the field. Including the \".keyword\" if it is added.\n     */\n    path: string;\n    /**\n     * A path to the field, plain.\n     */\n    basePath: string;\n    /**\n     * Value to apply.\n     */\n    value: any;\n    /**\n     * Is path containing the \".keyword\"\n     */\n    keyword: boolean;\n    /**\n     * Context we are working in.\n     */\n    context: T;\n}\n\n/**\n * Definition for the ElasticsearchQueryModifierPlugin parameters.\n */\nexport interface ElasticsearchQueryModifierPluginParams<\n    T extends ContextInterface = ContextInterface\n> {\n    /**\n     * Context we are working in.\n     */\n    context: T;\n}\n"],"file":"types.js"}