{"version":3,"sources":["../../../src/plugins/operator/notIn.ts"],"names":["ElasticsearchQueryBuilderOperatorNotInPlugin","ElasticsearchQueryBuilderOperatorPlugin","getOperator","apply","query","params","value","values","path","basePath","isArray","Array","length","Error","useBasePath","some","must_not","push","terms"],"mappings":";;;;;;;;;;;AAAA;;AAGO,MAAMA,4CAAN,SAA2DC,gFAA3D,CAAmG;AAAA;AAAA;AAAA,gDACxF,mDADwF;AAAA;;AAG/FC,EAAAA,WAAW,GAAW;AACzB,WAAO,QAAP;AACH;;AAEMC,EAAAA,KAAK,CACRC,KADQ,EAERC,MAFQ,EAGJ;AACJ,UAAM;AAAEC,MAAAA,KAAK,EAAEC,MAAT;AAAiBC,MAAAA,IAAjB;AAAuBC,MAAAA;AAAvB,QAAoCJ,MAA1C;AACA,UAAMK,OAAO,GAAGC,KAAK,CAACD,OAAN,CAAcH,MAAd,CAAhB;;AACA,QAAIG,OAAO,KAAK,KAAZ,IAAqBH,MAAM,CAACK,MAAP,KAAkB,CAA3C,EAA8C;AAC1C,YAAM,IAAIC,KAAJ,CACD,iCAAgCJ,QAAS,gDADxC,CAAN;AAGH;;AAED,UAAMK,WAAW,GAAGP,MAAM,CAACQ,IAAP,CAAYT,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAAtC,CAApB;AAEAF,IAAAA,KAAK,CAACY,QAAN,CAAeC,IAAf,CAAoB;AAChBC,MAAAA,KAAK,EAAE;AACH,SAACJ,WAAW,GAAGL,QAAH,GAAcD,IAA1B,GAAiCD;AAD9B;AADS,KAApB;AAKH;;AA1BqG","sourcesContent":["import { ElasticsearchQueryBuilderOperatorPlugin } from \"~/plugins/definition/ElasticsearchQueryBuilderOperatorPlugin\";\nimport { ElasticsearchBoolQueryConfig, ElasticsearchQueryBuilderArgsPlugin } from \"~/types\";\n\nexport class ElasticsearchQueryBuilderOperatorNotInPlugin extends ElasticsearchQueryBuilderOperatorPlugin {\n    public name = \"elasticsearch.queryBuilder.operator.notIn.default\";\n\n    public getOperator(): string {\n        return \"not_in\";\n    }\n\n    public apply(\n        query: ElasticsearchBoolQueryConfig,\n        params: ElasticsearchQueryBuilderArgsPlugin\n    ): void {\n        const { value: values, path, basePath } = params;\n        const isArray = Array.isArray(values);\n        if (isArray === false || values.length === 0) {\n            throw new Error(\n                `You cannot filter field path \"${basePath}\" with not_in and not send an array of values.`\n            );\n        }\n\n        const useBasePath = values.some(value => typeof value !== \"string\");\n\n        query.must_not.push({\n            terms: {\n                [useBasePath ? basePath : path]: values\n            }\n        });\n    }\n}\n"],"file":"notIn.js"}