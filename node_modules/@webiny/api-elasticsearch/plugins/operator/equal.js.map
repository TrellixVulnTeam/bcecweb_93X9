{"version":3,"sources":["../../../src/plugins/operator/equal.ts"],"names":["ElasticsearchQueryBuilderOperatorEqualPlugin","ElasticsearchQueryBuilderOperatorPlugin","getOperator","apply","query","params","value","path","basePath","useBasePath","must","push","term"],"mappings":";;;;;;;;;;;AAAA;;AAGO,MAAMA,4CAAN,SAA2DC,gFAA3D,CAAmG;AAAA;AAAA;AAAA,gDACxF,mDADwF;AAAA;;AAG/FC,EAAAA,WAAW,GAAW;AACzB,WAAO,IAAP;AACH;;AAEMC,EAAAA,KAAK,CACRC,KADQ,EAERC,MAFQ,EAGJ;AACJ,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAA4BH,MAAlC;AACA;AACR;AACA;AACA;;AACQ,UAAMI,WAAW,GAAG,OAAOH,KAAP,KAAiB,QAArC;AACAF,IAAAA,KAAK,CAACM,IAAN,CAAWC,IAAX,CAAgB;AACZC,MAAAA,IAAI,EAAE;AACF,SAACH,WAAW,GAAGD,QAAH,GAAcD,IAA1B,GAAiCD;AAD/B;AADM,KAAhB;AAKH;;AAtBqG","sourcesContent":["import { ElasticsearchQueryBuilderOperatorPlugin } from \"~/plugins/definition/ElasticsearchQueryBuilderOperatorPlugin\";\nimport { ElasticsearchBoolQueryConfig, ElasticsearchQueryBuilderArgsPlugin } from \"~/types\";\n\nexport class ElasticsearchQueryBuilderOperatorEqualPlugin extends ElasticsearchQueryBuilderOperatorPlugin {\n    public name = \"elasticsearch.queryBuilder.operator.equal.default\";\n\n    public getOperator(): string {\n        return \"eq\";\n    }\n\n    public apply(\n        query: ElasticsearchBoolQueryConfig,\n        params: ElasticsearchQueryBuilderArgsPlugin\n    ): void {\n        const { value, path, basePath } = params;\n        /**\n         * In case we are searching for a string, use regular path.\n         * Otherwise use base path\n         */\n        const useBasePath = typeof value !== \"string\";\n        query.must.push({\n            term: {\n                [useBasePath ? basePath : path]: value\n            }\n        });\n    }\n}\n"],"file":"equal.js"}