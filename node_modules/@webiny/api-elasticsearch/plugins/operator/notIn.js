"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ElasticsearchQueryBuilderOperatorNotInPlugin = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _ElasticsearchQueryBuilderOperatorPlugin = require("../definition/ElasticsearchQueryBuilderOperatorPlugin");

class ElasticsearchQueryBuilderOperatorNotInPlugin extends _ElasticsearchQueryBuilderOperatorPlugin.ElasticsearchQueryBuilderOperatorPlugin {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "name", "elasticsearch.queryBuilder.operator.notIn.default");
  }

  getOperator() {
    return "not_in";
  }

  apply(query, params) {
    const {
      value: values,
      path,
      basePath
    } = params;
    const isArray = Array.isArray(values);

    if (isArray === false || values.length === 0) {
      throw new Error(`You cannot filter field path "${basePath}" with not_in and not send an array of values.`);
    }

    const useBasePath = values.some(value => typeof value !== "string");
    query.must_not.push({
      terms: {
        [useBasePath ? basePath : path]: values
      }
    });
  }

}

exports.ElasticsearchQueryBuilderOperatorNotInPlugin = ElasticsearchQueryBuilderOperatorNotInPlugin;
//# sourceMappingURL=notIn.js.map