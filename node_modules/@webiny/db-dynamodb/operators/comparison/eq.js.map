{"version":3,"sources":["../../../src/operators/comparison/eq.ts"],"names":["validTypes","eq","canProcess","key","value","charAt","includes","process","args","expression","attributeNames","attributeValues"],"mappings":";;;;;;AAEA,MAAMA,UAAU,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB,CAAnB;AAEA,MAAMC,EAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,KAAoB;AAC5B,QAAID,GAAG,IAAIA,GAAG,CAACE,MAAJ,CAAW,CAAX,MAAkB,GAA7B,EAAkC;AAC9B,aAAO,KAAP;AACH;;AAED,QAAID,KAAK,IAAI,OAAOA,KAAK,CAAC,KAAD,CAAZ,KAAwB,WAArC,EAAkD;AAC9C,aAAO,IAAP;AACH;;AAED,WAAOJ,UAAU,CAACM,QAAX,CAAoB,OAAOF,KAA3B,CAAP;AACH,GAXgB;AAYjBG,EAAAA,OAAO,EAAE,CAAC;AAAEJ,IAAAA,GAAF;AAAOC,IAAAA,KAAP;AAAcI,IAAAA;AAAd,GAAD,KAA0B;AAC/BA,IAAAA,IAAI,CAACC,UAAL,IAAoB,IAAGN,GAAI,OAAMA,GAAI,EAArC;AACAK,IAAAA,IAAI,CAACE,cAAL,CAAqB,IAAGP,GAAI,EAA5B,IAAiCA,GAAjC;AACAK,IAAAA,IAAI,CAACG,eAAL,CAAsB,IAAGR,GAAI,EAA7B,IAAkCC,KAAlC;AACH;AAhBgB,CAArB;eAmBeH,E","sourcesContent":["import { Operator } from \"../../types\";\n\nconst validTypes = [\"string\", \"boolean\", \"number\"];\n\nconst eq: Operator = {\n    canProcess: ({ key, value }) => {\n        if (key && key.charAt(0) === \"$\") {\n            return false;\n        }\n\n        if (value && typeof value[\"$eq\"] !== \"undefined\") {\n            return true;\n        }\n\n        return validTypes.includes(typeof value);\n    },\n    process: ({ key, value, args }) => {\n        args.expression += `#${key} = :${key}`;\n        args.attributeNames[`#${key}`] = key;\n        args.attributeValues[`:${key}`] = value;\n    }\n};\n\nexport default eq;\n"],"file":"eq.js"}