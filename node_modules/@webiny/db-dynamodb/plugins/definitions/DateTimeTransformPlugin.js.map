{"version":3,"sources":["../../../src/plugins/definitions/DateTimeTransformPlugin.ts"],"names":["transformDateTime","params","value","getTime","parsedDateTime","isNaN","WebinyError","DateTimeTransformPlugin","ValueTransformPlugin","constructor","transform"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,MAAMA,iBAAiB,GAAIC,MAAD,IAAqC;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAYD,MAAlB;;AACA,MAAIC,KAAK,IAAI,OAAQA,KAAD,CAAeC,OAAtB,KAAkC,UAA/C,EAA2D;AACvD;AACR;AACA;AACQ,WAAQD,KAAD,CAAgBC,OAAhB,EAAP;AACH;;AACD,QAAMC,cAAc,GAAG,uBAASF,KAAT,EAAuBC,OAAvB,EAAvB;;AACA,MAAIE,KAAK,CAACD,cAAD,CAAL,KAA0B,KAA9B,EAAqC;AACjC,WAAOA,cAAP;AACH;;AACD,QAAM,IAAIE,cAAJ,CAAgB,uCAAhB,EAAyD,kBAAzD,EAA6E;AAC/EJ,IAAAA;AAD+E,GAA7E,CAAN;AAGH,CAfD;;AAiBO,MAAMK,uBAAN,SAAsCC,0CAAtC,CAA2D;AACvDC,EAAAA,WAAW,CAACR,MAAD,EAAoC;AAClD;AACIS,MAAAA,SAAS,EAAEV;AADf,OAEOC,MAFP;AAIH;;AAN6D","sourcesContent":["import { ValueTransformPlugin, Params, TransformParams } from \"./ValueTransformPlugin\";\nimport WebinyError from \"@webiny/error\";\nimport { parseISO } from \"date-fns\";\n\nconst transformDateTime = (params: TransformParams): number => {\n    const { value } = params;\n    if (value && typeof (value as any).getTime === \"function\") {\n        /**\n         * In this case we assume this is a date object and we just get the time.\n         */\n        return (value as Date).getTime();\n    }\n    const parsedDateTime = parseISO(value as any).getTime();\n    if (isNaN(parsedDateTime) === false) {\n        return parsedDateTime;\n    }\n    throw new WebinyError(\"Could not parse given dateTime value.\", \"PARSE_DATE_ERROR\", {\n        value\n    });\n};\n\nexport class DateTimeTransformPlugin extends ValueTransformPlugin {\n    public constructor(params: Omit<Params, \"transform\">) {\n        super({\n            transform: transformDateTime,\n            ...params\n        });\n    }\n}\n"],"file":"DateTimeTransformPlugin.js"}