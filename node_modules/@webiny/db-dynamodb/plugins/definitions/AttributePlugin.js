"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AttributePlugin = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _plugins = require("@webiny/plugins");

var _error = _interopRequireDefault(require("@webiny/error"));

const reservedFields = ["PK", "SK", "index", "data"];

class AttributePlugin extends _plugins.Plugin {
  get entity() {
    return this._entity;
  }

  get attribute() {
    return this._attribute;
  }

  constructor({
    entity,
    attribute,
    params
  }) {
    super();
    (0, _defineProperty2.default)(this, "_entity", void 0);
    (0, _defineProperty2.default)(this, "_attribute", void 0);
    (0, _defineProperty2.default)(this, "_params", void 0);
    this.validateReserved(attribute);
    this._entity = entity;
    this._attribute = attribute;
    this._params = params;
  }

  getDefinition() {
    return {
      [this.attribute]: this._params
    };
  }

  validateReserved(attribute) {
    if (reservedFields.includes(attribute) === false) {
      return;
    }

    throw new _error.default(`Attribute name "${attribute}" is not allowed.`, "ATTRIBUTE_NOT_ALLOWED", {
      attribute
    });
  }

}

exports.AttributePlugin = AttributePlugin;
(0, _defineProperty2.default)(AttributePlugin, "type", "db.dynamodb.attribute");
//# sourceMappingURL=AttributePlugin.js.map