{"version":3,"sources":["../../../src/plugins/definitions/TimeTransformPlugin.ts"],"names":["transformTime","params","value","typeOf","Number","WebinyError","time","milliseconds","split","values","map","length","hours","minutes","seconds","TimeTransformPlugin","ValueTransformPlugin","constructor","transform"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,MAAMA,aAAa,GAAIC,MAAD,IAAqC;AACvD,QAAM;AAAEC,IAAAA;AAAF,MAAYD,MAAlB;AACA,QAAME,MAAM,GAAG,OAAOD,KAAtB;AACA;AACJ;AACA;;AACI,MAAIC,MAAM,KAAK,QAAX,IAAuB,uBAASD,KAAT,MAAoB,IAA/C,EAAqD;AACjD,WAAOE,MAAM,CAACF,KAAD,CAAb;AACH,GAFD,MAEO,IAAIC,MAAM,KAAK,QAAf,EAAyB;AAC5B,UAAM,IAAIE,cAAJ,CACF,gEADE,EAEF,kBAFE,EAGF;AACIH,MAAAA;AADJ,KAHE,CAAN;AAOH;AACD;AACJ;AACA;;;AACI,QAAM,CAACI,IAAD,EAAOC,YAAY,GAAG,CAAtB,IAA4BL,KAAD,CAAeM,KAAf,CAAqB,GAArB,CAAjC;AACA,QAAMC,MAAM,GAAGH,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgBE,GAAhB,CAAoBN,MAApB,CAAf;;AACA,MAAIK,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB;AACnB,UAAM,IAAIN,cAAJ,CAAgB,+CAAhB,EAAiE,kBAAjE,EAAqF;AACvFH,MAAAA;AADuF,KAArF,CAAN;AAGH;;AACD,QAAM,CAACU,KAAD,EAAQC,OAAR,EAAiBC,OAAO,GAAG,CAA3B,IAAgCL,MAAtC;AACA,SAAO,CAACG,KAAK,GAAG,EAAR,GAAa,EAAb,GAAkBC,OAAO,GAAG,EAA5B,GAAiCC,OAAlC,IAA6C,IAA7C,GAAoDV,MAAM,CAACG,YAAD,CAAjE;AACH,CA7BD;;AA+BO,MAAMQ,mBAAN,SAAkCC,0CAAlC,CAAuD;AACnDC,EAAAA,WAAW,CAAChB,MAAD,EAAoC;AAClD;AACIiB,MAAAA,SAAS,EAAElB;AADf,OAEOC,MAFP;AAIH;;AANyD","sourcesContent":["import { ValueTransformPlugin, Params, TransformParams } from \"./ValueTransformPlugin\";\nimport WebinyError from \"@webiny/error\";\nimport isNumber from \"is-number\";\n\nconst transformTime = (params: TransformParams): number => {\n    const { value } = params;\n    const typeOf = typeof value;\n    /**\n     * Due to some internal JS stuff, we must check for a number like this.\n     */\n    if (typeOf === \"number\" || isNumber(value) === true) {\n        return Number(value);\n    } else if (typeOf !== \"string\") {\n        throw new WebinyError(\n            \"Field value must be a string because field is defined as time.\",\n            \"TIME_PARSE_ERROR\",\n            {\n                value\n            }\n        );\n    }\n    /**\n     * This is for the time format, eg. 12:36:25 or 12:36:25.881\n     */\n    const [time, milliseconds = 0] = (value as any).split(\".\");\n    const values = time.split(\":\").map(Number);\n    if (values.length < 2) {\n        throw new WebinyError(\"Time must contain at least hours and minutes.\", \"TIME_PARSE_ERROR\", {\n            value\n        });\n    }\n    const [hours, minutes, seconds = 0] = values;\n    return (hours * 60 * 60 + minutes * 60 + seconds) * 1000 + Number(milliseconds);\n};\n\nexport class TimeTransformPlugin extends ValueTransformPlugin {\n    public constructor(params: Omit<Params, \"transform\">) {\n        super({\n            transform: transformTime,\n            ...params\n        });\n    }\n}\n"],"file":"TimeTransformPlugin.js"}