"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DateTimeTransformPlugin = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _ValueTransformPlugin = require("./ValueTransformPlugin");

var _error = _interopRequireDefault(require("@webiny/error"));

var _dateFns = require("date-fns");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const transformDateTime = params => {
  const {
    value
  } = params;

  if (value && typeof value.getTime === "function") {
    /**
     * In this case we assume this is a date object and we just get the time.
     */
    return value.getTime();
  }

  const parsedDateTime = (0, _dateFns.parseISO)(value).getTime();

  if (isNaN(parsedDateTime) === false) {
    return parsedDateTime;
  }

  throw new _error.default("Could not parse given dateTime value.", "PARSE_DATE_ERROR", {
    value
  });
};

class DateTimeTransformPlugin extends _ValueTransformPlugin.ValueTransformPlugin {
  constructor(params) {
    super(_objectSpread({
      transform: transformDateTime
    }, params));
  }

}

exports.DateTimeTransformPlugin = DateTimeTransformPlugin;
//# sourceMappingURL=DateTimeTransformPlugin.js.map