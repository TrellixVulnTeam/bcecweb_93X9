{"version":3,"sources":["../../../src/plugins/definitions/NumberTransformPlugin.ts"],"names":["transformNumber","params","value","typeOf","Number","WebinyError","NumberTransformPlugin","ValueTransformPlugin","constructor","transform"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,MAAMA,eAAe,GAAIC,MAAD,IAAqC;AACzD,QAAM;AAAEC,IAAAA;AAAF,MAAYD,MAAlB;AACA,QAAME,MAAM,GAAG,OAAOD,KAAtB;AACA;AACJ;AACA;;AACI,MAAIC,MAAM,KAAK,QAAX,IAAuB,uBAASD,KAAT,MAAoB,IAA/C,EAAqD;AACjD,WAAOE,MAAM,CAACF,KAAD,CAAb;AACH;;AACD,QAAM,IAAIG,cAAJ,CAAgB,uCAAhB,EAAyD,cAAzD,EAAyE;AAC3EH,IAAAA;AAD2E,GAAzE,CAAN;AAGH,CAZD;;AAcO,MAAMI,qBAAN,SAAoCC,0CAApC,CAAyD;AACrDC,EAAAA,WAAW,CAACP,MAAD,EAAoC;AAClD;AACIQ,MAAAA,SAAS,EAAET;AADf,OAEOC,MAFP;AAIH;;AAN2D","sourcesContent":["import { ValueTransformPlugin, Params, TransformParams } from \"./ValueTransformPlugin\";\nimport WebinyError from \"@webiny/error\";\nimport isNumber from \"is-number\";\n\nconst transformNumber = (params: TransformParams): number => {\n    const { value } = params;\n    const typeOf = typeof value;\n    /**\n     * Due to some internal JS stuff, we must check for a number like this.\n     */\n    if (typeOf === \"number\" || isNumber(value) === true) {\n        return Number(value);\n    }\n    throw new WebinyError(\"Field value must be a number because.\", \"NUMBER_ERROR\", {\n        value\n    });\n};\n\nexport class NumberTransformPlugin extends ValueTransformPlugin {\n    public constructor(params: Omit<Params, \"transform\">) {\n        super({\n            transform: transformNumber,\n            ...params\n        });\n    }\n}\n"],"file":"NumberTransformPlugin.js"}