import { DocumentClient } from "aws-sdk/clients/dynamodb";
import { Batch } from "@webiny/db";
declare type BatchType = "batchWrite" | "batchGet";
declare class BatchProcess {
    documentClient: DocumentClient;
    batch: Batch;
    resolveBuild: () => void;
    rejectBuild: ({ message: string }: {
        message: any;
    }) => void;
    queryBuild: Promise<void>;
    resolveExecution: () => void;
    rejectExecution: ({ message: string }: {
        message: any;
    }) => void;
    queryExecution: Promise<void>;
    operations: [Record<string, any>, Record<string, any>][];
    batchType: BatchType;
    results: Record<string, any>[];
    response: Record<string, any>;
    constructor(batch: Batch, documentClient: DocumentClient);
    waitStartExecution(): Promise<void>;
    waitExecution(): Promise<void>;
    addBatchOperation(type: BatchType, args: any, meta?: {}): () => any;
    addBatchWrite(args: any): () => any;
    addBatchDelete(args: any): () => any;
    addBatchGet(args: any): () => any;
    allOperationsAdded(): boolean;
    startExecution(): import("aws-sdk/lib/request").Request<DocumentClient.BatchGetItemOutput, import("aws-sdk/lib/error").AWSError> | import("aws-sdk/lib/request").Request<DocumentClient.BatchWriteItemOutput, import("aws-sdk/lib/error").AWSError>;
}
export default BatchProcess;
