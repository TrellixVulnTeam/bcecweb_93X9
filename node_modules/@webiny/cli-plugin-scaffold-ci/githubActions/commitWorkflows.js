"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _path = _interopRequireDefault(require("path"));

var _fs = _interopRequireDefault(require("fs"));

const {
  Base64
} = require("js-base64");

var _default = async args => {
  const {
    octokit,
    owner,
    repo,
    branch,
    author
  } = args;

  const cwd = _path.default.join(__dirname, "files", "workflows");

  const filesPaths = [];
  readDirectory(cwd, filesPaths);

  for (let i = 0; i < filesPaths.length; i++) {
    const filePath = filesPaths[i];

    const content = _fs.default.readFileSync(filePath, "utf-8");

    const contentEncoded = Base64.encode(content);
    await octokit.rest.repos.createOrUpdateFileContents({
      owner,
      repo,
      branch,
      path: _path.default.relative(cwd, filePath),
      message: `ci: create Webiny CI/CD pipeline`,
      content: contentEncoded,
      committer: author,
      author
    });
  }

  return;
};

exports.default = _default;

function readDirectory(dir, files) {
  _fs.default.readdirSync(dir).forEach(File => {
    const absolute = _path.default.join(dir, File);

    if (_fs.default.statSync(absolute).isDirectory()) {
      return readDirectory(absolute, files);
    }

    return files.push(absolute);
  });
}
//# sourceMappingURL=commitWorkflows.js.map