{"version":3,"sources":["../../src/githubActions/fetchAllRepositories.ts"],"names":["args","octokit","page","results","pageResult","rest","repos","listForAuthenticatedUser","per_page","data","push","length"],"mappings":";;;;;;;AAEA;AACA;eAOe,MAAOA,IAAP,IAAmE;AAC9E,QAAMC,OAAO,GAAGD,IAAI,CAACC,OAArB;AAEA,MAAIC,IAAI,GAAG,CAAX;AACA,QAAMC,OAA2B,GAAG,EAApC;;AAEA,SAAO,IAAP,EAAa;AACT,UAAMC,UAAU,GAAG,CACf,MAAMH,OAAO,CAACI,IAAR,CAAaC,KAAb,CAAmBC,wBAAnB,CAA4C;AAAEL,MAAAA,IAAF;AAAQM,MAAAA,QAAQ,EAAE;AAAlB,KAA5C,CADS,EAEjBC,IAFF,CADS,CAKT;;AACAN,IAAAA,OAAO,CAACO,IAAR,CAAa,GAAGN,UAAhB,EANS,CAQT;;AACA,QAAIA,UAAU,CAACO,MAAX,KAAsB,CAA1B,EAA6B;AACzB;AACH,KAXQ,CAaT;;;AACAT,IAAAA,IAAI;AACP;;AAED,SAAOC,OAAP;AACH,C","sourcesContent":["import { Octokit } from \"octokit\";\n\n// TODO: try to add octokit types properly based on\n// https://www.npmjs.com/package/@octokit/types\ntype GithubRepository = {\n    full_name: string;\n    name: string;\n    owner: { login: string };\n};\n\nexport default async (args: { octokit: Octokit }): Promise<GithubRepository[]> => {\n    const octokit = args.octokit;\n\n    let page = 0;\n    const results: GithubRepository[] = [];\n\n    while (true) {\n        const pageResult = (\n            await octokit.rest.repos.listForAuthenticatedUser({ page, per_page: 100 })\n        ).data;\n\n        // Add pageResult to all results\n        results.push(...pageResult);\n\n        // Stop the loop if there are no more results\n        if (pageResult.length === 0) {\n            break;\n        }\n\n        // Fetch next page\n        page++;\n    }\n\n    return results;\n};\n"],"file":"fetchAllRepositories.js"}