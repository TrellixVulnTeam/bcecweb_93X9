{"version":3,"sources":["../../src/githubActions/commitWorkflows.ts"],"names":["Base64","require","args","octokit","owner","repo","branch","author","cwd","path","join","__dirname","filesPaths","readDirectory","i","length","filePath","content","fs","readFileSync","contentEncoded","encode","rest","repos","createOrUpdateFileContents","relative","message","committer","dir","files","readdirSync","forEach","File","absolute","statSync","isDirectory","push"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,WAAD,CAA1B;;eAEe,MAAOC,IAAP,IAMT;AACF,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,MAAxB;AAAgCC,IAAAA;AAAhC,MAA2CL,IAAjD;;AAEA,QAAMM,GAAG,GAAGC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,EAA8B,WAA9B,CAAZ;;AAEA,QAAMC,UAAU,GAAG,EAAnB;AACAC,EAAAA,aAAa,CAACL,GAAD,EAAMI,UAAN,CAAb;;AAEA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,UAAME,QAAQ,GAAGJ,UAAU,CAACE,CAAD,CAA3B;;AAEA,UAAMG,OAAO,GAAGC,YAAGC,YAAH,CAAgBH,QAAhB,EAA0B,OAA1B,CAAhB;;AACA,UAAMI,cAAc,GAAGpB,MAAM,CAACqB,MAAP,CAAcJ,OAAd,CAAvB;AAEA,UAAMd,OAAO,CAACmB,IAAR,CAAaC,KAAb,CAAmBC,0BAAnB,CAA8C;AAChDpB,MAAAA,KADgD;AAEhDC,MAAAA,IAFgD;AAGhDC,MAAAA,MAHgD;AAIhDG,MAAAA,IAAI,EAAEA,cAAKgB,QAAL,CAAcjB,GAAd,EAAmBQ,QAAnB,CAJ0C;AAKhDU,MAAAA,OAAO,EAAG,kCALsC;AAMhDT,MAAAA,OAAO,EAAEG,cANuC;AAOhDO,MAAAA,SAAS,EAAEpB,MAPqC;AAQhDA,MAAAA;AARgD,KAA9C,CAAN;AAUH;;AAED;AACH,C;;;;AAED,SAASM,aAAT,CAAuBe,GAAvB,EAA4BC,KAA5B,EAAmC;AAC/BX,cAAGY,WAAH,CAAeF,GAAf,EAAoBG,OAApB,CAA4BC,IAAI,IAAI;AAChC,UAAMC,QAAQ,GAAGxB,cAAKC,IAAL,CAAUkB,GAAV,EAAeI,IAAf,CAAjB;;AACA,QAAId,YAAGgB,QAAH,CAAYD,QAAZ,EAAsBE,WAAtB,EAAJ,EAAyC;AACrC,aAAOtB,aAAa,CAACoB,QAAD,EAAWJ,KAAX,CAApB;AACH;;AACD,WAAOA,KAAK,CAACO,IAAN,CAAWH,QAAX,CAAP;AACH,GAND;AAOH","sourcesContent":["import path from \"path\";\nimport fs from \"fs\";\nimport { Octokit } from \"octokit\";\nconst { Base64 } = require(\"js-base64\");\n\nexport default async (args: {\n    octokit: Octokit;\n    owner: string;\n    repo: string;\n    branch: string;\n    author: { name: string; email: string };\n}) => {\n    const { octokit, owner, repo, branch, author } = args;\n\n    const cwd = path.join(__dirname, \"files\", \"workflows\");\n\n    const filesPaths = [];\n    readDirectory(cwd, filesPaths);\n\n    for (let i = 0; i < filesPaths.length; i++) {\n        const filePath = filesPaths[i];\n\n        const content = fs.readFileSync(filePath, \"utf-8\");\n        const contentEncoded = Base64.encode(content);\n\n        await octokit.rest.repos.createOrUpdateFileContents({\n            owner,\n            repo,\n            branch,\n            path: path.relative(cwd, filePath),\n            message: `ci: create Webiny CI/CD pipeline`,\n            content: contentEncoded,\n            committer: author,\n            author\n        });\n    }\n\n    return;\n};\n\nfunction readDirectory(dir, files) {\n    fs.readdirSync(dir).forEach(File => {\n        const absolute = path.join(dir, File);\n        if (fs.statSync(absolute).isDirectory()) {\n            return readDirectory(absolute, files);\n        }\n        return files.push(absolute);\n    });\n}\n"],"file":"commitWorkflows.js"}