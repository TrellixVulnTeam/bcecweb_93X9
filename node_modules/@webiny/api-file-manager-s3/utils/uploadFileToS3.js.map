{"version":3,"sources":["../../src/utils/uploadFileToS3.ts"],"names":["buffer","preSignedPostPayload","formData","FormData","Object","keys","fields","forEach","key","append","url","method","body"],"mappings":";;;;;;;;;AAAA;;AACA;;eAEe,OAAOA,MAAP,EAAeC,oBAAf,KAAwC;AACnD,QAAMC,QAAQ,GAAG,IAAIC,iBAAJ,EAAjB,CADmD,CAEnD;;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,oBAAoB,CAACK,MAAjC,EAAyCC,OAAzC,CAAiDC,GAAG,IAAI;AACpDN,IAAAA,QAAQ,CAACO,MAAT,CAAgBD,GAAhB,EAAqBP,oBAAoB,CAACK,MAArB,CAA4BE,GAA5B,CAArB;AACH,GAFD,EAHmD,CAMnD;;AACAN,EAAAA,QAAQ,CAACO,MAAT,CAAgB,MAAhB,EAAwBT,MAAxB,EAPmD,CAQnD;;AACA,SAAO,wBAAMC,oBAAoB,CAACS,GAA3B,EAAgC;AACnCC,IAAAA,MAAM,EAAE,MAD2B;AAEnCC,IAAAA,IAAI,EAAEV;AAF6B,GAAhC,CAAP;AAIH,C","sourcesContent":["import FormData from \"form-data\";\nimport fetch from \"node-fetch\";\n\nexport default async (buffer, preSignedPostPayload) => {\n    const formData = new FormData();\n    // Add all pre signed payload field to \"FormData\".\n    Object.keys(preSignedPostPayload.fields).forEach(key => {\n        formData.append(key, preSignedPostPayload.fields[key]);\n    });\n    // Add file content to \"FormData\".\n    formData.append(\"file\", buffer);\n    // Finally make the upload request to S3.\n    return fetch(preSignedPostPayload.url, {\n        method: \"POST\",\n        body: formData\n    });\n};\n"],"file":"uploadFileToS3.js"}