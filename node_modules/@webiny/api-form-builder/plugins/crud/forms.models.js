"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FormSubmissionUpdateDataModel = exports.FormSubmissionCreateDataModel = exports.FormUpdateDataModel = exports.FormCreateDataModel = exports.FormSettingsModel = exports.FormFieldsModel = void 0;

var _validation = require("@webiny/validation");

var _fields = require("@commodo/fields");

var _commodoFieldsObject = require("commodo-fields-object");

// "Form Fields" data model.
const FormFieldsModel = (0, _fields.withFields)({
  _id: (0, _fields.string)({
    validation: _validation.validation.create("required")
  }),
  type: (0, _fields.string)({
    validation: _validation.validation.create("required")
  }),
  name: (0, _fields.string)({
    validation: _validation.validation.create("required")
  }),
  fieldId: (0, _fields.string)({
    validation: _validation.validation.create("required")
  }),
  // Note: We've replaced "i18nString()" with "string()"
  label: (0, _fields.string)({
    validation: _validation.validation.create("maxLength:100")
  }),
  helpText: (0, _fields.string)({
    validation: _validation.validation.create("maxLength:100")
  }),
  placeholderText: (0, _fields.string)({
    validation: _validation.validation.create("maxLength:100")
  }),
  options: (0, _fields.fields)({
    list: true,
    value: [],
    instanceOf: (0, _fields.withFields)({
      label: (0, _fields.string)({
        validation: _validation.validation.create("maxLength:100")
      }),
      value: (0, _fields.string)({
        value: ""
      })
    })()
  }),
  validation: (0, _fields.fields)({
    list: true,
    value: [],
    instanceOf: (0, _fields.withFields)({
      name: (0, _fields.string)({
        validation: _validation.validation.create("required")
      }),
      message: (0, _fields.string)({
        validation: _validation.validation.create("maxLength:100")
      }),
      settings: (0, _commodoFieldsObject.object)({
        value: {}
      })
    })()
  }),
  settings: (0, _commodoFieldsObject.object)({
    value: {}
  })
})(); // "Form Settings" data model.

exports.FormFieldsModel = FormFieldsModel;
const FormSettingsModel = (0, _fields.withFields)({
  layout: (0, _fields.fields)({
    value: {},
    instanceOf: (0, _fields.withFields)({
      renderer: (0, _fields.string)({
        value: "default"
      })
    })()
  }),
  // Note: We've replaced "i18nString()" with "string()"
  submitButtonLabel: (0, _fields.string)({
    validation: _validation.validation.create("maxLength:100")
  }),
  // Note: We've replaced "i18nObject()" with "object()"
  successMessage: (0, _commodoFieldsObject.object)(),
  termsOfServiceMessage: (0, _fields.fields)({
    instanceOf: (0, _fields.withFields)({
      message: (0, _commodoFieldsObject.object)(),
      errorMessage: (0, _fields.string)({
        validation: _validation.validation.create("maxLength:100")
      }),
      enabled: (0, _fields.boolean)()
    })()
  }),
  reCaptcha: (0, _fields.fields)({
    value: {},
    instanceOf: (0, _fields.withFields)({
      enabled: (0, _fields.boolean)(),
      // Note: We've replaced "i18nString()" with "string()"
      errorMessage: (0, _fields.string)({
        value: "Please verify that you are not a robot.",
        validation: _validation.validation.create("maxLength:100")
      })
    })()
  })
})();
exports.FormSettingsModel = FormSettingsModel;
const FormCreateDataModel = (0, _fields.withFields)({
  name: (0, _fields.string)({
    validation: _validation.validation.create("required,maxLength:100")
  })
})();
exports.FormCreateDataModel = FormCreateDataModel;
const FormUpdateDataModel = (0, _fields.withFields)({
  name: (0, _fields.string)({
    validation: _validation.validation.create("maxLength:100")
  }),
  fields: (0, _fields.fields)({
    list: true,
    value: [],
    instanceOf: FormFieldsModel
  }),
  layout: (0, _commodoFieldsObject.object)({
    value: []
  }),
  settings: (0, _fields.fields)({
    instanceOf: FormSettingsModel,
    value: {}
  }),
  triggers: (0, _commodoFieldsObject.object)()
})();
exports.FormUpdateDataModel = FormUpdateDataModel;
const FormSubmissionCreateDataModel = (0, _fields.withFields)({
  data: (0, _commodoFieldsObject.object)({
    validation: _validation.validation.create("required")
  }),
  meta: (0, _fields.fields)({
    value: {},
    instanceOf: (0, _fields.withFields)({
      ip: (0, _fields.string)({
        validation: _validation.validation.create("required,maxLength:100")
      }),
      submittedOn: (0, _fields.string)({
        value: new Date().toISOString(),
        validation: _validation.validation.create("maxLength:100")
      })
    })()
  }),
  form: (0, _fields.fields)({
    instanceOf: (0, _fields.withFields)({
      id: (0, _fields.string)({
        validation: _validation.validation.create("required")
      }),
      parent: (0, _fields.string)({
        validation: _validation.validation.create("required")
      }),
      name: (0, _fields.string)({
        validation: _validation.validation.create("required")
      }),
      version: (0, _fields.number)({
        validation: _validation.validation.create("required")
      }),
      layout: (0, _commodoFieldsObject.object)({
        value: []
      }),
      fields: (0, _fields.fields)({
        list: true,
        value: [],
        instanceOf: FormFieldsModel
      })
    })()
  })
})();
exports.FormSubmissionCreateDataModel = FormSubmissionCreateDataModel;
const FormSubmissionUpdateDataModel = (0, _fields.withFields)({
  logs: (0, _fields.fields)({
    list: true,
    value: [],
    instanceOf: (0, _fields.withFields)({
      type: (0, _fields.string)({
        validation: _validation.validation.create("required,in:error:warning:info:success")
      }),
      message: (0, _fields.string)(),
      data: (0, _commodoFieldsObject.object)(),
      createdOn: (0, _fields.string)({
        value: new Date().toISOString()
      })
    })()
  })
})();
exports.FormSubmissionUpdateDataModel = FormSubmissionUpdateDataModel;
//# sourceMappingURL=forms.models.js.map