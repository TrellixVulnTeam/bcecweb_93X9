{"version":3,"sources":["../../../src/plugins/crud/utils.ts"],"names":["checkBaseFormPermissions","context","check","i18nContent","checkI18NContentPermission","permission","security","getPermission","NotAuthorizedError","rwd","hasRwd","pw","hasPW","checkBaseSettingsPermissions","getFormId","form","id","includes","split","version","getStatus","params","published","locked","isCustom","Object","keys","length","normalizeSortInput","sort","key","value","entries","shouldUseKeyword","order","getPKPrefix","tenancy","getCurrentTenant","Error","getLocale","code","checkOwnership","own","identity","getIdentity","ownedBy","encodeCursor","cursor","Buffer","from","JSON","stringify","toString","decodeCursor","parse","paginateBatch","items","perPage","execute","pages","Math","ceil","i","slice"],"mappings":"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","sourcesContent":["import { NotAuthorizedError } from \"@webiny/api-security\";\nimport {\n    FbForm,\n    FbFormPermission,\n    FbFormSettingsPermission,\n    FormBuilderContext\n} from \"../../types\";\n\nexport const checkBaseFormPermissions = async (\n    context: FormBuilderContext,\n    check: { rwd?: string; pw?: string } = {}\n): Promise<FbFormPermission> => {\n    await context.i18nContent.checkI18NContentPermission();\n    const permission = await context.security.getPermission<FbFormPermission>(\"fb.form\");\n    if (!permission) {\n        throw new NotAuthorizedError();\n    }\n\n    if (check.rwd && !hasRwd(permission, check.rwd)) {\n        throw new NotAuthorizedError();\n    }\n\n    if (check.pw && !hasPW(permission, check.pw)) {\n        throw new NotAuthorizedError();\n    }\n\n    return permission;\n};\n\nexport const checkBaseSettingsPermissions = async (\n    context: FormBuilderContext\n): Promise<FbFormSettingsPermission> => {\n    const permission = await context.security.getPermission<FbFormSettingsPermission>(\n        \"fb.settings\"\n    );\n    if (!permission) {\n        throw new NotAuthorizedError();\n    }\n\n    return permission;\n};\n\nexport const getFormId = (form: FbForm) => {\n    if (form.id.includes(\"#\")) {\n        return `${form.id.split(\"#\")[0]}#${form.version}`;\n    }\n    return `${form.id}#${form.version}`;\n};\n\nexport const getStatus = (params: { published: boolean; locked: boolean }) => {\n    if (params.published) {\n        return \"published\";\n    }\n\n    return params.locked ? \"locked\" : \"draft\";\n};\n\n// Has read/write/delete permissions?\nexport const hasRwd = (permission: FbFormPermission, rwd: string) => {\n    if (typeof permission.rwd !== \"string\") {\n        return true;\n    }\n\n    return permission.rwd.includes(rwd);\n};\n\n// Has publishing workflow permissions?\nexport const hasPW = (permission: FbFormPermission, pw: string) => {\n    const isCustom = Object.keys(permission).length > 1; // \"name\" key is always present\n\n    if (!isCustom) {\n        // Means it's a \"full-access\" permission.\n        return true;\n    }\n\n    if (typeof permission.pw !== \"string\") {\n        return false;\n    }\n\n    return permission.pw.includes(pw);\n};\n\nexport const normalizeSortInput = (sort: Record<string, number>) => {\n    const [[key, value]] = Object.entries(sort);\n\n    const shouldUseKeyword = [\"name\"];\n\n    if (shouldUseKeyword.includes(key)) {\n        return {\n            [`${key}.keyword`]: {\n                order: value === -1 ? \"desc\" : \"asc\"\n            }\n        };\n    }\n\n    return {\n        [key]: {\n            order: value === -1 ? \"desc\" : \"asc\"\n        }\n    };\n};\n\nexport const getPKPrefix = (context: FormBuilderContext) => {\n    const { tenancy, i18nContent } = context;\n    if (!tenancy.getCurrentTenant()) {\n        throw new Error(\"Tenant missing.\");\n    }\n\n    if (!i18nContent.getLocale()) {\n        throw new Error(\"Locale missing.\");\n    }\n\n    return `T#${tenancy.getCurrentTenant().id}#L#${i18nContent.getLocale().code}#FB#`;\n};\n\nexport const checkOwnership = (\n    form: FbForm,\n    permission: FbFormPermission,\n    context: FormBuilderContext\n) => {\n    if (permission.own === true) {\n        const identity = context.security.getIdentity();\n        if (form.ownedBy.id !== identity.id) {\n            throw new NotAuthorizedError();\n        }\n    }\n};\n\nexport const encodeCursor = cursor => {\n    if (!cursor) {\n        return null;\n    }\n\n    return Buffer.from(JSON.stringify(cursor)).toString(\"base64\");\n};\n\nexport const decodeCursor = cursor => {\n    if (!cursor) {\n        return null;\n    }\n\n    return JSON.parse(Buffer.from(cursor, \"base64\").toString(\"ascii\"));\n};\n\nexport const paginateBatch = async <T = Record<string, any>>(\n    items: T[],\n    perPage: number,\n    execute: (items: T[]) => Promise<any>\n) => {\n    const pages = Math.ceil(items.length / perPage);\n    for (let i = 0; i < pages; i++) {\n        await execute(items.slice(i * perPage, i * perPage + perPage));\n    }\n};\n"],"file":"utils.js"}