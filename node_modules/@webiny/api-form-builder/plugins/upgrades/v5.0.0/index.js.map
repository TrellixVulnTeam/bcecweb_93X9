{"version":3,"sources":["../../../../src/plugins/upgrades/v5.0.0/index.ts"],"names":["plugin","name","type","app","version","apply","context","elasticsearch","fileManager","db","limit","hasMoreItems","after","undefined","esItems","response","search","defaults","es","body","sort","createdOn","order","unmapped_type","size","hits","length","filter","item","_id","includes","console","log","esJSON","JSON","stringify","file","storage","storagePlugin","upload","buffer","Buffer","from","key","items","batch","create","map","_source","__type","uniqueId","id","split","esDb","data","PK","locale","SK","index","_index","savedOn","Date","toISOString","form","parent","execute","operations","delete","errors","bulk","filter_path","warn"],"mappings":"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","sourcesContent":["import { UpgradePlugin } from \"@webiny/api-upgrade/types\";\nimport { FormBuilderContext } from \"../../../types\";\nimport { paginateBatch } from \"../utils\";\nimport defaults from \"../../crud/defaults\";\n\nconst plugin: UpgradePlugin<FormBuilderContext> = {\n    name: \"api-upgrade-form-builder\",\n    type: \"api-upgrade\",\n    app: \"form-builder\",\n    version: \"5.0.0\",\n    async apply(context) {\n        const { elasticsearch, fileManager, db } = context;\n        const limit = 1000;\n        let hasMoreItems = true;\n        let after = undefined;\n        let esItems = [];\n\n        while (hasMoreItems) {\n            const response = await elasticsearch.search({\n                ...defaults.es(context),\n                body: {\n                    sort: {\n                        createdOn: {\n                            order: \"asc\",\n                            // eslint-disable-next-line\n                            unmapped_type: \"date\"\n                        }\n                    },\n                    size: limit + 1,\n                    after\n                }\n            });\n            const { hits } = response.body.hits;\n\n            hasMoreItems = hits.length > limit;\n            after = hasMoreItems ? hits[limit - 1].sort : undefined;\n            esItems = [...esItems, ...hits.filter(item => !item._id.includes(\"T#root#\"))];\n        }\n\n        console.log(`Fetched ${esItems.length} items from Elasticsearch`);\n        if (esItems.length === 0) {\n            return;\n        }\n\n        // Store a backup of old items\n        const esJSON = JSON.stringify(esItems);\n\n        const { file } = await fileManager.storage.storagePlugin.upload({\n            name: \"upgrade-form-builder-es-5.0.0.json\",\n            type: \"application/json\",\n            size: esJSON.length,\n            buffer: Buffer.from(esJSON)\n        });\n\n        console.log(`Stored backup of Elasticsearch items to ${file.key}`);\n\n        // Store items to ES DDB table\n        await paginateBatch(esItems, 25, async items => {\n            await db\n                .batch()\n                .create(\n                    ...items.map(item => {\n                        if (item._source.__type === \"fb.form\") {\n                            const [uniqueId] = item._source.id.split(\"#\");\n                            return {\n                                ...defaults.esDb,\n                                data: {\n                                    PK: `T#root#L#${item._source.locale}#FB#F#${uniqueId}`,\n                                    SK: \"L\",\n                                    index: item._index,\n                                    data: item._source,\n                                    savedOn: new Date().toISOString(),\n                                    version: \"5.0.0\"\n                                }\n                            };\n                        }\n\n                        // __type: \"fb.submission\"\n                        return {\n                            ...defaults.esDb,\n                            data: {\n                                PK: `T#root#L#${item._source.locale}#FB#F#${item._source.form.parent}`,\n                                SK: `FS#${item._source.id}`,\n                                index: item._index,\n                                data: item._source,\n                                savedOn: new Date().toISOString()\n                            }\n                        };\n                    })\n                )\n                .execute();\n        });\n\n        console.log(`Inserted items into Elasticsearch DynamoDB table.`);\n\n        // Delete original items from ES index\n        const operations = esItems.map(item => {\n            return { delete: { _id: item._id, _index: item._index } };\n        });\n\n        const {\n            body: { items, errors }\n        } = await elasticsearch.bulk({\n            body: operations,\n            // eslint-disable-next-line\n            filter_path: \"errors,items.*.error\"\n        });\n\n        console.log(`Deleted old Elasticsearch items from \"root-form-builder\" index.`);\n\n        if (errors) {\n            console.warn(\"These items were not deleted\", items);\n        }\n    }\n};\n\nexport default plugin;\n\n// Target _id: T#root#L#en-US#FB#F#603e248212ee4400089d16eb:L\n\n// const record = {\n//     _index: \"root-form-builder\",\n//     _type: \"_doc\",\n//     _id: \"FORM#L#6040a8a5a6180e00085d168e\",\n//     _score: 1.0,\n//     _source: {\n//         __type: \"fb.form\",\n//         id: \"6040a8a5a6180e00085d168e#0001\",\n//         createdOn: \"2021-03-04T09:30:13.784Z\",\n//         savedOn: \"2021-03-04T09:30:13.784Z\",\n//         name: \"Test\",\n//         slug: \"test-6040a8a5a6180e00085d168e\",\n//         published: false,\n//         publishedOn: null,\n//         version: 1,\n//         locked: false,\n//         status: \"draft\",\n//         createdBy: {\n//             id: \"admin@webiny.com\",\n//             displayName: \"Pavel Denisjuk\",\n//             type: \"admin\"\n//         },\n//         ownedBy: {\n//             id: \"admin@webiny.com\",\n//             displayName: \"Pavel Denisjuk\",\n//             type: \"admin\"\n//         },\n//         locale: \"en-US\"\n//     }\n// };\n"],"file":"index.js"}