{"version":3,"sources":["../../../src/plugins/validators/pattern.ts"],"names":["name","type","apply","context","plugins","register","validator","validate","value","settings","pattern","preset","patternPlugin","byType","find","item","RegExp","regex","flags","test"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;eAIe;AACXA,EAAAA,IAAI,EAAE,8BADK;AAEXC,EAAAA,IAAI,EAAE,SAFK;;AAGXC,EAAAA,KAAK,CAACC,OAAD,EAAU;AACXA,IAAAA,OAAO,CAACC,OAAR,CAAgBC,QAAhB,CAAyB;AACrBJ,MAAAA,IAAI,EAAE,yBADe;AAErBD,MAAAA,IAAI,EAAE,iCAFe;AAGrBM,MAAAA,SAAS,EAAE;AACPN,QAAAA,IAAI,EAAE,SADC;AAEPO,QAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQF,SAAR,KAAsB;AAC5B,cAAI,CAACE,KAAL,EAAY;AACR,mBAAO,IAAP;AACH;;AAED,gBAAM;AAAEC,YAAAA;AAAF,cAAeH,SAArB;AAEA,cAAII,OAAJ;;AACA,cAAID,QAAQ,CAACE,MAAT,KAAoB,QAAxB,EAAkC;AAC9BD,YAAAA,OAAO,GAAGD,QAAV;AACH,WAFD,MAEO;AACH,kBAAMG,aAAa,GAAGT,OAAO,CAACC,OAAR,CACjBS,MADiB,CAEd,iCAFc,EAIjBC,IAJiB,CAIZC,IAAI,IAAIA,IAAI,CAACL,OAAL,CAAaV,IAAb,KAAsBS,QAAQ,CAACE,MAJ3B,CAAtB;;AAKA,gBAAIC,aAAJ,EAAmB;AACfF,cAAAA,OAAO,GAAGE,aAAa,CAACF,OAAxB;AACH;AACJ;;AAED,cAAI,CAACA,OAAL,EAAc;AACV,mBAAO,IAAP;AACH;;AAED,iBAAO,IAAIM,MAAJ,CAAWN,OAAO,CAACO,KAAnB,EAA0BP,OAAO,CAACQ,KAAlC,EAAyCC,IAAzC,CAA8CX,KAA9C,CAAP;AACH;AA5BM;AAHU,KAAzB;AAkCH;;AAtCU,C","sourcesContent":["/**\n * Since form-field-validator plugin needs access to the request context, we create a context plugin which\n * registers the actual validation plugin with access to the request context.\n */\nimport { FbFormFieldPatternValidatorPlugin } from \"../../types\";\nimport { ContextPlugin } from \"@webiny/handler/types\";\n\nexport default {\n    name: \"context-form-field-validator\",\n    type: \"context\",\n    apply(context) {\n        context.plugins.register({\n            type: \"fb-form-field-validator\",\n            name: \"fb-form-field-validator-pattern\",\n            validator: {\n                name: \"pattern\",\n                validate: (value, validator) => {\n                    if (!value) {\n                        return true;\n                    }\n\n                    const { settings } = validator;\n\n                    let pattern;\n                    if (settings.preset === \"custom\") {\n                        pattern = settings;\n                    } else {\n                        const patternPlugin = context.plugins\n                            .byType<FbFormFieldPatternValidatorPlugin>(\n                                \"fb-form-field-validator-pattern\"\n                            )\n                            .find(item => item.pattern.name === settings.preset);\n                        if (patternPlugin) {\n                            pattern = patternPlugin.pattern;\n                        }\n                    }\n\n                    if (!pattern) {\n                        return true;\n                    }\n\n                    return new RegExp(pattern.regex, pattern.flags).test(value);\n                }\n            }\n        });\n    }\n} as ContextPlugin;\n"],"file":"pattern.js"}