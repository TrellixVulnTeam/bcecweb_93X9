{"version":3,"sources":["../../src/plugins/graphql.ts"],"names":["emptyResolver","plugin","type","name","schema","typeDefs","resolvers","Query","formBuilder","Mutation","FbQuery","version","root","args","context","i18nContent","tenancy","getCurrentTenant","getLocale","system","getVersion","e","ErrorResponse","code","message","data","FbMutation","install","domain","Response","upgrade"],"mappings":";;;;;;;AACA;;AAGA,MAAMA,aAAa,GAAG,OAAO,EAAP,CAAtB;;AAEA,MAAMC,MAA+C,GAAG;AACpDC,EAAAA,IAAI,EAAE,gBAD8C;AAEpDC,EAAAA,IAAI,EAAE,4BAF8C;AAGpDC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ;AAAE;AAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAtCY;AAuCJC,IAAAA,SAAS,EAAE;AACPC,MAAAA,KAAK,EAAE;AACHC,QAAAA,WAAW,EAAER;AADV,OADA;AAIPS,MAAAA,QAAQ,EAAE;AACND,QAAAA,WAAW,EAAER;AADP,OAJH;AAOPU,MAAAA,OAAO,EAAE;AACLC,QAAAA,OAAO,EAAE,OAAOC,IAAP,EAAaC,IAAb,EAAmBC,OAAnB,KAA+B;AACpC,gBAAM;AAAEC,YAAAA,WAAF;AAAeC,YAAAA,OAAf;AAAwBR,YAAAA;AAAxB,cAAwCM,OAA9C;;AAEA,cAAI,CAACE,OAAO,CAACC,gBAAR,EAAD,IAA+B,CAACF,WAAW,CAACG,SAAZ,EAApC,EAA6D;AACzD,mBAAO,IAAP;AACH;;AAED,cAAI;AACA,mBAAOV,WAAW,CAACW,MAAZ,CAAmBC,UAAnB,EAAP;AACH,WAFD,CAEE,OAAOC,CAAP,EAAU;AACR,mBAAO,IAAIC,6BAAJ,CAAkB;AACrBC,cAAAA,IAAI,EAAE,oBADe;AAErBC,cAAAA,OAAO,EAAEH,CAAC,CAACG,OAFU;AAGrBC,cAAAA,IAAI,EAAEJ,CAAC,CAACI;AAHa,aAAlB,CAAP;AAKH;AACJ;AAjBI,OAPF;AA0BPC,MAAAA,UAAU,EAAE;AACRC,QAAAA,OAAO,EAAE,OAAOf,IAAP,EAAaC,IAAb,EAAmBC,OAAnB,KAA+B;AACpC,cAAI;AACA,kBAAMA,OAAO,CAACN,WAAR,CAAoBW,MAApB,CAA2BQ,OAA3B,CAAmC;AAAEC,cAAAA,MAAM,EAAEf,IAAI,CAACe;AAAf,aAAnC,CAAN;AAEA,mBAAO,IAAIC,wBAAJ,CAAa,IAAb,CAAP;AACH,WAJD,CAIE,OAAOR,CAAP,EAAU;AACR,mBAAO,IAAIC,6BAAJ,CAAkB;AACrBC,cAAAA,IAAI,EAAE,oBADe;AAErBC,cAAAA,OAAO,EAAEH,CAAC,CAACG,OAFU;AAGrBC,cAAAA,IAAI,EAAEJ,CAAC,CAACI;AAHa,aAAlB,CAAP;AAKH;AACJ,SAbO;AAcRK,QAAAA,OAAO,EAAE,OAAOlB,IAAP,EAAaC,IAAb,EAAmBC,OAAnB,KAA+B;AACpC,cAAI;AACA,kBAAMA,OAAO,CAACN,WAAR,CAAoBW,MAApB,CAA2BW,OAA3B,CAAmCjB,IAAI,CAACF,OAAxC,CAAN;AAEA,mBAAO,IAAIkB,wBAAJ,CAAa,IAAb,CAAP;AACH,WAJD,CAIE,OAAOR,CAAP,EAAU;AACR,mBAAO,IAAIC,6BAAJ,CAAkBD,CAAlB,CAAP;AACH;AACJ;AAtBO;AA1BL;AAvCP;AAH4C,CAAxD;eAgGepB,M","sourcesContent":["import { GraphQLSchemaPlugin } from \"@webiny/handler-graphql/types\";\nimport { ErrorResponse, Response } from \"@webiny/handler-graphql\";\nimport { FormBuilderContext } from \"../types\";\n\nconst emptyResolver = () => ({});\n\nconst plugin: GraphQLSchemaPlugin<FormBuilderContext> = {\n    type: \"graphql-schema\",\n    name: \"graphql-schema-formBuilder\",\n    schema: {\n        typeDefs: /* GraphQL */ `\n            type FbBooleanResponse {\n                data: Boolean\n                error: FbError\n            }\n\n            type FbQuery {\n                # Get installed version\n                version: String\n            }\n\n            type FbMutation {\n                # Install Form Builder\n                install(domain: String): FbBooleanResponse\n\n                # Upgrade Form Builder\n                upgrade(version: String!): FbBooleanResponse\n            }\n\n            extend type Query {\n                formBuilder: FbQuery\n            }\n\n            extend type Mutation {\n                formBuilder: FbMutation\n            }\n\n            type FbError {\n                code: String\n                message: String\n                data: JSON\n            }\n\n            type FbDeleteResponse {\n                data: Boolean\n                error: FbError\n            }\n        `,\n        resolvers: {\n            Query: {\n                formBuilder: emptyResolver\n            },\n            Mutation: {\n                formBuilder: emptyResolver\n            },\n            FbQuery: {\n                version: async (root, args, context) => {\n                    const { i18nContent, tenancy, formBuilder } = context;\n\n                    if (!tenancy.getCurrentTenant() || !i18nContent.getLocale()) {\n                        return null;\n                    }\n\n                    try {\n                        return formBuilder.system.getVersion();\n                    } catch (e) {\n                        return new ErrorResponse({\n                            code: \"FORM_BUILDER_ERROR\",\n                            message: e.message,\n                            data: e.data\n                        });\n                    }\n                }\n            },\n            FbMutation: {\n                install: async (root, args, context) => {\n                    try {\n                        await context.formBuilder.system.install({ domain: args.domain });\n\n                        return new Response(true);\n                    } catch (e) {\n                        return new ErrorResponse({\n                            code: \"FORM_BUILDER_ERROR\",\n                            message: e.message,\n                            data: e.data\n                        });\n                    }\n                },\n                upgrade: async (root, args, context) => {\n                    try {\n                        await context.formBuilder.system.upgrade(args.version as string);\n\n                        return new Response(true);\n                    } catch (e) {\n                        return new ErrorResponse(e);\n                    }\n                }\n            }\n        }\n    }\n};\n\nexport default plugin;\n"],"file":"graphql.js"}