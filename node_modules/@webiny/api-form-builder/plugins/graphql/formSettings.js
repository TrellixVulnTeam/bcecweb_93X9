"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _responses = require("@webiny/handler-graphql/responses");

const plugin = {
  type: "graphql-schema",
  schema: {
    typeDefs:
    /* GraphQL */
    `
            type FbReCaptchaSettings {
                enabled: Boolean
                siteKey: String
                secretKey: String
            }

            input FbReCaptchaSettingsInput {
                enabled: Boolean
                siteKey: String
                secretKey: String
            }

            type FbSettings {
                domain: String
                reCaptcha: FbReCaptchaSettings
            }

            type FbSettingsResponse {
                data: FbSettings
                error: FbError
            }

            input FbSettingsInput {
                domain: String
                reCaptcha: FbReCaptchaSettingsInput
            }

            extend type FbQuery {
                getSettings: FbSettingsResponse
            }

            extend type FbMutation {
                updateSettings(data: FbSettingsInput): FbSettingsResponse
            }
        `,
    resolvers: {
      FbQuery: {
        async getSettings(_, args, {
          formBuilder
        }) {
          try {
            const settings = await formBuilder.settings.getSettings();

            if (!settings) {
              return new _responses.NotFoundResponse(`"Form Builder" settings not found!`);
            }

            return new _responses.Response(settings);
          } catch (err) {
            return new _responses.ErrorResponse(err);
          }
        }

      },
      FbMutation: {
        updateSettings: async (_, args, {
          formBuilder
        }) => {
          try {
            const existingSettings = await formBuilder.settings.getSettings();

            if (!existingSettings) {
              return new _responses.NotFoundResponse(`"Form Builder" settings not found!`);
            }

            const settings = await formBuilder.settings.updateSettings(args.data);
            return new _responses.Response(settings);
          } catch (err) {
            return new _responses.ErrorResponse(err);
          }
        }
      }
    }
  }
};
var _default = plugin;
exports.default = _default;
//# sourceMappingURL=formSettings.js.map