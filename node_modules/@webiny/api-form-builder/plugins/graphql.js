"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _handlerGraphql = require("@webiny/handler-graphql");

const emptyResolver = () => ({});

const plugin = {
  type: "graphql-schema",
  name: "graphql-schema-formBuilder",
  schema: {
    typeDefs:
    /* GraphQL */
    `
            type FbBooleanResponse {
                data: Boolean
                error: FbError
            }

            type FbQuery {
                # Get installed version
                version: String
            }

            type FbMutation {
                # Install Form Builder
                install(domain: String): FbBooleanResponse

                # Upgrade Form Builder
                upgrade(version: String!): FbBooleanResponse
            }

            extend type Query {
                formBuilder: FbQuery
            }

            extend type Mutation {
                formBuilder: FbMutation
            }

            type FbError {
                code: String
                message: String
                data: JSON
            }

            type FbDeleteResponse {
                data: Boolean
                error: FbError
            }
        `,
    resolvers: {
      Query: {
        formBuilder: emptyResolver
      },
      Mutation: {
        formBuilder: emptyResolver
      },
      FbQuery: {
        version: async (root, args, context) => {
          const {
            i18nContent,
            tenancy,
            formBuilder
          } = context;

          if (!tenancy.getCurrentTenant() || !i18nContent.getLocale()) {
            return null;
          }

          try {
            return formBuilder.system.getVersion();
          } catch (e) {
            return new _handlerGraphql.ErrorResponse({
              code: "FORM_BUILDER_ERROR",
              message: e.message,
              data: e.data
            });
          }
        }
      },
      FbMutation: {
        install: async (root, args, context) => {
          try {
            await context.formBuilder.system.install({
              domain: args.domain
            });
            return new _handlerGraphql.Response(true);
          } catch (e) {
            return new _handlerGraphql.ErrorResponse({
              code: "FORM_BUILDER_ERROR",
              message: e.message,
              data: e.data
            });
          }
        },
        upgrade: async (root, args, context) => {
          try {
            await context.formBuilder.system.upgrade(args.version);
            return new _handlerGraphql.Response(true);
          } catch (e) {
            return new _handlerGraphql.ErrorResponse(e);
          }
        }
      }
    }
  }
};
var _default = plugin;
exports.default = _default;
//# sourceMappingURL=graphql.js.map