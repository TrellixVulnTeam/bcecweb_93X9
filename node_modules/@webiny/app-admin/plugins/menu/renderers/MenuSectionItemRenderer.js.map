{"version":3,"sources":["../../../../src/plugins/menu/renderers/MenuSectionItemRenderer.tsx"],"names":["React","css","Link","List","ListItem","UIRenderer","linkStyle","color","textDecoration","display","alignItems","width","height","outline","paddingLeft","submenuItems","submenuList","padding","MenuSectionItemRenderer","element","includes","depth","Boolean","config","path","props","defaultOnClick","getView","getNavigationHook","hideMenu","onClick","testId","label"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,iBAA/B;AACA,SAASC,UAAT;AAIA,IAAMC,SAAS,gBAAGL,GAAG,CAAC;AAClBM,EAAAA,KAAK,EAAE,6CADW;AAElBC,EAAAA,cAAc,EAAE,MAFE;AAGlBC,EAAAA,OAAO,EAAE,MAHS;AAIlBC,EAAAA,UAAU,EAAE,QAJM;AAKlBC,EAAAA,KAAK,EAAE,MALW;AAMlBC,EAAAA,MAAM,EAAE,MANU;AAOlBC,EAAAA,OAAO,EAAE,MAPS;AAQlBC,EAAAA,WAAW,EAAE,EARK;AASlB,aAAW;AACPN,IAAAA,cAAc,EAAE;AADT;AATO,CAAD,qBAArB;AAcA,IAAMO,YAAY,gBAAGd,GAAG,CAAC;AACrB,iCAA+B;AAC3Ba,IAAAA,WAAW,EAAE;AADc;AADV,CAAD,wBAAxB;AAMA,IAAME,WAAW,gBAAGf,GAAG,CAAC;AACpB,gBAAc;AACVgB,IAAAA,OAAO,EAAE;AADC;AADM,CAAD,uBAAvB;AAMA,WAAaC,uBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACI,mBAAUC,OAAV,EAAmD;AAC/C,aAAO,CAAC,CAAD,EAAI,CAAJ,EAAOC,QAAP,CAAgBD,OAAO,CAACE,KAAxB,KAAkCC,OAAO,CAACH,OAAO,CAACI,MAAR,CAAeC,IAAhB,CAAhD;AACH;AAHL;AAAA;AAAA,WAKI,sBAAmF;AAAA,UAA1EL,OAA0E,QAA1EA,OAA0E;AAAA,UAAjEM,KAAiE,QAAjEA,KAAiE;AAC/E,UAAMC,cAAc,GAAGP,OAAO,CAACQ,OAAR,GAAkCC,iBAAlC,GAAsDC,QAA7E;AACA,UAAMC,OAAO,GAAGX,OAAO,CAACI,MAAR,CAAeO,OAAf,IAA0BJ,cAA1C;AAEA,0BACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEV;AAAjB,sBACI,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAED,YAArB;AAAmC,uBAAaI,OAAO,CAACI,MAAR,CAAeQ;AAA/D,SACKZ,OAAO,CAACI,MAAR,CAAeC,IAAf,gBACG,oBAAC,IAAD;AACI,QAAA,SAAS,EAAElB,SADf;AAEI,QAAA,EAAE,EAAEa,OAAO,CAACI,MAAR,CAAeC,IAFvB;AAGI,QAAA,OAAO,EAAEM,OAAO,GAAG;AAAA,iBAAMA,OAAO,CAACL,KAAD,CAAb;AAAA,SAAH,GAA0B;AAH9C,SAKKN,OAAO,CAACI,MAAR,CAAeS,KALpB,CADH,gBASG;AAAM,QAAA,OAAO,EAAEF,OAAO,GAAG;AAAA,iBAAMA,OAAO,CAACL,KAAD,CAAb;AAAA,SAAH,GAA0B,IAAhD;AAAsD,QAAA,SAAS,EAAEnB;AAAjE,SACKa,OAAO,CAACI,MAAR,CAAeS,KADpB,CAVR,CADJ,CADJ;AAmBH;AA5BL;;AAAA;AAAA,EAA6C3B,UAA7C","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport { Link } from \"@webiny/react-router\";\nimport { List, ListItem } from \"@webiny/ui/List\";\nimport { UIRenderer, UIRenderParams } from \"~/ui/UIRenderer\";\nimport { NavigationMenuElement } from \"~/ui/elements/NavigationMenuElement\";\nimport { NavigationView } from \"~/ui/views/NavigationView\";\n\nconst linkStyle = css({\n    color: \"var(--mdc-theme-text-primary-on-background)\",\n    textDecoration: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100%\",\n    outline: \"none\",\n    paddingLeft: 65,\n    \"&:hover\": {\n        textDecoration: \"none\"\n    }\n});\n\nconst submenuItems = css({\n    \".mdc-drawer &.mdc-list-item\": {\n        paddingLeft: 0\n    }\n});\n\nconst submenuList = css({\n    \"&.mdc-list\": {\n        padding: 0\n    }\n});\n\nexport class MenuSectionItemRenderer extends UIRenderer<NavigationMenuElement> {\n    canRender(element: NavigationMenuElement): boolean {\n        return [2, 3].includes(element.depth) && Boolean(element.config.path);\n    }\n\n    render({ element, props }: UIRenderParams<NavigationMenuElement>): React.ReactNode {\n        const defaultOnClick = element.getView<NavigationView>().getNavigationHook().hideMenu;\n        const onClick = element.config.onClick || defaultOnClick;\n\n        return (\n            <List className={submenuList}>\n                <ListItem className={submenuItems} data-testid={element.config.testId}>\n                    {element.config.path ? (\n                        <Link\n                            className={linkStyle}\n                            to={element.config.path}\n                            onClick={onClick ? () => onClick(props) : null}\n                        >\n                            {element.config.label}\n                        </Link>\n                    ) : (\n                        <span onClick={onClick ? () => onClick(props) : null} className={linkStyle}>\n                            {element.config.label}\n                        </span>\n                    )}\n                </ListItem>\n            </List>\n        );\n    }\n}\n"],"file":"MenuSectionItemRenderer.js"}