{"version":3,"sources":["../../../../src/plugins/menu/renderers/MenuLinkRenderer.tsx"],"names":["React","Link","ListItem","ListItemGraphic","UIRenderer","Icon","FooterElement","MenuLinkRenderer","element","isInFooter","Boolean","getParentByType","depth","props","defaultOnClick","getView","getNavigationHook","hideMenu","onClick","config","path","testId","icon","label"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,iBAA1C;AACA,SAASC,UAAT;AAGA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,aAAT;AAEA,WAAaC,gBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACI,mBAAUC,OAAV,EAAmD;AAC/C,UAAMC,UAAU,GAAGC,OAAO,CAACF,OAAO,CAACG,eAAR,CAAwBL,aAAxB,CAAD,CAA1B;AACA,aAAOE,OAAO,CAACI,KAAR,KAAkB,CAAlB,IAAuBH,UAA9B;AACH;AAJL;AAAA;AAAA,WAMI,sBAAmF;AAAA,UAA1ED,OAA0E,QAA1EA,OAA0E;AAAA,UAAjEK,KAAiE,QAAjEA,KAAiE;AAC/E,UAAMC,cAAc,GAAGN,OAAO,CAACO,OAAR,GAAkCC,iBAAlC,GAAsDC,QAA7E;AACA,UAAMC,OAAO,GAAGV,OAAO,CAACW,MAAR,CAAeD,OAAf,IAA0BJ,cAA1C;AAEA,0BACI,oBAAC,IAAD;AACI,QAAA,EAAE,EAAEN,OAAO,CAACW,MAAR,CAAeC,IADvB;AAEI,uBAAaZ,OAAO,CAACW,MAAR,CAAeE,MAFhC;AAGI,QAAA,OAAO,EAAEH,OAAO,GAAG;AAAA,iBAAMA,OAAO,CAACL,KAAD,CAAb;AAAA,SAAH,GAA0B;AAH9C,sBAKI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE;AAAlB,SACKL,OAAO,CAACW,MAAR,CAAeG,IAAf,gBACG,oBAAC,eAAD,qBACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEd,OAAO,CAACW,MAAR,CAAeG;AAA3B,QADJ,CADH,GAIG,IALR,EAMKd,OAAO,CAACW,MAAR,CAAeI,KANpB,CALJ,CADJ;AAgBH;AA1BL;;AAAA;AAAA,EAAsCnB,UAAtC","sourcesContent":["import React from \"react\";\nimport { Link } from \"@webiny/react-router\";\nimport { ListItem, ListItemGraphic } from \"@webiny/ui/List\";\nimport { UIRenderer, UIRenderParams } from \"~/ui/UIRenderer\";\nimport { NavigationMenuElement } from \"~/ui/elements/NavigationMenuElement\";\nimport { NavigationView } from \"~/ui/views/NavigationView\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { FooterElement } from \"~/ui/views/NavigationView/FooterElement\";\n\nexport class MenuLinkRenderer extends UIRenderer<NavigationMenuElement> {\n    canRender(element: NavigationMenuElement): boolean {\n        const isInFooter = Boolean(element.getParentByType(FooterElement));\n        return element.depth === 1 && isInFooter;\n    }\n\n    render({ element, props }: UIRenderParams<NavigationMenuElement>): React.ReactNode {\n        const defaultOnClick = element.getView<NavigationView>().getNavigationHook().hideMenu;\n        const onClick = element.config.onClick || defaultOnClick;\n\n        return (\n            <Link\n                to={element.config.path}\n                data-testid={element.config.testId}\n                onClick={onClick ? () => onClick(props) : null}\n            >\n                <ListItem ripple={false}>\n                    {element.config.icon ? (\n                        <ListItemGraphic>\n                            <Icon icon={element.config.icon} />\n                        </ListItemGraphic>\n                    ) : null}\n                    {element.config.label}\n                </ListItem>\n            </Link>\n        );\n    }\n}\n"],"file":"MenuLinkRenderer.js"}