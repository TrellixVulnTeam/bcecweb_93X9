{"version":3,"sources":["../../../../src/plugins/menu/renderers/MenuGroupRenderer.tsx"],"names":["React","Fragment","css","Transition","classNames","UIRenderer","List","ListItem","ListItemGraphic","ListItemMeta","IconButton","ContentElement","Link","defaultStyle","transform","opacity","transitionProperty","transitionTimingFunction","transitionDuration","willChange","transitionStyles","entering","entered","menuTitle","borderBottom","padding","margin","height","width","fontWeight","boxSizing","menuTitleActive","backgroundColor","MenuGroupRenderer","element","isInContent","Boolean","getParentByType","depth","config","path","props","next","hasChildren","getChildren","length","withLink","content","defaultOnClick","getView","getNavigationHook","hideMenu","onClick","testId","menuItem","isExpanded","toggleElement","icon","label","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { css } from \"emotion\";\nimport { Transition } from \"react-transition-group\";\nimport classNames from \"classnames\";\nimport { UIRenderer, UIRenderParams } from \"~/ui/UIRenderer\";\nimport { List, ListItem, ListItemGraphic, ListItemMeta } from \"@webiny/ui/List\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { ReactComponent as UpIcon } from \"~/assets/icons/round-keyboard_arrow_up-24px.svg\";\nimport { ReactComponent as DownIcon } from \"~/assets/icons/round-keyboard_arrow_down-24px.svg\";\nimport { NavigationMenuElement } from \"~/ui/elements/NavigationMenuElement\";\nimport { ContentElement } from \"~/ui/views/NavigationView/ContentElement\";\nimport { NavigationView } from \"~/ui/views/NavigationView\";\nimport { Link } from \"@webiny/react-router\";\n\nconst defaultStyle = {\n    transform: \"translateY(-20px)\",\n    opacity: 0,\n    transitionProperty: \"transform, opacity\",\n    transitionTimingFunction: \"cubic-bezier(0, 0, .2, 1)\",\n    transitionDuration: \"100ms\",\n    willChange: \"opacity, transform\"\n};\n\nconst transitionStyles = {\n    entering: { transform: \"translateY(-20px)\", opacity: 0 },\n    entered: { transform: \"translateY(0px)\", opacity: 1 }\n};\n\nconst menuTitle = css({\n    \".mdc-drawer &.mdc-list\": {\n        borderBottom: \"1px solid var(--mdc-theme-on-background)\",\n        padding: 0,\n        \".mdc-list-item\": {\n            margin: 0,\n            padding: \"0 15px\",\n            height: \"48px\",\n            width: \"100%\",\n            fontWeight: 600,\n            boxSizing: \"border-box\"\n        }\n    }\n});\n\nconst menuTitleActive = css({\n    backgroundColor: \"var(--mdc-theme-background)\"\n});\n\nexport class MenuGroupRenderer extends UIRenderer<NavigationMenuElement> {\n    canRender(element: NavigationMenuElement): boolean {\n        const isInContent = Boolean(element.getParentByType(ContentElement));\n        return element.depth === 1 && isInContent && !element.config.path;\n    }\n\n    render({ element, props, next }: UIRenderParams<NavigationMenuElement>): React.ReactNode {\n        const hasChildren = element.getChildren().length > 0;\n\n        if (!hasChildren) {\n            return null;\n        }\n\n        const withLink = content => {\n            const defaultOnClick = element.getView<NavigationView>().getNavigationHook().hideMenu;\n            const onClick = element.config.onClick || defaultOnClick;\n\n            return (\n                <Link\n                    to={element.config.path}\n                    data-testid={element.config.testId}\n                    onClick={onClick ? () => onClick(props) : null}\n                >\n                    {content}\n                </Link>\n            );\n        };\n\n        const menuItem = (\n            <List className={classNames(menuTitle, { [menuTitleActive]: element.isExpanded })}>\n                <ListItem\n                    data-testid={element.config.testId}\n                    onClick={() => {\n                        if (typeof element.config.onClick === \"function\") {\n                            element.config.onClick(() => element.toggleElement());\n                        } else {\n                            element.toggleElement();\n                        }\n                    }}\n                >\n                    {element.config.icon && (\n                        <ListItemGraphic>\n                            <IconButton icon={element.config.icon} />\n                        </ListItemGraphic>\n                    )}\n\n                    {element.config.label}\n\n                    {hasChildren ? (\n                        <ListItemMeta>\n                            <IconButton icon={element.isExpanded ? <UpIcon /> : <DownIcon />} />\n                        </ListItemMeta>\n                    ) : null}\n                </ListItem>\n            </List>\n        );\n\n        return (\n            <Fragment>\n                {element.config.path ? withLink(menuItem) : menuItem}\n                {hasChildren ? (\n                    <Transition in={element.isExpanded} timeout={100} appear unmountOnExit>\n                        {state => (\n                            <div style={{ ...defaultStyle, ...transitionStyles[state] }}>\n                                {next()}\n                            </div>\n                        )}\n                    </Transition>\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n"],"file":"MenuGroupRenderer.js"}