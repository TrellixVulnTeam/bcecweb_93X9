{"version":3,"sources":["../../src/plugins/FileManagerFileTypePlugin.tsx"],"names":["Plugin","FileManagerFileTypePlugin","config","types","actions","params","render"],"mappings":";;;;;;AACA,SAASA,MAAT,QAAuB,iBAAvB;AA2BA,WAAaC,yBAAb;AAAA;;AAAA;;AAII,qCAAYC,MAAZ,EAA6B;AAAA;;AAAA;;AACzB;;AADyB;;AAEzB,UAAKA,MAAL,GAAcA,MAAM,IAAI,EAAxB;AAFyB;AAG5B;;AAPL;AAAA;AAAA,SASI,eAAY;AACR,aAAO,KAAKA,MAAL,CAAYC,KAAZ,IAAqB,EAA5B;AACH;AAXL;AAAA;AAAA,SAaI,eAAc;AACV,aAAO,KAAKD,MAAL,CAAYE,OAAZ,IAAuB,EAA9B;AACH;AAfL;AAAA;AAAA,WAiBI,gBAAOC,MAAP,EAA8C;AAC1C,aAAO,KAAKH,MAAL,CAAYI,MAAZ,CAAmBD,MAAnB,CAAP;AACH;AAnBL;;AAAA;AAAA,EAA+CL,MAA/C;;gBAAaC,yB,UACqB,8B","sourcesContent":["import * as React from \"react\";\nimport { Plugin } from \"@webiny/plugins\";\n\ninterface File {\n    id: string;\n    name: string;\n    key: string;\n    src: string;\n    size: number;\n    type: string;\n    tags: string[];\n    createdOn: string;\n    createdBy: {\n        id: string;\n    };\n    [key: string]: any;\n}\n\nexport interface RenderParams {\n    file: File;\n}\n\ninterface Config {\n    types: string[];\n    actions?: React.ComponentType<any>[];\n    render(params: RenderParams): React.ReactNode;\n}\n\nexport class FileManagerFileTypePlugin extends Plugin {\n    public static readonly type = \"admin-file-manager-file-type\";\n    private config: Partial<Config>;\n\n    constructor(config?: Config) {\n        super();\n        this.config = config || {};\n    }\n\n    get types() {\n        return this.config.types || [];\n    }\n\n    get actions() {\n        return this.config.actions || [];\n    }\n\n    render(params: RenderParams): React.ReactNode {\n        return this.config.render(params);\n    }\n}\n"],"file":"FileManagerFileTypePlugin.js"}