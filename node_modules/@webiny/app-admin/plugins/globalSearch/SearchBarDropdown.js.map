{"version":3,"sources":["../../../src/plugins/globalSearch/SearchBarDropdown.tsx"],"names":["React","classnames","List","ListItem","ListItemGraphic","ListItemText","ListItemMeta","searchBarDropdown","iconSearchType","Elevation","Icon","SearchBarDropdown","props","context","downshift","current","plugins","state","selectItem","setHighlightedIndex","list","indexOf","openMenu","submitSearchTerm","searchTerm","getMenuProps","getItemProps","selectedItem","highlightedIndex","map","item","index","itemClassNames","highlighted","selected","route","className","onClick","label","Component"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,eAAzB,EAA0CC,YAA1C,EAAwDC,YAAxD,QAA4E,iBAA5E;AACA,SAASC,iBAAT,EAA4BC,cAA5B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,IAAT,QAAqB,iBAArB;;;IAIqBC,iB;;;;;;;;;;;;;WACjB,6BAAoB;AAChB,gCAKI,KAAKC,KALT,CACIC,OADJ;AAAA,UAE8BC,SAF9B,uBAEQA,SAFR,CAEqBC,OAFrB;AAAA,UAGiBC,OAHjB,uBAGQC,KAHR,CAGiBD,OAHjB;AAOAF,MAAAA,SAAS,CAACI,UAAV,CAAqBF,OAAO,CAACD,OAA7B;AACAD,MAAAA,SAAS,CAACK,mBAAV,CAA8BH,OAAO,CAACI,IAAR,CAAaC,OAAb,CAAqBL,OAAO,CAACD,OAA7B,CAA9B;AACAD,MAAAA,SAAS,CAACQ,QAAV;AACH;;;WAED,kBAAS;AACL,iCAMI,KAAKV,KANT,CACIC,OADJ;AAAA,UAE8BC,SAF9B,wBAEQA,SAFR,CAEqBC,OAFrB;AAAA,UAGQQ,gBAHR,wBAGQA,gBAHR;AAAA,uDAIQN,KAJR;AAAA,UAIiBD,OAJjB,yBAIiBA,OAJjB;AAAA,UAI0BQ,UAJ1B,yBAI0BA,UAJ1B;AAQA,UACIC,YADJ,GAIIX,SAJJ,CACIW,YADJ;AAAA,UAEIC,YAFJ,GAIIZ,SAJJ,CAEIY,YAFJ;AAAA,6BAIIZ,SAJJ,CAGIG,KAHJ;AAAA,UAGaU,YAHb,oBAGaA,YAHb;AAAA,UAG2BC,gBAH3B,oBAG2BA,gBAH3B;AAMA,0BACI,oBAAC,SAAD;AAAW,QAAA,CAAC,EAAE,CAAd;AAAiB,QAAA,SAAS,EAAErB;AAA5B,sBACI,oBAAC,IAAD,EAAUkB,YAAY,EAAtB,EACKT,OAAO,CAACI,IAAR,CAAaS,GAAb,CAAiB,UAACC,IAAD,EAAgCC,KAAhC,EAA0C;AACxD;AACA,YAAMC,cAAc,GAAG;AACnBC,UAAAA,WAAW,EAAEL,gBAAgB,KAAKG,KADf;AAEnBG,UAAAA,QAAQ,EAAE;AAFS,SAAvB,CAFwD,CAOxD;;AACA,YAAIP,YAAY,IAAIA,YAAY,KAAKG,IAArC,EAA2C;AACvCE,UAAAA,cAAc,CAACE,QAAf,GAA0B,IAA1B;AACH;;AAED,4BACI,oBAAC,QAAD;AACI,UAAA,GAAG,EAAEJ,IAAI,CAACK;AADd,WAEQT,YAAY,CAAC;AACbK,UAAAA,KAAK,EAALA,KADa;AAEbD,UAAAA,IAAI,EAAJA,IAFa;AAGbM,UAAAA,SAAS,EAAEnC,UAAU,CAAC+B,cAAD,CAHR;AAIbK,UAAAA,OAAO,EAAE;AAAA,mBAAMd,gBAAgB,CAACO,IAAD,CAAtB;AAAA;AAJI,SAAD,CAFpB,gBASI,oBAAC,eAAD,qBACI,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAEtB,cAAjB;AAAiC,UAAA,IAAI,eAAE,oBAAC,UAAD;AAAvC,UADJ,CATJ,eAYI,oBAAC,YAAD,QACKgB,UAAU,CAACT,OAAX,IAAsB,mBAD3B,CAZJ,eAeI,oBAAC,YAAD,eAAkBe,IAAI,CAACQ,KAAvB,CAfJ,CADJ;AAmBH,OA/BA,CADL,CADJ,CADJ;AAsCH;;;;EAnE0CtC,KAAK,CAACuC,S;;SAAhC5B,iB","sourcesContent":["import * as React from \"react\";\nimport { AdminGlobalSearchPlugin } from \"../../types\";\nimport classnames from \"classnames\";\nimport { List, ListItem, ListItemGraphic, ListItemText, ListItemMeta } from \"@webiny/ui/List\";\nimport { searchBarDropdown, iconSearchType } from \"./styled\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { Icon } from \"@webiny/ui/Icon\";\n\nimport { ReactComponent as SearchIcon } from \"./icons/round-search-24px.svg\";\n\nexport default class SearchBarDropdown extends React.Component<any> {\n    componentDidMount() {\n        const {\n            context: {\n                downshift: { current: downshift },\n                state: { plugins }\n            }\n        } = this.props;\n\n        downshift.selectItem(plugins.current);\n        downshift.setHighlightedIndex(plugins.list.indexOf(plugins.current));\n        downshift.openMenu();\n    }\n\n    render() {\n        const {\n            context: {\n                downshift: { current: downshift },\n                submitSearchTerm,\n                state: { plugins, searchTerm }\n            }\n        } = this.props;\n\n        const {\n            getMenuProps,\n            getItemProps,\n            state: { selectedItem, highlightedIndex }\n        } = downshift;\n\n        return (\n            <Elevation z={2} className={searchBarDropdown}>\n                <List {...getMenuProps()}>\n                    {plugins.list.map((item: AdminGlobalSearchPlugin, index) => {\n                        // Base classes.\n                        const itemClassNames = {\n                            highlighted: highlightedIndex === index,\n                            selected: false\n                        };\n\n                        // Add \"selected\" class if the item is selected.\n                        if (selectedItem && selectedItem === item) {\n                            itemClassNames.selected = true;\n                        }\n\n                        return (\n                            <ListItem\n                                key={item.route}\n                                {...getItemProps({\n                                    index,\n                                    item,\n                                    className: classnames(itemClassNames),\n                                    onClick: () => submitSearchTerm(item)\n                                })}\n                            >\n                                <ListItemGraphic>\n                                    <Icon className={iconSearchType} icon={<SearchIcon />} />\n                                </ListItemGraphic>\n                                <ListItemText>\n                                    {searchTerm.current || \"Search for all...\"}\n                                </ListItemText>\n                                <ListItemMeta>in {item.label}</ListItemMeta>\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </Elevation>\n        );\n    }\n}\n"],"file":"SearchBarDropdown.js"}