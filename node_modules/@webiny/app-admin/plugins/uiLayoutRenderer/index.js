import React, { Fragment } from "react";
import { Cell, Grid, GridInner } from "@webiny/ui/Grid";
import { UILayoutPlugin } from "../../ui/UILayout";

function getElementKey(element) {
  return "".concat(element.constructor.name, ":").concat(element.id);
}

var ElementID = function ElementID(_ref) {
  var children = _ref.children;
  return children;
};

export default new UILayoutPlugin(function (layout) {
  layout.setRenderer(function (_ref2) {
    var layout = _ref2.layout,
        props = _ref2.props,
        hasParentGrid = _ref2.hasParentGrid;

    if (!layout.getGrid()) {
      return /*#__PURE__*/React.createElement(Fragment, null, layout.getLayout().map(function (row, index) {
        return /*#__PURE__*/React.createElement(Fragment, {
          key: index
        }, row.map(function (item) {
          var element = layout.getElement(item.element);

          if (!element) {
            console.warn("Element \"".concat(item.element, "\" was not found!"));
            return null;
          }

          if (!element.shouldRender(props)) {
            return null;
          }

          return /*#__PURE__*/React.createElement(ElementID, {
            key: getElementKey(element)
          }, element.render(props));
        }));
      }));
    }

    var GridComponent = hasParentGrid ? GridInner : Grid;
    return /*#__PURE__*/React.createElement(GridComponent, null, layout.getLayout().map(function (row, index) {
      return /*#__PURE__*/React.createElement(Fragment, {
        key: index
      }, row.map(function (item) {
        var element = layout.getElement(item.element);

        if (!element.shouldRender(props)) {
          return null;
        }

        return /*#__PURE__*/React.createElement(Cell, {
          key: item.element,
          span: item.width
        }, /*#__PURE__*/React.createElement(ElementID, {
          key: getElementKey(element)
        }, element.render(props)));
      }));
    }));
  });
});
//# sourceMappingURL=index.js.map