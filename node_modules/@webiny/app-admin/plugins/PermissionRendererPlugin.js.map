{"version":3,"sources":["../../src/plugins/PermissionRendererPlugin.ts"],"names":["Plugin","PermissionRendererPlugin","config","_config","Boolean","system","props","render"],"mappings":";;;;;;AACA,SAASA,MAAT,QAAuB,iBAAvB;AAiBA,WAAaC,wBAAb;AAAA;;AAAA;;AAII,oCAAYC,MAAZ,EAA6B;AAAA;;AAAA;;AACzB;;AADyB;;AAEzB,UAAKC,OAAL,GAAeD,MAAM,IAAI,EAAzB;AAFyB;AAG5B;;AAPL;AAAA;AAAA,SASI,eAAa;AACT,aAAOE,OAAO,CAAC,KAAKD,OAAL,CAAaE,MAAd,CAAd;AACH;AAXL;AAAA;AAAA,WAaI,gBAAOC,KAAP,EAAgD;AAC5C,aAAO,KAAKH,OAAL,CAAaI,MAAb,CAAoBD,KAApB,CAAP;AACH;AAfL;;AAAA;AAAA,EAA8CN,MAA9C;;gBAAaC,wB,UACqB,gC","sourcesContent":["import * as React from \"react\";\nimport { Plugin } from \"@webiny/plugins\";\n\ninterface Permission {\n    name: string;\n    [key: string]: any;\n}\n\ninterface RenderParams {\n    value: Permission[];\n    onChange: (value: Permission[]) => void;\n}\n\ninterface Config {\n    render(props: RenderParams): React.ReactElement;\n    system?: boolean;\n}\n\nexport class PermissionRendererPlugin extends Plugin {\n    public static readonly type = \"admin-app-permissions-renderer\";\n    private _config: Partial<Config>;\n\n    constructor(config?: Config) {\n        super();\n        this._config = config || {};\n    }\n\n    get system() {\n        return Boolean(this._config.system);\n    }\n\n    render(props: RenderParams): React.ReactElement {\n        return this._config.render(props);\n    }\n}\n"],"file":"PermissionRendererPlugin.js"}