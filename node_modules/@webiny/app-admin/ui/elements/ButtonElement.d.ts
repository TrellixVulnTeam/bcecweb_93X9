import React from "react";
import { UIElement, UIElementConfig } from "../UIElement";
export declare type ButtonElementType = "default" | "primary" | "secondary";
export interface ButtonOnClick<TRenderProps = any> {
    (props: TRenderProps): void;
}
interface GetterWithProps<TProps, TReturn> {
    (props: TProps): TReturn;
}
export interface ButtonElementConfig<TRenderProps> extends UIElementConfig {
    type: ButtonElementType | GetterWithProps<TRenderProps, ButtonElementType>;
    label: string | GetterWithProps<TRenderProps, string>;
    onClick: ButtonOnClick<TRenderProps>;
}
export declare class ButtonElement<TRenderProps = any> extends UIElement<ButtonElementConfig<TRenderProps>> {
    setLabel<TProps extends TRenderProps = TRenderProps>(label: string | GetterWithProps<TProps, string>): void;
    getLabel(props?: any): string;
    setType(type: ButtonElementType): void;
    getType(props?: any): ButtonElementType;
    setOnClick(onClick: ButtonOnClick<TRenderProps>): void;
    getOnClick(): ButtonOnClick<TRenderProps>;
    render(props: any): React.ReactElement;
}
export {};
