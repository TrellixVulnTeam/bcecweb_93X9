import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import React from "react";
import { ButtonDefault, ButtonPrimary, ButtonSecondary } from "@webiny/ui/Button";
import { UIElement } from "../UIElement";
var BUTTONS = {
  default: ButtonDefault,
  primary: ButtonPrimary,
  secondary: ButtonSecondary
};
export var ButtonElement = /*#__PURE__*/function (_UIElement) {
  _inherits(ButtonElement, _UIElement);

  var _super = _createSuper(ButtonElement);

  function ButtonElement() {
    _classCallCheck(this, ButtonElement);

    return _super.apply(this, arguments);
  }

  _createClass(ButtonElement, [{
    key: "setLabel",
    value: function setLabel(label) {
      this.config.label = label;
    }
  }, {
    key: "getLabel",
    value: function getLabel(props) {
      if (typeof this.config.label === "function") {
        return this.config.label(props);
      }

      return this.config.label;
    }
  }, {
    key: "setType",
    value: function setType(type) {
      this.config.type = type;
    }
  }, {
    key: "getType",
    value: function getType(props) {
      if (typeof this.config.type === "function") {
        return this.config.type(props);
      }

      return this.config.type;
    }
  }, {
    key: "setOnClick",
    value: function setOnClick(onClick) {
      this.config.onClick = onClick;
    }
  }, {
    key: "getOnClick",
    value: function getOnClick() {
      return this.config.onClick;
    }
  }, {
    key: "render",
    value: function render(props) {
      var Component = BUTTONS[this.getType(props)];

      var _onClick = this.getOnClick();

      return /*#__PURE__*/React.createElement(Component, {
        onClick: function onClick() {
          return _onClick(props);
        }
      }, this.getLabel(props));
    }
  }]);

  return ButtonElement;
}(UIElement);
//# sourceMappingURL=ButtonElement.js.map