{"version":3,"sources":["../../../src/ui/elements/AccordionElement.tsx"],"names":["React","UIElement","Accordion","AccordionItem","AccordionItemElement","id","config","title","description","props","open","rest","isOpened","AccordionElement","useGrid","items","forEach","item","addElement","getElement"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,sBAAzC;AAcA,WAAaC,oBAAb;AAAA;;AAAA;;AACI,gCAAYC,EAAZ,EAAgBC,MAAhB,EAA8B;AAAA;;AAAA,6BACpBD,EADoB,EAChBC,MADgB;AAE7B;;AAHL;AAAA;AAAA,WAKI,kBAASC,KAAT,EAAwB;AACpB,WAAKD,MAAL,CAAYC,KAAZ,GAAoBA,KAApB;AACH;AAPL;AAAA;AAAA,WASI,wBAAeC,WAAf,EAAoC;AAChC,WAAKF,MAAL,CAAYE,WAAZ,GAA0BA,WAA1B;AACH;AAXL;AAAA;AAAA,WAaI,gBAAOC,KAAP,EAAc;AACV,yBAA0B,KAAKH,MAA/B;AAAA,UAAQI,IAAR,gBAAQA,IAAR;AAAA,UAAiBC,IAAjB;;AACA,UAAMC,QAAQ,GAAG,OAAOF,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAACD,KAAD,CAAjC,GAA2CC,IAA5D;AACA,0BACI,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAEE;AAArB,SAAmCD,IAAnC,oFACkBF,KADlB,EADJ;AAKH;AArBL;;AAAA;AAAA,EAA0CR,SAA1C;AA4BA,WAAaY,gBAAb;AAAA;;AAAA;;AACI,4BAAYR,EAAZ,EAAgBC,MAAhB,EAAgC;AAAA;;AAAA;;AAC5B,+BAAMD,EAAN,EAAUC,MAAV;;AAEA,UAAKQ,OAAL,CAAa,KAAb;;AAEA,UAAKR,MAAL,CAAYS,KAAZ,CAAkBC,OAAlB,CAA0B,UAAAC,IAAI,EAAI;AAC9B,YAAKC,UAAL,CAAgB,IAAId,oBAAJ,CAAyBa,IAAI,CAACZ,EAA9B,EAAkCY,IAAlC,CAAhB;AACH,KAFD;;AAL4B;AAQ/B;;AATL;AAAA;AAAA,WAWI,iCAAwBZ,EAAxB,EAA0D;AACtD,aAAO,KAAKc,UAAL,CAAgBd,EAAhB,CAAP;AACH;AAbL;AAAA;AAAA,WAeI,gBAAOI,KAAP,EAAc;AACV;AACA,0BAAO,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAE;AAAtB,sFAAuCA,KAAvC,EAAP;AACH;AAlBL;;AAAA;AAAA,EAAsCR,SAAtC","sourcesContent":["import React from \"react\";\nimport { UIElement, UIElementConfig } from \"~/ui/UIElement\";\nimport { Accordion, AccordionItem } from \"@webiny/ui/Accordion\";\n\ninterface GetterWithProps<TProps, T> {\n    (props: TProps): T;\n}\n\ninterface Item<TProps = any> extends UIElementConfig {\n    id: string;\n    title: string;\n    description: string;\n    icon: React.ReactElement;\n    open?: boolean | GetterWithProps<TProps, boolean>;\n}\n\nexport class AccordionItemElement extends UIElement<Item> {\n    constructor(id, config: Item) {\n        super(id, config);\n    }\n\n    setTitle(title: string) {\n        this.config.title = title;\n    }\n\n    setDescription(description: string) {\n        this.config.description = description;\n    }\n\n    render(props) {\n        const { open, ...rest } = this.config;\n        const isOpened = typeof open === \"function\" ? open(props) : open;\n        return (\n            <AccordionItem open={isOpened} {...rest}>\n                {super.render(props)}\n            </AccordionItem>\n        );\n    }\n}\n\ninterface Config extends UIElementConfig {\n    items: Item[];\n}\n\nexport class AccordionElement extends UIElement<Config> {\n    constructor(id, config: Config) {\n        super(id, config);\n\n        this.useGrid(false);\n\n        this.config.items.forEach(item => {\n            this.addElement(new AccordionItemElement(item.id, item));\n        });\n    }\n\n    getAccordionItemElement(id: string): AccordionItemElement {\n        return this.getElement(id);\n    }\n\n    render(props) {\n        // @ts-ignore\n        return <Accordion elevation={0}>{super.render(props)}</Accordion>;\n    }\n}\n"],"file":"AccordionElement.js"}