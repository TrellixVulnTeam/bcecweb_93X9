import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _get from "@babel/runtime/helpers/get";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import React from "react";
import { UIElement } from "../UIElement";
import { Typography } from "@webiny/ui/Typography";
export var TypographyElement = /*#__PURE__*/function (_UIElement) {
  _inherits(TypographyElement, _UIElement);

  var _super = _createSuper(TypographyElement);

  function TypographyElement(id, config) {
    var _this;

    _classCallCheck(this, TypographyElement);

    _this = _super.call(this, id, config);

    _this.useGrid(false);

    _this.applyPlugins(TypographyElement);

    return _this;
  }

  _createClass(TypographyElement, [{
    key: "getTypography",
    value: function getTypography() {
      return this.config.typography;
    }
  }, {
    key: "setTypography",
    value: function setTypography(typography) {
      this.config.typography = typography;
    }
  }, {
    key: "render",
    value: function render(props) {
      return /*#__PURE__*/React.createElement(Typography, {
        use: this.getTypography()
      }, _get(_getPrototypeOf(TypographyElement.prototype), "render", this).call(this, props));
    }
  }]);

  return TypographyElement;
}(UIElement);
//# sourceMappingURL=TypographyElement.js.map