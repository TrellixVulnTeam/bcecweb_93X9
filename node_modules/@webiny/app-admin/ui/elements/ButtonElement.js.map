{"version":3,"sources":["../../../src/ui/elements/ButtonElement.tsx"],"names":["React","ButtonDefault","ButtonPrimary","ButtonSecondary","UIElement","BUTTONS","default","primary","secondary","ButtonElement","label","config","props","type","onClick","Component","getType","getOnClick","getLabel"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,eAAvC,QAA8D,mBAA9D;AACA,SAASC,SAAT;AAkBA,IAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAEL,aADG;AAEZM,EAAAA,OAAO,EAAEL,aAFG;AAGZM,EAAAA,SAAS,EAAEL;AAHC,CAAhB;AAMA,WAAaM,aAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAGI,kBACIC,KADJ,EAEE;AACE,WAAKC,MAAL,CAAYD,KAAZ,GAAoBA,KAApB;AACH;AAPL;AAAA;AAAA,WASI,kBAASE,KAAT,EAAsB;AAClB,UAAI,OAAO,KAAKD,MAAL,CAAYD,KAAnB,KAA6B,UAAjC,EAA6C;AACzC,eAAO,KAAKC,MAAL,CAAYD,KAAZ,CAAkBE,KAAlB,CAAP;AACH;;AACD,aAAO,KAAKD,MAAL,CAAYD,KAAnB;AACH;AAdL;AAAA;AAAA,WAgBI,iBAAQG,IAAR,EAAiC;AAC7B,WAAKF,MAAL,CAAYE,IAAZ,GAAmBA,IAAnB;AACH;AAlBL;AAAA;AAAA,WAoBI,iBAAQD,KAAR,EAAqB;AACjB,UAAI,OAAO,KAAKD,MAAL,CAAYE,IAAnB,KAA4B,UAAhC,EAA4C;AACxC,eAAO,KAAKF,MAAL,CAAYE,IAAZ,CAAiBD,KAAjB,CAAP;AACH;;AACD,aAAO,KAAKD,MAAL,CAAYE,IAAnB;AACH;AAzBL;AAAA;AAAA,WA2BI,oBAAWC,OAAX,EAAiD;AAC7C,WAAKH,MAAL,CAAYG,OAAZ,GAAsBA,OAAtB;AACH;AA7BL;AAAA;AAAA,WA+BI,sBAAa;AACT,aAAO,KAAKH,MAAL,CAAYG,OAAnB;AACH;AAjCL;AAAA;AAAA,WAmCI,gBAAOF,KAAP,EAAkC;AAC9B,UAAMG,SAAS,GAAGV,OAAO,CAAC,KAAKW,OAAL,CAAaJ,KAAb,CAAD,CAAzB;;AACA,UAAME,QAAO,GAAG,KAAKG,UAAL,EAAhB;;AAEA,0BAAO,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAE;AAAA,iBAAMH,QAAO,CAACF,KAAD,CAAb;AAAA;AAApB,SAA2C,KAAKM,QAAL,CAAcN,KAAd,CAA3C,CAAP;AACH;AAxCL;;AAAA;AAAA,EAAuDR,SAAvD","sourcesContent":["import React from \"react\";\nimport { ButtonDefault, ButtonPrimary, ButtonSecondary } from \"@webiny/ui/Button\";\nimport { UIElement, UIElementConfig } from \"../UIElement\";\n\nexport type ButtonElementType = \"default\" | \"primary\" | \"secondary\";\n\nexport interface ButtonOnClick<TRenderProps = any> {\n    (props: TRenderProps): void;\n}\n\ninterface GetterWithProps<TProps, TReturn> {\n    (props: TProps): TReturn;\n}\n\nexport interface ButtonElementConfig<TRenderProps> extends UIElementConfig {\n    type: ButtonElementType | GetterWithProps<TRenderProps, ButtonElementType>;\n    label: string | GetterWithProps<TRenderProps, string>;\n    onClick: ButtonOnClick<TRenderProps>;\n}\n\nconst BUTTONS = {\n    default: ButtonDefault,\n    primary: ButtonPrimary,\n    secondary: ButtonSecondary\n};\n\nexport class ButtonElement<TRenderProps = any> extends UIElement<\n    ButtonElementConfig<TRenderProps>\n> {\n    setLabel<TProps extends TRenderProps = TRenderProps>(\n        label: string | GetterWithProps<TProps, string>\n    ) {\n        this.config.label = label;\n    }\n\n    getLabel(props?: any) {\n        if (typeof this.config.label === \"function\") {\n            return this.config.label(props);\n        }\n        return this.config.label;\n    }\n\n    setType(type: ButtonElementType) {\n        this.config.type = type;\n    }\n\n    getType(props?: any) {\n        if (typeof this.config.type === \"function\") {\n            return this.config.type(props);\n        }\n        return this.config.type;\n    }\n\n    setOnClick(onClick: ButtonOnClick<TRenderProps>) {\n        this.config.onClick = onClick;\n    }\n\n    getOnClick() {\n        return this.config.onClick;\n    }\n\n    render(props): React.ReactElement {\n        const Component = BUTTONS[this.getType(props)];\n        const onClick = this.getOnClick();\n\n        return <Component onClick={() => onClick(props)}>{this.getLabel(props)}</Component>;\n    }\n}\n"],"file":"ButtonElement.js"}