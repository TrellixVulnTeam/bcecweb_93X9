{"version":3,"sources":["../../../../src/ui/elements/form/TextareaElement.tsx"],"names":["React","Input","FormFieldElement","TextareaElement","id","config","applyPlugins","rows","props","formProps","Error","Bind","getName","getValidators","getLabel","getIsDisabled","getRows","getDescription"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,gBAAT;AAUA,WAAaC,eAAb;AAAA;;AAAA;;AACI,2BAAYC,EAAZ,EAAwBC,MAAxB,EAAuD;AAAA;;AAAA;;AACnD,8BAAMD,EAAN,EAAUC,MAAV;;AAEA,UAAKC,YAAL,CAAkBH,eAAlB;;AAHmD;AAItD;;AALL;AAAA;AAAA,WAOI,iBAAQI,IAAR,EAAsB;AAClB,WAAKF,MAAL,CAAYE,IAAZ,GAAmBA,IAAnB;AACH;AATL;AAAA;AAAA,WAWI,mBAAU;AACN,aAAO,KAAKF,MAAL,CAAYE,IAAnB;AACH;AAbL;AAAA;AAAA,WAeI,gBAAOC,KAAP,EAA2D;AACvD,UAAI,CAACA,KAAK,CAACC,SAAX,EAAsB;AAClB,cAAMC,KAAK,2DAAX;AACH;;AAED,UAAQC,IAAR,GAAiBH,KAAK,CAACC,SAAvB,CAAQE,IAAR;AAEA,0BACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKC,OAAL,EAAZ;AAA4B,QAAA,UAAU,EAAE,KAAKC,aAAL,CAAmBL,KAAnB;AAAxC,sBACI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAE,KAAKM,QAAL,CAAcN,KAAd,CADX;AAEI,QAAA,QAAQ,EAAE,KAAKO,aAAL,CAAmBP,KAAnB,CAFd;AAGI,QAAA,IAAI,EAAE,KAAKQ,OAAL,EAHV;AAII,QAAA,WAAW,EAAE,KAAKC,cAAL,CAAoBT,KAApB;AAJjB,QADJ,CADJ;AAUH;AAhCL;;AAAA;AAAA,EAAqCN,gBAArC","sourcesContent":["import React from \"react\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { FormRenderPropParams } from \"@webiny/form\";\nimport { FormFieldElement, FormFieldElementConfig } from \"~/ui/elements/form/FormFieldElement\";\n\nexport interface TextareaElementRenderProps {\n    formProps: FormRenderPropParams;\n}\n\nexport interface TextareaElementConfig extends FormFieldElementConfig {\n    rows: number;\n}\n\nexport class TextareaElement extends FormFieldElement<TextareaElementConfig> {\n    constructor(id: string, config: TextareaElementConfig) {\n        super(id, config);\n\n        this.applyPlugins(TextareaElement);\n    }\n\n    setRows(rows: number) {\n        this.config.rows = rows;\n    }\n\n    getRows() {\n        return this.config.rows;\n    }\n\n    render(props: TextareaElementRenderProps): React.ReactNode {\n        if (!props.formProps) {\n            throw Error(`TextareaElement must be placed inside of a FormElement.`);\n        }\n\n        const { Bind } = props.formProps;\n\n        return (\n            <Bind name={this.getName()} validators={this.getValidators(props)}>\n                <Input\n                    label={this.getLabel(props)}\n                    disabled={this.getIsDisabled(props)}\n                    rows={this.getRows()}\n                    description={this.getDescription(props)}\n                />\n            </Bind>\n        );\n    }\n}\n"],"file":"TextareaElement.js"}