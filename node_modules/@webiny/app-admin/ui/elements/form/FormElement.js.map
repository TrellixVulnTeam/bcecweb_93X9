{"version":3,"sources":["../../../../src/ui/elements/form/FormElement.tsx"],"names":["React","Fragment","Form","UIElement","FormElement","id","config","useGrid","props","onSubmit","getData","formProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAyD,cAAzD;AACA,SAASC,SAAT;AAiBA,WAAaC,WAAb;AAAA;;AAAA;;AACI,uBAAYC,EAAZ,EAAgBC,MAAhB,EAAwB;AAAA;;AAAA;;AACpB,8BAAMD,EAAN,EAAUC,MAAV;;AAEA,UAAKC,OAAL,CAAa,KAAb;;AAHoB;AAIvB;;AALL;AAAA;AAAA,WAOI,gBAAOC,KAAP,EAAc;AAAA;;AACV,0BACI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKF,MAAL,CAAYG,QAA5B;AAAsC,QAAA,IAAI,EAAE,KAAKH,MAAL,CAAYI,OAAZ;AAA5C,SACK,UAAAC,SAAS;AAAA,4BAAI,oBAAC,QAAD,oHAA6BH,KAA7B;AAAoCG,UAAAA,SAAS,EAATA;AAApC,YAAJ;AAAA,OADd,CADJ;AAKH;AAbL;;AAAA;AAAA,EAAiCR,SAAjC","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Form, FormOnSubmit, FormRenderPropParams } from \"@webiny/form\";\nimport { UIElement, UIElementConfig } from \"~/ui/UIElement\";\n\ninterface FormElementConfig extends UIElementConfig {\n    onSubmit: FormOnSubmit;\n    getData(): Record<string, any>;\n    getInvalidFields?(): Record<string, any>;\n    isDisabled?(): boolean;\n    onChange?: FormOnSubmit;\n    onInvalid?: () => void;\n    submitOnEnter?: boolean;\n    validateOnFirstSubmit?: boolean;\n}\n\nexport interface FormElementRenderProps {\n    formProps: FormRenderPropParams;\n}\n\nexport class FormElement extends UIElement<FormElementConfig> {\n    constructor(id, config) {\n        super(id, config);\n\n        this.useGrid(false);\n    }\n\n    render(props) {\n        return (\n            <Form onSubmit={this.config.onSubmit} data={this.config.getData()}>\n                {formProps => <Fragment>{super.render({ ...props, formProps })}</Fragment>}\n            </Form>\n        );\n    }\n}\n"],"file":"FormElement.js"}