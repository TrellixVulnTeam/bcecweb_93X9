import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import React from "react";
import { Input } from "@webiny/ui/Input";
import { FormFieldElement } from "./FormFieldElement";
export var TextareaElement = /*#__PURE__*/function (_FormFieldElement) {
  _inherits(TextareaElement, _FormFieldElement);

  var _super = _createSuper(TextareaElement);

  function TextareaElement(id, config) {
    var _this;

    _classCallCheck(this, TextareaElement);

    _this = _super.call(this, id, config);

    _this.applyPlugins(TextareaElement);

    return _this;
  }

  _createClass(TextareaElement, [{
    key: "setRows",
    value: function setRows(rows) {
      this.config.rows = rows;
    }
  }, {
    key: "getRows",
    value: function getRows() {
      return this.config.rows;
    }
  }, {
    key: "render",
    value: function render(props) {
      if (!props.formProps) {
        throw Error("TextareaElement must be placed inside of a FormElement.");
      }

      var Bind = props.formProps.Bind;
      return /*#__PURE__*/React.createElement(Bind, {
        name: this.getName(),
        validators: this.getValidators(props)
      }, /*#__PURE__*/React.createElement(Input, {
        label: this.getLabel(props),
        disabled: this.getIsDisabled(props),
        rows: this.getRows(),
        description: this.getDescription(props)
      }));
    }
  }]);

  return TextareaElement;
}(FormFieldElement);
//# sourceMappingURL=TextareaElement.js.map