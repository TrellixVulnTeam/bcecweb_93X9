import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { FormFieldElement } from "./FormFieldElement";
import { FileManagerElementRenderer } from "./FileManagerElement/FileManagerElementRenderer";
import { EmptyStateElement } from "./FileManagerElement/EmptyStateElement";
export var FileManagerElement = /*#__PURE__*/function (_FormFieldElement) {
  _inherits(FileManagerElement, _FormFieldElement);

  var _super = _createSuper(FileManagerElement);

  function FileManagerElement(id, config) {
    var _this;

    _classCallCheck(this, FileManagerElement);

    _this = _super.call(this, id, config);

    _defineProperty(_assertThisInitialized(_this), "_emptyStateElement", void 0);

    _this.addRenderer(new FileManagerElementRenderer());

    _this._emptyStateElement = new EmptyStateElement("emptyState");

    _this.applyPlugins(FileManagerElement);

    return _this;
  }

  _createClass(FileManagerElement, [{
    key: "getEmptyStateElement",
    value: function getEmptyStateElement() {
      return this._emptyStateElement;
    }
  }, {
    key: "getAccept",
    value: function getAccept() {
      return this.config.accept;
    }
  }, {
    key: "setAccept",
    value: function setAccept(accept) {
      this.config.accept = accept;
    }
  }, {
    key: "getMaxSize",
    value: function getMaxSize() {
      return this.config.maxSize;
    }
  }, {
    key: "setMaxSize",
    value: function setMaxSize(maxSize) {
      this.config.maxSize = maxSize;
    }
  }, {
    key: "getMultipleMaxCount",
    value: function getMultipleMaxCount() {
      return this.config.multipleMaxCount;
    }
  }, {
    key: "setMultipleMaxCount",
    value: function setMultipleMaxCount(multipleMaxCount) {
      this.config.multipleMaxCount = multipleMaxCount;
    }
  }, {
    key: "getMultipleMaxSize",
    value: function getMultipleMaxSize() {
      return this.config.multipleMaxSize;
    }
  }, {
    key: "setMultipleMaxSize",
    value: function setMultipleMaxSize(multipleMaxSize) {
      this.config.multipleMaxSize = multipleMaxSize;
    }
  }, {
    key: "getOnChangePickAttributes",
    value: function getOnChangePickAttributes() {
      return this.config.onChangePickAttributes;
    }
  }, {
    key: "setOnChangePickAttributes",
    value: function setOnChangePickAttributes(attributes) {
      this.config.onChangePickAttributes = attributes;
    }
  }]);

  return FileManagerElement;
}(FormFieldElement);
//# sourceMappingURL=FileManagerElement.js.map