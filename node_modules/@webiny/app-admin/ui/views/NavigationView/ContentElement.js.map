{"version":3,"sources":["../../../../src/ui/views/NavigationView/ContentElement.tsx"],"names":["React","UIElement","DrawerContent","navContent","TAGS","ContentElement","id","useGrid","addSorter","a","b","hasTag","APP","UTILS","config","label","localeCompare","element","runSorters","sorter","_sorters","push","props","getLayout","sort"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT;AACA,SAASC,IAAT;AAEA,WAAaC,cAAb;AAAA;;AAAA;;AAGI,0BAAYC,EAAZ,EAAwB;AAAA;;AAAA;;AACpB,8BAAMA,EAAN;;AADoB,+DAFL,EAEK;;AAGpB,UAAKC,OAAL,CAAa,KAAb;;AAEA,UAAKC,SAAL,CAAe,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACrB,UAAID,CAAC,CAACE,MAAF,CAASP,IAAI,CAACQ,GAAd,KAAsBF,CAAC,CAACC,MAAF,CAASP,IAAI,CAACS,KAAd,CAA1B,EAAgD;AAC5C,eAAO,CAAC,CAAR;AACH;;AAED,UAAIJ,CAAC,CAACE,MAAF,CAASP,IAAI,CAACS,KAAd,KAAwBH,CAAC,CAACC,MAAF,CAASP,IAAI,CAACQ,GAAd,CAA5B,EAAgD;AAC5C,eAAO,CAAP;AACH;;AAED,aAAOH,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeC,aAAf,CAA6BN,CAAC,CAACI,MAAF,CAASC,KAAtC,CAAP;AACH,KAVD;;AALoB;AAgBvB;;AAnBL;AAAA;AAAA,WAqBI,oBAAmDE,OAAnD,EAAgF;AAC5E,qFAAiBA,OAAjB;;AACA,WAAKC,UAAL;AACA,aAAOD,OAAP;AACH;AAzBL;AAAA;AAAA,WA2BI,mBAAUE,MAAV,EAA4B;AACxB,WAAKC,QAAL,CAAcC,IAAd,CAAmBF,MAAnB;AACH;AA7BL;AAAA;AAAA,WA+BI,gBAAOG,KAAP,EAAqC;AACjC,0BAAO,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAEnB;AAA1B,oFAAoDmB,KAApD,EAAP;AACH;AAjCL;AAAA;AAAA,WAmCI,sBAAqB;AAAA,iDACI,KAAKF,QADT;AAAA;;AAAA;AACjB,4DAAoC;AAAA,cAAzBD,MAAyB;AAChC,eAAKI,SAAL,GAAiBC,IAAjB,CAAsBL,MAAtB;AACH;AAHgB;AAAA;AAAA;AAAA;AAAA;AAIpB;AAvCL;;AAAA;AAAA,EAAoClB,SAApC","sourcesContent":["import React from \"react\";\nimport { UIElement } from \"~/ui/UIElement\";\nimport { DrawerContent } from \"@webiny/ui/Drawer\";\nimport { navContent } from \"~/ui/views/NavigationView/Styled\";\nimport { TAGS } from \"~/ui/elements/NavigationMenuElement\";\n\nexport class ContentElement extends UIElement {\n    private _sorters = [];\n\n    constructor(id: string) {\n        super(id);\n\n        this.useGrid(false);\n\n        this.addSorter((a, b) => {\n            if (a.hasTag(TAGS.APP) && b.hasTag(TAGS.UTILS)) {\n                return -1;\n            }\n\n            if (a.hasTag(TAGS.UTILS) && b.hasTag(TAGS.APP)) {\n                return 1;\n            }\n\n            return a.config.label.localeCompare(b.config.label);\n        });\n    }\n\n    addElement<TElement extends UIElement = UIElement>(element: TElement): TElement {\n        super.addElement(element);\n        this.runSorters();\n        return element;\n    }\n\n    addSorter(sorter: Function) {\n        this._sorters.push(sorter);\n    }\n\n    render(props?: any): React.ReactNode {\n        return <DrawerContent className={navContent}>{super.render(props)}</DrawerContent>;\n    }\n\n    private runSorters() {\n        for (const sorter of this._sorters) {\n            this.getLayout().sort(sorter);\n        }\n    }\n}\n"],"file":"ContentElement.js"}