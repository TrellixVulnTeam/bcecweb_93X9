import React from "react";
import { UIView } from "../UIView";
import { HeaderElement } from "./OverlayView/HeaderElement";
import { ContentElement } from "./OverlayView/ContentElement";
interface OnExited {
    (view: OverlayView): void;
}
export declare class OverlayView extends UIView {
    /**
     * This property is used to track the amount of opened overlays. Since we're applying a CSS class to disable
     * window scroll, we must make sure we don't remove that CSS class until all the overlays are closed.
     */
    static openedViews: number;
    private _onEntered;
    private _onExited;
    constructor(id?: string);
    setTitle(title: () => string): void;
    onEntered(): void;
    onExited(): void;
    addOnEntered(cb: OnExited): void;
    addOnExited(cb: OnExited): void;
    getOverlayHook(): {
        isVisible: boolean;
        setIsVisible: React.Dispatch<React.SetStateAction<boolean>>;
    };
    setIsVisible(visible: boolean): void;
    getHeaderElement(): HeaderElement;
    getContentElement(): ContentElement;
    render(props: any): JSX.Element;
}
export {};
