import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import React from "react";
import Helmet from "react-helmet";
import { UIView } from "../UIView";
import { GenericElement } from "../elements/GenericElement";
import { ViewElement } from "../elements/ViewElement";
import { HeaderElement } from "./AdminView/HeaderElement";
import { ContentElement } from "./AdminView/ContentElement";
import { NavigationView } from "./NavigationView";
import Snackbar from "./AdminView/components/Snackbar";
import { DialogContainer } from "./AdminView/components/Dialog";
export var AdminView = /*#__PURE__*/function (_UIView) {
  _inherits(AdminView, _UIView);

  var _super = _createSuper(AdminView);

  function AdminView() {
    var _this;

    _classCallCheck(this, AdminView);

    _this = _super.call(this, "AdminView");

    _defineProperty(_assertThisInitialized(_this), "_title", void 0);

    _this.useGrid(false);

    _this.addElement(new GenericElement("helmet", function () {
      return _this._title ? /*#__PURE__*/React.createElement(Helmet, {
        title: _this._title
      }) : null;
    }));

    _this.addElement(new HeaderElement("header"));

    _this.addElement(new ContentElement("content"));

    _this.addElement(new ViewElement("navigation", {
      view: new NavigationView()
    }));

    _this.addElement(new GenericElement("snackbarContainer", function () {
      return /*#__PURE__*/React.createElement(Snackbar, null);
    }));

    _this.addElement(new GenericElement("dialogContainer", function () {
      return /*#__PURE__*/React.createElement(DialogContainer, null);
    })); // Apply plugins


    _this.applyPlugins(AdminView);

    return _this;
  }

  _createClass(AdminView, [{
    key: "setTitle",
    value: function setTitle(title) {
      this._title = title;
    }
  }, {
    key: "setContentElement",
    value: function setContentElement(element) {
      var content = this.getContentElement(); // Remove previous content

      content.getChildren().forEach(function (el) {
        return el.remove();
      }); // Add new content

      content.addElement(element);
    }
  }, {
    key: "getHeaderElement",
    value: function getHeaderElement() {
      return this.getElement("header");
    }
  }, {
    key: "getContentElement",
    value: function getContentElement() {
      return this.getElement("content");
    }
  }]);

  return AdminView;
}(UIView);
//# sourceMappingURL=AdminView.js.map