import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import React from "react";
import { css } from "emotion";
import { UIElement } from "../../UIElement";
import { TopAppBarSecondary, TopAppBarSection } from "@webiny/ui/TopAppBar";
import { IconButton } from "@webiny/ui/Button";
import { ReactComponent as CloseIcon } from "@svgr/webpack!../../../components/OverlayLayout/icons/close.svg";
import { PlaceholderElement } from "../../elements/PlaceholderElement";
import { HeaderTitleElement } from "./HeaderTitleElement";
var width = /*#__PURE__*/css({
  width: "33%"
}, "label:width;"); // !GOOD FIRST ISSUE!
// Extract rendering and styling into a HeaderElementRenderer class.

export var HeaderElement = /*#__PURE__*/function (_UIElement) {
  _inherits(HeaderElement, _UIElement);

  var _super = _createSuper(HeaderElement);

  function HeaderElement(id, config) {
    var _this;

    _classCallCheck(this, HeaderElement);

    _this = _super.call(this, id, config);

    _defineProperty(_assertThisInitialized(_this), "_leftSection", new PlaceholderElement("leftSection"));

    _defineProperty(_assertThisInitialized(_this), "_centerSection", void 0);

    _defineProperty(_assertThisInitialized(_this), "_rightSection", new PlaceholderElement("rightSection"));

    _this._centerSection = new HeaderTitleElement("title", {
      title: function title() {
        return typeof _this.config.getTitle === "function" ? _this.config.getTitle() : null;
      }
    });

    _this.useGrid(false);

    return _this;
  }

  _createClass(HeaderElement, [{
    key: "setTitle",
    value: function setTitle(title) {
      this.config.getTitle = title;
    }
  }, {
    key: "setLeftSectionElement",
    value: function setLeftSectionElement(element) {
      this._leftSection = element;
    }
  }, {
    key: "setCenterSectionElement",
    value: function setCenterSectionElement(element) {
      this._centerSection = element;
    }
  }, {
    key: "setRightSectionElement",
    value: function setRightSectionElement(element) {
      this._rightSection = element;
    }
  }, {
    key: "getLeftSectionElement",
    value: function getLeftSectionElement() {
      return this._leftSection;
    }
  }, {
    key: "getCenterSectionElement",
    value: function getCenterSectionElement() {
      return this._centerSection;
    }
  }, {
    key: "getRightSectionElement",
    value: function getRightSectionElement() {
      return this._rightSection;
    }
  }, {
    key: "render",
    value: function render(props) {
      return /*#__PURE__*/React.createElement(TopAppBarSecondary, {
        fixed: true,
        style: {
          top: 0
        }
      }, /*#__PURE__*/React.createElement(TopAppBarSection, {
        className: width,
        alignStart: true
      }, this.getLeftSectionElement().render(props)), /*#__PURE__*/React.createElement(TopAppBarSection, {
        className: width,
        alignEnd: true
      }, this.getCenterSectionElement().render(props)), /*#__PURE__*/React.createElement(TopAppBarSection, {
        className: width,
        alignEnd: true
      }, this.getRightSectionElement().render(props), /*#__PURE__*/React.createElement(IconButton, {
        ripple: false,
        onClick: this.config.onClose,
        icon: /*#__PURE__*/React.createElement(CloseIcon, {
          style: {
            width: 24,
            height: 24
          }
        })
      })));
    }
  }]);

  return HeaderElement;
}(UIElement);
//# sourceMappingURL=HeaderElement.js.map