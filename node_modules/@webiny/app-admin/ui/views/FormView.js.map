{"version":3,"sources":["../../../src/ui/views/FormView.tsx"],"names":["React","CircularProgress","FormElement","ButtonElement","GenericElement","FormContentElement","FormHeaderElement","FormFooterElement","FormContainerElement","UIView","FormView","id","config","setupForm","addElements","useGrid","applyPlugins","element","getFormContainer","addElement","title","getTitle","onSubmit","getter","getFormData","getElement","getFormFooterElement","formContainer","testId","className","noElevation","form","data","getData","isLoading","props","footer","submitButton","type","label","onClick","formProps","submit","moveToTheEndOf","onCancel","cancelButton","moveToTheBeginningOf"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FormOnSubmit } from \"@webiny/form\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { UIElement, UIElementConfig } from \"~/ui/UIElement\";\nimport { FormElement, FormElementRenderProps } from \"~/ui/elements/form/FormElement\";\nimport { ButtonElement } from \"~/ui/elements/ButtonElement\";\nimport { GenericElement } from \"~/ui/elements/GenericElement\";\nimport { FormContentElement } from \"./FormView/FormContentElement\";\nimport { FormHeaderElement } from \"./FormView/FormHeaderElement\";\nimport { FormFooterElement } from \"./FormView/FormFooterElement\";\nimport { FormContainerElement } from \"./FormView/FormContainerElement\";\nimport { UIView } from \"~/ui/UIView\";\n\nexport interface FormViewConfig extends UIElementConfig {\n    setupForm?: boolean;\n    onSubmit?: FormOnSubmit;\n    getTitle?: (props: FormElementRenderProps) => string;\n    getFormData?: () => Record<string, any>;\n    isLoading?: () => boolean;\n    onCancel?: () => void;\n    testId?: string;\n    noElevation?: boolean;\n    className?: string;\n}\n\ninterface GetterWithProps<T> {\n    (props: FormElementRenderProps): T;\n}\n\ninterface GetterWithoutProps<T> {\n    (): T;\n}\n\nexport class FormView extends UIView<FormViewConfig> {\n    constructor(id, config?: FormViewConfig) {\n        if (!(\"setupForm\" in config)) {\n            config.setupForm = true;\n        }\n\n        super(id, config);\n\n        this.addElements();\n        this.useGrid(false);\n\n        this.applyPlugins(FormView);\n    }\n\n    addElement<TElement extends UIElement = UIElement>(element: TElement): TElement {\n        if (element.id === \"form\" || element.id === \"formContainer\") {\n            return super.addElement(element);\n        }\n\n        return this.getFormContainer().addElement(element);\n    }\n\n    setTitle(title: string | GetterWithProps<string>) {\n        if (typeof title === \"string\") {\n            this.config.getTitle = () => title;\n        } else {\n            this.config.getTitle = title;\n        }\n    }\n\n    setOnSubmit(onSubmit: FormOnSubmit) {\n        this.config.onSubmit = onSubmit;\n    }\n\n    setFormData(getter: GetterWithoutProps<Record<string, any>>) {\n        this.config.getFormData = getter;\n    }\n\n    getFormContainer(): FormContainerElement {\n        return this.getElement(\"formContainer\");\n    }\n\n    getFormContentElement(): FormContentElement {\n        return this.getElement(\"formContent\");\n    }\n\n    getFormHeaderElement(): FormHeaderElement {\n        return this.getElement(\"formHeader\");\n    }\n\n    getFormFooterElement(): FormFooterElement {\n        return this.getElement(\"formFooter\");\n    }\n\n    getSubmitButtonElement(): ButtonElement {\n        return this.getFormFooterElement().getElement(\"submit\");\n    }\n\n    private addElements() {\n        const formContainer = new FormContainerElement(\"formContainer\", {\n            testId: this.config.testId,\n            className: this.config.className,\n            noElevation: this.config.noElevation\n        });\n\n        if (this.config.setupForm) {\n            const form = this.addElement(\n                new FormElement(\"form\", {\n                    onSubmit: (data, form) => this.config.onSubmit(data, form),\n                    getData: () => this.config.getFormData()\n                })\n            ) as FormElement;\n\n            form.addElement(formContainer);\n        } else {\n            this.addElement(formContainer);\n        }\n\n        this.addElement(\n            new GenericElement(\"loading\", () => {\n                if (typeof this.config.isLoading !== \"function\") {\n                    return null;\n                }\n\n                return this.config.isLoading() ? <CircularProgress /> : null;\n            })\n        );\n\n        this.addElement(\n            new FormHeaderElement(\"formHeader\", {\n                getTitle: props => {\n                    return this.config.getTitle(props);\n                }\n            })\n        );\n\n        this.addElement(new FormContentElement(\"formContent\"));\n\n        const footer = new FormFooterElement(\"formFooter\");\n        this.addElement(footer);\n\n        const submitButton = new ButtonElement<FormElementRenderProps>(\"submit\", {\n            type: \"primary\",\n            label: \"Save\",\n            onClick: props => {\n                props.formProps.submit();\n            }\n        });\n\n        submitButton.moveToTheEndOf(footer);\n\n        if (this.config.onCancel) {\n            const cancelButton = footer.addElement(\n                new ButtonElement(\"cancel\", {\n                    type: \"default\",\n                    label: \"Cancel\",\n                    onClick: () => this.config.onCancel()\n                })\n            );\n\n            cancelButton.moveToTheBeginningOf(footer);\n        }\n    }\n}\n"],"file":"FormView.js"}