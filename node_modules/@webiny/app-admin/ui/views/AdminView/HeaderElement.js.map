{"version":3,"sources":["../../../../src/ui/views/AdminView/HeaderElement.tsx"],"names":["React","UIElement","TopAppBarPrimary","TopAppBarTitle","GenericElement","PlaceholderElement","HeaderSectionLeftElement","HeaderSectionCenterElement","HeaderSectionRightElement","Hamburger","UIRenderer","ElementID","HeaderElementRenderer","next","HeaderElement","id","useGrid","leftSection","addElement","MenuButton","Logo","addRenderer","setMenuButton","applyPlugins","getElement","logo","replaceWith","menuButton"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,sBAAjD;AACA,SAASC,cAAT;AACA,SAASC,kBAAT;AACA,SAASC,wBAAT;AACA,SAASC,0BAAT;AACA,SAASC,yBAAT;AACA,OAAOC,SAAP;AACA,SAASC,UAAT;IAEKC,S;;WAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S;;IAKCC,qB;;;;;;;;;;;;;WACF,sBAAkC;AAAA,UAAzBC,IAAyB,QAAzBA,IAAyB;AAC9B,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,KAAK;AAAvB,SAAyBA,IAAI,EAA7B,CAAP;AACH;;;;EAH+BH,U;;AAMpC,WAAaI,aAAb;AAAA;;AAAA;;AACI,yBAAYC,EAAZ,EAAwB;AAAA;;AAAA;;AACpB,+BAAMA,EAAN;;AAEA,UAAKC,OAAL,CAAa,KAAb;;AAEA,QAAMC,WAAW,GAAG,MAAKC,UAAL,CAAgB,IAAIZ,wBAAJ,CAA6B,YAA7B,CAAhB,CAApB;;AACAW,IAAAA,WAAW,CAACC,UAAZ,CAAuB,IAAIb,kBAAJ,CAAuBM,SAAS,CAACQ,UAAjC,CAAvB;AACAF,IAAAA,WAAW,CAACC,UAAZ,CAAuB,IAAIb,kBAAJ,CAAuBM,SAAS,CAACS,IAAjC,CAAvB;;AAEA,UAAKF,UAAL,CAAgB,IAAIX,0BAAJ,CAA+B,cAA/B,CAAhB;;AACA,UAAKW,UAAL,CAAgB,IAAIV,yBAAJ,CAA8B,aAA9B,CAAhB;;AAEA,UAAKa,WAAL,CAAiB,IAAIT,qBAAJ,EAAjB;;AAEA,UAAKU,aAAL,eAAmB,oBAAC,SAAD,OAAnB;;AACA,UAAKC,YAAL,CAAkBT,aAAlB;;AAfoB;AAgBvB;;AAjBL;AAAA;AAAA,WAmBI,0BAA2C;AACvC,aAAO,KAAKU,UAAL,CAAgB,YAAhB,CAAP;AACH;AArBL;AAAA;AAAA,WAuBI,4BAA+C;AAC3C,aAAO,KAAKA,UAAL,CAAgB,cAAhB,CAAP;AACH;AAzBL;AAAA;AAAA,WA2BI,2BAA6C;AACzC,aAAO,KAAKA,UAAL,CAAgB,aAAhB,CAAP;AACH;AA7BL;AAAA;AAAA,WA+BI,iBAAQC,IAAR,EAAkC;AAC9B;AACA,WAAKD,UAAL,CAAgBb,SAAS,CAACS,IAA1B,EAAgCM,WAAhC,CACI,IAAItB,cAAJ,CAAmBO,SAAS,CAACS,IAA7B,EAAmC,YAAM;AACrC,4BAAO,oBAAC,cAAD,QAAiBK,IAAjB,CAAP;AACH,OAFD,CADJ;AAKH;AAtCL;AAAA;AAAA,WAwCI,uBAAcE,UAAd,EAA8C;AAC1C,WAAKH,UAAL,CAAgBb,SAAS,CAACQ,UAA1B,EAAsCO,WAAtC,CACI,IAAItB,cAAJ,CAAmBO,SAAS,CAACQ,UAA7B,EAAyC,YAAM;AAC3C,eAAOQ,UAAP;AACH,OAFD,CADJ;AAKH;AA9CL;;AAAA;AAAA,EAAmC1B,SAAnC","sourcesContent":["import React from \"react\";\nimport { UIElement } from \"~/ui/UIElement\";\nimport { TopAppBarPrimary, TopAppBarTitle } from \"@webiny/ui/TopAppBar\";\nimport { GenericElement } from \"~/ui/elements/GenericElement\";\nimport { PlaceholderElement } from \"~/ui/elements/PlaceholderElement\";\nimport { HeaderSectionLeftElement } from \"./HeaderSectionLeftElement\";\nimport { HeaderSectionCenterElement } from \"./HeaderSectionCenterElement\";\nimport { HeaderSectionRightElement } from \"./HeaderSectionRightElement\";\nimport Hamburger from \"./components/Hamburger\";\nimport { UIRenderer } from \"~/ui/UIRenderer\";\n\nenum ElementID {\n    MenuButton = \"headerMenuButton\",\n    Logo = \"headerLogo\"\n}\n\nclass HeaderElementRenderer extends UIRenderer<HeaderElement> {\n    render({ next }): React.ReactNode {\n        return <TopAppBarPrimary fixed>{next()}</TopAppBarPrimary>;\n    }\n}\n\nexport class HeaderElement extends UIElement {\n    constructor(id: string) {\n        super(id);\n\n        this.useGrid(false);\n\n        const leftSection = this.addElement(new HeaderSectionLeftElement(\"headerLeft\"));\n        leftSection.addElement(new PlaceholderElement(ElementID.MenuButton));\n        leftSection.addElement(new PlaceholderElement(ElementID.Logo));\n\n        this.addElement(new HeaderSectionCenterElement(\"headerCenter\"));\n        this.addElement(new HeaderSectionRightElement(\"headerRight\"));\n\n        this.addRenderer(new HeaderElementRenderer());\n\n        this.setMenuButton(<Hamburger />);\n        this.applyPlugins(HeaderElement);\n    }\n\n    getLeftSection(): HeaderSectionLeftElement {\n        return this.getElement(\"headerLeft\");\n    }\n\n    getCenterSection(): HeaderSectionCenterElement {\n        return this.getElement(\"headerCenter\");\n    }\n\n    getRightSection(): HeaderSectionRightElement {\n        return this.getElement(\"headerRight\");\n    }\n\n    setLogo(logo: React.ReactElement) {\n        // TODO: extract into a `LogoElement` class\n        this.getElement(ElementID.Logo).replaceWith(\n            new GenericElement(ElementID.Logo, () => {\n                return <TopAppBarTitle>{logo}</TopAppBarTitle>;\n            })\n        );\n    }\n\n    setMenuButton(menuButton: React.ReactElement) {\n        this.getElement(ElementID.MenuButton).replaceWith(\n            new GenericElement(ElementID.MenuButton, () => {\n                return menuButton;\n            })\n        );\n    }\n}\n"],"file":"HeaderElement.js"}