import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _get from "@babel/runtime/helpers/get";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import React from "react";
import { css } from "emotion";
import { Cell, Grid } from "@webiny/ui/Grid";
import { Typography } from "@webiny/ui/Typography";
import { UIElement } from "../../UIElement";
import { Icon } from "@webiny/ui/Icon";
var iconClass = /*#__PURE__*/css({
  marginRight: 15,
  color: "var(--mdc-theme-text-primary-on-background)"
}, "label:iconClass;");
var headerClass = /*#__PURE__*/css({
  borderBottom: "1px solid var(--mdc-theme-on-background)",
  color: "var(--mdc-theme-text-primary-on-background)"
}, "label:headerClass;");
var titleClass = /*#__PURE__*/css({
  display: "flex",
  alignItems: "center"
}, "label:titleClass;");
var actionsClass = /*#__PURE__*/css({
  display: "flex",
  justifyContent: "flex-end",
  alignItems: "center"
}, "label:actionsClass;");
export var FormHeaderElement = /*#__PURE__*/function (_UIElement) {
  _inherits(FormHeaderElement, _UIElement);

  var _super = _createSuper(FormHeaderElement);

  function FormHeaderElement(id, config) {
    var _this;

    _classCallCheck(this, FormHeaderElement);

    _this = _super.call(this, id, config);

    _this.useGrid(false);

    return _this;
  }

  _createClass(FormHeaderElement, [{
    key: "setIcon",
    value: function setIcon(icon) {
      this.config.icon = icon;
    }
  }, {
    key: "addAction",
    value: function addAction(element) {
      this.addElement(element);
    }
  }, {
    key: "render",
    value: function render(props) {
      var _this$config = this.config,
          icon = _this$config.icon,
          getTitle = _this$config.getTitle;
      return /*#__PURE__*/React.createElement(Grid, {
        className: headerClass
      }, /*#__PURE__*/React.createElement(Cell, {
        span: 6,
        className: titleClass
      }, /*#__PURE__*/React.createElement(React.Fragment, null, icon && /*#__PURE__*/React.createElement(Icon, {
        className: iconClass,
        icon: icon
      }), /*#__PURE__*/React.createElement(Typography, {
        use: "headline5"
      }, getTitle(props)))), /*#__PURE__*/React.createElement(Cell, {
        span: 6,
        className: actionsClass
      }, _get(_getPrototypeOf(FormHeaderElement.prototype), "render", this).call(this, props)));
    }
  }]);

  return FormHeaderElement;
}(UIElement);
//# sourceMappingURL=FormHeaderElement.js.map