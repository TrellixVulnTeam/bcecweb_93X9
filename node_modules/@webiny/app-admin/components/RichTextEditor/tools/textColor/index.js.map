{"version":3,"sources":["../../../../../src/components/RichTextEditor/tools/textColor/index.ts"],"names":["COLOR_TOOL_CLASS","TextColorTool","api","config","button","_state","tag","color","class","themeColors","_CSS","colorPicker","colorBox","colorBoxActive","state","classList","toggle","styles","inlineToolButtonActive","document","createElement","type","innerHTML","add","inlineToolButton","forEach","style","backgroundColor","addEventListener","childNodes","node","contains","remove","appendChild","range","unwrap","wrap","selectedText","extractContents","mark","insertNode","selection","expandToTag","findParentTag","text","onclick","hidden","onchange","showActions","hideActions","rgb","match","hexR","parseInt","toString","hexG","hexB","length","span","el"],"mappings":"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","sourcesContent":["import { API } from \"@editorjs/editorjs\";\n\nconst COLOR_TOOL_CLASS = \"cdx-text-color\";\n\nclass TextColorTool {\n    _state: boolean;\n    color: string;\n    api: API;\n    tag: string;\n    class: string;\n    colorPicker: HTMLDivElement;\n    button: HTMLButtonElement;\n    config: {\n        themeColors: string[];\n    };\n    _CSS: any;\n\n    constructor({ api, config }) {\n        this.api = api;\n        this.button = null;\n        this._state = false;\n        this.tag = \"SPAN\";\n        this.color = \"red\";\n        this.class = COLOR_TOOL_CLASS;\n        this.config = config || { themeColors: [\"#44bd32\"] };\n        this._CSS = {\n            colorPicker: \"ce-text-color-tool\",\n            colorBox: \"ce-text-color-tool__color-box\",\n            colorBoxActive: \"ce-text-color-tool__color-box--active\"\n        };\n    }\n\n    static get isInline() {\n        return true;\n    }\n\n    /**\n     * Sanitize method returns rules to let Editor know which HTML tags it should respect.\n     * @returns {object} sanitizer configuration.\n     * https://editorjs.io/sanitizer\n     */\n    static get sanitize() {\n        // Block Tools are not connected with Inline ones,\n        // so markup added by Inline Tool will be removed on pasting or on saving.\n        // We need this config so that `class` & `style` attributes will remain intact for \"span\".\n        return {\n            span: el => {\n                // Respect `class` and `style` attributes if this condition is meet.\n                if (el.classList.contains(COLOR_TOOL_CLASS)) {\n                    return {\n                        class: COLOR_TOOL_CLASS,\n                        style: el.style\n                    };\n                }\n            }\n        };\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    set state(state) {\n        this._state = state;\n\n        this.button.classList.toggle(this.api.styles.inlineToolButtonActive, state);\n    }\n    /**\n     * Render method must return HTML element of the button for Inline Toolbar.\n     */\n    render() {\n        this.button = document.createElement(\"button\");\n        this.button.type = \"button\";\n        this.button.innerHTML =\n            '<svg width=\"20\" height=\"18\"><path d=\"M10.458 12.04l2.919 1.686-.781 1.417-.984-.03-.974 1.687H8.674l1.49-2.583-.508-.775.802-1.401zm.546-.952l3.624-6.327a1.597 1.597 0 0 1 2.182-.59 1.632 1.632 0 0 1 .615 2.201l-3.519 6.391-2.902-1.675zm-7.73 3.467h3.465a1.123 1.123 0 1 1 0 2.247H3.273a1.123 1.123 0 1 1 0-2.247z\"/></svg>';\n        this.button.classList.add(this.api.styles.inlineToolButton);\n\n        return this.button;\n    }\n\n    /**\n     * Input for the link\n     */\n    public renderActions(): HTMLElement {\n        // Create action element\n        this.colorPicker = document.createElement(\"div\");\n        // Add element properties\n        this.colorPicker.classList.add(this._CSS.colorPicker);\n\n        this.config.themeColors.forEach(color => {\n            // create element\n            const colorBox = document.createElement(\"button\");\n            // add properties\n            colorBox.style.backgroundColor = color;\n            colorBox.classList.add(this._CSS.colorBox);\n\n            colorBox.addEventListener(\"click\", () => {\n                if (this.color === color) {\n                    // reset the color\n                    this.color = \"unset\";\n                } else {\n                    // set color\n                    this.color = color;\n                }\n\n                this.colorPicker.childNodes.forEach((node: HTMLElement) => {\n                    if (node.classList.contains(this._CSS.colorBoxActive)) {\n                        // remove active class\n                        node.classList.remove(this._CSS.colorBoxActive);\n                    }\n                });\n                // add active class\n                colorBox.classList.add(this._CSS.colorBoxActive);\n            });\n            // save element\n            this.colorPicker.appendChild(colorBox);\n        });\n\n        // Return element\n        return this.colorPicker;\n    }\n\n    /**\n     * Finally, when button is pressed Editor calls\n     * surround method of the tool with Range object as an argument.\n     * @param range\n     */\n    surround(range) {\n        if (this.state) {\n            this.unwrap(range);\n            return;\n        }\n\n        this.wrap(range);\n    }\n\n    wrap(range) {\n        const selectedText = range.extractContents();\n        const mark = document.createElement(this.tag);\n\n        mark.classList.add(this.class);\n\n        mark.appendChild(selectedText);\n        range.insertNode(mark);\n\n        this.api.selection.expandToTag(mark);\n    }\n\n    unwrap(range) {\n        const mark = this.api.selection.findParentTag(this.tag, this.class);\n        const text = range.extractContents();\n\n        mark.remove();\n\n        range.insertNode(text);\n    }\n\n    showActions(mark) {\n        this.colorPicker.onclick = () => {\n            mark.style.color = this.color;\n        };\n        this.colorPicker.hidden = false;\n    }\n\n    hideActions() {\n        this.colorPicker.onchange = null;\n        this.colorPicker.hidden = true;\n    }\n\n    /**\n     * CheckState method of each Inline Tool is called by Editor with current `Selection`\n     * when user selects some text\n     */\n    checkState() {\n        const mark = this.api.selection.findParentTag(this.tag);\n\n        this.state = !!mark;\n\n        if (this.state) {\n            this.showActions(mark);\n        } else {\n            this.hideActions();\n        }\n    }\n\n    convertToHex(color) {\n        const rgb = color.match(/(\\d+)/g);\n\n        let hexR = parseInt(rgb[0]).toString(16);\n        let hexG = parseInt(rgb[1]).toString(16);\n        let hexB = parseInt(rgb[2]).toString(16);\n\n        hexR = hexR.length === 1 ? \"0\" + hexR : hexR;\n        hexG = hexG.length === 1 ? \"0\" + hexG : hexG;\n        hexB = hexB.length === 1 ? \"0\" + hexB : hexB;\n\n        return \"#\" + hexR + hexG + hexB;\n    }\n\n    clear() {\n        this.hideActions();\n    }\n}\n\nexport default TextColorTool;\n"],"file":"index.js"}