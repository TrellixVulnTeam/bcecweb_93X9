import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject, _templateObject2;

import React from "react";
import { css } from "emotion";
import { Icon } from "@webiny/ui/Icon";
import { i18n } from "@webiny/app/i18n";
import { ReactComponent as PermissionIcon } from "@svgr/webpack!./icons/privacy_tip-24px.svg";
import { Typography } from "@webiny/ui/Typography";
var t = i18n.ns("app-admin/file-manager/file-manager-view/no-permission");
var styles = /*#__PURE__*/css({
  margin: "0 auto",
  paddingTop: 0,
  height: "100%",
  zIndex: 2,
  width: "100%",
  position: "absolute",
  backgroundColor: "transparent",
  "& .outer-container": {
    textAlign: "center",
    width: 300,
    height: 300,
    backgroundColor: "var(--mdc-theme-surface)",
    borderRadius: "50%",
    position: "absolute",
    left: "50%",
    top: "50%",
    transform: "translateX(-50%) translateY(-100%)",
    "& .inner-container": {
      display: "flex",
      flexDirection: "column",
      alignItems: "center",
      paddingTop: 35,
      width: 300,
      color: "var(--mdc-theme-on-surface)",
      "svg.mdc-button__icon": {
        width: 100,
        display: "inline-block",
        color: "var(--mdc-theme-on-surface)"
      },
      "& .title": {
        marginTop: 8
      },
      "& .body": {
        color: "var(--mdc-theme-text-secondary-on-background)"
      }
    }
  }
}, "label:styles;");

var NoPermissionView = function NoPermissionView() {
  return /*#__PURE__*/React.createElement("div", {
    className: styles
  }, /*#__PURE__*/React.createElement("div", {
    className: "outer-container"
  }, /*#__PURE__*/React.createElement("div", {
    className: "inner-container"
  }, /*#__PURE__*/React.createElement(Icon, {
    icon: /*#__PURE__*/React.createElement(PermissionIcon, null)
  }), /*#__PURE__*/React.createElement(Typography, {
    className: "title",
    use: "subtitle1"
  }, t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Permission needed"])))), /*#__PURE__*/React.createElement(Typography, {
    className: "body",
    use: "body2"
  }, t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["You're missing required permission to access files. Please contact the administrator."])))))));
};

export default NoPermissionView;
//# sourceMappingURL=NoPermissionView.js.map