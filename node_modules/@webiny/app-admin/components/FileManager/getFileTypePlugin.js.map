{"version":3,"sources":["../../../src/components/FileManager/getFileTypePlugin.ts"],"names":["invariant","minimatch","plugins","FileManagerFileTypePlugin","getFileTypePlugin","file","fileTypePlugins","byType","type","plugin","i","length","types","find","t"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SAASC,yBAAT;AAEA,eAAe,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAC5C,MAAI,CAACA,IAAL,EAAW;AACP,WAAO,IAAP;AACH;;AAED,MAAMC,eAAe,gCACdJ,OAAO,CAACK,MAAR,CAA+C,8BAA/C,CADc,sBAEdL,OAAO,CAACK,MAAR,CAA0CJ,yBAAyB,CAACK,IAApE,CAFc,EAArB;AAKA,MAAIC,MAAM,GAAG,IAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,eAAe,CAACK,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C;AACA,QAAME,KAAK,GAAGN,eAAe,CAACI,CAAD,CAAf,CAAmBE,KAAjC;;AACA,QAAIA,KAAK,CAACC,IAAN,CAAW,UAAAC,CAAC;AAAA,aAAIb,SAAS,CAACI,IAAI,CAACG,IAAN,EAAYM,CAAZ,CAAb;AAAA,KAAZ,CAAJ,EAA8C;AAC1CL,MAAAA,MAAM,GAAGH,eAAe,CAACI,CAAD,CAAxB;AACH;AACJ;;AAEDV,EAAAA,SAAS,CAACS,MAAD,uCAAsCJ,IAAI,CAACG,IAA3C,SAAT;AAEA,SAAOC,MAAP;AACH","sourcesContent":["import invariant from \"invariant\";\nimport minimatch from \"minimatch\";\nimport { plugins } from \"@webiny/plugins\";\nimport { AdminFileManagerFileTypePlugin } from \"../../types\";\nimport { FileManagerFileTypePlugin } from \"../../plugins/FileManagerFileTypePlugin\";\n\nexport default function getFileTypePlugin(file) {\n    if (!file) {\n        return null;\n    }\n\n    const fileTypePlugins = [\n        ...plugins.byType<AdminFileManagerFileTypePlugin>(\"admin-file-manager-file-type\"),\n        ...plugins.byType<FileManagerFileTypePlugin>(FileManagerFileTypePlugin.type)\n    ];\n\n    let plugin = null;\n    for (let i = 0; i < fileTypePlugins.length; i++) {\n        // We don't want to include the global wildcard in this check.\n        const types = fileTypePlugins[i].types;\n        if (types.find(t => minimatch(file.type, t))) {\n            plugin = fileTypePlugins[i];\n        }\n    }\n\n    invariant(plugin, `Missing plugin to handle \"${file.type}\"!`);\n\n    return plugin;\n}\n"],"file":"getFileTypePlugin.js"}