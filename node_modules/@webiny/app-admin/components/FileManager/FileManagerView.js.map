{"version":3,"sources":["../../../src/components/FileManager/FileManagerView.tsx"],"names":["React","useRef","useCallback","useMemo","css","styled","Files","ButtonPrimary","ButtonIcon","Icon","File","useQuery","useMutation","useApolloClient","LIST_FILES","CREATE_FILE","GET_FILE_SETTINGS","getFileTypePlugin","get","debounce","getFileUploader","outputFileSelectionError","DropFilesHere","NoResults","FileDetails","LeftSidebar","BottomInfoBar","OverlayLayout","useSnackbar","Scrollbar","CircularProgress","i18n","useSecurity","useHotkeys","useFileManager","NoPermissionView","t","ns","style","draggingFeedback","position","top","left","width","height","opacity","background","zIndex","leftDrawer","header","textAlign","fontSize","padding","fontWeight","color","InputSearch","backgroundColor","borderRadius","border","marginLeft","outline","searchIcon","FileListWrapper","float","display","FileList","gridTemplateColumns","marginBottom","renderFile","props","file","plugin","id","render","renderEmpty","hasPreviouslyUploadedFiles","browseFiles","fmFilePermission","FileManagerView","onClose","onChange","accept","multiple","maxSize","multipleMaxCount","multipleMaxSize","selected","toggleSelected","dragging","setDragging","uploading","setUploading","showFileDetails","showingFileDetails","queryParams","setQueryParams","setHasPreviouslyUploadedFiles","showSnackbar","identity","getPermission","canCreate","own","rwd","includes","canEdit","item","creatorId","login","searchOnChange","search","toggleTag","tag","finalTags","Array","isArray","tags","splice","indexOf","push","getFileUploadErrorMessage","e","match","message","updateCacheAfterCreateFile","cache","newFile","newFileData","data","readQuery","query","variables","writeQuery","fileManager","listFiles","getFileDetailsFile","src","list","find","keys","esc","searchInput","apolloClient","gqlQuery","onCompleted","response","length","refreshOnScroll","scrollFrame","fetchMore","cursor","after","updateQuery","prev","fetchMoreResult","next","loading","update","createFile","uploadFile","files","errors","Promise","all","map","setTimeout","name","renderUploadFileAction","settingsQuery","settings","uploadMaxFileSize","getDropZoneProps","validateFiles","onDragEnter","onExited","target","value","current","onSelect","undefined","defaultProps"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useMemo } from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\nimport Files from \"react-butterfiles\";\nimport { ButtonPrimary, ButtonIcon } from \"@webiny/ui/Button\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport File from \"./File\";\nimport { useQuery, useMutation, useApolloClient } from \"@apollo/react-hooks\";\nimport { FilesRules } from \"react-butterfiles\";\nimport { LIST_FILES, CREATE_FILE, GET_FILE_SETTINGS } from \"./graphql\";\nimport getFileTypePlugin from \"./getFileTypePlugin\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport getFileUploader from \"./getFileUploader\";\nimport outputFileSelectionError from \"./outputFileSelectionError\";\nimport DropFilesHere from \"./DropFilesHere\";\nimport NoResults from \"./NoResults\";\nimport FileDetails from \"./FileDetails\";\nimport LeftSidebar from \"./LeftSidebar\";\nimport BottomInfoBar from \"./BottomInfoBar\";\nimport { OverlayLayout } from \"../OverlayLayout\";\nimport { useSnackbar } from \"../../hooks/useSnackbar\";\nimport { Scrollbar } from \"@webiny/ui/Scrollbar\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useSecurity } from \"@webiny/app-security\";\nimport { useHotkeys } from \"react-hotkeyz\";\nimport { useFileManager } from \"./FileManagerContext\";\nimport { ReactComponent as SearchIcon } from \"./icons/round-search-24px.svg\";\nimport { ReactComponent as UploadIcon } from \"./icons/round-cloud_upload-24px.svg\";\nimport NoPermissionView from \"./NoPermissionView\";\n\nconst t = i18n.ns(\"app-admin/file-manager/file-manager-view\");\n\nconst style = {\n    draggingFeedback: css({\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        opacity: 0.5,\n        background: \"white\",\n        zIndex: 100\n    }),\n    leftDrawer: {\n        header: css({\n            textAlign: \"center\",\n            fontSize: 18,\n            padding: 10,\n            fontWeight: 600,\n            color: \"var(--mdc-theme-on-surface)\"\n        })\n    }\n};\n\nconst InputSearch = styled(\"div\")({\n    backgroundColor: \"var(--mdc-theme-on-background)\",\n    position: \"relative\",\n    height: 32,\n    padding: 3,\n    width: \"100%\",\n    borderRadius: 2,\n    \"> input\": {\n        border: \"none\",\n        fontSize: 14,\n        width: \"calc(100% - 10px)\",\n        height: \"100%\",\n        marginLeft: 50,\n        backgroundColor: \"transparent\",\n        outline: \"none\",\n        color: \"var(--mdc-theme-text-primary-on-background)\"\n    }\n});\n\nconst searchIcon = css({\n    \"&.mdc-button__icon\": {\n        color: \"var(--mdc-theme-text-secondary-on-background)\",\n        position: \"absolute\",\n        width: 24,\n        height: 24,\n        left: 15,\n        top: 7\n    }\n});\n\nconst FileListWrapper = styled(\"div\")({\n    float: \"right\",\n    display: \"inline-block\",\n    width: \"calc(100vw - 270px)\",\n    height: \"100%\"\n});\n\nconst FileList = styled(\"div\")({\n    width: \"100%\",\n    display: \"grid\",\n    /* define the number of grid columns */\n    gridTemplateColumns: \"repeat( auto-fill, minmax(220px, 1fr) )\",\n    marginBottom: 95\n});\n\ntype FileManagerViewProps = {\n    onChange: Function;\n    onClose: Function;\n    files?: FilesRules;\n    multiple: boolean; // Does not affect <Files> component, it always allows multiple selection.\n    accept: Array<string>;\n    maxSize: number | string;\n    multipleMaxCount: number;\n    multipleMaxSize: number | string;\n};\n\nfunction renderFile(props) {\n    const { file } = props;\n    const plugin = getFileTypePlugin(file);\n    return (\n        <File {...props} key={file.id}>\n            {plugin.render({ file })}\n        </File>\n    );\n}\n\nconst renderEmpty = ({ hasPreviouslyUploadedFiles, browseFiles, fmFilePermission }) => {\n    if (!fmFilePermission) {\n        return <NoPermissionView />;\n    }\n    if (hasPreviouslyUploadedFiles) {\n        return <NoResults />;\n    }\n    return <DropFilesHere empty onClick={browseFiles} />;\n};\n\nfunction FileManagerView(props: FileManagerViewProps) {\n    const { onClose, onChange, accept, multiple, maxSize, multipleMaxCount, multipleMaxSize } =\n        props;\n\n    const {\n        selected,\n        toggleSelected,\n        dragging,\n        setDragging,\n        uploading,\n        setUploading,\n        showFileDetails,\n        showingFileDetails,\n        queryParams,\n        setQueryParams,\n        hasPreviouslyUploadedFiles,\n        setHasPreviouslyUploadedFiles\n    } = useFileManager();\n    const { showSnackbar } = useSnackbar();\n\n    const { identity } = useSecurity();\n    const fmFilePermission = useMemo(() => identity.getPermission(\"fm.file\"), []);\n    const canCreate = useMemo(() => {\n        // Bail out early if no access\n        if (!fmFilePermission) {\n            return false;\n        }\n\n        if (fmFilePermission.own) {\n            return true;\n        }\n\n        if (typeof fmFilePermission.rwd === \"string\") {\n            return fmFilePermission.rwd.includes(\"w\");\n        }\n\n        return true;\n    }, [fmFilePermission]);\n    const canEdit = useCallback(\n        item => {\n            // Bail out early if no access\n            if (!fmFilePermission) {\n                return false;\n            }\n            const creatorId = get(item, \"createdBy.id\");\n\n            if (fmFilePermission.own && creatorId) {\n                return creatorId === identity.login;\n            }\n\n            if (typeof fmFilePermission.rwd === \"string\") {\n                return fmFilePermission.rwd.includes(\"w\");\n            }\n\n            return true;\n        },\n        [fmFilePermission]\n    );\n\n    const searchOnChange = useCallback(\n        // @ts-ignore\n        debounce(search => setQueryParams({ search }), 500),\n        []\n    );\n\n    const toggleTag = useCallback(async ({ tag, queryParams }) => {\n        const finalTags = Array.isArray(queryParams.tags) ? [...queryParams.tags] : [];\n\n        if (finalTags.includes(tag)) {\n            finalTags.splice(finalTags.indexOf(tag), 1);\n        } else {\n            finalTags.push(tag);\n        }\n\n        setQueryParams({ ...queryParams, tags: finalTags });\n    }, []);\n\n    const getFileUploadErrorMessage = useCallback(e => {\n        if (typeof e === \"string\") {\n            const match = e.match(/Message>(.*?)<\\/Message/);\n            if (match) {\n                const [, message] = match;\n                return message;\n            }\n\n            return e;\n        }\n        return e.message;\n    }, []);\n\n    const updateCacheAfterCreateFile = (cache, newFile) => {\n        const newFileData = get(newFile, \"data.fileManager.createFile.data\");\n\n        const data = cache.readQuery({ query: LIST_FILES, variables: queryParams });\n\n        cache.writeQuery({\n            query: LIST_FILES,\n            variables: queryParams,\n            data: {\n                fileManager: {\n                    ...data.fileManager,\n                    listFiles: {\n                        ...data.fileManager.listFiles,\n                        data: [newFileData, ...(data.fileManager.listFiles.data || [])]\n                    }\n                }\n            }\n        });\n    };\n\n    const getFileDetailsFile = useCallback(function getFileDetailsFile({ src, list }) {\n        return list.find(item => item.src === src);\n    }, []);\n\n    useHotkeys({\n        zIndex: 50,\n        keys: {\n            esc: onClose\n        }\n    });\n\n    const searchInput = useRef();\n\n    const apolloClient = useApolloClient();\n\n    const gqlQuery = useQuery(LIST_FILES, {\n        variables: queryParams,\n        onCompleted: response => {\n            const list = get(response, \"fileManager.listFiles.data\") || [];\n            if (hasPreviouslyUploadedFiles === null) {\n                setHasPreviouslyUploadedFiles(list.length > 0);\n            }\n        }\n    });\n\n    const refreshOnScroll = useCallback(\n        debounce(({ scrollFrame, fetchMore }) => {\n            if (scrollFrame.top > 0.9) {\n                const cursor = get(gqlQuery.data, \"fileManager.listFiles.meta.cursor\");\n                if (cursor) {\n                    fetchMore({\n                        variables: { after: cursor },\n                        updateQuery: (prev, { fetchMoreResult }) => {\n                            if (!fetchMoreResult) {\n                                return prev;\n                            }\n\n                            const next = { ...fetchMoreResult };\n\n                            next.fileManager.listFiles.data = [\n                                ...prev.fileManager.listFiles.data,\n                                ...fetchMoreResult.fileManager.listFiles.data\n                            ];\n\n                            return next;\n                        }\n                    });\n                }\n            }\n        }, 500),\n        [gqlQuery]\n    );\n\n    const { data, fetchMore, loading } = gqlQuery;\n\n    const list = get(data, \"fileManager.listFiles.data\") || [];\n    const [createFile] = useMutation(CREATE_FILE, { update: updateCacheAfterCreateFile });\n    const uploadFile = async files => {\n        setUploading(true);\n        const list = Array.isArray(files) ? files : [files];\n\n        const errors = [];\n        await Promise.all(\n            list.map(async file => {\n                try {\n                    const response = await getFileUploader()(file, { apolloClient });\n                    await createFile({ variables: { data: response } });\n                } catch (e) {\n                    errors.push({ file, e });\n                }\n            })\n        );\n\n        if (!hasPreviouslyUploadedFiles) {\n            setHasPreviouslyUploadedFiles(true);\n        }\n\n        setUploading(false);\n\n        if (errors.length > 0) {\n            // We wait 750ms, just for everything to settle down a bit.\n            return setTimeout(() => {\n                showSnackbar(\n                    <>\n                        {t`One or more files were not uploaded successfully:`}\n                        <ol>\n                            {errors.map(({ file, e }) => (\n                                <li key={file.name}>\n                                    <strong>{file.name}</strong>: {getFileUploadErrorMessage(e)}\n                                </li>\n                            ))}\n                        </ol>\n                    </>\n                );\n            }, 750);\n        }\n\n        // We wait 750ms, just for everything to settle down a bit.\n        setTimeout(() => showSnackbar(t`File upload complete.`), 750);\n    };\n\n    const renderUploadFileAction = useCallback(\n        ({ browseFiles }) => {\n            if (!canCreate) {\n                return null;\n            }\n            return (\n                <ButtonPrimary onClick={browseFiles} disabled={uploading}>\n                    <ButtonIcon icon={<UploadIcon />} />\n                    {t`Upload...`}\n                </ButtonPrimary>\n            );\n        },\n        [uploading, canCreate]\n    );\n\n    const settingsQuery = useQuery(GET_FILE_SETTINGS);\n    const settings = get(settingsQuery.data, \"fileManager.getSettings.data\") || {};\n    return (\n        <Files\n            multiple\n            maxSize={settings.uploadMaxFileSize ? settings.uploadMaxFileSize + \"b\" : maxSize}\n            multipleMaxSize={multipleMaxSize}\n            multipleMaxCount={multipleMaxCount}\n            accept={accept}\n            onSuccess={files => uploadFile(files.map(file => file.src.file))}\n            onError={errors => {\n                const message = outputFileSelectionError(errors);\n                showSnackbar(message);\n            }}\n        >\n            {({ getDropZoneProps, browseFiles, validateFiles }) => (\n                <OverlayLayout\n                    {...getDropZoneProps({\n                        onDragEnter: () => hasPreviouslyUploadedFiles && setDragging(true),\n                        onExited: onClose\n                    })}\n                    barLeft={\n                        <InputSearch>\n                            <Icon className={searchIcon} icon={<SearchIcon />} />\n                            <input\n                                ref={searchInput}\n                                onChange={e => searchOnChange(e.target.value)}\n                                placeholder={t`Search by filename or tags`}\n                                disabled={!fmFilePermission}\n                                data-testid={\"file-manager.search-input\"}\n                            />\n                        </InputSearch>\n                    }\n                    barRight={\n                        selected.length > 0 ? (\n                            <ButtonPrimary\n                                disabled={uploading}\n                                onClick={async () => {\n                                    await onChange(multiple ? selected : selected[0]);\n\n                                    onClose();\n                                }}\n                            >\n                                {t`Select`} {multiple && `(${selected.length})`}\n                            </ButtonPrimary>\n                        ) : (\n                            renderUploadFileAction({ browseFiles })\n                        )\n                    }\n                >\n                    <>\n                        {dragging && hasPreviouslyUploadedFiles && (\n                            <DropFilesHere\n                                // @ts-ignore TODO: @adrian - className is never rendered?!\n                                className={style.draggingFeedback}\n                                onDragLeave={() => setDragging(false)}\n                                onDrop={() => setDragging(false)}\n                            />\n                        )}\n\n                        <FileDetails\n                            validateFiles={validateFiles}\n                            uploadFile={uploadFile}\n                            file={getFileDetailsFile({\n                                list,\n                                src: showingFileDetails\n                            })}\n                            canEdit={canEdit}\n                        />\n\n                        <LeftSidebar\n                            queryParams={queryParams}\n                            toggleTag={tag => toggleTag({ tag, queryParams })}\n                        />\n\n                        <FileListWrapper data-testid={\"fm-list-wrapper\"}>\n                            {loading && (\n                                <CircularProgress\n                                    label={t`Loading Files...`}\n                                    style={{ opacity: 1 }}\n                                />\n                            )}\n                            <Scrollbar\n                                onScrollFrame={scrollFrame =>\n                                    refreshOnScroll({\n                                        scrollFrame,\n                                        fetchMore\n                                    })\n                                }\n                            >\n                                <FileList>\n                                    {list.length\n                                        ? list.map(file =>\n                                              renderFile({\n                                                  uploadFile,\n                                                  file,\n                                                  showFileDetails: () => showFileDetails(file.src),\n                                                  selected: selected.find(\n                                                      current => current.src === file.src\n                                                  ),\n                                                  onSelect:\n                                                      typeof onChange === \"undefined\"\n                                                          ? undefined\n                                                          : async () => {\n                                                                if (multiple) {\n                                                                    toggleSelected(file);\n                                                                    return;\n                                                                }\n\n                                                                await onChange(file);\n                                                                onClose();\n                                                            }\n                                              })\n                                          )\n                                        : renderEmpty({\n                                              hasPreviouslyUploadedFiles,\n                                              browseFiles,\n                                              fmFilePermission\n                                          })}\n                                </FileList>\n                            </Scrollbar>\n                            <BottomInfoBar accept={accept} uploading={uploading} />\n                        </FileListWrapper>\n                    </>\n                </OverlayLayout>\n            )}\n        </Files>\n    );\n}\n\nFileManagerView.defaultProps = {\n    multiple: false,\n    maxSize: \"1000mb\",\n    multipleMaxSize: \"1000mb\",\n    multipleMaxCount: 100\n};\n\nexport default FileManagerView;\n"],"file":"FileManagerView.js"}