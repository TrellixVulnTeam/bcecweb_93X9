{"version":3,"sources":["../../../src/components/AppInstaller/index.tsx"],"names":["React","useEffect","useState","useSecurity","CircularProgress","ButtonPrimary","SplitView","LeftPanel","RightPanel","Grid","Cell","Typography","Elevation","View","useInstaller","Sidebar","Wrapper","alertClass","InnerContent","InstallContent","installerSplitView","SuccessDialog","markInstallerAsCompleted","localStorage","process","env","REACT_APP_WEBINY_VERSION","installerCompleted","AppInstaller","children","finished","setFinished","identity","loading","installers","installer","showNextInstaller","showLogin","onUser","skippingVersions","renderLayout","content","secure","renderBody","length","render","onInstalled","latest","current","availableUpgrades","filter","v","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,UAA/B;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,IAAT,QAAqB,6BAArB;AACA,SAASC,YAAT;AACA,OAAOC,OAAP;AACA,SACIC,OADJ,EAEIC,UAFJ,EAGIC,YAHJ,EAIIC,cAJJ,EAKIC,kBALJ,EAMIC,aANJ;;AASA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B;AAAA,SAC5BC,YAAY,CAAC,sBAAD,CAAZ,GAAuCC,OAAO,CAACC,GAAR,CAAYC,wBADvB;AAAA,CAAjC;;AAGA,IAAMC,kBAAkB,GACpBJ,YAAY,CAAC,sBAAD,CAAZ,KAAyCC,OAAO,CAACC,GAAR,CAAYC,wBADzD;AAGA,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC1C,MAAIF,kBAAJ,EAAwB;AACpB,WAAOE,QAAP;AACH;;AAED,kBAAgC3B,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAO4B,QAAP;AAAA,MAAiBC,WAAjB;;AACA,qBAAqB5B,WAAW,EAAhC;AAAA,MAAQ6B,QAAR,gBAAQA,QAAR;;AACA,sBAQIlB,YAAY,EARhB;AAAA,MACImB,OADJ,iBACIA,OADJ;AAAA,MAEIC,UAFJ,iBAEIA,UAFJ;AAAA,MAGIC,SAHJ,iBAGIA,SAHJ;AAAA,MAIIC,iBAJJ,iBAIIA,iBAJJ;AAAA,MAKIC,SALJ,iBAKIA,SALJ;AAAA,MAMIC,MANJ,iBAMIA,MANJ;AAAA,MAOIC,gBAPJ,iBAOIA,gBAPJ;;AAUAtC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI+B,QAAJ,EAAc;AACVM,MAAAA,MAAM;AACT;AACJ,GAJQ,EAIN,CAACN,QAAD,CAJM,CAAT;;AAMA,MAAMQ,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAA6B;AAAA,QAAnBC,MAAmB,uEAAV,KAAU;AAC9C,wBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEtB;AAAtB,oBACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE;AAAjB,oBACI,oBAAC,OAAD;AACI,MAAA,aAAa,EAAEc,UADnB;AAEI,MAAA,SAAS,EAAEC,SAFf;AAGI,MAAA,SAAS,EAAEE;AAHf,MADJ,CADJ,eAQI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAE;AAAlB,OACK,CAACA,SAAD,IAAc,CAACK,MAAf,IAAyBD,OAD9B,EAEK,CAACJ,SAAS,IAAIK,MAAd,kBACG,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,OAAmDD,OAAnD,CAHR,CARJ,CADJ;AAiBH,GAlBD;;AAoBA,MAAME,UAAU,GAAG,SAAbA,UAAa,CAAAF,OAAO,EAAI;AAC1B,wBACI,oBAAC,OAAD,qBACI,oBAAC,cAAD,qBACI,oBAAC,YAAD,QAAeA,OAAf,CADJ,CADJ,CADJ;AAOH,GARD,CA3C0C,CAqD1C;;;AACA,MAAIR,OAAJ,EAAa;AACT,wBAAO,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AAAzB,MAAP;AACH,GAxDyC,CA0D1C;;;AACA,MAAI,CAACA,OAAD,KAAaC,UAAU,CAACU,MAAX,KAAsB,CAAtB,IAA2Bd,QAAxC,CAAJ,EAAuD;AACnDR,IAAAA,wBAAwB;AACxB,WAAOO,QAAP;AACH;;AAED,MAAIM,SAAJ,EAAe;AACX,WAAOK,YAAY,CACfG,UAAU,CAACR,SAAS,CAACU,MAAV,CAAiB;AAAEC,MAAAA,WAAW,EAAEV;AAAf,KAAjB,CAAD,CADK,EAEfD,SAAS,CAACO,MAFK,CAAnB;AAIH;;AAED,MAAIH,gBAAJ,EAAsB;AAClB,WAAOI,UAAU,eACb,oBAAC,SAAD;AAAW,MAAA,CAAC,EAAE,CAAd;AAAiB,MAAA,SAAS,EAAE1B;AAA5B,oBACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE;AAAjB,oBADJ,CADJ,eAII,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE,OAAjB;AAA0B,MAAA,GAAG,EAAE;AAA/B,yEACwE,GADxE,eAEI,yCAAUsB,gBAAgB,CAACQ,MAA3B,CAFJ,kDAGY,yCAAUR,gBAAgB,CAACS,OAA3B,CAHZ,iGAKI,+BALJ,eAMI,+BANJ,oGASI,gCACKT,gBAAgB,CAACU,iBAAjB,CACIC,MADJ,CACW,UAAAC,CAAC;AAAA,aAAIA,CAAC,KAAKZ,gBAAgB,CAACQ,MAA3B;AAAA,KADZ,EAEIK,GAFJ,CAEQ,UAAAD,CAAC;AAAA,0BACF;AAAI,QAAA,GAAG,EAAEA;AAAT,cAAcA,CAAd,CADE;AAAA,KAFT,CADL,CATJ,mEAgBkE,GAhBlE,eAiBI;AACI,MAAA,IAAI,EAAE,2DADV;AAEI,MAAA,MAAM,EAAE,QAFZ;AAGI,MAAA,GAAG,EAAE;AAHT,wBAjBJ,EAuBS,GAvBT,qJA0BI,+BA1BJ,eA2BI,+BA3BJ,8CA4B6C,GA5B7C,eA6BI;AACI,MAAA,IAAI,EAAE,8BADV;AAEI,MAAA,MAAM,EAAE,QAFZ;AAGI,MAAA,GAAG,EAAE;AAHT,0BA7BJ,CADJ,CAJJ,CADJ,CADa,CAAjB;AAgDH;;AAED,SAAOX,YAAY,CACfG,UAAU,eACN,oBAAC,SAAD;AAAW,IAAA,CAAC,EAAE;AAAd,kBACI,oBAAC,aAAD,qBACI,uFADJ,eAEI,oBAAC,aAAD;AACI,mBAAa,8BADjB;AAEI,IAAA,OAAO,EAAE,mBAAM;AACXrB,MAAAA,wBAAwB;AACxBS,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AALL,uBAFJ,CADJ,CADM,CADK,EAiBf,IAjBe,CAAnB;AAmBH,CA7IM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSecurity } from \"@webiny/app-security\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { SplitView, LeftPanel, RightPanel } from \"../SplitView\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { View } from \"@webiny/app/components/View\";\nimport { useInstaller } from \"./useInstaller\";\nimport Sidebar from \"./Sidebar\";\nimport {\n    Wrapper,\n    alertClass,\n    InnerContent,\n    InstallContent,\n    installerSplitView,\n    SuccessDialog\n} from \"./styled\";\n\nconst markInstallerAsCompleted = () =>\n    (localStorage[\"wby_installer_status\"] = process.env.REACT_APP_WEBINY_VERSION);\n\nconst installerCompleted =\n    localStorage[\"wby_installer_status\"] === process.env.REACT_APP_WEBINY_VERSION;\n\nexport const AppInstaller = ({ children }) => {\n    if (installerCompleted) {\n        return children;\n    }\n\n    const [finished, setFinished] = useState(false);\n    const { identity } = useSecurity();\n    const {\n        loading,\n        installers,\n        installer,\n        showNextInstaller,\n        showLogin,\n        onUser,\n        skippingVersions\n    } = useInstaller();\n\n    useEffect(() => {\n        if (identity) {\n            onUser();\n        }\n    }, [identity]);\n\n    const renderLayout = (content, secure = false) => {\n        return (\n            <SplitView className={installerSplitView}>\n                <LeftPanel span={2}>\n                    <Sidebar\n                        allInstallers={installers}\n                        installer={installer}\n                        showLogin={showLogin}\n                    />\n                </LeftPanel>\n                <RightPanel span={10}>\n                    {!showLogin && !secure && content}\n                    {(showLogin || secure) && (\n                        <View name={\"admin.installation.secureInstaller\"}>{content}</View>\n                    )}\n                </RightPanel>\n            </SplitView>\n        );\n    };\n\n    const renderBody = content => {\n        return (\n            <Wrapper>\n                <InstallContent>\n                    <InnerContent>{content}</InnerContent>\n                </InstallContent>\n            </Wrapper>\n        );\n    };\n\n    // Loading installers data\n    if (loading) {\n        return <CircularProgress label={\"Checking apps...\"} />;\n    }\n\n    // This means there are no installers to run or installation was finished\n    if (!loading && (installers.length === 0 || finished)) {\n        markInstallerAsCompleted();\n        return children;\n    }\n\n    if (installer) {\n        return renderLayout(\n            renderBody(installer.render({ onInstalled: showNextInstaller })),\n            installer.secure\n        );\n    }\n\n    if (skippingVersions) {\n        return renderBody(\n            <Elevation z={1} className={alertClass}>\n                <Grid>\n                    <Cell span={12}>\n                        <Typography use={\"headline4\"}>Important!</Typography>\n                    </Cell>\n                    <Cell span={12}>\n                        <Typography use={\"body1\"} tag={\"div\"}>\n                            We&apos;ve detected that your current application is running Webiny{\" \"}\n                            <strong>v{skippingVersions.latest}</strong>. However, your API is\n                            running <strong>v{skippingVersions.current}</strong>. Unfortunately, we\n                            can&apos;t upgrade your system by skipping versions in between.\n                            <br />\n                            <br />\n                            Here&apos;s a list of versions you skipped, that contain upgrades you\n                            need to install:\n                            <ul>\n                                {skippingVersions.availableUpgrades\n                                    .filter(v => v !== skippingVersions.latest)\n                                    .map(v => (\n                                        <li key={v}>v{v}</li>\n                                    ))}\n                            </ul>\n                            For instructions on how to upgrade Webiny, please consult our{\" \"}\n                            <a\n                                href={\"https://docs.webiny.com/docs/how-to-guides/upgrade-webiny\"}\n                                target={\"_blank\"}\n                                rel={\"noreferrer noopener\"}\n                            >\n                                Upgrade Webiny\n                            </a>{\" \"}\n                            guide. Note that some versions may have a dedicated article with upgrade\n                            instructions, so look out for those in the upgrade guide.\n                            <br />\n                            <br />\n                            If you run into problems, find us on our{\" \"}\n                            <a\n                                href={\"https://www.webiny.com/slack\"}\n                                target={\"_blank\"}\n                                rel={\"noreferrer noopener\"}\n                            >\n                                Slack community.\n                            </a>\n                        </Typography>\n                    </Cell>\n                </Grid>\n            </Elevation>\n        );\n    }\n\n    return renderLayout(\n        renderBody(\n            <Elevation z={1}>\n                <SuccessDialog>\n                    <p>You have successfully installed all new applications!</p>\n                    <ButtonPrimary\n                        data-testid={\"open-webiny-cms-admin-button\"}\n                        onClick={() => {\n                            markInstallerAsCompleted();\n                            setFinished(true);\n                        }}\n                    >\n                        Open Admin Area\n                    </ButtonPrimary>\n                </SuccessDialog>\n            </Elevation>\n        ),\n        true\n    );\n};\n"],"file":"index.js"}