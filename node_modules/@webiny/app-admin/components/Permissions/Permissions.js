import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import React, { useMemo } from "react";
import { Accordion } from "@webiny/ui/Accordion";
import { plugins } from "@webiny/plugins";
export var Permissions = function Permissions(_ref) {
  var id = _ref.id,
      value = _ref.value,
      onChange = _ref.onChange;

  var _useMemo = useMemo(function () {
    return plugins.byType("admin-app-permissions-renderer").reduce(function (acc, plugin) {
      if (plugin.system === true) {
        acc.systemPlugins.push(plugin);
      } else {
        acc.permissionPlugins.push(plugin);
      }

      return acc;
    }, {
      systemPlugins: [],
      permissionPlugins: []
    });
  }, []),
      systemPlugins = _useMemo.systemPlugins,
      permissionPlugins = _useMemo.permissionPlugins;

  return /*#__PURE__*/React.createElement(Accordion, {
    elevation: 0
  }, [].concat(_toConsumableArray(systemPlugins), _toConsumableArray(permissionPlugins)).map(function (pl) {
    return /*#__PURE__*/React.createElement(React.Fragment, {
      key: pl.name + "." + id
    }, pl.render({
      value: value,
      onChange: onChange
    }));
  }));
};
//# sourceMappingURL=Permissions.js.map