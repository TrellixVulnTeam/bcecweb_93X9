{"version":3,"sources":["../../../src/components/Permissions/Permissions.tsx"],"names":["React","useMemo","Accordion","plugins","Permissions","id","value","onChange","byType","reduce","acc","plugin","system","systemPlugins","push","permissionPlugins","map","pl","name","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAYA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoC;AAAA,MAAjCC,EAAiC,QAAjCA,EAAiC;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;;AAC3D,iBAA6CN,OAAO,CAAoB,YAAM;AAC1E,WAAOE,OAAO,CACTK,MADE,CACuC,gCADvC,EAEFC,MAFE,CAGC,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACb,UAAIA,MAAM,CAACC,MAAP,KAAkB,IAAtB,EAA4B;AACxBF,QAAAA,GAAG,CAACG,aAAJ,CAAkBC,IAAlB,CAAuBH,MAAvB;AACH,OAFD,MAEO;AACHD,QAAAA,GAAG,CAACK,iBAAJ,CAAsBD,IAAtB,CAA2BH,MAA3B;AACH;;AACD,aAAOD,GAAP;AACH,KAVF,EAWC;AAAEG,MAAAA,aAAa,EAAE,EAAjB;AAAqBE,MAAAA,iBAAiB,EAAE;AAAxC,KAXD,CAAP;AAaH,GAdmD,EAcjD,EAdiD,CAApD;AAAA,MAAQF,aAAR,YAAQA,aAAR;AAAA,MAAuBE,iBAAvB,YAAuBA,iBAAvB;;AAgBA,sBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAE;AAAtB,KACK,6BAAIF,aAAJ,sBAAsBE,iBAAtB,GAAyCC,GAAzC,CAA6C,UAAAC,EAAE;AAAA,wBAC5C,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEA,EAAE,CAACC,IAAH,GAAU,GAAV,GAAgBb;AAArC,OACKY,EAAE,CAACE,MAAH,CAAU;AACPb,MAAAA,KAAK,EAALA,KADO;AAEPC,MAAAA,QAAQ,EAARA;AAFO,KAAV,CADL,CAD4C;AAAA,GAA/C,CADL,CADJ;AAYH,CA7BM","sourcesContent":["import React, { useMemo } from \"react\";\nimport { AdminAppPermissionRendererPlugin } from \"../../types\";\nimport { Accordion } from \"@webiny/ui/Accordion\";\nimport { plugins } from \"@webiny/plugins\";\nimport { BindComponentRenderProp } from \"@webiny/form\";\n\ntype Props = BindComponentRenderProp & {\n    id: string;\n};\n\ntype PermissionPlugins = {\n    systemPlugins: AdminAppPermissionRendererPlugin[];\n    permissionPlugins: AdminAppPermissionRendererPlugin[];\n};\n\nexport const Permissions = ({ id, value, onChange }: Props) => {\n    const { systemPlugins, permissionPlugins } = useMemo<PermissionPlugins>(() => {\n        return plugins\n            .byType<AdminAppPermissionRendererPlugin>(\"admin-app-permissions-renderer\")\n            .reduce(\n                (acc, plugin) => {\n                    if (plugin.system === true) {\n                        acc.systemPlugins.push(plugin);\n                    } else {\n                        acc.permissionPlugins.push(plugin);\n                    }\n                    return acc;\n                },\n                { systemPlugins: [], permissionPlugins: [] }\n            );\n    }, []);\n\n    return (\n        <Accordion elevation={0}>\n            {[...systemPlugins, ...permissionPlugins].map(pl => (\n                <React.Fragment key={pl.name + \".\" + id}>\n                    {pl.render({\n                        value,\n                        onChange\n                    })}\n                </React.Fragment>\n            ))}\n        </Accordion>\n    );\n};\n"],"file":"Permissions.js"}