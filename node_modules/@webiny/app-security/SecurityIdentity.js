import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import minimatch from "minimatch";
export var SecurityIdentity = /*#__PURE__*/function () {
  function SecurityIdentity(data) {
    _classCallCheck(this, SecurityIdentity);

    _defineProperty(this, "login", void 0);

    _defineProperty(this, "permissions", void 0);

    Object.assign(this, data);
  }
  /**
   * Create a new instance of SecurityIdentity from the existing instance.
   */


  _createClass(SecurityIdentity, [{
    key: "setPermissions",
    value: function setPermissions(permissions) {
      this.permissions = permissions;
    }
  }, {
    key: "getPermission",
    value: function getPermission(name) {
      var perms = this.permissions || [];
      var exactMatch = perms.find(function (p) {
        return p.name === name;
      });

      if (exactMatch) {
        return exactMatch;
      } // Try matching using patterns


      return perms.find(function (p) {
        return minimatch(name, p.name);
      });
    }
  }, {
    key: "logout",
    value: function logout() {
      console.warn("You must implement a \"logout\" method when setting SecurityIdentity!");
    }
  }], [{
    key: "from",
    value: function from(identity, data) {
      var currentData = Object.keys(identity).reduce(function (acc, key) {
        acc[key] = identity[key];
        return acc;
      }, {});
      return new SecurityIdentity(_objectSpread(_objectSpread({}, currentData), data));
    }
  }]);

  return SecurityIdentity;
}();
//# sourceMappingURL=SecurityIdentity.js.map