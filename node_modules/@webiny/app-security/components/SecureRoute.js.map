{"version":3,"sources":["../../src/components/SecureRoute.tsx"],"names":["useSecurity","plugins","children","permission","identity","hasPermission","getPermission","plugin","byName","render"],"mappings":"AACA,SAASA,WAAT,QAA4B,IAA5B;AAEA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,gBAAe,gBAMW;AAAA,MALtBC,QAKsB,QALtBA,QAKsB;AAAA,MAJtBC,UAIsB,QAJtBA,UAIsB;;AACtB,qBAAqBH,WAAW,EAAhC;AAAA,MAAQI,QAAR,gBAAQA,QAAR;;AACA,MAAMC,aAAa,GAAGF,UAAU,GAAGC,QAAQ,CAACE,aAAT,CAAuBH,UAAvB,CAAH,GAAwC,IAAxE;;AAEA,MAAIE,aAAJ,EAAmB;AACf,WAAOH,QAAP;AACH;;AAED,MAAMK,MAAM,GAAGN,OAAO,CAACO,MAAR,CAAuC,oBAAvC,CAAf;;AACA,MAAI,CAACD,MAAL,EAAa;AACT,WAAO,IAAP;AACH;;AAED,SAAOA,MAAM,CAACE,MAAP,EAAP;AACH,CApBD","sourcesContent":["import * as React from \"react\";\nimport { useSecurity } from \"..\";\nimport { SecureRouteErrorPlugin } from \"../types\";\nimport { plugins } from \"@webiny/plugins\";\n\nexport default ({\n    children,\n    permission\n}: {\n    children: any;\n    permission?: string;\n}): React.ReactElement => {\n    const { identity } = useSecurity();\n    const hasPermission = permission ? identity.getPermission(permission) : true;\n\n    if (hasPermission) {\n        return children;\n    }\n\n    const plugin = plugins.byName<SecureRouteErrorPlugin>(\"secure-route-error\");\n    if (!plugin) {\n        return null;\n    }\n\n    return plugin.render();\n};\n"],"file":"SecureRoute.js"}