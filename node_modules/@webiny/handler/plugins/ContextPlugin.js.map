{"version":3,"sources":["../../src/plugins/ContextPlugin.ts"],"names":["ContextPlugin","Plugin","constructor","callable","_callable","apply","context","Error"],"mappings":";;;;;;;;;;;AAAA;;AAMO,MAAMA,aAAN,SAAsCC,eAAtC,CAA6C;AAIhDC,EAAAA,WAAW,CAACC,QAAD,EAAgC;AACvC;AADuC;AAEvC,SAAKC,SAAL,GAAiBD,QAAjB;AACH;;AAEDE,EAAAA,KAAK,CAACC,OAAD,EAA0C;AAC3C,QAAI,OAAO,KAAKF,SAAZ,KAA0B,UAA9B,EAA0C;AACtC,YAAMG,KAAK,CACN,uIADM,CAAX;AAGH;;AAED,WAAO,KAAKH,SAAL,CAAeE,OAAf,CAAP;AACH;;AAjB+C;;;8BAAvCN,a,UACqB,S","sourcesContent":["import { Plugin } from \"@webiny/plugins\";\n\ninterface Callable<TContext> {\n    (context: TContext): void | Promise<void>;\n}\n\nexport class ContextPlugin<TContext> extends Plugin {\n    public static readonly type = \"context\";\n    private readonly _callable: Callable<TContext>;\n\n    constructor(callable?: Callable<TContext>) {\n        super();\n        this._callable = callable;\n    }\n\n    apply(context: TContext): void | Promise<void> {\n        if (typeof this._callable !== \"function\") {\n            throw Error(\n                `Missing callable in ContextPlugin! Either pass a callable to plugin constructor or extend the plugin and override the \"apply\" method.`\n            );\n        }\n\n        return this._callable(context);\n    }\n}\n"],"file":"ContextPlugin.js"}