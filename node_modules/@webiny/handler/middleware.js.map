{"version":3,"sources":["../src/middleware.ts"],"names":["functions","args","length","Promise","resolve","chain","parentResolve","parentReject","next","fn","shift","reject","result","e","then","catch"],"mappings":";;;;;;;AAAA;AACA;AACA;eACe,CAACA,SAA0B,GAAG,EAA9B,KAA+C;AAC1D,SAAO,CAAC,GAAGC,IAAJ,KAA2B;AAC9B,QAAI,CAACD,SAAS,CAACE,MAAf,EAAuB;AACnB,aAAOC,OAAO,CAACC,OAAR,EAAP;AACH,KAH6B,CAK9B;;;AACA,UAAMC,KAAK,GAAG,CAAC,GAAGL,SAAJ,CAAd;AACA,WAAO,IAAIG,OAAJ,CAAY,CAACG,aAAD,EAAqBC,YAArB,KAAsC;AACrD,YAAMC,IAAI,GAAG,YAAY;AACrB,cAAMC,EAAE,GAAGJ,KAAK,CAACK,KAAN,EAAX;;AACA,YAAI,CAACD,EAAL,EAAS;AACL,iBAAON,OAAO,CAACC,OAAR,EAAP;AACH;;AAED,eAAO,IAAID,OAAJ,CAAY,OAAOC,OAAP,EAAgBO,MAAhB,KAA2B;AAC1C,cAAI;AACA,kBAAMC,MAAM,GAAG,MAAMH,EAAE,CAAC,GAAGR,IAAJ,EAAUG,OAAV,CAAvB;;AACA,gBAAI,OAAOQ,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,qBAAON,aAAa,CAACM,MAAD,CAApB;AACH;AACJ,WALD,CAKE,OAAOC,CAAP,EAAU;AACRF,YAAAA,MAAM,CAACE,CAAD,CAAN;AACH;AACJ,SATM,EAUFC,IAVE,CAUG,MAAM;AACR,iBAAON,IAAI,EAAX;AACH,SAZE,EAaFM,IAbE,CAaG,MAAM;AACRR,UAAAA,aAAa,CAAC,GAAGL,IAAJ,CAAb;AACH,SAfE,EAgBFc,KAhBE,CAgBIF,CAAC,IAAI;AACRN,UAAAA,YAAY,CAACM,CAAD,CAAZ;AACH,SAlBE,CAAP;AAmBH,OAzBD;;AA2BA,aAAOL,IAAI,EAAX;AACH,KA7BM,CAAP;AA8BH,GArCD;AAsCH,C","sourcesContent":["/**\n * Compose a single middleware from the array of middleware functions\n */\nexport default (functions: Array<Function> = []): Function => {\n    return (...args): Promise<any> => {\n        if (!functions.length) {\n            return Promise.resolve();\n        }\n\n        // Create a clone of function chain to prevent modifying the original array with `shift()`\n        const chain = [...functions];\n        return new Promise((parentResolve: any, parentReject) => {\n            const next = async () => {\n                const fn = chain.shift();\n                if (!fn) {\n                    return Promise.resolve();\n                }\n\n                return new Promise(async (resolve, reject) => {\n                    try {\n                        const result = await fn(...args, resolve);\n                        if (typeof result !== \"undefined\") {\n                            return parentResolve(result);\n                        }\n                    } catch (e) {\n                        reject(e);\n                    }\n                })\n                    .then(() => {\n                        return next();\n                    })\n                    .then(() => {\n                        parentResolve(...args);\n                    })\n                    .catch(e => {\n                        parentReject(e);\n                    });\n            };\n\n            return next();\n        });\n    };\n};\n"],"file":"middleware.js"}