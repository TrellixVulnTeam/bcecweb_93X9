import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import slugify from "slugify";
import { InputElement } from "@webiny/app-admin/ui/elements/form/InputElement";
import { validation } from "@webiny/validation";
import { TextareaElement } from "@webiny/app-admin/ui/elements/form/TextareaElement";
import { PageSettingsFormView } from "./PageSettingsView/PageSettingsFormView";
import { SelectElement } from "@webiny/app-admin/ui/elements/form/SelectElement";
import { plugins } from "@webiny/plugins";
import { FileManagerElement } from "@webiny/app-admin/ui/elements/form/FileManagerElement";
import { TagsMultiAutocompleteElement } from "../elements/TagsMultiAutocompleteElement";

var toSlug = function toSlug(value, cb) {
  cb(slugify(value, {
    replacement: "-",
    lower: true,
    remove: /[*#\?<>_\{\}\[\]+~.()'"!:;@]/g
  })); // eslint-disable-line
};

export var GeneralSettingsView = /*#__PURE__*/function (_PageSettingsFormView) {
  _inherits(GeneralSettingsView, _PageSettingsFormView);

  var _super = _createSuper(GeneralSettingsView);

  function GeneralSettingsView() {
    var _this;

    _classCallCheck(this, GeneralSettingsView);

    _this = _super.call(this, "GeneralSettingsView");

    _this.setTitle("General Settings");

    _this.addField(new InputElement("title", {
      name: "title",
      label: "Title",
      description: "Page title.",
      validators: function validators() {
        return validation.create("required");
      }
    }));

    _this.addField(new InputElement("path", {
      name: "path",
      label: "Path",
      description: "For example: \"/about-us\". Must contain at least two characters.",
      validators: function validators() {
        return validation.create("required,minLength:2");
      },
      beforeChange: toSlug
    }));

    _this.addField(new TextareaElement("snippet", {
      name: "settings.general.snippet",
      label: "Snippet",
      description: "Page snippet.",
      rows: 4
    }));

    _this.addField(new SelectElement("layout", {
      name: "settings.general.layout",
      label: "Layout",
      description: "Render this page using the selected layout.",
      options: plugins.byType("pb-page-layout").map(function (pl) {
        return {
          value: pl.layout.name,
          label: pl.layout.title
        };
      })
    }));

    _this.addField(new TagsMultiAutocompleteElement("tags", {
      name: "settings.general.tags",
      label: "Tags",
      description: "Add tags to filter pages."
    }));

    _this.addField(new FileManagerElement("image", {
      name: "settings.general.image",
      label: "Page Image",
      onChangePickAttributes: ["id", "src"]
    }));

    _this.applyPlugins(GeneralSettingsView);

    return _this;
  }

  return GeneralSettingsView;
}(PageSettingsFormView);
//# sourceMappingURL=GeneralSettingsView.js.map