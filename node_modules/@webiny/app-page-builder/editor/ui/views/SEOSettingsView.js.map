{"version":3,"sources":["../../../../src/editor/ui/views/SEOSettingsView.ts"],"names":["trim","InputElement","PageSettingsFormView","validation","SmallButtonElement","TypographyElement","LabelElement","ButtonElement","DynamicFieldsetElement","ButtonGroupElement","SEOSettingsView","setTitle","addField","name","label","description","metaTags","header","typography","addElement","text","setHeaderElement","setCreateEmptyElement","actions","emptyElement","type","onClick","add","setCreateRowElement","row","index","nameElement","validators","create","beforeChange","tag","cb","contentElement","moveAfter","buttons","remove","applyPlugins"],"mappings":"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","sourcesContent":["import trim from \"lodash/trim\";\nimport { InputElement } from \"@webiny/app-admin/ui/elements/form/InputElement\";\nimport { PageSettingsFormView } from \"~/editor/ui/views/PageSettingsView/PageSettingsFormView\";\nimport { validation } from \"@webiny/validation\";\nimport { SmallButtonElement } from \"@webiny/app-admin/ui/elements/SmallButtonElement\";\nimport { TypographyElement } from \"@webiny/app-admin/ui/elements/TypographyElement\";\nimport { LabelElement } from \"@webiny/app-admin/ui/elements/LabelElement\";\nimport { ButtonElement } from \"@webiny/app-admin/ui/elements/ButtonElement\";\nimport { DynamicFieldsetElement } from \"@webiny/app-admin/ui/elements/form/DynamicFieldsetElement\";\nimport { ButtonGroupElement } from \"@webiny/app-admin/ui/elements/ButtonGroupElement\";\n\nexport class SEOSettingsView extends PageSettingsFormView {\n    constructor() {\n        super(\"SEOSettingsView\");\n\n        this.setTitle(\"SEO Media\");\n\n        this.addField(\n            new InputElement(\"title\", {\n                name: \"settings.seo.title\",\n                label: \"Title\",\n                description: \"SEO title.\"\n            })\n        );\n\n        this.addField(\n            new InputElement(\"description\", {\n                name: \"settings.seo.description\",\n                label: \"Description\",\n                description: `SEO description.`\n            })\n        );\n\n        const metaTags = new DynamicFieldsetElement(\"metaTags\", { name: \"settings.seo.meta\" });\n\n        const header = new TypographyElement(\"metaTags.header\", {\n            typography: \"button\"\n        });\n        header.addElement(new LabelElement(\"metaTags.header.label\", { text: \"Meta tags\" }));\n        metaTags.setHeaderElement(header);\n\n        metaTags.setCreateEmptyElement(({ actions }) => {\n            const emptyElement = new TypographyElement(\"metaTags.empty\", { typography: \"button\" });\n            emptyElement.addElement(\n                new LabelElement(\"metaTags.empty.label\", { text: \"To add other meta tags, click \" })\n            );\n            emptyElement.addElement(\n                new ButtonElement(\"metaTags.empty.buttonCreate\", {\n                    label: \"Add meta tag\",\n                    type: \"primary\",\n                    onClick: actions.add()\n                })\n            );\n            return emptyElement;\n        });\n\n        metaTags.setCreateRowElement(({ row, actions, index }) => {\n            const nameElement = row.addElement(\n                new InputElement(`metaTags.${index}.name`, {\n                    name: `settings.seo.meta.${index}.name`,\n                    label: \"Name\",\n                    validators: () => validation.create(\"required\"),\n                    beforeChange: (tag, cb) => cb(trim(tag))\n                })\n            );\n            const contentElement = new InputElement(`metaTags.${index}.content`, {\n                name: `settings.seo.meta.${index}.content`,\n                label: \"Content\",\n                validators: () => validation.create(\"required\"),\n                beforeChange: (tag, cb) => cb(trim(tag))\n            });\n\n            contentElement.moveAfter(nameElement);\n\n            const buttons = new ButtonGroupElement(`metaTags.${index}.buttons`);\n            buttons.addElement(\n                new SmallButtonElement(`metaTags.${index}.buttonAdd`, {\n                    type: \"primary\",\n                    label: \"+\",\n                    onClick: actions.add(index)\n                })\n            );\n            buttons.addElement(\n                new SmallButtonElement(`metaTags.${index}.buttonRemove`, {\n                    type: \"secondary\",\n                    label: \"-\",\n                    onClick: actions.remove(index)\n                })\n            );\n\n            buttons.moveAfter(contentElement);\n\n            return row;\n        });\n\n        this.addField(metaTags);\n\n        this.applyPlugins(SEOSettingsView);\n    }\n}\n"],"file":"SEOSettingsView.js"}