import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { plugins } from "@webiny/plugins";
import { SplitView } from "@webiny/app-admin/ui/views/SplitView";
import { ViewElement } from "@webiny/app-admin/ui/elements/ViewElement";
import { OverlayView } from "@webiny/app-admin/ui/views/OverlayView";
import { usePageSettings } from "../../hooks/usePageSettings";
import { PageSettingsTabElement } from "./PageSettingsView/PageSettingsTabElement";
import { PageSettingsTabsElement } from "./PageSettingsView/PageSettingsTabsElement";
import { PbEditorPageSettingsPlugin } from "../../../plugins/PbEditorPageSettingsPlugin";
import { GenericElement } from "@webiny/app-admin/ui/elements/GenericElement";
import { FormElement } from "@webiny/app-admin/ui/elements/form/FormElement";
import { FormView } from "@webiny/app-admin/ui/views/FormView";
export var PageSettingsView = /*#__PURE__*/function (_OverlayView) {
  _inherits(PageSettingsView, _OverlayView);

  var _super = _createSuper(PageSettingsView);

  function PageSettingsView() {
    var _this;

    _classCallCheck(this, PageSettingsView);

    _this = _super.call(this, "PageSettingsView");

    _defineProperty(_assertThisInitialized(_this), "_splitView", void 0);

    _defineProperty(_assertThisInitialized(_this), "_sections", new Map());

    _defineProperty(_assertThisInitialized(_this), "_tabs", void 0);

    _defineProperty(_assertThisInitialized(_this), "_form", void 0);

    _this.addHookDefinition("pageSettings", usePageSettings);

    _this.addOnExited(function () {
      _this.getPageSettingsHook().closeSettings();
    });

    _this.setTitle(function () {
      return "Page Settings";
    });

    _this.setupView();

    _this.applyPlugins(PageSettingsView);

    _this.setupLegacyPlugins(); // Show this view as soon as it's mounted.


    _this.isRendered().then(function () {
      return _this.setIsVisible(true);
    });

    return _this;
  }

  _createClass(PageSettingsView, [{
    key: "getLeftPanel",
    value: function getLeftPanel() {
      return this._splitView.getLeftPanel();
    }
  }, {
    key: "getRightPanel",
    value: function getRightPanel() {
      return this._splitView.getRightPanel();
    }
  }, {
    key: "addSection",
    value: function addSection(section) {
      var _this2 = this;

      this._sections.set(section.id, section);

      this._tabs.addElement(new PageSettingsTabElement(section.id, section));

      this._form.addElement(new ViewElement(section.id, {
        view: section.view,
        shouldRender: function shouldRender() {
          var _this2$getPageSetting = _this2.getPageSettingsHook(),
              activeSection = _this2$getPageSetting.activeSection;

          if (!activeSection && section.id === "general") {
            return true;
          }

          return _this2.getPageSettingsHook().activeSection === section.id;
        }
      }));
    }
  }, {
    key: "getActiveSection",
    value: function getActiveSection() {
      var _this$getPageSettings = this.getPageSettingsHook(),
          activeSection = _this$getPageSettings.activeSection;

      if (!activeSection) {
        return this._sections.values().next().value;
      }

      return this._sections.get(activeSection);
    }
  }, {
    key: "getPageSettingsHook",
    value: function getPageSettingsHook() {
      return this.getHook("pageSettings");
    }
  }, {
    key: "setupView",
    value: function setupView() {
      var _this3 = this;

      this._splitView = new SplitView("pageSettingsContent");
      this._form = new FormElement("form", {
        onSubmit: function onSubmit(data) {
          return _this3.getPageSettingsHook().savePage(data);
        },
        getData: function getData() {
          return _this3.getPageSettingsHook().pageData;
        }
      });
      this.getContentElement().addElement(new ViewElement("pageSettingsContent", {
        view: this._splitView
      }));
      this._tabs = this._splitView.getLeftPanel().addElement(new PageSettingsTabsElement("tabs"));
      this.getRightPanel().addElement(this._form);
    }
  }, {
    key: "setupLegacyPlugins",
    value: function setupLegacyPlugins() {
      var _this4 = this;

      // IMPORTANT! The following piece of code is for BACKWARDS COMPATIBILITY purposes only!
      var oldPlugins = plugins.byType(PbEditorPageSettingsPlugin.type);
      oldPlugins.forEach(function (pl) {
        var formView = new FormView(pl.name);
        formView.setTitle(function () {
          return pl.title;
        });
        formView.setFormData(function () {
          return _this4.getPageSettingsHook().pageData;
        });
        formView.setOnSubmit(function (data) {
          return _this4.getPageSettingsHook().savePage(data);
        });
        formView.getFormContentElement().addElement(new GenericElement("fields", function (props) {
          return pl.render(props.formProps);
        }));

        _this4.addSection({
          id: pl.name,
          title: pl.title,
          description: pl.description,
          icon: pl.icon,
          view: formView
        });
      });
    }
  }]);

  return PageSettingsView;
}(OverlayView);
//# sourceMappingURL=PageSettingsView.js.map