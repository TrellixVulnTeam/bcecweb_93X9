{"version":3,"sources":["../../src/editor/index.tsx"],"names":["React","Editor","EditorComponent","EditorProvider","RecoilRoot","rootElementAtom","pageAtom","elementsAtom","flattenElements","page","revisions","set","content","id","elements","Object","keys","forEach","key","pageData","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAM,IAAIC,eAAnB;AACA,SAASC,cAAT;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SACIC,eADJ,EAGIC,QAHJ,EAIIC,YAJJ;AAOA,SAASC,eAAT;AAQA,OAAO,IAAMP,MAAgD,GAAG,SAAnDA,MAAmD,OAAyB;AAAA,MAAtBQ,IAAsB,QAAtBA,IAAsB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACrF,sBACI,oBAAC,UAAD;AACI,IAAA,eAAe,EAAE,gCAAa;AAAA,UAAVC,GAAU,SAAVA,GAAU;;AAC1B;AACAA,MAAAA,GAAG,CAACN,eAAD,EAAkBI,IAAI,CAACG,OAAL,CAAaC,EAA/B,CAAH;AAEA,UAAMC,QAAQ,GAAGN,eAAe,CAACC,IAAI,CAACG,OAAN,CAAhC;AACAG,MAAAA,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,OAAtB,CAA8B,UAAAC,GAAG,EAAI;AACjCP,QAAAA,GAAG,CAACJ,YAAY,CAACW,GAAD,CAAb,EAAoBJ,QAAQ,CAACI,GAAD,CAA5B,CAAH;AACH,OAFD;;AAIA,UAAMC,QAAQ,mCAAQV,IAAR;AAAcG,QAAAA,OAAO,EAAEQ;AAAvB,QAAd;;AACAT,MAAAA,GAAG,CAACL,QAAD,EAAWa,QAAX,CAAH;AACH;AAZL,kBAcI,oBAAC,cAAD,qBACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEV,IAAvB;AAA6B,IAAA,SAAS,EAAEC;AAAxC,IADJ,CAdJ,CADJ;AAoBH,CArBM","sourcesContent":["import React from \"react\";\nimport { Editor as EditorComponent } from \"./components/Editor\";\nimport { EditorProvider } from \"./contexts/EditorProvider\";\nimport { RecoilRoot } from \"recoil\";\nimport {\n    rootElementAtom,\n    RevisionsAtomType,\n    pageAtom,\n    elementsAtom,\n    PageAtomType\n} from \"./recoil/modules\";\nimport { flattenElements } from \"./helpers\";\nimport { PbEditorElement } from \"../types\";\n\ntype EditorPropsType = {\n    page: PageAtomType & PbEditorElement;\n    revisions: RevisionsAtomType;\n};\n\nexport const Editor: React.FunctionComponent<EditorPropsType> = ({ page, revisions }) => {\n    return (\n        <RecoilRoot\n            initializeState={({ set }) => {\n                /* Here we initialize elementsAtom and rootElement if it exists */\n                set(rootElementAtom, page.content.id);\n\n                const elements = flattenElements(page.content);\n                Object.keys(elements).forEach(key => {\n                    set(elementsAtom(key), elements[key]);\n                });\n\n                const pageData = { ...page, content: undefined };\n                set(pageAtom, pageData);\n            }}\n        >\n            <EditorProvider>\n                <EditorComponent page={page} revisions={revisions} />\n            </EditorProvider>\n        </RecoilRoot>\n    );\n};\n"],"file":"index.js"}