import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import { useCallback, useEffect, useState } from "react";
import { useRecoilValue } from "recoil";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { useEventActionHandler } from "./useEventActionHandler";
import { pageAtom } from "../recoil/modules";
import { useKeyHandler } from "./useKeyHandler";
import { DeactivatePluginActionEvent, UpdatePageRevisionActionEvent } from "../recoil/actions";
export function usePageSettings() {
  var _useState = useState(null),
      _useState2 = _slicedToArray(_useState, 2),
      activeSection = _useState2[0],
      setActiveSection = _useState2[1];

  var eventActionHandler = useEventActionHandler();
  var pageData = useRecoilValue(pageAtom);

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var _useKeyHandler = useKeyHandler(),
      removeKeyHandler = _useKeyHandler.removeKeyHandler,
      addKeyHandler = _useKeyHandler.addKeyHandler;

  var closeSettings = useCallback(function () {
    eventActionHandler.trigger(new DeactivatePluginActionEvent({
      name: "pb-editor-page-settings-bar"
    }));
  }, []);
  var savePage = useCallback(function (pageValue) {
    eventActionHandler.trigger(new UpdatePageRevisionActionEvent({
      debounce: false,
      page: pageValue,
      onFinish: function onFinish() {
        showSnackbar("Settings saved!");
        closeSettings();
      }
    }));
  }, []);
  useEffect(function () {
    addKeyHandler("escape", function (e) {
      e.preventDefault();
      closeSettings();
    });
    return function () {
      return removeKeyHandler("escape");
    };
  });
  return {
    setActiveSection: setActiveSection,
    activeSection: activeSection,
    savePage: savePage,
    closeSettings: closeSettings,
    pageData: pageData
  };
}
//# sourceMappingURL=usePageSettings.js.map