{"version":3,"sources":["../../../src/editor/components/Droppable.ts"],"names":["React","uiAtom","useDrop","useRecoilValue","defaultVisibility","type","isDragging","item","target","includes","Droppable","props","children","isDroppable","onDrop","isVisible","accept","collect","monitor","isOver","shallow","getItem","drop","undefined","isVisibleValue","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT;AACA,SAAgDC,OAAhD,QAA+D,WAA/D;AACA,SAASC,cAAT,QAA+B,QAA/B;;AAOA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAoE;AAAA,MAAjEC,IAAiE,QAAjEA,IAAiE;AAAA,MAA3DC,UAA2D,QAA3DA,UAA2D;AAAA,MAA/CC,IAA+C,QAA/CA,IAA+C;AAC1F,MAAMC,MAAM,GAAID,IAAI,IAAIA,IAAI,CAACC,MAAd,IAAyB,EAAxC;;AAEA,MAAI,CAACD,IAAD,IAAS,CAACC,MAAM,CAACC,QAAP,CAAgBJ,IAAhB,CAAd,EAAqC;AACjC,WAAO,KAAP;AACH;;AAED,SAAOC,UAAP;AACH,CARD;;AAqCA,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAA2B;AACzC,MAAQN,IAAR,GAA6DM,KAA7D,CAAQN,IAAR;AAAA,MAAcO,QAAd,GAA6DD,KAA7D,CAAcC,QAAd;AAAA,2BAA6DD,KAA7D,CAAwBE,WAAxB;AAAA,MAAwBA,WAAxB,mCAAsC;AAAA,WAAM,IAAN;AAAA,GAAtC;AAAA,MAAkDC,MAAlD,GAA6DH,KAA7D,CAAkDG,MAAlD;AACA,MAAMC,SAAN,GAAoBJ,KAApB,CAAMI,SAAN;;AAEA,wBAAuBZ,cAAc,CAACF,MAAD,CAArC;AAAA,MAAQK,UAAR,mBAAQA,UAAR;;AAEA,iBAAiCJ,OAAO,CAAC;AACrCc,IAAAA,MAAM,EAAE,SAD6B;AAErCC,IAAAA,OAAO,EAAE,iBAAAC,OAAO;AAAA,aAAK;AACjBC,QAAAA,MAAM,EAAED,OAAO,CAACC,MAAR,MAAoBD,OAAO,CAACC,MAAR,CAAe;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAf,CADX;AAEjBb,QAAAA,IAAI,EAAEW,OAAO,CAACG,OAAR;AAFW,OAAL;AAAA,KAFqB;AAMrCC,IAAAA,IANqC,gBAMhCf,IANgC,EAM1BW,OAN0B,EAMjB;AAChB,UAAI,OAAOJ,MAAP,KAAkB,UAAtB,EAAkC;AAC9BA,QAAAA,MAAM,CAACI,OAAO,CAACG,OAAR,EAAD,CAAN;AACH;AACJ;AAVoC,GAAD,CAAxC;AAAA;AAAA;AAAA,MAASd,IAAT,cAASA,IAAT;AAAA,MAAeY,MAAf,cAAeA,MAAf;AAAA,MAAyBG,IAAzB;;AAaA,MAAIP,SAAS,KAAKQ,SAAd,IAA2B,OAAOR,SAAP,KAAqB,UAApD,EAAgE;AAC5DA,IAAAA,SAAS,GAAGX,iBAAZ;AACH;;AAED,MAAMoB,cAAc,GAAGT,SAAS,CAAC;AAAEV,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,IAAI,EAAJA,IAAR;AAAcD,IAAAA,UAAU,EAAVA;AAAd,GAAD,CAAhC;;AACA,MAAI,CAACkB,cAAL,EAAqB;AACjB,WAAO,IAAP;AACH;;AAED,SAAOZ,QAAQ,CAAC;AAAEN,IAAAA,UAAU,EAAVA,UAAF;AAAca,IAAAA,MAAM,EAANA,MAAd;AAAsBN,IAAAA,WAAW,EAAEA,WAAW,CAACN,IAAD,CAA9C;AAAsDe,IAAAA,IAAI,EAAJA;AAAtD,GAAD,CAAf;AACH,CA7BD;;AA+BA,4BAAetB,KAAK,CAACyB,IAAN,CAAWf,SAAX,CAAf","sourcesContent":["import React from \"react\";\nimport { uiAtom } from \"../recoil/modules\";\nimport { ConnectDropTarget, DragObjectWithType, useDrop } from \"react-dnd\";\nimport { useRecoilValue } from \"recoil\";\n\ntype DefaultVisibilityPropType = {\n    type: string;\n    isDragging: boolean;\n    item: any;\n};\nconst defaultVisibility = ({ type, isDragging, item }: DefaultVisibilityPropType): boolean => {\n    const target = (item && item.target) || [];\n\n    if (!item || !target.includes(type)) {\n        return false;\n    }\n\n    return isDragging;\n};\n\nexport type DroppableChildrenFunction = (params: {\n    isDragging: boolean;\n    isOver: boolean;\n    isDroppable: boolean;\n    drop: ConnectDropTarget;\n}) => React.ReactElement;\n\nexport type DroppableIsDroppablePropType = (item: any) => boolean;\nexport type DroppableIsVisiblePropType = (params: {\n    type: string;\n    item: any;\n    isDragging: boolean;\n}) => boolean;\nexport type DragObjectWithTypeWithTarget = DragObjectWithType & {\n    id?: string;\n    type: string;\n    target: string[];\n};\nexport type DroppableOnDropPropType = (item: DragObjectWithTypeWithTarget) => void;\nexport type DroppableProps = {\n    type: string;\n    children: DroppableChildrenFunction;\n    isDroppable?: DroppableIsDroppablePropType;\n    isVisible: DroppableIsVisiblePropType;\n    onDrop: DroppableOnDropPropType;\n};\n\nconst Droppable = (props: DroppableProps) => {\n    const { type, children, isDroppable = () => true, onDrop } = props;\n    let { isVisible } = props;\n\n    const { isDragging } = useRecoilValue(uiAtom);\n\n    const [{ item, isOver }, drop] = useDrop({\n        accept: \"element\",\n        collect: monitor => ({\n            isOver: monitor.isOver() && monitor.isOver({ shallow: true }),\n            item: monitor.getItem()\n        }),\n        drop(item, monitor) {\n            if (typeof onDrop === \"function\") {\n                onDrop(monitor.getItem());\n            }\n        }\n    });\n\n    if (isVisible === undefined || typeof isVisible !== \"function\") {\n        isVisible = defaultVisibility;\n    }\n\n    const isVisibleValue = isVisible({ type, item, isDragging });\n    if (!isVisibleValue) {\n        return null;\n    }\n\n    return children({ isDragging, isOver, isDroppable: isDroppable(item), drop });\n};\n\nexport default React.memo(Droppable);\n"],"file":"Droppable.js"}