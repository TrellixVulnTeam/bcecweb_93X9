import React from "react";
import { ConnectDropTarget, DragObjectWithType } from "react-dnd";
export declare type DroppableChildrenFunction = (params: {
    isDragging: boolean;
    isOver: boolean;
    isDroppable: boolean;
    drop: ConnectDropTarget;
}) => React.ReactElement;
export declare type DroppableIsDroppablePropType = (item: any) => boolean;
export declare type DroppableIsVisiblePropType = (params: {
    type: string;
    item: any;
    isDragging: boolean;
}) => boolean;
export declare type DragObjectWithTypeWithTarget = DragObjectWithType & {
    id?: string;
    type: string;
    target: string[];
};
export declare type DroppableOnDropPropType = (item: DragObjectWithTypeWithTarget) => void;
export declare type DroppableProps = {
    type: string;
    children: DroppableChildrenFunction;
    isDroppable?: DroppableIsDroppablePropType;
    isVisible: DroppableIsVisiblePropType;
    onDrop: DroppableOnDropPropType;
};
declare const _default: React.MemoExoticComponent<(props: DroppableProps) => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>>;
export default _default;
