{"version":3,"sources":["../../../src/editor/components/Resizer.ts"],"names":["useEffect","useRef","useState","addEventListeners","onMouseMove","onMouseUp","document","addEventListener","removeEventListeners","removeEventListener","Resizer","axis","onResizeStart","onResizeStop","onResize","children","isDragging","setIsDragging","startPosition","getMousePosition","ev","pageX","pageY","mousePosition","current","onMouseDown","preventDefault","stopPropagation","targetEvent","nativeEvent","undefined","isResizing"],"mappings":"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","sourcesContent":["import React, { SyntheticEvent, useEffect, useRef, useState } from \"react\";\n\ntype ResizerProps = {\n    axis: \"x\" | \"y\";\n    onResizeStart?: () => void;\n    onResizeStop?: () => void;\n    onResize(position: number): void;\n    children(params: {\n        isResizing: boolean;\n        onMouseDown(e: SyntheticEvent): void;\n    }): React.ReactElement;\n};\n\ntype OnMouseMoveType = (ev: MouseEvent) => void;\ntype OnMouseUpType = (ev: MouseEvent) => void;\n\nconst addEventListeners = (onMouseMove: OnMouseMoveType, onMouseUp: OnMouseUpType) => {\n    document.addEventListener(\"mousemove\", onMouseMove);\n    document.addEventListener(\"mouseup\", onMouseUp);\n};\nconst removeEventListeners = (onMouseMove: OnMouseMoveType, onMouseUp: OnMouseUpType) => {\n    document.removeEventListener(\"mousemove\", onMouseMove);\n    document.removeEventListener(\"mouseup\", onMouseUp);\n};\n\nconst Resizer = ({\n    axis,\n    onResizeStart = () => {\n        return;\n    },\n    onResizeStop = () => {\n        return;\n    },\n    onResize,\n    children\n}: ResizerProps) => {\n    const [isDragging, setIsDragging] = useState<boolean>(false);\n    const startPosition = useRef(0);\n\n    // attaching events on drag start\n    // detaching on drag end\n    // on the first run event listeners can be removed, nothing wrong about it\n    useEffect(() => {\n        if (isDragging) {\n            addEventListeners(onMouseMove, onMouseUp);\n        } else {\n            removeEventListeners(onMouseMove, onMouseUp);\n        }\n\n        return () => {\n            removeEventListeners(onMouseMove, onMouseUp);\n        };\n    }, [isDragging]);\n\n    const getMousePosition = (ev: MouseEvent): number => {\n        return axis === \"x\" ? ev.pageX : ev.pageY;\n    };\n\n    const onMouseMove = (ev: MouseEvent) => {\n        if (!isDragging) {\n            return;\n        }\n        const mousePosition = getMousePosition(ev);\n        onResize(startPosition.current - mousePosition);\n        startPosition.current = mousePosition;\n    };\n\n    const onMouseUp = () => {\n        if (!isDragging) {\n            return;\n        }\n        setIsDragging(false);\n        onResizeStop();\n    };\n\n    const onMouseDown = (ev: SyntheticEvent<any, MouseEvent>) => {\n        ev.preventDefault();\n        ev.stopPropagation();\n        const targetEvent =\n            ev.nativeEvent?.pageX !== undefined ? ev.nativeEvent : (ev as unknown as MouseEvent);\n        startPosition.current = getMousePosition(targetEvent);\n\n        setIsDragging(true);\n        onResizeStart();\n    };\n\n    return children({\n        isResizing: isDragging,\n        onMouseDown\n    });\n};\n\nexport default Resizer;\n"],"file":"Resizer.js"}