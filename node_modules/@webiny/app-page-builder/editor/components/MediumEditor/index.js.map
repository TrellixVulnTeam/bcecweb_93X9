{"version":3,"sources":["../../../../src/editor/components/MediumEditor/index.ts"],"names":["React","useEffect","createElement","MediumEditor","css","editorClass","width","outline","ReactMediumEditor","tag","value","onChange","options","onSelect","elementRef","useRef","editorRef","handleChange","data","editable","innerHTML","handleSelect","current","extensions","imageDragging","toolbar","buttons","subscribe","destroy","dangerouslySetInnerHTML","__html","ref","className","memo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,GAAT,QAAoB,SAApB;AAEA,IAAMC,WAAW,gBAAGD,GAAG,CAAC;AACpBE,EAAAA,KAAK,EAAE,MADa;AAEpB,aAAW;AACPC,IAAAA,OAAO,EAAE;AADF;AAFS,CAAD,uBAAvB;;AAgBA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAMI;AAAA,sBAL1BC,GAK0B;AAAA,MAL1BA,GAK0B,yBALpB,KAKoB;AAAA,MAJ1BC,KAI0B,QAJ1BA,KAI0B;AAAA,MAH1BC,QAG0B,QAH1BA,QAG0B;AAAA,MAF1BC,OAE0B,QAF1BA,OAE0B;AAAA,MAD1BC,QAC0B,QAD1BA,QAC0B;AAC1B,MAAMC,UAAU,GAAGd,KAAK,CAACe,MAAN,EAAnB;AACA,MAAMC,SAAS,GAAGhB,KAAK,CAACe,MAAN,EAAlB;;AAEA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,QAAP,EAAoB;AACrC,QAAI,OAAOR,QAAP,KAAoB,UAAxB,EAAoC;AAChCA,MAAAA,QAAQ,CAACQ,QAAQ,CAACC,SAAV,CAAR;AACH;AACJ,GAJD;;AAMA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAI,OAAOR,QAAP,KAAoB,UAAxB,EAAoC;AAChCA,MAAAA,QAAQ;AACX;AACJ,GAJD;AAKA;AACJ;AACA;;;AACIZ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACa,UAAD,IAAe,CAACA,UAAU,CAACQ,OAA/B,EAAwC;AACpC;AACH,KAHW,CAIZ;;;AACAN,IAAAA,SAAS,CAACM,OAAV,GAAoB,IAAInB,YAAJ,CAAiBW,UAAU,CAACQ,OAA5B;AAChBC,MAAAA,UAAU,EAAE;AACR;AACA;AACAC,QAAAA,aAAa,EAAE;AAHP;AADI,OAMbZ,OANa;AAOhBa,MAAAA,OAAO,kCACAb,OAAO,CAACa,OADR;AAEHC,QAAAA,OAAO,+BAAMd,OAAO,CAACa,OAAR,CAAgBC,OAAtB,IAA+B,cAA/B;AAFJ;AAPS,OAApB;AAaAV,IAAAA,SAAS,CAACM,OAAV,CAAkBK,SAAlB,CAA4B,MAA5B,EAAoCV,YAApC;AACAD,IAAAA,SAAS,CAACM,OAAV,CAAkBK,SAAlB,CAA4B,eAA5B,EAA6CN,YAA7C;AAEA,WAAO,YAAM;AACTL,MAAAA,SAAS,CAACM,OAAV,CAAkBM,OAAlB;AACH,KAFD;AAGH,GAxBQ,EAwBN,CAAChB,OAAD,EAAUH,GAAV,CAxBM,CAAT;AA0BA,sBAAOP,aAAa,CAACO,GAAD,EAAM;AACtBoB,IAAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEpB;AAAV,KADH;AAEtBqB,IAAAA,GAAG,EAAEjB,UAFiB;AAGtBkB,IAAAA,SAAS,EAAE3B;AAHW,GAAN,CAApB;AAKH,CAvDD;;AAyDA,4BAAeL,KAAK,CAACiC,IAAN,CAAWzB,iBAAX,CAAf","sourcesContent":["import React, { useEffect, createElement } from \"react\";\nimport MediumEditor from \"medium-editor\";\nimport { css } from \"emotion\";\n\nconst editorClass = css({\n    width: \"100%\",\n    \"&:focus\": {\n        outline: \"none\"\n    }\n});\n\ntype ReactMediumEditorProps = {\n    value: string;\n    onChange: (value: string) => void;\n    onSelect: () => void;\n    tag: string;\n    options?: any;\n    [key: string]: any;\n};\n\nconst ReactMediumEditor = ({\n    tag = \"div\",\n    value,\n    onChange,\n    options,\n    onSelect\n}: ReactMediumEditorProps) => {\n    const elementRef = React.useRef();\n    const editorRef = React.useRef<MediumEditor.MediumEditor>();\n\n    const handleChange = (data, editable) => {\n        if (typeof onChange === \"function\") {\n            onChange(editable.innerHTML);\n        }\n    };\n\n    const handleSelect = () => {\n        if (typeof onSelect === \"function\") {\n            onSelect();\n        }\n    };\n    /**\n     * Here we're recreating the \"Medium editor\" whenever the \"tag\" changes because that's the element editor is mounted on.\n     */\n    useEffect(() => {\n        if (!elementRef && !elementRef.current) {\n            return;\n        }\n        // Create \"MediumEditor\" instance\n        editorRef.current = new MediumEditor(elementRef.current, {\n            extensions: {\n                // https://github.com/yabwe/medium-editor#disable-file-dragging\n                // Disable file dragging by providing a dummy ImageDragging extension.\n                imageDragging: {}\n            },\n            ...options,\n            toolbar: {\n                ...options.toolbar,\n                buttons: [...options.toolbar.buttons, \"removeFormat\"]\n            }\n        });\n\n        editorRef.current.subscribe(\"blur\", handleChange);\n        editorRef.current.subscribe(\"editableInput\", handleSelect);\n\n        return () => {\n            editorRef.current.destroy();\n        };\n    }, [options, tag]);\n\n    return createElement(tag, {\n        dangerouslySetInnerHTML: { __html: value },\n        ref: elementRef,\n        className: editorClass\n    });\n};\n\nexport default React.memo(ReactMediumEditor);\n"],"file":"index.js"}