{"version":3,"sources":["../../../src/editor/components/OEmbed.tsx"],"names":["React","useCallback","useEffect","useState","gql","css","useQuery","useSnackbar","Typography","useEventActionHandler","UpdateElementActionEvent","useRenderEmptyEmbed","appendSDK","props","sdk","global","element","data","source","url","window","Promise","resolve","script","document","createElement","type","src","encodeURI","setAttribute","onload","body","appendChild","initEmbed","init","node","getElementById","id","oembedQuery","centerAlign","marginLeft","marginRight","errorElementStyle","color","fontWeight","OEmbedComponent","errorMessage","setErrorMessage","eventActionHandler","showSnackbar","onData","d","then","oembed","sourceUrl","oembedSourceUrl","skip","variables","onCompleted","pageBuilder","oembedData","error","newElement","trigger","history","message","loading","renderEmpty","renderEmbed","targetElement","isLoading","__html","html","memo"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, ReactElement, useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { css } from \"emotion\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { useEventActionHandler } from \"../hooks/useEventActionHandler\";\nimport { UpdateElementActionEvent } from \"../recoil/actions\";\nimport { PbEditorElement } from \"../../types\";\nimport useRenderEmptyEmbed from \"../plugins/elements/utils/oembed/useRenderEmptyEmbed\";\n\nfunction appendSDK(props) {\n    const { sdk, global, element } = props;\n    const { url } = element?.data?.source || {};\n\n    if (!sdk || !url || window[global]) {\n        return Promise.resolve();\n    }\n\n    return new Promise(resolve => {\n        const script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = encodeURI(sdk);\n        script.setAttribute(\"async\", \"\");\n        script.setAttribute(\"charset\", \"utf-8\");\n        script.onload = resolve;\n        document.body.appendChild(script);\n    });\n}\n\nfunction initEmbed(props) {\n    const { sdk, init, element } = props;\n    if (sdk && element?.data?.source?.url) {\n        const node = document.getElementById(element.id);\n        if (typeof init === \"function\" && node) {\n            init({ props, node });\n        }\n    }\n}\n\nconst oembedQuery = gql`\n    query GetOEmbedData($url: String!, $width: String, $height: String) {\n        pageBuilder {\n            oembedData(url: $url, width: $width, height: $height) {\n                data\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n`;\n\nconst centerAlign = css({\n    \"*:first-of-type\": {\n        marginLeft: \"auto !important\",\n        marginRight: \"auto !important\"\n    }\n});\n\nconst errorElementStyle = css({\n    color: \"var(--mdc-theme-text-primary-on-background)\",\n    \"& .component-name\": {\n        fontWeight: \"bold\"\n    }\n});\n\nexport type OEmbedProps = {\n    element: PbEditorElement;\n    onData?: (data: { [key: string]: any }) => { [key: string]: any };\n    renderEmbed?: (props: OEmbedProps) => ReactElement;\n    data?: any;\n};\nconst OEmbedComponent = (props: OEmbedProps) => {\n    const [errorMessage, setErrorMessage] = useState(null);\n    const eventActionHandler = useEventActionHandler();\n    const { showSnackbar } = useSnackbar();\n    const { element, onData = d => d } = props;\n\n    useEffect(() => {\n        appendSDK(props).then(() => initEmbed(props));\n    });\n\n    const source = element.data.source || {};\n    const oembed = element.data.oembed || {};\n    const sourceUrl = source.url;\n    const oembedSourceUrl = oembed.source?.url;\n\n    const skip = !sourceUrl || sourceUrl === oembedSourceUrl;\n\n    const { loading } = useQuery(oembedQuery, {\n        skip,\n        variables: source,\n        onCompleted: data => {\n            if (skip) {\n                return;\n            }\n            const { data: oembed, error } = data.pageBuilder.oembedData || {};\n            if (oembed) {\n                const newElement: PbEditorElement = {\n                    ...element,\n                    data: {\n                        ...element.data,\n                        oembed: onData(oembed)\n                    }\n                };\n                eventActionHandler.trigger(\n                    new UpdateElementActionEvent({\n                        element: newElement,\n                        history: true\n                    })\n                );\n            }\n            if (error) {\n                setErrorMessage(error.message);\n                showSnackbar(error.message);\n            }\n        }\n    });\n\n    const renderEmpty = useRenderEmptyEmbed(element);\n\n    const renderEmbed = useCallback(\n        (targetElement: PbEditorElement, isLoading: boolean) => {\n            if (typeof props.renderEmbed === \"function\") {\n                return props.renderEmbed(props);\n            }\n\n            if (isLoading) {\n                return <div>Loading embed data...</div>;\n            }\n            if (errorMessage) {\n                return (\n                    <details className={errorElementStyle}>\n                        <summary>\n                            <Typography use={\"overline\"}>\n                                We couldn&apos;t embed your{\" \"}\n                                <span className={\"component-name\"}>{element.type}</span> URL! See\n                                the detailed error below.\n                            </Typography>\n                        </summary>\n                        <Typography use={\"body2\"}>{errorMessage}</Typography>\n                    </details>\n                );\n            }\n            return (\n                <div\n                    id={targetElement.id}\n                    className={\n                        centerAlign + \" pb-editor-dragging--disabled pb-editor-resizing--disabled\"\n                    }\n                    dangerouslySetInnerHTML={{ __html: targetElement.data?.oembed?.html || \"\" }}\n                />\n            );\n        },\n        [element, loading, errorMessage]\n    );\n\n    return sourceUrl ? renderEmbed(element, loading) : renderEmpty();\n};\nexport default React.memo(OEmbedComponent);\n"],"file":"OEmbed.js"}