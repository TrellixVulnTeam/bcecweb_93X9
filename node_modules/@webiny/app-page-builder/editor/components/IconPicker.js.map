{"version":3,"sources":["../../../src/editor/components/IconPicker.tsx"],"names":["React","useCallback","useMemo","useState","css","plugins","Typography","Grid","FontAwesomeIcon","DelayedOnChange","Menu","Input","classNames","COLORS","noop","gridItem","position","display","flexDirection","justifyContent","boxSizing","paddingTop","alignItems","textAlign","cursor","transform","borderRadius","color","transition","boxShadow","content","top","left","width","height","zIndex","opacity","backgroundColor","marginBottom","gridItemSelected","fill","right","grid","padding","pickIcon","searchInput","input","iconPickerWrapper","lightGray","border","gray","borderColor","darkGray","outline","pointerEvents","IconPicker","value","onChange","removable","handlerClassName","useInSidebar","removeIcon","filter","setFilter","columnCount","columnWidth","gridWidth","onFilterChange","cb","trim","Array","isArray","prefix","undefined","name","selectedIconPrefix","selectedIconName","allIcons","iconPlugins","byType","selectedIconItem","allIconItems","reduce","icons","pl","pluginIcons","getIcons","id","selectedIcon","find","concat","unshift","ic","includes","renderCell","closeMenu","columnIndex","key","rowIndex","style","item","isSelectedIcon","gridItemClassName","renderGrid","Math","ceil","length","disableRemoveIcon","disabled"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,eAAT;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,MAAT,iE,CACA;;;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,SAAM,IAAN;AAAA,CAAb;;AACA,IAAMC,QAAQ,gBAAGX,GAAG,CAAC;AACjBY,EAAAA,QAAQ,EAAE,UADO;AAEjBC,EAAAA,OAAO,EAAE,MAFQ;AAGjBC,EAAAA,aAAa,EAAE,QAHE;AAIjBC,EAAAA,cAAc,EAAE,YAJC;AAKjBC,EAAAA,SAAS,EAAE,YALM;AAMjBC,EAAAA,UAAU,EAAE,EANK;AAOjBC,EAAAA,UAAU,EAAE,QAPK;AAQjBC,EAAAA,SAAS,EAAE,QARM;AASjBC,EAAAA,MAAM,EAAE,SATS;AAUjBC,EAAAA,SAAS,EAAE,eAVM;AAWjBC,EAAAA,YAAY,EAAE,CAXG;AAYjBC,EAAAA,KAAK,EAAE,+CAZU;AAajBC,EAAAA,UAAU,EAAE,6CAbK;AAcjB,cAAY;AACRC,IAAAA,SAAS,EAAE,uCADH;AAERD,IAAAA,UAAU,EAAE,iDAFJ;AAGRE,IAAAA,OAAO,EAAE,IAHD;AAIRd,IAAAA,QAAQ,EAAE,UAJF;AAKRe,IAAAA,GAAG,EAAE,CALG;AAMRC,IAAAA,IAAI,EAAE,CANE;AAORC,IAAAA,KAAK,EAAE,MAPC;AAQRC,IAAAA,MAAM,EAAE,MARA;AASRC,IAAAA,MAAM,EAAE,CAAC,CATD;AAURC,IAAAA,OAAO,EAAE;AAVD,GAdK;AA0BjB,aAAW;AACPC,IAAAA,eAAe,EAAE,6BADV;AAEPV,IAAAA,KAAK,EAAE,6CAFA;AAGP,gBAAY;AACRS,MAAAA,OAAO,EAAE;AADD;AAHL,GA1BM;AAiCjB,UAAQ;AACJH,IAAAA,KAAK,EAAE,EADH;AAEJK,IAAAA,YAAY,EAAE;AAFV;AAjCS,CAAD,oBAApB;AAuCA,IAAMC,gBAAgB,gBAAGnC,GAAG,CAAC;AACzBiC,EAAAA,eAAe,EAAE,+CADQ;AAEzBV,EAAAA,KAAK,EAAE,SAFkB;AAGzB,UAAQ;AACJa,IAAAA,IAAI,EAAE;AADF,GAHiB;AAMzB,eAAa;AACTxB,IAAAA,QAAQ,EAAE,UADD;AAETiB,IAAAA,KAAK,EAAE,MAFE;AAGTK,IAAAA,YAAY,EAAE,GAHL;AAITP,IAAAA,GAAG,EAAE,KAJI;AAKTU,IAAAA,KAAK,EAAE;AALE;AANY,CAAD,4BAA5B;AAeA,IAAMC,IAAI,gBAAGtC,GAAG,CAAC;AACbuC,EAAAA,OAAO,EAAE;AADI,CAAD,gBAAhB;AAIA,IAAMC,QAAQ,gBAAGxC,GAAG,CAAC;AACjB6B,EAAAA,KAAK,EAAE,EADU;AAEjBV,EAAAA,SAAS,EAAE,QAFM;AAGjBC,EAAAA,MAAM,EAAE;AAHS,CAAD,oBAApB;AAMA,IAAMqB,WAAW,gBAAGzC,GAAG,CAAC;AACpB0C,EAAAA,KAAK,EAAE;AACHH,IAAAA,OAAO,EAAE,gBADN;AAEH,sBAAkB;AACdP,MAAAA,OAAO,EAAE;AADK;AAFf;AADa,CAAD,uBAAvB;AASA,IAAMW,iBAAiB,gBAAG3C,GAAG,CAAC;AAC1Ba,EAAAA,OAAO,EAAE,MADiB;AAE1BE,EAAAA,cAAc,EAAE,UAFU;AAG1Be,EAAAA,MAAM,EAAE,EAHkB;AAK1B,iCAA+B;AAC3BlB,IAAAA,QAAQ,EAAE;AADiB,GALL;AAS1B,eAAa;AACTI,IAAAA,SAAS,EAAE,YADF;AAETa,IAAAA,KAAK,EAAE,EAFE;AAGTC,IAAAA,MAAM,EAAE,MAHC;AAITjB,IAAAA,OAAO,EAAE,MAJA;AAKTE,IAAAA,cAAc,EAAE,QALP;AAMTG,IAAAA,UAAU,EAAE,QANH;AAOTe,IAAAA,eAAe,EAAExB,MAAM,CAACmC,SAPf;AAQTtB,IAAAA,YAAY,EAAE,CARL;AASTuB,IAAAA,MAAM,sBAAepC,MAAM,CAACqC,IAAtB,CATG;AAUT1B,IAAAA,MAAM,EAAE,SAVC;AAWT,8BAA0B;AAAE2B,MAAAA,WAAW,EAAEtC,MAAM,CAACuC,QAAtB;AAAgCf,MAAAA,eAAe,EAAExB,MAAM,CAACqC;AAAxD,KAXjB;AAYT,8BAA0B;AACtBC,MAAAA,WAAW,EAAEtC,MAAM,CAACuC,QADE;AAEtBC,MAAAA,OAAO,EAAE,MAFa;AAGtBhB,MAAAA,eAAe,EAAExB,MAAM,CAACqC;AAHF,KAZjB;AAiBT,kBAAc;AACVd,MAAAA,OAAO,EAAE,GADC;AAEVZ,MAAAA,MAAM,EAAE,aAFE;AAGV2B,MAAAA,WAAW,EAAEtC,MAAM,CAACmC;AAHV;AAjBL,GATa;AAgC1B,sBAAoB;AAChB5B,IAAAA,SAAS,EAAE,YADK;AAEhBa,IAAAA,KAAK,EAAE,EAFS;AAGhBC,IAAAA,MAAM,EAAE,MAHQ;AAIhBjB,IAAAA,OAAO,EAAE,MAJO;AAKhBE,IAAAA,cAAc,EAAE,QALA;AAMhBG,IAAAA,UAAU,EAAE,QANI;AAOhBe,IAAAA,eAAe,EAAExB,MAAM,CAACmC,SAPR;AAQhBtB,IAAAA,YAAY,EAAE,CARE;AAShBuB,IAAAA,MAAM,sBAAepC,MAAM,CAACqC,IAAtB,CATU;AAWhB,aAAS;AACLjB,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,MAAM,EAAE;AAFH,KAXO;AAehB,kBAAc;AACVoB,MAAAA,aAAa,EAAE,MADL;AAEVlB,MAAAA,OAAO,EAAE;AAFC;AAfE;AAhCM,CAAD,6BAA7B;;AA8DA,IAAMmB,UAAwD,GAAG,SAA3DA,UAA2D,OAO3D;AAAA,MANFC,KAME,QANFA,KAME;AAAA,MALFC,QAKE,QALFA,QAKE;AAAA,4BAJFC,SAIE;AAAA,MAJFA,SAIE,+BAJU,IAIV;AAAA,MAHFC,gBAGE,QAHFA,gBAGE;AAAA,MAFFC,YAEE,QAFFA,YAEE;AAAA,6BADFC,UACE;AAAA,MADFA,UACE,gCADW/C,IACX;;AACF,kBAA4BX,QAAQ,CAAS,EAAT,CAApC;AAAA;AAAA,MAAO2D,MAAP;AAAA,MAAeC,SAAf,iBADE,CAEF;;;AACA,MAAMC,WAAW,GAAGJ,YAAY,GAAG,CAAH,GAAO,CAAvC;AACA,MAAMK,WAAW,GAAGL,YAAY,GAAG,EAAH,GAAQ,GAAxC;AACA,MAAMM,SAAS,GAAGN,YAAY,GAAG,GAAH,GAAS,GAAvC;AAEA,MAAMO,cAAc,GAAGlE,WAAW,CAC9B,UAACuD,KAAD,EAAQY,EAAR,EAAe;AACXL,IAAAA,SAAS,CAACP,KAAK,CAACa,IAAN,EAAD,CAAT;AACAD,IAAAA,EAAE;AACL,GAJ6B,EAK9B,CAACN,MAAD,CAL8B,CAAlC;;AAQA,iBAA+D5D,OAAO,CAAC,YAAM;AACzE,QAAI,CAACsD,KAAD,IAAUc,KAAK,CAACC,OAAN,CAAcf,KAAd,MAAyB,KAAnC,IAA4C,CAACE,SAAjD,EAA4D;AACxD,aAAO;AACHc,QAAAA,MAAM,EAAEC,SADL;AAEHC,QAAAA,IAAI,EAAED;AAFH,OAAP;AAIH;;AACD,WAAO;AACHD,MAAAA,MAAM,EAAEhB,KAAK,CAAC,CAAD,CADV;AAEHkB,MAAAA,IAAI,EAAElB,KAAK,CAAC,CAAD;AAFR,KAAP;AAIH,GAXqE,EAWnE,CAACA,KAAD,CAXmE,CAAtE;AAAA,MAAgBmB,kBAAhB,YAAQH,MAAR;AAAA,MAA0CI,gBAA1C,YAAoCF,IAApC;;AAaA,MAAMG,QAAkB,GAAG3E,OAAO,CAAC,YAAM;AACrC,QAAM4E,WAAW,GAAGzE,OAAO,CAAC0E,MAAR,CAA8B,UAA9B,CAApB;AACA,QAAIC,gBAAgB,GAAG,IAAvB;AACA,QAAMC,YAAY,GAAGH,WAAW,CAACI,MAAZ,CAAmB,UAACC,KAAD,EAAuBC,EAAvB,EAA8B;AAClE,UAAMC,WAAW,GAAGD,EAAE,CAACE,QAAH,GAAcxB,MAAd,CAAqB,iBAAY;AAAA,YAATyB,EAAS,SAATA,EAAS;;AACjD,iCAAuBA,EAAvB;AAAA,YAAOf,MAAP;AAAA,YAAeE,IAAf;;AACA,YAAI,CAACC,kBAAD,IAAuB,CAACC,gBAAxB,IAA4CJ,MAAM,KAAKG,kBAA3D,EAA+E;AAC3E,iBAAO,IAAP;AACH;;AACD,eAAOD,IAAI,KAAKE,gBAAhB;AACH,OANmB,CAApB;AAOA,UAAMY,YAAY,GAAGJ,EAAE,CAACE,QAAH,GAAcG,IAAd,CAAmB,iBAAc;AAAA,YAAXf,IAAW,SAAXA,IAAW;AAClD,eAAOA,IAAI,KAAKE,gBAAhB;AACH,OAFoB,CAArB;;AAGA,UAAIY,YAAJ,EAAkB;AACdR,QAAAA,gBAAgB,GAAGQ,YAAnB;AACH;;AACD,aAAOL,KAAK,CAACO,MAAN,CAAaL,WAAb,CAAP;AACH,KAfoB,EAelB,EAfkB,CAArB;;AAgBA,QAAIL,gBAAJ,EAAsB;AAClBC,MAAAA,YAAY,CAACU,OAAb,CAAqBX,gBAArB;AACH;;AACD,WAAOC,YAAP;AACH,GAvBiC,EAuB/B,CAACN,kBAAD,EAAqBC,gBAArB,CAvB+B,CAAlC;AAyBA,MAAMO,KAAK,GAAGjF,OAAO,CAAC,YAAM;AACxB,WAAO4D,MAAM,GAAGe,QAAQ,CAACf,MAAT,CAAgB,UAAA8B,EAAE;AAAA,aAAIA,EAAE,CAAClB,IAAH,CAAQmB,QAAR,CAAiB/B,MAAjB,CAAJ;AAAA,KAAlB,CAAH,GAAqDe,QAAlE;AACH,GAFoB,EAElB,CAACf,MAAD,EAASa,kBAAT,EAA6BC,gBAA7B,CAFkB,CAArB;AAIA,MAAMkB,UAAU,GAAG7F,WAAW,CAC1B,iBAAmB;AAAA,QAAhB8F,SAAgB,SAAhBA,SAAgB;AACf,WAAO,SAASD,UAAT,QAA2D;AAAA,UAArCE,WAAqC,SAArCA,WAAqC;AAAA,UAAxBC,GAAwB,SAAxBA,GAAwB;AAAA,UAAnBC,QAAmB,SAAnBA,QAAmB;AAAA,UAATC,KAAS,SAATA,KAAS;AAC9D,UAAMC,IAAI,GAAGjB,KAAK,CAACe,QAAQ,GAAGlC,WAAX,GAAyBgC,WAA1B,CAAlB;;AACA,UAAI,CAACI,IAAL,EAAW;AACP,eAAO,IAAP;AACH;;AACD,UAAMC,cAAc,GAChBD,IAAI,CAACb,EAAL,CAAQ,CAAR,MAAeZ,kBAAf,IAAqCyB,IAAI,CAACb,EAAL,CAAQ,CAAR,MAAeX,gBADxD;AAEA,UAAM0B,iBAAiB,GAAG1F,UAAU,CAACG,QAAD,sBAC/BwB,gBAD+B,EACZ8D,cADY,EAApC;AAGA,0BACI;AACI,QAAA,GAAG,EAAEJ,GADT;AAEI,QAAA,KAAK,EAAEE,KAFX;AAGI,QAAA,SAAS,EAAEG,iBAHf;AAII,QAAA,OAAO,EAAE,mBAAM;AACX7C,UAAAA,QAAQ,CAAC2C,IAAD,CAAR;AACAL,UAAAA,SAAS;AACZ;AAPL,SASKM,cAAc,iBACX;AAAM,QAAA,SAAS,EAAC;AAAhB,sBACI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,OAAR;AAAvB,QADJ,CAVR,eAcI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAED,IAAI,CAACb,EAA5B;AAAgC,QAAA,IAAI,EAAE;AAAtC,QAdJ,eAeI,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAE;AAAjB,SAA2Ba,IAAI,CAAC1B,IAAhC,CAfJ,CADJ;AAmBH,KA7BD;AA8BH,GAhCyB,EAiC1B,CAACS,KAAD,CAjC0B,CAA9B;AAoCA,MAAMoB,UAAU,GAAGtG,WAAW,CAC1B,iBAAmB;AAAA,QAAhB8F,SAAgB,SAAhBA,SAAgB;AACf,wBACI,uDACI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAEjC,MAAxB;AAAgC,MAAA,QAAQ,EAAEK;AAA1C,OACK;AAAA,UAAGX,KAAH,SAAGA,KAAH;AAAA,UAAUC,QAAV,SAAUA,QAAV;AAAA,0BACG,oBAAC,KAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,SAAS,EAAEZ,WAFf;AAGI,QAAA,KAAK,EAAEW,KAHX;AAII,QAAA,QAAQ,EAAEC,QAJd;AAKI,QAAA,WAAW,EAAE;AALjB,QADH;AAAA,KADL,CADJ,eAYI,oBAAC,IAAD;AACI,MAAA,SAAS,EAAEf,IADf;AAEI,MAAA,YAAY,EAAEoD,UAAU,CAAC;AAAEC,QAAAA,SAAS,EAATA;AAAF,OAAD,CAF5B;AAGI,MAAA,WAAW,EAAE/B,WAHjB;AAII,MAAA,WAAW,EAAEC,WAJjB;AAKI,MAAA,MAAM,EAAE,GALZ;AAMI,MAAA,QAAQ,EAAEuC,IAAI,CAACC,IAAL,CAAUtB,KAAK,CAACuB,MAAN,GAAe1C,WAAzB,CANd;AAOI,MAAA,SAAS,EAAE,GAPf;AAQI,MAAA,KAAK,EAAEE;AARX,MAZJ,CADJ;AAyBH,GA3ByB,EA4B1B,CAACiB,KAAD,CA5B0B,CAA9B;;AA+BA,MAAIvB,YAAJ,EAAkB;AACd,QAAM+C,iBAAiB,GAAG,CAACnD,KAAD,IAAU,CAACE,SAArC;AACA,wBACI;AAAK,MAAA,SAAS,EAAEX;AAAhB,oBACI,oBAAC,IAAD;AACI,MAAA,MAAM,eACF;AAAK,QAAA,SAAS,EAAEnC,UAAU,CAAC,QAAD,EAAW,aAAX,EAA0B+C,gBAA1B;AAA1B,sBACI,oBAAC,cAAD,OADJ;AAFR,OAOK4C,UAPL,CADJ,eAUI;AACI,MAAA,SAAS,EAAE3F,UAAU,CAAC,QAAD,EAAW,eAAX,EAA4B;AAC7CgG,QAAAA,QAAQ,EAAED;AADmC,OAA5B,CADzB;AAII,MAAA,OAAO,EAAE9C;AAJb,oBAMI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAGL,KAAD,IAAkB,CAAC,KAAD,EAAQ,MAAR,CAAzC;AAA0D,MAAA,IAAI,EAAE;AAAhE,MANJ,CAVJ,CADJ;AAqBH;;AAED,sBACI,oBAAC,IAAD;AACI,IAAA,MAAM,eACF;AAAK,MAAA,SAAS,EAAE5C,UAAU,CAACgC,QAAD,EAAWe,gBAAX;AAA1B,oBACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAGH,KAAD,IAAkB,CAAC,KAAD,EAAQ,MAAR,CAAzC;AAA0D,MAAA,IAAI,EAAE;AAAhE,MADJ;AAFR,KAOK+C,UAPL,CADJ;AAWH,CAvKD;;AAyKA,eAAehD,UAAf","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\";\nimport { css } from \"emotion\";\nimport { plugins } from \"@webiny/plugins\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Grid } from \"react-virtualized\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { DelayedOnChange } from \"./DelayedOnChange\";\nimport { Menu } from \"@webiny/ui/Menu\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { PbIcon, PbIconsPlugin } from \"../../types\";\nimport classNames from \"classnames\";\nimport { COLORS } from \"../plugins/elementSettings/components/StyledComponents\";\n// Icons\nimport { ReactComponent as IconPickerIcon } from \"../assets/icons/icon-picker.svg\";\n\nconst noop = () => null;\nconst gridItem = css({\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    boxSizing: \"border-box\",\n    paddingTop: 15,\n    alignItems: \"center\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    transform: \"translateZ(0)\",\n    borderRadius: 2,\n    color: \"var(--mdc-theme-text-secondary-on-background)\",\n    transition: \"all 0.5s cubic-bezier(0.165, 0.84, 0.44, 1)\",\n    \"&::after\": {\n        boxShadow: \"0 0.25rem 0.125rem 0 rgba(0,0,0,0.05)\",\n        transition: \"opacity 0.5s cubic-bezier(0.165, 0.84, 0.44, 1)\",\n        content: '\"\"',\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: -1,\n        opacity: 0\n    },\n    \"&:hover\": {\n        backgroundColor: \"var(--mdc-theme-background)\",\n        color: \"var(--mdc-theme-text-primary-on-background)\",\n        \"&::after\": {\n            opacity: 1\n        }\n    },\n    \">svg\": {\n        width: 42,\n        marginBottom: 5\n    }\n});\n\nconst gridItemSelected = css({\n    backgroundColor: \"var(--mdc-theme-text-secondary-on-background)\",\n    color: \"#FFFFFF\",\n    \">svg\": {\n        fill: \"#FFFFFF\"\n    },\n    \"> .remove\": {\n        position: \"absolute\",\n        width: \"auto\",\n        marginBottom: \"0\",\n        top: \"2px\",\n        right: \"5px\"\n    }\n});\n\nconst grid = css({\n    padding: 20\n});\n\nconst pickIcon = css({\n    width: 50,\n    textAlign: \"center\",\n    cursor: \"pointer\"\n});\n\nconst searchInput = css({\n    input: {\n        padding: \"20px 12px 20px\",\n        \"&::placeholder\": {\n            opacity: \"1 !important\"\n        }\n    }\n});\n\nconst iconPickerWrapper = css({\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    height: 30,\n\n    \"& .mdc-menu-surface--anchor\": {\n        position: \"static\"\n    },\n\n    \"& .button\": {\n        boxSizing: \"border-box\",\n        width: 30,\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: COLORS.lightGray,\n        borderRadius: 1,\n        border: `1px solid ${COLORS.gray}`,\n        cursor: \"pointer\",\n        \"&:hover:not(:disabled)\": { borderColor: COLORS.darkGray, backgroundColor: COLORS.gray },\n        \"&:focus:not(:disabled)\": {\n            borderColor: COLORS.darkGray,\n            outline: \"none\",\n            backgroundColor: COLORS.gray\n        },\n        \"&:disabled\": {\n            opacity: 0.5,\n            cursor: \"not-allowed\",\n            borderColor: COLORS.lightGray\n        }\n    },\n    \"& .iconContainer\": {\n        boxSizing: \"border-box\",\n        width: 30,\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: COLORS.lightGray,\n        borderRadius: 1,\n        border: `1px solid ${COLORS.gray}`,\n\n        \"& svg\": {\n            width: 16,\n            height: 16\n        },\n        \"&.disabled\": {\n            pointerEvents: \"none\",\n            opacity: 0.5\n        }\n    }\n});\n\ntype IconPickerPropsType = {\n    value: [string, string];\n    onChange: (item: PbIcon) => void;\n    removable?: boolean;\n    handlerClassName?: string;\n    useInSidebar?: boolean;\n    removeIcon?: () => void;\n};\nconst IconPicker: React.FunctionComponent<IconPickerPropsType> = ({\n    value,\n    onChange,\n    removable = true,\n    handlerClassName,\n    useInSidebar,\n    removeIcon = noop\n}) => {\n    const [filter, setFilter] = useState<string>(\"\");\n    // Icon \"Grid\" props\n    const columnCount = useInSidebar ? 3 : 6;\n    const columnWidth = useInSidebar ? 85 : 100;\n    const gridWidth = useInSidebar ? 300 : 640;\n\n    const onFilterChange = useCallback(\n        (value, cb) => {\n            setFilter(value.trim());\n            cb();\n        },\n        [filter]\n    );\n\n    const { prefix: selectedIconPrefix, name: selectedIconName } = useMemo(() => {\n        if (!value || Array.isArray(value) === false || !removable) {\n            return {\n                prefix: undefined,\n                name: undefined\n            };\n        }\n        return {\n            prefix: value[0],\n            name: value[1]\n        };\n    }, [value]);\n\n    const allIcons: PbIcon[] = useMemo(() => {\n        const iconPlugins = plugins.byType<PbIconsPlugin>(\"pb-icons\");\n        let selectedIconItem = null;\n        const allIconItems = iconPlugins.reduce((icons: Array<PbIcon>, pl) => {\n            const pluginIcons = pl.getIcons().filter(({ id }) => {\n                const [prefix, name] = id;\n                if (!selectedIconPrefix || !selectedIconName || prefix !== selectedIconPrefix) {\n                    return true;\n                }\n                return name !== selectedIconName;\n            });\n            const selectedIcon = pl.getIcons().find(({ name }) => {\n                return name === selectedIconName;\n            });\n            if (selectedIcon) {\n                selectedIconItem = selectedIcon;\n            }\n            return icons.concat(pluginIcons);\n        }, []);\n        if (selectedIconItem) {\n            allIconItems.unshift(selectedIconItem);\n        }\n        return allIconItems;\n    }, [selectedIconPrefix, selectedIconName]);\n\n    const icons = useMemo(() => {\n        return filter ? allIcons.filter(ic => ic.name.includes(filter)) : allIcons;\n    }, [filter, selectedIconPrefix, selectedIconName]);\n\n    const renderCell = useCallback(\n        ({ closeMenu }) => {\n            return function renderCell({ columnIndex, key, rowIndex, style }) {\n                const item = icons[rowIndex * columnCount + columnIndex];\n                if (!item) {\n                    return null;\n                }\n                const isSelectedIcon =\n                    item.id[0] === selectedIconPrefix && item.id[1] === selectedIconName;\n                const gridItemClassName = classNames(gridItem, {\n                    [gridItemSelected]: isSelectedIcon\n                });\n                return (\n                    <div\n                        key={key}\n                        style={style}\n                        className={gridItemClassName}\n                        onClick={() => {\n                            onChange(item);\n                            closeMenu();\n                        }}\n                    >\n                        {isSelectedIcon && (\n                            <span className=\"remove\">\n                                <FontAwesomeIcon icon={[\"fas\", \"times\"]} />\n                            </span>\n                        )}\n                        <FontAwesomeIcon icon={item.id} size={\"2x\"} />\n                        <Typography use={\"body2\"}>{item.name}</Typography>\n                    </div>\n                );\n            };\n        },\n        [icons]\n    );\n\n    const renderGrid = useCallback(\n        ({ closeMenu }) => {\n            return (\n                <>\n                    <DelayedOnChange value={filter} onChange={onFilterChange}>\n                        {({ value, onChange }) => (\n                            <Input\n                                autoFocus\n                                className={searchInput}\n                                value={value}\n                                onChange={onChange}\n                                placeholder={\"Search icons...\"}\n                            />\n                        )}\n                    </DelayedOnChange>\n                    <Grid\n                        className={grid}\n                        cellRenderer={renderCell({ closeMenu })}\n                        columnCount={columnCount}\n                        columnWidth={columnWidth}\n                        height={440}\n                        rowCount={Math.ceil(icons.length / columnCount)}\n                        rowHeight={100}\n                        width={gridWidth}\n                    />\n                </>\n            );\n        },\n        [icons]\n    );\n\n    if (useInSidebar) {\n        const disableRemoveIcon = !value || !removable;\n        return (\n            <div className={iconPickerWrapper}>\n                <Menu\n                    handle={\n                        <div className={classNames(\"button\", \"menuHandler\", handlerClassName)}>\n                            <IconPickerIcon />\n                        </div>\n                    }\n                >\n                    {renderGrid}\n                </Menu>\n                <div\n                    className={classNames(\"button\", \"iconContainer\", {\n                        disabled: disableRemoveIcon\n                    })}\n                    onClick={removeIcon}\n                >\n                    <FontAwesomeIcon icon={(value as any) || [\"far\", \"star\"]} size={\"2x\"} />\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <Menu\n            handle={\n                <div className={classNames(pickIcon, handlerClassName)}>\n                    <FontAwesomeIcon icon={(value as any) || [\"far\", \"star\"]} size={\"2x\"} />\n                </div>\n            }\n        >\n            {renderGrid}\n        </Menu>\n    );\n};\n\nexport default IconPicker;\n"],"file":"IconPicker.js"}