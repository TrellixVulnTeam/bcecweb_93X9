{"version":3,"sources":["../../../../src/editor/components/Editor/Editor.tsx"],"names":["React","useEffect","HTML5Backend","classSet","useEventActionHandler","rootElementAtom","revisionsAtom","uiAtom","useRecoilValue","useSetRecoilState","DndProvider","useKeyHandler","plugins","EditorBar","EditorToolbar","EditorContent","DragPreview","Dialogs","EditorSideBar","registerPlugins","handler","registry","Map","editorEventActionPlugins","byType","pl","name","Error","set","onEditorMount","unregisterPlugins","registered","keys","cb","get","byName","onEditorUnmount","triggerActionButtonClick","id","element","document","querySelector","console","warn","click","Editor","revisions","eventActionHandler","addKeyHandler","removeKeyHandler","isDragging","isResizing","setRevisionsAtomValue","rootElementId","firstRender","useRef","registeredPlugins","e","preventDefault","current","classes"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport classSet from \"classnames\";\nimport { useEventActionHandler } from \"../../hooks/useEventActionHandler\";\nimport { EventActionHandler, PbEditorEventActionPlugin } from \"../../../types\";\nimport {\n    rootElementAtom,\n    PageAtomType,\n    revisionsAtom,\n    RevisionsAtomType,\n    uiAtom\n} from \"../../recoil/modules\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { DndProvider } from \"react-dnd\";\nimport { useKeyHandler } from \"../../hooks/useKeyHandler\";\nimport { plugins } from \"@webiny/plugins\";\nimport \"./Editor.scss\";\n// Components\nimport EditorBar from \"./Bar\";\nimport EditorToolbar from \"./Toolbar\";\nimport EditorContent from \"./Content\";\nimport DragPreview from \"./DragPreview\";\nimport Dialogs from \"./Dialogs\";\nimport EditorSideBar from \"./EditorSideBar\";\n\ntype PluginRegistryType = Map<string, () => void>;\n\nconst registerPlugins = (handler: EventActionHandler): PluginRegistryType => {\n    const registry = new Map();\n    const editorEventActionPlugins = plugins.byType<PbEditorEventActionPlugin>(\n        \"pb-editor-event-action-plugin\"\n    );\n    for (const pl of editorEventActionPlugins) {\n        if (!pl.name) {\n            throw new Error(\n                `All plugins with type \"pb-editor-event-action-plugin\" must have a name.`\n            );\n        }\n        registry.set(pl.name, pl.onEditorMount(handler));\n    }\n    return registry;\n};\nconst unregisterPlugins = (handler: EventActionHandler, registered: PluginRegistryType): void => {\n    for (const name of registered.keys()) {\n        const cb = registered.get(name);\n        const pl = plugins.byName<PbEditorEventActionPlugin>(name);\n        if (typeof pl.onEditorUnmount === \"function\") {\n            pl.onEditorUnmount(handler, cb);\n            continue;\n        }\n        cb();\n    }\n};\n\nconst triggerActionButtonClick = (name: string): void => {\n    const id = `#action-${name}`;\n    const element = document.querySelector<HTMLElement | null>(id);\n    if (!element) {\n        console.warn(`There is no html element \"${id}\"`);\n        return;\n    }\n    element.click();\n};\n\ntype EditorPropsType = {\n    page: PageAtomType;\n    revisions: RevisionsAtomType;\n};\nexport const Editor: React.FunctionComponent<EditorPropsType> = ({ revisions }) => {\n    const eventActionHandler = useEventActionHandler();\n    const { addKeyHandler, removeKeyHandler } = useKeyHandler();\n    const { isDragging, isResizing } = useRecoilValue(uiAtom);\n\n    const setRevisionsAtomValue = useSetRecoilState(revisionsAtom);\n    const rootElementId = useRecoilValue(rootElementAtom);\n\n    const firstRender = React.useRef<boolean>(true);\n    const registeredPlugins = React.useRef<PluginRegistryType>();\n\n    useEffect(() => {\n        addKeyHandler(\"mod+z\", e => {\n            e.preventDefault();\n            triggerActionButtonClick(\"undo\");\n        });\n        addKeyHandler(\"mod+shift+z\", e => {\n            e.preventDefault();\n            triggerActionButtonClick(\"redo\");\n        });\n        registeredPlugins.current = registerPlugins(eventActionHandler);\n\n        setRevisionsAtomValue(revisions);\n        return () => {\n            removeKeyHandler(\"mod+z\");\n            removeKeyHandler(\"mod+shift+z\");\n\n            unregisterPlugins(eventActionHandler, registeredPlugins.current);\n        };\n    }, []);\n\n    useEffect(() => {\n        if (!rootElementId || firstRender.current === true) {\n            firstRender.current = false;\n            return;\n        }\n    }, [rootElementId]);\n\n    const classes = {\n        \"pb-editor\": true,\n        \"pb-editor-dragging\": isDragging,\n        \"pb-editor-resizing\": isResizing\n    };\n    return (\n        <DndProvider backend={HTML5Backend}>\n            <div className={classSet(classes)}>\n                <EditorBar />\n                <EditorToolbar />\n                <EditorContent />\n                <EditorSideBar />\n                <Dialogs />\n                <DragPreview />\n            </div>\n        </DndProvider>\n    );\n};\n"],"file":"Editor.js"}