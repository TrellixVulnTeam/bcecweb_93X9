{"version":3,"sources":["../../../../../src/editor/components/Editor/Sidebar/ElementSettingsTabContent.tsx"],"names":["React","styled","useElementSettings","AdvancedSettings","COLORS","NoActiveElement","RootElement","height","overflowY","width","boxShadow","backgroundColor","outline","SidebarActionsWrapper","display","flexWrap","borderBottom","gray","lightGray","borderTop","justifyContent","ElementSettingsTabContent","element","elementSettings","map","index","plugin","options","name","renderAction","memo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,kBAAP;AACA,OAAOC,gBAAP;AAEA,SAASC,MAAT;AACA,OAAOC,eAAP;;AAGA,IAAMC,WAAW,gBAAGL,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAC9BM,EAAAA,MAAM,EAAE,2BADsB;AACO;AACrCC,EAAAA,SAAS,EAAE,MAFmB;AAG9B;AACA,0BAAwB;AACpBC,IAAAA,KAAK,EAAE;AADa,GAJM;AAO9B,gCAA8B;AAC1BC,IAAAA,SAAS,EAAE;AADe,GAPA;AAU9B,gCAA8B;AAC1BC,IAAAA,eAAe,EAAE,UADS;AAE1BC,IAAAA,OAAO,EAAE;AAFiB;AAVA,CAAjB,CAAjB;AAgBA,IAAMC,qBAAqB,gBAAGZ,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AACxCa,EAAAA,OAAO,EAAE,MAD+B;AAExCC,EAAAA,QAAQ,EAAE,MAF8B;AAGxCC,EAAAA,YAAY,sBAAeZ,MAAM,CAACa,IAAtB,CAH4B;AAIxCN,EAAAA,eAAe,EAAEP,MAAM,CAACc,SAJgB;AAKxCC,EAAAA,SAAS,sBAAef,MAAM,CAACa,IAAtB,CAL+B;AAMxCG,EAAAA,cAAc,EAAE;AANwB,CAAjB,CAA3B;;AAYA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,OAAiD;AAAA,MAA9CC,OAA8C,QAA9CA,OAA8C;AAC/E,MAAMC,eAAe,GAAGrB,kBAAkB,EAA1C;;AAEA,MAAI,CAACoB,OAAL,EAAc;AACV,wBACI,oBAAC,eAAD;AACI,MAAA,IAAI,eAAE,oBAAC,SAAD,OADV;AAEI,MAAA,OAAO,EAAE;AAFb,MADJ;AAMH;;AAED,sBACI,oBAAC,WAAD,qBACI,oBAAC,qBAAD,QACKC,eAAe,CAACC,GAAhB,CAAoB,iBAAsBC,KAAtB,EAAgC;AAAA,QAA7BC,MAA6B,SAA7BA,MAA6B;AAAA,QAArBC,OAAqB,SAArBA,OAAqB;AACjD,wBACI;AAAK,MAAA,GAAG,EAAED,MAAM,CAACE,IAAP,GAAc,GAAd,GAAoBH;AAA9B,OACK,OAAOC,MAAM,CAACG,YAAd,KAA+B,UAA/B,IACGH,MAAM,CAACG,YAAP,CAAoB;AAAEF,MAAAA,OAAO,EAAPA;AAAF,KAApB,CAFR,CADJ;AAMH,GAPA,CADL,CADJ,eAWI,oBAAC,gBAAD,OAXJ,CADJ;AAeH,CA3BD;;AA6BA,4BAAe3B,KAAK,CAAC8B,IAAN,CAAWT,yBAAX,CAAf","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport useElementSettings from \"../../../plugins/elementSettings/hooks/useElementSettings\";\nimport AdvancedSettings from \"../../../plugins/elementSettings/advanced/AdvancedSettings\";\nimport { PbEditorElement } from \"../../../../types\";\nimport { COLORS } from \"../../../plugins/elementSettings/components/StyledComponents\";\nimport NoActiveElement from \"./NoActiveElement\";\nimport { ReactComponent as TouchIcon } from \"./icons/touch_app.svg\";\n\nconst RootElement = styled(\"div\")({\n    height: \"calc(100vh - 65px - 48px)\", // Subtract top-bar and tab-header height\n    overflowY: \"auto\",\n    // Style scrollbar\n    \"&::-webkit-scrollbar\": {\n        width: 1\n    },\n    \"&::-webkit-scrollbar-track\": {\n        boxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\"\n    },\n    \"&::-webkit-scrollbar-thumb\": {\n        backgroundColor: \"darkgrey\",\n        outline: \"1px solid slategrey\"\n    }\n});\n\nconst SidebarActionsWrapper = styled(\"div\")({\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderBottom: `1px solid ${COLORS.gray}`,\n    backgroundColor: COLORS.lightGray,\n    borderTop: `1px solid ${COLORS.gray}`,\n    justifyContent: \"center\"\n});\n\ntype ElementSettingsTabContentProps = {\n    element: PbEditorElement;\n};\nconst ElementSettingsTabContent = ({ element }: ElementSettingsTabContentProps) => {\n    const elementSettings = useElementSettings();\n\n    if (!element) {\n        return (\n            <NoActiveElement\n                icon={<TouchIcon />}\n                message={\"Select an element on the canvas to activate this panel.\"}\n            />\n        );\n    }\n\n    return (\n        <RootElement>\n            <SidebarActionsWrapper>\n                {elementSettings.map(({ plugin, options }, index) => {\n                    return (\n                        <div key={plugin.name + \"-\" + index}>\n                            {typeof plugin.renderAction === \"function\" &&\n                                plugin.renderAction({ options })}\n                        </div>\n                    );\n                })}\n            </SidebarActionsWrapper>\n            <AdvancedSettings />\n        </RootElement>\n    );\n};\n\nexport default React.memo(ElementSettingsTabContent);\n"],"file":"ElementSettingsTabContent.js"}