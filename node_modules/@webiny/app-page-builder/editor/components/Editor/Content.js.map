{"version":3,"sources":["../../../../src/editor/components/Editor/Content.tsx"],"names":["React","useEffect","useRef","useMemo","useCallback","useRecoilState","useRecoilValue","styled","css","kebabCase","plugins","Elevation","isPluginActiveSelector","layoutSelector","uiAtom","setPagePreviewDimensionMutation","rootElementAtom","elementsAtom","usePageBuilder","Element","BREADCRUMB_HEIGHT","ContentContainer","theme","backgroundColor","colors","background","position","margin","overflowY","overflowX","paddingBottom","contentContainerWrapper","padding","width","top","boxSizing","zIndex","BaseContainer","left","renderContent","layout","rootElement","render","content","id","createElement","component","Content","rootElementId","renderLayout","displayMode","setUiAtomValue","pagePreviewRef","setPagePreviewDimension","pagePreviewDimension","prev","resizeObserver","ResizeObserver","entries","entry","contentRect","height","current","observe","disconnect","pluginsByType","byType","layouts","layoutPlugins","map","pl","themeLayout","find","l","name","plugin","cloneElement","key"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,OAAnC,EAA4CC,WAA5C,QAA+D,OAA/D;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,QAA/C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AAOA,SACIC,sBADJ,EAEIC,cAFJ,EAGIC,MAHJ,EAIIC,+BAJJ,EAKIC,eALJ,EAMIC,YANJ;AASA,SAASC,cAAT;AACA,OAAOC,OAAP;AAEA,IAAMC,iBAAiB,GAAG,EAA1B;AACA,IAAMC,gBAAgB,gBAAGd,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAAA;;AAAA,MAAGe,KAAH,QAAGA,KAAH;AAAA,SAAgB;AACnDC,IAAAA,eAAe,EAAGD,KAAH,aAAGA,KAAH,kCAAGA,KAAD,CAAgBE,MAAlB,4CAAE,QAAwBC,UADU;AAEnDC,IAAAA,QAAQ,EAAE,UAFyC;AAGnDC,IAAAA,MAAM,EAAE,QAH2C;AAInD,gCAA4B;AACxBC,MAAAA,SAAS,EAAE,SADa;AACF;AACtBC,MAAAA,SAAS,EAAE,SAFa;AAGxB;AACAC,MAAAA,aAAa,EAAEV;AAJS;AAJuB,GAAhB;AAAA,CAAjB,CAAtB;AAWA,IAAMW,uBAAuB,gBAAGvB,GAAG,CAAC;AAChCmB,EAAAA,MAAM,EAAE,qBADwB;AAEhCK,EAAAA,OAAO,EAAE,CAFuB;AAGhCN,EAAAA,QAAQ,EAAE,UAHsB;AAIhCO,EAAAA,KAAK,EAAE,6BAJyB;AAKhC;AACAC,EAAAA,GAAG,EAAE,CAN2B;AAOhCC,EAAAA,SAAS,EAAE,YAPqB;AAQhCC,EAAAA,MAAM,EAAE;AARwB,CAAD,mCAAnC;AAUA,IAAMC,aAAa,gBAAG9B,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAChC0B,EAAAA,KAAK,EAAE,MADyB;AAEhCK,EAAAA,IAAI,EAAE,EAF0B;AAGhCX,EAAAA,MAAM,EAAE;AAHwB,CAAjB,CAAnB;;AAKA,IAAMY,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAAuBC,WAAvB,EAAqDC,MAArD,EAAyE;AAC3F,MAAMC,OAAO,gBAAG,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAEF,WAAW,CAACG;AAAzB,IAAhB;;AACA,MAAI,CAACF,MAAL,EAAa;AACT,WAAOC,OAAP;AACH;;AACD,sBAAO3C,KAAK,CAAC6C,aAAN,CAAoBL,MAAM,CAACM,SAA3B,EAAsC,IAAtC,EAA4CH,OAA5C,CAAP;AACH,CAND;;AAQA,IAAMI,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,MAAMC,aAAa,GAAG1C,cAAc,CAACU,eAAD,CAApC;AACA,MAAMyB,WAAW,GAAGnC,cAAc,CAACW,YAAY,CAAC+B,aAAD,CAAb,CAAlC;AACA,MAAMC,YAAY,GAAG3C,cAAc,CAACM,sBAAsB,CAAC,2BAAD,CAAvB,CAAnC;AACA,MAAM4B,MAAM,GAAGlC,cAAc,CAACO,cAAD,CAA7B;;AACA,wBAA0CR,cAAc,CAACS,MAAD,CAAxD;AAAA;AAAA,MAASoC,WAAT,uBAASA,WAAT;AAAA,MAAwBC,cAAxB;;AACA,MAAMC,cAAc,GAAGlD,MAAM,EAA7B;AAEA,MAAMmD,uBAAuB,GAAGjD,WAAW,CACvC,UAAAkD,oBAAoB,EAAI;AACpBH,IAAAA,cAAc,CAAC,UAAAI,IAAI;AAAA,aAAIxC,+BAA+B,CAACwC,IAAD,EAAOD,oBAAP,CAAnC;AAAA,KAAL,CAAd;AACH,GAHsC,EAIvC,CAACxC,MAAD,CAJuC,CAA3C;AAOA,MAAM0C,cAAc,GAAGrD,OAAO,CAAC,YAAM;AACjC,WAAO,IAAIsD,cAAJ,CAAmB,UAAAC,OAAO,EAAI;AAAA,iDACbA,OADa;AAAA;;AAAA;AACjC,4DAA6B;AAAA,cAAlBC,KAAkB;AACzB,mCAA0BA,KAAK,CAACC,WAAhC;AAAA,cAAQ3B,KAAR,sBAAQA,KAAR;AAAA,cAAe4B,MAAf,sBAAeA,MAAf;AACAR,UAAAA,uBAAuB,CAAC;AAAEpB,YAAAA,KAAK,EAALA,KAAF;AAAS4B,YAAAA,MAAM,EAANA;AAAT,WAAD,CAAvB;AACH;AAJgC;AAAA;AAAA;AAAA;AAAA;AAKpC,KALM,CAAP;AAMH,GAP6B,EAO3B,EAP2B,CAA9B,CAfkB,CAuBlB;;AACA5D,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAImD,cAAc,CAACU,OAAnB,EAA4B;AACxB;AACAN,MAAAA,cAAc,CAACO,OAAf,CAAuBX,cAAc,CAACU,OAAtC;AACH,KAJW,CAMZ;;;AACA,WAAO,YAAM;AACTN,MAAAA,cAAc,CAACQ,UAAf;AACH,KAFD;AAGH,GAVQ,EAUN,EAVM,CAAT;;AAYA,wBAAkB9C,cAAc,EAAhC;AAAA,MAAQI,KAAR,mBAAQA,KAAR;;AACA,MAAM2C,aAAa,GAAGvD,OAAO,CAACwD,MAAR,CAAsC,mBAAtC,CAAtB;AACA,MAAMC,OAAO,GAAGnE,KAAK,CAACG,OAAN,CAAc,YAAM;AAChC,QAAMiE,aAAa,GAAG1D,OAAO,CAACwD,MAAR,CAAmC,gBAAnC,CAAtB;AACA,WAAOE,aAAa,CAACC,GAAd,CAAkB,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAAC9B,MAAP;AAAA,KAApB,CAAP;AACH,GAHe,EAGb,EAHa,CAAhB;AAIA,MAAM+B,WAAW,GAAGJ,OAAO,CAACK,IAAR,CAAa,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,KAAWlC,MAAf;AAAA,GAAd,CAApB;;AACA,MAAIS,YAAY,IAAI,CAACsB,WAArB,EAAkC;AAC9B,wBAAO,8CAAmB/B,MAAnB,oCAAP;AACH;;AACD,sBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAET,uBAAtB;AAA+C,IAAA,CAAC,EAAE;AAAlD,kBACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAET,KADX;AAEI,IAAA,SAAS,uDAAgDb,SAAS,CAC9DyC,WAD8D,CAAzD,qCAEmBzC,SAAS,CAACyC,WAAD,CAF5B;AAFb,KAMKe,aAAa,CAACI,GAAd,CAAkB,UAAAM,MAAM;AAAA,wBACrB3E,KAAK,CAAC4E,YAAN,CAAmBD,MAAM,CAACjC,MAAP,EAAnB,EAAoC;AAAEmC,MAAAA,GAAG,EAAEF,MAAM,CAACD;AAAd,KAApC,CADqB;AAAA,GAAxB,CANL,eASI,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEtB,cAApB;AAAoC,IAAA,SAAS,EAAE;AAA/C,KACKb,aAAa,CAACgC,WAAD,EAAc9B,WAAd,EAA2BQ,YAA3B,CADlB,CATJ,CADJ,CADJ;AAiBH,CA/DD;;AAiEA,eAAeF,OAAf","sourcesContent":["import React, { useEffect, useRef, useMemo, useCallback } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\nimport kebabCase from \"lodash/kebabCase\";\nimport { plugins } from \"@webiny/plugins\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport {\n    PbEditorContentPlugin,\n    PbPageLayout,\n    PbPageLayoutPlugin,\n    PbEditorElement\n} from \"../../../types\";\nimport {\n    isPluginActiveSelector,\n    layoutSelector,\n    uiAtom,\n    setPagePreviewDimensionMutation,\n    rootElementAtom,\n    elementsAtom\n} from \"../../recoil/modules\";\n\nimport { usePageBuilder } from \"../../../hooks/usePageBuilder\";\nimport Element from \"../Element\";\n\nconst BREADCRUMB_HEIGHT = 33;\nconst ContentContainer = styled(\"div\")(({ theme }) => ({\n    backgroundColor: (theme as any)?.colors?.background,\n    position: \"relative\",\n    margin: \"0 auto\",\n    \".webiny-pb-page-document\": {\n        overflowY: \"visible\", // cuts off the block selector tooltip\n        overflowX: \"visible\",\n        // We need this extra spacing so that editor content won't get cutoff\n        paddingBottom: BREADCRUMB_HEIGHT\n    }\n}));\nconst contentContainerWrapper = css({\n    margin: \"95px 65px 50px 85px\",\n    padding: 0,\n    position: \"absolute\",\n    width: \"calc(100vw - 115px - 300px)\",\n    //overflow: \"hidden\", // cuts off the block selector tooltip\n    top: 0,\n    boxSizing: \"border-box\",\n    zIndex: 1\n});\nconst BaseContainer = styled(\"div\")({\n    width: \"100%\",\n    left: 52,\n    margin: \"0 auto\"\n});\nconst renderContent = (layout: PbPageLayout, rootElement: PbEditorElement, render: boolean) => {\n    const content = <Element id={rootElement.id} />;\n    if (!render) {\n        return content;\n    }\n    return React.createElement(layout.component, null, content);\n};\n\nconst Content = () => {\n    const rootElementId = useRecoilValue(rootElementAtom);\n    const rootElement = useRecoilValue(elementsAtom(rootElementId));\n    const renderLayout = useRecoilValue(isPluginActiveSelector(\"pb-editor-toolbar-preview\"));\n    const layout = useRecoilValue(layoutSelector);\n    const [{ displayMode }, setUiAtomValue] = useRecoilState(uiAtom);\n    const pagePreviewRef = useRef();\n\n    const setPagePreviewDimension = useCallback(\n        pagePreviewDimension => {\n            setUiAtomValue(prev => setPagePreviewDimensionMutation(prev, pagePreviewDimension));\n        },\n        [uiAtom]\n    );\n\n    const resizeObserver = useMemo(() => {\n        return new ResizeObserver(entries => {\n            for (const entry of entries) {\n                const { width, height } = entry.contentRect;\n                setPagePreviewDimension({ width, height });\n            }\n        });\n    }, []);\n    // Set resize observer\n    useEffect(() => {\n        if (pagePreviewRef.current) {\n            // Add resize observer\n            resizeObserver.observe(pagePreviewRef.current);\n        }\n\n        // Cleanup\n        return () => {\n            resizeObserver.disconnect();\n        };\n    }, []);\n\n    const { theme } = usePageBuilder();\n    const pluginsByType = plugins.byType<PbEditorContentPlugin>(\"pb-editor-content\");\n    const layouts = React.useMemo(() => {\n        const layoutPlugins = plugins.byType<PbPageLayoutPlugin>(\"pb-page-layout\");\n        return layoutPlugins.map(pl => pl.layout);\n    }, []);\n    const themeLayout = layouts.find(l => l.name === layout);\n    if (renderLayout && !themeLayout) {\n        return <div>Layout &quot;{layout}&quot; was not found in your theme!</div>;\n    }\n    return (\n        <Elevation className={contentContainerWrapper} z={0}>\n            <ContentContainer\n                theme={theme}\n                className={`mdc-elevation--z1 webiny-pb-editor-device--${kebabCase(\n                    displayMode\n                )} webiny-pb-media-query--${kebabCase(displayMode)}`}\n            >\n                {pluginsByType.map(plugin =>\n                    React.cloneElement(plugin.render(), { key: plugin.name })\n                )}\n                <BaseContainer ref={pagePreviewRef} className={\"webiny-pb-editor-content-preview\"}>\n                    {renderContent(themeLayout, rootElement, renderLayout)}\n                </BaseContainer>\n            </ContentContainer>\n        </Elevation>\n    );\n};\n\nexport default Content;\n"],"file":"Content.js"}