import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React, { useCallback, useEffect } from "react";
import styled from "@emotion/styled";
import { css } from "emotion";
import { useRecoilValue, useRecoilState } from "recoil";
import { Elevation } from "@webiny/ui/Elevation";
import { Tabs, Tab } from "@webiny/ui/Tabs";
import { elementWithChildrenByIdSelector, activeElementAtom, sidebarAtom, highlightSidebarTabMutation, updateSidebarActiveTabIndexMutation } from "../../recoil/modules";
import StyleSettingsTabContent from "./Sidebar/StyleSettingsTabContent";
import ElementSettingsTabContent from "./Sidebar/ElementSettingsTabContent";
var rightSideBar = /*#__PURE__*/css({
  boxShadow: "1px 0px 5px 0px rgba(128,128,128,1)",
  position: "fixed",
  right: 0,
  top: 65,
  height: "100%",
  width: 300,
  zIndex: 1
}, "label:rightSideBar;");
var PanelHighLight = /*#__PURE__*/styled("div", {
  target: "e1in4dw70",
  label: "PanelHighLight"
})({
  "&": {
    opacity: 0,
    animation: "wf-blink-in 1s",
    border: "2px solid var(--mdc-theme-secondary)",
    boxShadow: "0 0 15px var(--mdc-theme-secondary)",
    backgroundColor: "rgba(42, 217, 134, 0.25)",
    borderRadius: "2px",
    position: "absolute",
    top: "0",
    left: "0",
    right: "0",
    bottom: "0",
    zIndex: 1,
    pointerEvents: "none"
  },
  "@keyframes wf-blink-in": {
    "40%": {
      opacity: 1
    }
  }
});

var EditorSideBar = function EditorSideBar() {
  var activeElementId = useRecoilValue(activeElementAtom);
  var element = useRecoilValue(elementWithChildrenByIdSelector(activeElementId));

  var _useRecoilState = useRecoilState(sidebarAtom),
      _useRecoilState2 = _slicedToArray(_useRecoilState, 2),
      sidebarAtomValue = _useRecoilState2[0],
      setSidebarAtomValue = _useRecoilState2[1];

  var setActiveTabIndex = useCallback(function (index) {
    setSidebarAtomValue(function (prev) {
      return updateSidebarActiveTabIndexMutation(prev, index);
    });
  }, []);
  var unHighlightElementTab = useCallback(function () {
    setSidebarAtomValue(function (prev) {
      return highlightSidebarTabMutation(prev, false);
    });
  }, []);
  useEffect(function () {
    if (sidebarAtomValue.highlightTab) {
      setTimeout(unHighlightElementTab, 1000);
    }
  }, [sidebarAtomValue.highlightTab]);
  return /*#__PURE__*/React.createElement(Elevation, {
    z: 1,
    className: rightSideBar
  }, /*#__PURE__*/React.createElement(Tabs, {
    value: sidebarAtomValue.activeTabIndex,
    updateValue: setActiveTabIndex
  }, /*#__PURE__*/React.createElement(Tab, {
    label: "style"
  }, /*#__PURE__*/React.createElement(StyleSettingsTabContent, {
    element: element
  })), /*#__PURE__*/React.createElement(Tab, {
    label: "element",
    disabled: !element
  }, /*#__PURE__*/React.createElement(ElementSettingsTabContent, {
    element: element
  }))), sidebarAtomValue.highlightTab && /*#__PURE__*/React.createElement(PanelHighLight, null));
};

export default /*#__PURE__*/React.memo(EditorSideBar);
//# sourceMappingURL=EditorSideBar.js.map