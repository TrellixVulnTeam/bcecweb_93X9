{"version":3,"sources":["../../../../src/editor/components/Editor/Toolbar.tsx"],"names":["React","useEffect","useRef","useRecoilValue","classNames","styled","css","Drawer","DrawerContent","plugins","useKeyHandler","useEventActionHandler","DeactivatePluginActionEvent","activePluginsByTypeNamesSelector","ToolbarDrawerContainer","top","left","position","backgroundColor","zIndex","ToolbarContainer","display","padding","width","height","boxShadow","DrawerContainer","open","pointerEvents","ToolbarActions","flexDirection","justifyContent","drawerStyle","marginLeft","maxWidth","ToolbarDrawer","name","active","children","drawerClassName","eventActionHandler","removeKeyHandler","addKeyHandler","last","current","e","preventDefault","trigger","renderPlugin","plugin","cloneElement","renderAction","key","Toolbar","activePluginsTop","actionsTop","byType","actionsBottom","filter","renderDrawer","map","Boolean","includes","toolbar","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport classNames from \"classnames\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\nimport { Drawer, DrawerContent } from \"@webiny/ui/Drawer\";\nimport { plugins } from \"@webiny/plugins\";\nimport { PbEditorToolbarBottomPlugin, PbEditorToolbarTopPlugin } from \"~/types\";\nimport { useKeyHandler } from \"~/editor/hooks/useKeyHandler\";\nimport { useEventActionHandler } from \"~/editor/hooks/useEventActionHandler\";\nimport { DeactivatePluginActionEvent } from \"~/editor/recoil/actions\";\nimport { activePluginsByTypeNamesSelector } from \"~/editor/recoil/modules\";\n\nconst ToolbarDrawerContainer = styled(\"div\")({\n    top: 64,\n    left: 0,\n    position: \"fixed\",\n    backgroundColor: \"var(--mdc-theme-surface)\",\n    zIndex: 2\n});\nconst ToolbarContainer = styled(\"div\")({\n    position: \"fixed\",\n    display: \"inline-block\",\n    padding: \"2px 1px 2px 3px\",\n    width: 50,\n    top: 64,\n    height: \"calc(100vh - 68px)\",\n    backgroundColor: \"var(--mdc-theme-surface)\",\n    boxShadow: \"1px 0px 5px 0px var(--mdc-theme-on-background)\",\n    zIndex: 3\n});\nconst DrawerContainer = styled(\"div\")(({ open }: any) => ({\n    pointerEvents: open ? \"all\" : \"none\",\n    \".mdc-drawer__drawer\": {\n        \"> .mdc-list\": {\n            padding: 0\n        }\n    }\n}));\nconst ToolbarActions = styled(\"div\")({\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    height: \"100%\"\n});\nconst drawerStyle = css({\n    zIndex: 10,\n    \"&.mdc-drawer--dismissible\": {\n        marginLeft: 54,\n        position: \"fixed\",\n        top: 64,\n        width: \"490px !important\",\n        maxWidth: \"490px !important\",\n        \".mdc-drawer__content\": {\n            width: \"100%\"\n        }\n    }\n});\ntype ToolbarDrawerProps = {\n    name: string;\n    active: boolean;\n    children: React.ReactNode;\n    drawerClassName?: string;\n};\nconst ToolbarDrawer: React.FC<ToolbarDrawerProps> = ({\n    name,\n    active,\n    children,\n    drawerClassName\n}) => {\n    const eventActionHandler = useEventActionHandler();\n    const { removeKeyHandler, addKeyHandler } = useKeyHandler();\n    const last = useRef({ active: null });\n    useEffect(() => {\n        if (active && !last.current.active) {\n            addKeyHandler(\"escape\", e => {\n                e.preventDefault();\n                eventActionHandler.trigger(\n                    new DeactivatePluginActionEvent({\n                        name\n                    })\n                );\n            });\n        }\n        if (!active && last.current.active) {\n            removeKeyHandler(\"escape\");\n        }\n    });\n    useEffect(() => {\n        last.current = { active };\n    });\n    return (\n        <DrawerContainer open={active}>\n            <Drawer dismissible open={active} className={classNames(drawerStyle, drawerClassName)}>\n                <DrawerContent>{children}</DrawerContent>\n            </Drawer>\n        </DrawerContainer>\n    );\n};\nconst renderPlugin = (plugin: PbEditorToolbarTopPlugin | PbEditorToolbarBottomPlugin) => {\n    return React.cloneElement(plugin.renderAction(), { key: plugin.name });\n};\n\nconst Toolbar = () => {\n    const activePluginsTop = useRecoilValue(\n        activePluginsByTypeNamesSelector(\"pb-editor-toolbar-top\")\n    );\n    const actionsTop = plugins.byType<PbEditorToolbarTopPlugin>(\"pb-editor-toolbar-top\");\n    const actionsBottom = plugins.byType<PbEditorToolbarBottomPlugin>(\"pb-editor-toolbar-bottom\");\n    return (\n        <>\n            <ToolbarDrawerContainer>\n                {actionsTop\n                    .filter(plugin => typeof plugin.renderDrawer === \"function\")\n                    .map(plugin => (\n                        <ToolbarDrawer\n                            key={plugin.name}\n                            name={plugin.name}\n                            active={Boolean(activePluginsTop.includes(plugin.name))}\n                            drawerClassName={plugin.toolbar && plugin.toolbar.drawerClassName}\n                        >\n                            {plugin.renderDrawer()}\n                        </ToolbarDrawer>\n                    ))}\n            </ToolbarDrawerContainer>\n            <ToolbarContainer>\n                <ToolbarActions>\n                    <div>{actionsTop.map(renderPlugin)}</div>\n                    <div>{actionsBottom.map(renderPlugin)}</div>\n                </ToolbarActions>\n            </ToolbarContainer>\n        </>\n    );\n};\nexport default React.memo(Toolbar);\n"],"file":"Toolbar.js"}