{"version":3,"sources":["../../../../src/editor/components/DropZone/Center.tsx"],"names":["activeElementAtom","React","Droppable","styled","useRecoilValue","Container","memo","isOver","backgroundColor","boxSizing","height","minHeight","position","userSelect","width","border","color","Add","top","left","transform","margin","isVisible","Center","id","type","onDrop","children","isHighlighted","activeElementId","isActive","isDroppable","drop"],"mappings":"AAAA,SAASA,iBAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,cAAT,QAA+B,QAA/B;AAQA,IAAMC,SAAS,gBAAGJ,KAAK,CAACK,IAAN,eACdH,MADc,CACP,KADO;AAAA;AAAA;AAAA,GACA;AAAA,MAAGI,MAAH,QAAGA,MAAH;AAAA,SAAiC;AAC3CC,IAAAA,eAAe,EAAE,aAD0B;AAE3CC,IAAAA,SAAS,EAAE,YAFgC;AAG3CC,IAAAA,MAAM,EAAE,MAHmC;AAI3CC,IAAAA,SAAS,EAAE,GAJgC;AAK3CC,IAAAA,QAAQ,EAAE,UALiC;AAM3CC,IAAAA,UAAU,EAAE,MAN+B;AAO3CC,IAAAA,KAAK,EAAE,MAPoC;AAQ3CC,IAAAA,MAAM,EAAER,MAAM,GACR,qCADQ,GAER,uCAVqC;AAW3C,gBAAY;AACRS,MAAAA,KAAK,EAAET,MAAM,GACP,qCADO,GAEP;AAHE;AAX+B,GAAjC;AAAA,CADA,EAAlB;AAoBA,IAAMU,GAAG,gBAAGd,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AACtBS,EAAAA,QAAQ,EAAE,UADY;AAEtBM,EAAAA,GAAG,EAAE,KAFiB;AAGtBC,EAAAA,IAAI,EAAE,KAHgB;AAItBC,EAAAA,SAAS,EAAE,sBAJW;AAKtBC,EAAAA,MAAM,EAAE;AALc,CAAjB,CAAT;;AAQA,IAAMC,SAAqC,GAAG,SAAxCA,SAAwC;AAAA,SAAM,IAAN;AAAA,CAA9C;;AAUA,IAAMC,MAAsC,GAAG,SAAzCA,MAAyC,QAAmD;AAAA,MAAhDC,EAAgD,SAAhDA,EAAgD;AAAA,MAA5CC,IAA4C,SAA5CA,IAA4C;AAAA,MAAtCC,MAAsC,SAAtCA,MAAsC;AAAA,MAA9BC,QAA8B,SAA9BA,QAA8B;AAAA,MAApBC,aAAoB,SAApBA,aAAoB;AAC9F,MAAMC,eAAe,GAAGzB,cAAc,CAACJ,iBAAD,CAAtC;AACA,MAAM8B,QAAQ,GAAGD,eAAe,KAAKL,EAArC;AACA,sBACI,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEE,MAAnB;AAA2B,IAAA,IAAI,EAAED,IAAjC;AAAuC,IAAA,SAAS,EAAEH;AAAlD,KACK;AAAA,QAAGf,MAAH,SAAGA,MAAH;AAAA,QAAWwB,WAAX,SAAWA,WAAX;AAAA,QAAwBC,IAAxB,SAAwBA,IAAxB;AAAA,wBACG;AAAK,MAAA,KAAK,EAAE;AAAElB,QAAAA,KAAK,EAAE,MAAT;AAAiBJ,QAAAA,MAAM,EAAE;AAAzB,OAAZ;AAA+C,MAAA,GAAG,EAAEsB;AAApD,oBACI,oBAAC,SAAD;AACI,MAAA,MAAM,EAAGzB,MAAM,IAAIwB,WAAX,IAA2BD,QADvC;AAEI,MAAA,SAAS,EAAEF;AAFf,oBAII,oBAAC,GAAD,QAAMD,QAAN,CAJJ,CADJ,CADH;AAAA,GADL,CADJ;AAcH,CAjBD;;AAmBA,4BAAe1B,KAAK,CAACK,IAAN,CAAWiB,MAAX,CAAf","sourcesContent":["import { activeElementAtom } from \"../../recoil/modules\";\nimport React from \"react\";\nimport Droppable, { DroppableIsVisiblePropType, DroppableOnDropPropType } from \"./../Droppable\";\nimport styled from \"@emotion/styled\";\nimport { useRecoilValue } from \"recoil\";\n\ntype ContainerProps = {\n    isOver: boolean;\n    highlight: boolean;\n    children: React.ReactNode;\n};\n\nconst Container = React.memo<ContainerProps>(\n    styled(\"div\")(({ isOver }: ContainerProps) => ({\n        backgroundColor: \"transparent\",\n        boxSizing: \"border-box\",\n        height: \"100%\",\n        minHeight: 100,\n        position: \"relative\",\n        userSelect: \"none\",\n        width: \"100%\",\n        border: isOver\n            ? \"1px dashed var(--mdc-theme-primary)\"\n            : \"1px dashed var(--mdc-theme-secondary)\",\n        \".addIcon\": {\n            color: isOver\n                ? \"var(--mdc-theme-primary) !important\"\n                : \"var(--mdc-theme-secondary) !important\"\n        }\n    }))\n);\n\nconst Add = styled(\"div\")({\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%,-50%)\",\n    margin: 0\n});\n\nconst isVisible: DroppableIsVisiblePropType = () => true;\n\ntype Props = {\n    id: string;\n    type: string;\n    onDrop: DroppableOnDropPropType;\n    children: React.ReactNode;\n    isHighlighted: boolean;\n};\n\nconst Center: React.FunctionComponent<Props> = ({ id, type, onDrop, children, isHighlighted }) => {\n    const activeElementId = useRecoilValue(activeElementAtom);\n    const isActive = activeElementId === id;\n    return (\n        <Droppable onDrop={onDrop} type={type} isVisible={isVisible}>\n            {({ isOver, isDroppable, drop }) => (\n                <div style={{ width: \"100%\", height: \"100%\" }} ref={drop}>\n                    <Container\n                        isOver={(isOver && isDroppable) || isActive}\n                        highlight={isHighlighted}\n                    >\n                        <Add>{children}</Add>\n                    </Container>\n                </div>\n            )}\n        </Droppable>\n    );\n};\n\nexport default React.memo(Center);\n"],"file":"Center.js"}