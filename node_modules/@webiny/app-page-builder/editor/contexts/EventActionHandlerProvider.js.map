{"version":3,"sources":["../../../src/editor/contexts/EventActionHandlerProvider.tsx"],"names":["useApolloClient","React","createContext","useEffect","useMemo","useRef","merge","plugins","rootElementAtom","elementsAtom","pageAtom","pluginsAtom","revisionsAtom","sidebarAtom","uiAtom","elementByIdSelector","activeElementAtom","highlightElementAtom","useGotoRecoilSnapshot","useRecoilCallback","useRecoilSnapshot","useRecoilState","useRecoilValue","useSetRecoilState","EventActionHandlerContext","createConfiguration","reduce","acc","pl","config","maxEventActionsNesting","getEventActionClassName","target","cls","name","getName","Error","trackedAtoms","isTrackedAtomChanged","state","atom","EventActionHandlerProvider","children","apolloClient","setActiveElementAtomValue","setHighlightElementAtomValue","sidebarAtomValue","setSidebarAtomValue","rootElementAtomValue","pageAtomValue","setPageAtomValue","pluginsAtomValue","setPluginsAtomValue","uiAtomValue","setUiAtomValue","revisionsAtomValue","snapshot","eventActionHandlerRef","sidebarAtomValueRef","rootElementAtomValueRef","pageAtomValueRef","pluginsAtomValueRef","uiAtomValueRef","revisionsAtomValueRef","snapshotRef","eventElements","snapshotsHistory","past","future","present","busy","isBatching","isDisabled","goToSnapshot","current","registry","Map","byType","updateElements","set","elements","forEach","item","id","prevValue","parent","undefined","takeSnapshot","getElementTree","element","path","getElementById","push","type","data","Promise","all","map","child","get","list","has","hasCb","callable","values","Array","from","some","cb","off","registryItems","delete","hasOwnProperty","getPromise","getCallableState","sidebar","rootElement","page","ui","revisions","createStateHistorySnapshot","saveCallablesResults","history","Object","length","activeElement","highlightElement","on","events","Symbol","trigger","ev","triggerEventAction","results","undo","previousSnapshot","pop","futureSnapshot","unshift","redo","nextSnapshot","shift","startBatch","endBatch","disableHistory","enableHistory","initialState","initiator","join","targetCallables","actions","args","getArgs","callables","client","eventActionHandler","r","action","concat"],"mappings":"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","sourcesContent":["import { useApolloClient } from \"@apollo/react-hooks\";\nimport React, { createContext, useEffect, useMemo, useRef } from \"react\";\nimport merge from \"lodash/merge\";\nimport { plugins } from \"@webiny/plugins\";\nimport {\n    rootElementAtom,\n    elementsAtom,\n    pageAtom,\n    pluginsAtom,\n    revisionsAtom,\n    sidebarAtom,\n    uiAtom,\n    elementByIdSelector,\n    activeElementAtom,\n    highlightElementAtom\n} from \"../recoil/modules\";\n\nimport { PbState } from \"../recoil/modules/types\";\nimport { EventAction } from \"~/editor/recoil/eventActions\";\nimport {\n    EventActionHandlerCallableArgs,\n    EventActionCallable,\n    EventActionHandlerActionCallableResponse,\n    EventActionHandlerConfig,\n    PbConfigPluginType,\n    PbConfigType,\n    PbEditorElement,\n    EventActionHandler,\n    EventActionHandlerTarget,\n    EventActionHandlerCallableState\n} from \"~/types\";\nimport {\n    Snapshot,\n    useGotoRecoilSnapshot,\n    useRecoilCallback,\n    useRecoilSnapshot,\n    useRecoilState,\n    useRecoilValue,\n    useSetRecoilState\n} from \"recoil\";\n\ntype ListType = Map<symbol, EventActionCallable>;\ntype RegistryType = Map<string, ListType>;\n\ninterface SnapshotHistory {\n    past: Snapshot[];\n    future: Snapshot[];\n    busy: boolean;\n    present: Snapshot | null;\n    isBatching: boolean;\n    isDisabled: boolean;\n}\n\nexport const EventActionHandlerContext = createContext<EventActionHandler>(null);\n\nconst createConfiguration = (plugins: PbConfigPluginType[]): PbConfigType => {\n    return plugins.reduce(\n        (acc, pl) => {\n            return merge(acc, pl.config());\n        },\n        { maxEventActionsNesting: 5 }\n    );\n};\n\nconst getEventActionClassName = (target: EventActionHandlerTarget): string => {\n    const cls = new target();\n    const name = cls.getName();\n    if (!name) {\n        throw new Error(\"Could not find class name.\");\n    }\n    return name;\n};\n\nconst trackedAtoms = [\"elements\"];\nconst isTrackedAtomChanged = (state: Partial<PbState>): boolean => {\n    for (const atom of trackedAtoms) {\n        if (!state[atom]) {\n            continue;\n        }\n        return true;\n    }\n    return false;\n};\n\nexport const EventActionHandlerProvider: React.FunctionComponent<any> = ({ children }) => {\n    const apolloClient = useApolloClient();\n    const setActiveElementAtomValue = useSetRecoilState(activeElementAtom);\n    const setHighlightElementAtomValue = useSetRecoilState(highlightElementAtom);\n    const [sidebarAtomValue, setSidebarAtomValue] = useRecoilState(sidebarAtom);\n    const rootElementAtomValue = useRecoilValue(rootElementAtom);\n    const [pageAtomValue, setPageAtomValue] = useRecoilState(pageAtom);\n    const [pluginsAtomValue, setPluginsAtomValue] = useRecoilState(pluginsAtom);\n    const [uiAtomValue, setUiAtomValue] = useRecoilState(uiAtom);\n    const revisionsAtomValue = useRecoilValue(revisionsAtom);\n    const snapshot = useRecoilSnapshot();\n\n    const eventActionHandlerRef = useRef<EventActionHandler>(null);\n    const sidebarAtomValueRef = useRef(null);\n    const rootElementAtomValueRef = useRef(null);\n    const pageAtomValueRef = useRef(null);\n    const pluginsAtomValueRef = useRef(null);\n    const uiAtomValueRef = useRef(null);\n    const revisionsAtomValueRef = useRef(null);\n    const snapshotRef = useRef(null);\n    const eventElements = useRef({});\n    const snapshotsHistory = useRef<SnapshotHistory>({\n        past: [],\n        future: [],\n        present: null,\n        busy: false,\n        isBatching: false,\n        isDisabled: false\n    });\n    const goToSnapshot = useGotoRecoilSnapshot();\n\n    useEffect(() => {\n        sidebarAtomValueRef.current = sidebarAtomValue;\n        rootElementAtomValueRef.current = rootElementAtomValue;\n        pageAtomValueRef.current = pageAtomValue;\n        pluginsAtomValueRef.current = pluginsAtomValue;\n        uiAtomValueRef.current = uiAtomValue;\n        revisionsAtomValueRef.current = revisionsAtomValue;\n        snapshotRef.current = snapshot;\n    }, [\n        sidebarAtomValue,\n        rootElementAtomValue,\n        pageAtomValue,\n        pluginsAtomValue,\n        uiAtomValue,\n        revisionsAtomValue\n    ]);\n\n    const registry = useRef<RegistryType>(new Map());\n\n    const config = useRef<EventActionHandlerConfig>(\n        createConfiguration(plugins.byType(\"pb-config\"))\n    );\n\n    const updateElements = useRecoilCallback(({ set }) => (elements: PbEditorElement[] = []) => {\n        elements.forEach(item => {\n            set(elementsAtom(item.id), prevValue => {\n                return {\n                    ...prevValue,\n                    ...item,\n                    parent: item.parent !== undefined ? item.parent : prevValue.parent\n                };\n            });\n            return item.id;\n        });\n    });\n\n    const takeSnapshot = useRecoilCallback(({ snapshot }) => () => {\n        return snapshot;\n    });\n\n    const getElementTree = async (element, path = []) => {\n        if (!element) {\n            element = await getElementById(rootElementAtomValue);\n        }\n        if (element.parent) {\n            path.push(element.parent);\n        }\n        return {\n            id: element.id,\n            type: element.type,\n            data: element.data,\n            elements: await Promise.all(\n                element.elements.map(async child => {\n                    return getElementTree(await getElementById(child), [...path]);\n                })\n            ),\n            path\n        };\n    };\n\n    const get = (name: string): ListType => {\n        const list = registry.current.get(name);\n        if (!list) {\n            throw new Error(`There is no event action group \"${name}\" defined.`);\n        }\n        return list;\n    };\n\n    const set = (name: string, list: ListType): void => {\n        registry.current.set(name, list);\n    };\n\n    const has = (name: string): boolean => {\n        return registry.current.has(name);\n    };\n\n    const hasCb = (list: ListType, callable: EventActionCallable): boolean => {\n        const values = Array.from(list.values());\n        return values.some(cb => cb === callable);\n    };\n\n    const off = (id: symbol): boolean => {\n        const registryItems = Array.from(registry.current.values());\n        for (const list of registryItems) {\n            if (!list.has(id)) {\n                continue;\n            }\n            return list.delete(id);\n        }\n        return false;\n    };\n\n    const getElementById = async (id: string) => {\n        if (eventElements.current.hasOwnProperty(id)) {\n            return eventElements.current[id];\n        }\n        return snapshotRef.current.getPromise(elementByIdSelector(id));\n    };\n\n    const getCallableState = (\n        state: Partial<EventActionHandlerCallableState>\n    ): EventActionHandlerCallableState => {\n        return {\n            sidebar: sidebarAtomValueRef.current,\n            rootElement: rootElementAtomValueRef.current,\n            page: pageAtomValueRef.current,\n            plugins: pluginsAtomValueRef.current,\n            ui: uiAtomValueRef.current,\n            revisions: revisionsAtomValueRef.current,\n            getElementById,\n            getElementTree,\n            ...state\n        };\n    };\n\n    const createStateHistorySnapshot = (): void => {\n        if (snapshotsHistory.current.busy === true) {\n            return;\n        }\n        snapshotsHistory.current.busy = true;\n        // when saving new state history we must remove everything after the current one\n        // since this is the new starting point of the state history\n        snapshotsHistory.current.future = [];\n        snapshotsHistory.current.past.push(takeSnapshot());\n        snapshotsHistory.current.present = null;\n        snapshotsHistory.current.busy = false;\n    };\n\n    const saveCallablesResults = (state: Partial<PbState>, history = true): void => {\n        if (Object.values(state).length === 0) {\n            return;\n        } else if (\n            history &&\n            snapshotsHistory.current.isBatching === false &&\n            snapshotsHistory.current.isDisabled === false &&\n            isTrackedAtomChanged(state)\n        ) {\n            createStateHistorySnapshot();\n        }\n\n        if (state.ui) {\n            setUiAtomValue(state.ui);\n        }\n\n        if (state.plugins) {\n            setPluginsAtomValue(state.plugins);\n        }\n\n        if (state.page) {\n            setPageAtomValue(state.page);\n        }\n\n        if (state.hasOwnProperty(\"activeElement\")) {\n            setActiveElementAtomValue(state.activeElement);\n        }\n\n        if (state.hasOwnProperty(\"highlightElement\")) {\n            setHighlightElementAtomValue(state.highlightElement);\n        }\n\n        if (state.elements) {\n            updateElements(Object.values(state.elements));\n        }\n\n        if (state.sidebar) {\n            setSidebarAtomValue(state.sidebar);\n        }\n    };\n\n    eventActionHandlerRef.current = useMemo<EventActionHandler>(\n        () => ({\n            getElementTree,\n            on: (target, callable) => {\n                const name = getEventActionClassName(target);\n                if (!has(name)) {\n                    set(name, new Map());\n                }\n                const events = get(name);\n                if (hasCb(events, callable)) {\n                    throw new Error(\n                        `You cannot register event action \"${name}\" with identical function that already is registered.`\n                    );\n                }\n\n                const id = Symbol(`eventActionCb:${name}`);\n                events.set(id, callable);\n                return () => {\n                    return off(id);\n                };\n            },\n            trigger: async ev => {\n                const results = await triggerEventAction(ev, {} as any, []);\n                saveCallablesResults(results.state);\n                return results.state;\n            },\n            undo: () => {\n                if (snapshotsHistory.current.busy === true) {\n                    return;\n                }\n                snapshotsHistory.current.busy = true;\n                const previousSnapshot = snapshotsHistory.current.past.pop();\n                if (!previousSnapshot) {\n                    snapshotsHistory.current.busy = false;\n                    return;\n                }\n                const futureSnapshot = snapshotsHistory.current.present || takeSnapshot();\n                snapshotsHistory.current.future.unshift(futureSnapshot);\n\n                snapshotsHistory.current.present = previousSnapshot;\n\n                goToSnapshot(previousSnapshot);\n                snapshotsHistory.current.busy = false;\n            },\n            redo: () => {\n                if (snapshotsHistory.current.busy === true) {\n                    return;\n                }\n                snapshotsHistory.current.busy = true;\n                const nextSnapshot = snapshotsHistory.current.future.shift();\n                if (!nextSnapshot) {\n                    snapshotsHistory.current.present = null;\n                    snapshotsHistory.current.busy = false;\n                    return;\n                } else if (snapshotsHistory.current.present) {\n                    snapshotsHistory.current.past.push(snapshotsHistory.current.present);\n                }\n                snapshotsHistory.current.present = nextSnapshot;\n\n                goToSnapshot(nextSnapshot);\n                snapshotsHistory.current.busy = false;\n            },\n            startBatch: () => {\n                snapshotsHistory.current.isBatching = true;\n            },\n            endBatch: () => {\n                snapshotsHistory.current.isBatching = false;\n            },\n            disableHistory: () => {\n                snapshotsHistory.current.isDisabled = true;\n            },\n            enableHistory: () => {\n                snapshotsHistory.current.isDisabled = false;\n            }\n        }),\n        []\n    );\n\n    const triggerEventAction = async <T extends EventActionHandlerCallableArgs>(\n        ev: EventAction<T>,\n        initialState: PbState,\n        initiator: string[]\n    ): Promise<EventActionHandlerActionCallableResponse> => {\n        if (initiator.length >= config.current.maxEventActionsNesting) {\n            throw new Error(\n                `Max (${\n                    config.current.maxEventActionsNesting\n                }) allowed levels of nesting actions reached: ${initiator.join(\" -> \")}`\n            );\n        }\n\n        if (initiator.length === 0) {\n            // Reset elements taking part in the event processing at the beginning of the cycle\n            eventElements.current = {};\n        }\n\n        const name = ev.getName();\n        if (!has(name)) {\n            throw new Error(`There is no event action that is registered with name \"${name}\".`);\n        }\n        const targetCallables = get(name);\n        const results: EventActionHandlerActionCallableResponse = {\n            state: {},\n            actions: []\n        };\n        if (!targetCallables) {\n            return results;\n        }\n        const args = ev.getArgs();\n        const callables = Array.from(targetCallables.values());\n        for (const cb of callables) {\n            const r =\n                (await cb(\n                    getCallableState({ ...initialState, ...results.state }),\n                    { client: apolloClient, eventActionHandler: eventActionHandlerRef.current },\n                    args\n                )) || {};\n            results.state = {\n                ...results.state,\n                ...(r.state || {})\n            };\n\n            results.actions.push(...(r.actions || []));\n        }\n\n        eventElements.current = { ...eventElements.current, ...results.state.elements };\n\n        for (const action of results.actions) {\n            const r = await triggerEventAction(\n                action,\n                getCallableState({ ...initialState, ...results.state }),\n                initiator.concat([name])\n            );\n            results.state = {\n                ...(results.state || {}),\n                ...(r.state || {})\n            };\n        }\n        return results;\n    };\n\n    return (\n        <EventActionHandlerContext.Provider value={eventActionHandlerRef.current}>\n            {children}\n        </EventActionHandlerContext.Provider>\n    );\n};\n"],"file":"EventActionHandlerProvider.js"}