{"version":3,"sources":["../../../../src/editor/plugins/blockEditing/SearchBlocks.tsx"],"names":["React","useCallback","useEffect","useMemo","useState","DeactivatePluginActionEvent","UpdateElementActionEvent","createBlockElements","useEventActionHandler","useMutation","useKeyHandler","useSnackbar","plugins","OverlayLayout","LeftPanel","RightPanel","SplitView","List","ListItem","ListItemGraphic","Icon","DelayedOnChange","Typography","SimpleForm","SimpleFormContent","SimpleFormHeader","useRecoilValue","createBlockPlugin","BlocksList","DELETE_PAGE_ELEMENT","UPDATE_PAGE_ELEMENT","EditBlockDialog","listItem","ListItemTitle","listStyle","TitleContent","Styled","elementWithChildrenByIdSelector","rootElementAtom","allBlockCategory","type","name","categoryName","title","description","icon","sortBlocks","blocks","sort","a","b","SearchBar","rootElementId","content","eventActionHandler","search","setSearch","editingBlock","setEditingBlock","activeCategory","setActiveCategory","updatePageElementMutation","updateInProgress","loading","deletePageElementMutation","allCategories","byType","allBlocks","addKeyHandler","removeKeyHandler","deactivatePlugin","trigger","e","preventDefault","addBlockToContent","plugin","element","elements","history","triggerUpdateElementTree","getBlocksList","output","filter","item","tags","includes","category","toLowerCase","getCategoryBlocksCount","length","pl","showSnackbar","deleteBlock","deleteElement","variables","id","response","error","data","pageBuilder","deletePageElement","message","unregister","updateBlock","updateElement","updatePageElement","setTimeout","renderSearchInput","searchIcon","value","onChange","target","onExited","categoryPlugin","find","map","p"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { DeactivatePluginActionEvent, UpdateElementActionEvent } from \"../../recoil/actions\";\nimport { createBlockElements } from \"../../helpers\";\nimport { useEventActionHandler } from \"../../hooks/useEventActionHandler\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useKeyHandler } from \"../../hooks/useKeyHandler\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { plugins } from \"@webiny/plugins\";\nimport { OverlayLayout } from \"@webiny/app-admin/components/OverlayLayout\";\nimport { LeftPanel, RightPanel, SplitView } from \"@webiny/app-admin/components/SplitView\";\nimport { List, ListItem, ListItemGraphic } from \"@webiny/ui/List\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { DelayedOnChange } from \"../../components/DelayedOnChange\";\nimport { Typography } from \"@webiny/ui/Typography\";\n\nimport { ReactComponent as SearchIcon } from \"../../assets/icons/search.svg\";\nimport {\n    SimpleForm,\n    SimpleFormContent,\n    SimpleFormHeader\n} from \"@webiny/app-admin/components/SimpleForm\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { ReactComponent as AllIcon } from \"./icons/round-clear_all-24px.svg\";\nimport createBlockPlugin from \"../../../admin/utils/createBlockPlugin\";\nimport BlocksList from \"./BlocksList\";\nimport { DELETE_PAGE_ELEMENT, UPDATE_PAGE_ELEMENT } from \"./graphql\";\nimport EditBlockDialog from \"./EditBlockDialog\";\nimport { listItem, ListItemTitle, listStyle, TitleContent } from \"./SearchBlocksStyled\";\nimport * as Styled from \"./StyledComponents\";\nimport { PbEditorBlockCategoryPlugin, PbEditorBlockPlugin } from \"~/types\";\nimport { elementWithChildrenByIdSelector, rootElementAtom } from \"../../recoil/modules\";\n\nconst allBlockCategory: PbEditorBlockCategoryPlugin = {\n    type: \"pb-editor-block-category\",\n    name: \"pb-editor-block-category-all\",\n    categoryName: \"all\",\n    title: \"All blocks\",\n    description: \"List of all available blocks.\",\n    icon: <AllIcon />\n};\n\nconst sortBlocks = blocks => {\n    return blocks.sort(function (a, b) {\n        if (a.name === \"pb-editor-block-empty\") {\n            return -1;\n        }\n\n        if (b.name === \"pb-editor-block-empty\") {\n            return 1;\n        }\n\n        if (a.title < b.title) {\n            return -1;\n        }\n        if (a.title > b.title) {\n            return 1;\n        }\n        return 0;\n    });\n};\n\nconst SearchBar = () => {\n    const rootElementId = useRecoilValue(rootElementAtom);\n    const content = useRecoilValue(elementWithChildrenByIdSelector(rootElementId));\n    const eventActionHandler = useEventActionHandler();\n\n    const [search, setSearch] = useState<string>(\"\");\n    const [editingBlock, setEditingBlock] = useState(null);\n    const [activeCategory, setActiveCategory] = useState(\"all\");\n\n    const [updatePageElementMutation, { loading: updateInProgress }] =\n        useMutation(UPDATE_PAGE_ELEMENT);\n    const [deletePageElementMutation] = useMutation(DELETE_PAGE_ELEMENT);\n\n    const allCategories = useMemo(\n        () => [\n            allBlockCategory,\n            ...plugins.byType<PbEditorBlockCategoryPlugin>(\"pb-editor-block-category\")\n        ],\n        []\n    );\n\n    const allBlocks = plugins.byType<PbEditorBlockPlugin>(\"pb-editor-block\");\n\n    const { addKeyHandler, removeKeyHandler } = useKeyHandler();\n\n    const deactivatePlugin = () => {\n        eventActionHandler.trigger(\n            new DeactivatePluginActionEvent({\n                name: \"pb-editor-search-blocks-bar\"\n            })\n        );\n    };\n\n    useEffect(() => {\n        addKeyHandler(\"escape\", e => {\n            e.preventDefault();\n            deactivatePlugin();\n        });\n\n        return () => removeKeyHandler(\"escape\");\n    }, []);\n\n    const addBlockToContent = useCallback(\n        plugin => {\n            const element: any = {\n                ...content,\n                elements: [...content.elements, createBlockElements(plugin.name)]\n            };\n            eventActionHandler.trigger(\n                new UpdateElementActionEvent({\n                    element,\n                    history: true,\n                    triggerUpdateElementTree: true\n                })\n            );\n\n            deactivatePlugin();\n        },\n        [content]\n    );\n\n    /**\n     * Returns a list of blocks - by selected category and by searched term (if present).\n     * @returns {*}\n     */\n    const getBlocksList = () => {\n        if (!activeCategory) {\n            return [];\n        }\n\n        let output = allBlocks;\n\n        // If \"all\" is selected, no category filtering is required.\n        if (activeCategory !== \"all\") {\n            if (activeCategory === \"saved\") {\n                output = output.filter(item => {\n                    return item.tags && item.tags.includes(\"saved\");\n                });\n            } else {\n                output = output.filter(item => {\n                    return item.category === activeCategory;\n                });\n            }\n        }\n\n        // Finally, filter by typed search term.\n        if (search) {\n            output = output.filter(item => {\n                return item.title.toLowerCase().includes(search.toLowerCase());\n            });\n        }\n\n        return sortBlocks(output);\n    };\n\n    const getCategoryBlocksCount = useCallback(category => {\n        if (category === \"all\") {\n            return allBlocks.length;\n        }\n        return allBlocks.filter(pl => pl.category === category).length;\n    }, []);\n\n    const { showSnackbar } = useSnackbar();\n\n    const deleteBlock = useCallback(async ({ plugin, deleteElement }) => {\n        const response = await deleteElement({\n            variables: {\n                id: plugin.id\n            }\n        });\n\n        const { error } = response.data.pageBuilder.deletePageElement;\n        if (error) {\n            showSnackbar(error.message);\n            return;\n        }\n\n        plugins.unregister(plugin.name);\n        showSnackbar(\n            <span>\n                Block <strong>{plugin.title}</strong> was deleted!\n            </span>\n        );\n    }, []);\n\n    const updateBlock = useCallback(\n        async ({ updateElement, data: { title: name, category } }) => {\n            if (!editingBlock) {\n                return;\n            }\n\n            const response = await updateElement({\n                variables: {\n                    id: editingBlock.id,\n                    data: { name, category }\n                }\n            });\n\n            const { error, data } = response.data.pageBuilder.updatePageElement;\n            if (error) {\n                showSnackbar(error.message);\n                return;\n            }\n\n            // This will replace previously registered block plugin.\n            createBlockPlugin(data);\n\n            setEditingBlock(null);\n            setTimeout(() => {\n                // For better UX, success message is shown after 300ms.\n                showSnackbar(\n                    <span>\n                        Block <strong>{name}</strong> was saved!\n                    </span>\n                );\n            }, 300);\n        },\n        [editingBlock]\n    );\n\n    const renderSearchInput = useCallback(() => {\n        return (\n            <Styled.Input>\n                <Icon className={Styled.searchIcon} icon={<SearchIcon />} />\n                <DelayedOnChange value={search} onChange={value => setSearch(value)}>\n                    {({ value, onChange }) => (\n                        <input\n                            autoFocus\n                            type={\"text\"}\n                            placeholder=\"Search blocks...\"\n                            value={value}\n                            onChange={e => onChange(e.target.value)}\n                        />\n                    )}\n                </DelayedOnChange>\n            </Styled.Input>\n        );\n    }, [search]);\n\n    const onExited = useCallback(() => {\n        deactivatePlugin();\n    }, []);\n\n    const categoryPlugin = allCategories.find(pl => pl.categoryName === activeCategory);\n\n    return (\n        <OverlayLayout barMiddle={renderSearchInput()} onExited={onExited}>\n            <SplitView>\n                <LeftPanel span={3}>\n                    <List twoLine className={listStyle}>\n                        {allCategories.map(p => (\n                            <ListItem\n                                key={p.name}\n                                className={listItem}\n                                onClick={() => {\n                                    setActiveCategory(p.categoryName);\n                                }}\n                            >\n                                <ListItemGraphic>\n                                    <Icon icon={p.icon} />\n                                </ListItemGraphic>\n                                <TitleContent>\n                                    <ListItemTitle>\n                                        {p.title} ({getCategoryBlocksCount(p.categoryName)})\n                                    </ListItemTitle>\n                                    <Typography use={\"subtitle2\"}>{p.description}</Typography>\n                                </TitleContent>\n                            </ListItem>\n                        ))}\n                    </List>\n                </LeftPanel>\n                <RightPanel span={9}>\n                    {activeCategory && (\n                        <SimpleForm>\n                            <SimpleFormHeader\n                                title={categoryPlugin.title}\n                                icon={categoryPlugin.icon}\n                            />\n                            <SimpleFormContent>\n                                <Styled.BlockList>\n                                    <BlocksList\n                                        category={activeCategory}\n                                        addBlock={addBlockToContent}\n                                        deactivatePlugin={deactivatePlugin}\n                                        blocks={getBlocksList()}\n                                        onEdit={plugin => setEditingBlock(plugin)}\n                                        onDelete={plugin =>\n                                            deleteBlock({\n                                                plugin,\n                                                deleteElement: deletePageElementMutation\n                                            })\n                                        }\n                                    />\n                                </Styled.BlockList>\n\n                                <EditBlockDialog\n                                    onClose={() => setEditingBlock(null)}\n                                    onSubmit={data =>\n                                        updateBlock({\n                                            data,\n                                            updateElement: updatePageElementMutation\n                                        })\n                                    }\n                                    open={!!editingBlock}\n                                    plugin={editingBlock}\n                                    loading={updateInProgress}\n                                />\n                            </SimpleFormContent>\n                        </SimpleForm>\n                    )}\n                </RightPanel>\n            </SplitView>\n        </OverlayLayout>\n    );\n};\n\nexport default SearchBar;\n"],"file":"SearchBlocks.js"}