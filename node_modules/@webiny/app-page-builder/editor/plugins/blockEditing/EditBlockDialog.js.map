{"version":3,"sources":["../../../../src/editor/plugins/blockEditing/EditBlockDialog.tsx"],"names":["React","css","plugins","Dialog","DialogTitle","DialogContent","DialogActions","DialogButton","DialogCancel","validation","Input","Select","CircularProgress","Grid","Cell","Form","styled","narrowDialog","width","minWidth","PreviewBox","minHeight","border","backgroundColor","display","justifyContent","alignItems","img","maxHeight","maxWidth","EditBlockDialog","props","open","onClose","onSubmit","plugin","loading","blockCategoryPlugins","byType","blockCategoriesOptions","map","item","value","name","label","title","data","submit","Bind","create","type","preview","memo","nextProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SACIC,MADJ,EAEIC,WAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,YALJ,EAMIC,YANJ,QAQO,mBARP;AASA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,IAAT,QAAmC,cAAnC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAGA,IAAMC,YAAY,gBAAGhB,GAAG,CAAC;AACrB,0BAAwB;AACpBiB,IAAAA,KAAK,EAAE,GADa;AAEpBC,IAAAA,QAAQ,EAAE;AAFU;AADH,CAAD,wBAAxB;AAOA,IAAMC,UAAU,gBAAGJ,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAC7BE,EAAAA,KAAK,EAAE,GADsB;AAE7BG,EAAAA,SAAS,EAAE,GAFkB;AAG7BC,EAAAA,MAAM,EAAE,0CAHqB;AAI7BC,EAAAA,eAAe,EAAE,MAJY;AAIJ;AACzBC,EAAAA,OAAO,EAAE,MALoB;AAM7BC,EAAAA,cAAc,EAAE,QANa;AAO7BC,EAAAA,UAAU,EAAE,QAPiB;AAQ7BC,EAAAA,GAAG,EAAE;AACDC,IAAAA,SAAS,EAAE,GADV;AAEDC,IAAAA,QAAQ,EAAE;AAFT;AARwB,CAAjB,CAAhB;;AAsBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAiC;AACrD,MAAQC,IAAR,GAAqDD,KAArD,CAAQC,IAAR;AAAA,MAAcC,OAAd,GAAqDF,KAArD,CAAcE,OAAd;AAAA,MAAuBC,QAAvB,GAAqDH,KAArD,CAAuBG,QAAvB;AAAA,MAAiCC,MAAjC,GAAqDJ,KAArD,CAAiCI,MAAjC;AAAA,MAAyCC,OAAzC,GAAqDL,KAArD,CAAyCK,OAAzC;AAEA,MAAMC,oBAAoB,GAAGnC,OAAO,CAACoC,MAAR,CACzB,0BADyB,CAA7B;AAGA,MAAMC,sBAAsB,GAAGF,oBAAoB,CAACG,GAArB,CAAyB,UAAAC,IAAI;AAAA,WAAK;AAC7DC,MAAAA,KAAK,EAAED,IAAI,CAACE,IADiD;AAE7DC,MAAAA,KAAK,EAAEH,IAAI,CAACI;AAFiD,KAAL;AAAA,GAA7B,CAA/B;AAKA,sBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEb,IAAd;AAAoB,IAAA,OAAO,EAAEC,OAA7B;AAAsC,IAAA,SAAS,EAAEhB;AAAjD,KACKmB,OAAO,iBAAI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAAzB,IADhB,EAEKD,MAAM,iBACH,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAED,QAAhB;AAA0B,IAAA,IAAI,EAAEC;AAAhC,KACK;AAAA,QAAGW,IAAH,QAAGA,IAAH;AAAA,QAASC,MAAT,QAASA,MAAT;AAAA,QAAiBC,IAAjB,QAAiBA,IAAjB;AAAA,wBACG,oBAAC,KAAD,CAAO,QAAP,qBACI,oBAAC,WAAD,mBAAqBb,MAAM,CAACU,KAA5B,CADJ,eAEI,oBAAC,aAAD,qBACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAE,OADV;AAEI,MAAA,UAAU,EAAEpC,UAAU,CAACwC,MAAX,CAAkB,UAAlB;AAFhB,oBAII,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,MAAd;AAAsB,MAAA,SAAS;AAA/B,MAJJ,CADJ,CADJ,CADJ,EAWKH,IAAI,CAACI,IAAL,KAAc,OAAd,iBACG,uDACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,UAAU,EAAEzC,UAAU,CAACwC,MAAX,CAAkB,UAAlB;AAFhB,oBAII,oBAAC,MAAD;AACI,MAAA,KAAK,EAAC,UADV;AAEI,MAAA,WAAW,EAAC,yBAFhB;AAGI,MAAA,OAAO,EAAEV;AAHb,MAJJ,CADJ,CADJ,CADJ,CAZR,eA6BI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,UAAD,QAAaJ,MAAM,CAACgB,OAAP,EAAb,CADJ,CADJ,CA7BJ,CAFJ,eAqCI,oBAAC,aAAD,qBACI,oBAAC,YAAD,iBADJ,eAEI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEJ;AAAvB,cAFJ,CArCJ,CADH;AAAA,GADL,CAHR,CADJ;AAqDH,CAhED;;AAkEA,4BAAe/C,KAAK,CAACoD,IAAN,CACXtB,eADW,EAEX,UAACC,KAAD,EAA8BsB,SAA9B,EAAkE;AAC9D,SAAOtB,KAAK,CAACC,IAAN,KAAeqB,SAAS,CAACrB,IAAzB,IAAiCD,KAAK,CAACK,OAAN,KAAkBiB,SAAS,CAACjB,OAApE;AACH,CAJU,CAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport { plugins } from \"@webiny/plugins\";\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    DialogButton,\n    DialogCancel,\n    DialogOnClose\n} from \"@webiny/ui/Dialog\";\nimport { validation } from \"@webiny/validation\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Form, FormOnSubmit } from \"@webiny/form\";\nimport styled from \"@emotion/styled\";\nimport { PbEditorBlockCategoryPlugin } from \"../../../types\";\n\nconst narrowDialog = css({\n    \".mdc-dialog__surface\": {\n        width: 600,\n        minWidth: 600\n    }\n});\n\nconst PreviewBox = styled(\"div\")({\n    width: 500,\n    minHeight: 250,\n    border: \"1px solid var(--mdc-theme-on-background)\",\n    backgroundColor: \"#fff\", // this must always be white\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    img: {\n        maxHeight: 500,\n        maxWidth: 500\n    }\n});\n\ntype EditBlockDialogProps = {\n    open: boolean;\n    plugin: any;\n    onClose: DialogOnClose;\n    onSubmit: FormOnSubmit;\n    loading: boolean;\n};\n\nconst EditBlockDialog = (props: EditBlockDialogProps) => {\n    const { open, onClose, onSubmit, plugin, loading } = props;\n\n    const blockCategoryPlugins = plugins.byType<PbEditorBlockCategoryPlugin>(\n        \"pb-editor-block-category\"\n    );\n    const blockCategoriesOptions = blockCategoryPlugins.map(item => ({\n        value: item.name,\n        label: item.title\n    }));\n\n    return (\n        <Dialog open={open} onClose={onClose} className={narrowDialog}>\n            {loading && <CircularProgress label={\"Saving block...\"} />}\n            {plugin && (\n                <Form onSubmit={onSubmit} data={plugin}>\n                    {({ data, submit, Bind }) => (\n                        <React.Fragment>\n                            <DialogTitle>Update {plugin.title}</DialogTitle>\n                            <DialogContent>\n                                <Grid>\n                                    <Cell span={12}>\n                                        <Bind\n                                            name={\"title\"}\n                                            validators={validation.create(\"required\")}\n                                        >\n                                            <Input label={\"Name\"} autoFocus />\n                                        </Bind>\n                                    </Cell>\n                                </Grid>\n                                {data.type === \"block\" && (\n                                    <>\n                                        <Grid>\n                                            <Cell span={12}>\n                                                <Bind\n                                                    name=\"category\"\n                                                    validators={validation.create(\"required\")}\n                                                >\n                                                    <Select\n                                                        label=\"Category\"\n                                                        description=\"Select a block category\"\n                                                        options={blockCategoriesOptions}\n                                                    />\n                                                </Bind>\n                                            </Cell>\n                                        </Grid>\n                                    </>\n                                )}\n                                <Grid>\n                                    <Cell span={12}>\n                                        <PreviewBox>{plugin.preview()}</PreviewBox>\n                                    </Cell>\n                                </Grid>\n                            </DialogContent>\n                            <DialogActions>\n                                <DialogCancel>Cancel</DialogCancel>\n                                <DialogButton onClick={submit}>Save</DialogButton>\n                            </DialogActions>\n                        </React.Fragment>\n                    )}\n                </Form>\n            )}\n        </Dialog>\n    );\n};\n\nexport default React.memo(\n    EditBlockDialog,\n    (props: EditBlockDialogProps, nextProps: EditBlockDialogProps) => {\n        return props.open === nextProps.open && props.loading === nextProps.loading;\n    }\n);\n"],"file":"EditBlockDialog.js"}