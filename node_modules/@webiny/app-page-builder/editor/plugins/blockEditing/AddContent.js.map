{"version":3,"sources":["../../../../src/editor/plugins/blockEditing/AddContent.tsx"],"names":["React","useRecoilValue","keyframes","styled","Elevation","ButtonFloating","useEventActionHandler","TogglePluginActionEvent","uiAtom","elementsInContentTotalSelector","pulse","AddBlockContainer","displayMode","marginLeft","position","zIndex","top","left","transform","display","flexDirection","justifyContent","alignItems","width","height","borderRadius","color","backgroundColor","padding","AddBlockContent","margin","textAlign","AddContent","totalElements","eventActionHandler","onClickHandler","trigger","name","animation"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { keyframes } from \"emotion\";\nimport styled from \"@emotion/styled\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { ButtonFloating } from \"@webiny/ui/Button\";\nimport { useEventActionHandler } from \"../../hooks/useEventActionHandler\";\nimport { ReactComponent as AddIcon } from \"../../assets/icons/add.svg\";\nimport { TogglePluginActionEvent } from \"../../recoil/actions\";\nimport { uiAtom } from \"../../recoil/modules\";\nimport { elementsInContentTotalSelector } from \"../../recoil/modules/page/selectors/elementsInContentTotalSelector\";\n\nconst pulse = keyframes`\n  0% {\n    box-shadow: 0 0 0 0 rgba(0,204,176, 0.4);\n  }\n  70% {\n      box-shadow: 0 0 0 30px rgba(0,204,176, 0);\n  }\n  100% {\n      box-shadow: 0 0 0 0 rgba(0,204,176, 0);\n  }\n`;\n\nconst AddBlockContainer = styled<\"div\", { displayMode: string }>(\"div\")(({ displayMode }) => {\n    const marginLeft = displayMode === \"desktop\" ? 54 : 0;\n    return {\n        position: \"absolute\",\n        zIndex: 11,\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%,-50%)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"150px\",\n        height: \"100px\",\n        borderRadius: 2,\n        color: \"var(--mdc-theme-on-surface)\",\n        marginLeft,\n\n        \"& .elevation\": {\n            backgroundColor: \"var(--mdc-theme-surface)\",\n            padding: displayMode === \"mobile-portrait\" ? \"16px 8px\" : \"30px 20px\",\n            transform: \"translateY(-50%)\",\n            borderRadius: 2\n        }\n    };\n});\n\nconst AddBlockContent = styled<\"div\", { displayMode: string }>(\"div\")(({ displayMode }) => ({\n    width: displayMode === \"mobile-portrait\" ? 280 : 300,\n    margin: 5,\n    textAlign: \"center\",\n    display: \"flex\",\n    alignItems: \"center\"\n}));\n\nconst AddContent = () => {\n    const { displayMode } = useRecoilValue(uiAtom);\n    const totalElements = useRecoilValue(elementsInContentTotalSelector);\n    const eventActionHandler = useEventActionHandler();\n    if (totalElements) {\n        return null;\n    }\n\n    const onClickHandler = () => {\n        eventActionHandler.trigger(\n            new TogglePluginActionEvent({\n                name: \"pb-editor-search-blocks-bar\"\n            })\n        );\n    };\n    return (\n        <AddBlockContainer data-type={\"container\"} displayMode={displayMode}>\n            <Elevation z={4} className={\"elevation\"}>\n                <AddBlockContent displayMode={displayMode}>\n                    Click the\n                    <ButtonFloating\n                        data-testid={\"pb-content-add-block-button\"}\n                        style={{ animation: pulse + \" 3s ease infinite\", margin: \"0 10px\" }}\n                        small\n                        icon={<AddIcon />}\n                        onClick={onClickHandler}\n                    />\n                    to start adding content\n                </AddBlockContent>\n            </Elevation>\n        </AddBlockContainer>\n    );\n};\n\nexport default AddContent;\n"],"file":"AddContent.js"}