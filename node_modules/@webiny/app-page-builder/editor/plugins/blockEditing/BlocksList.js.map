{"version":3,"sources":["../../../../src/editor/plugins/blockEditing/BlocksList.tsx"],"names":["React","useState","useEffect","useRef","List","WindowScroller","BlockPreview","css","listStyle","overflow","listWidth","BlocksList","props","setTimestamp","rightPanelElement","prevProps","current","document","querySelector","Date","getTime","category","scrollTop","scroll","blocks","onEdit","onDelete","deactivatePlugin","addBlock","getRowHeight","index","height","width","downscaleRatio","renderRow","key","style","plugin","isScrolling","registerChild","onChildScroll","flex","margin","window","innerHeight","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { get } from \"lodash\";\nimport { List, WindowScroller } from \"react-virtualized\";\nimport BlockPreview from \"./BlockPreview\";\nimport { css } from \"emotion\";\n\nconst listStyle = css({\n    \"& .ReactVirtualized__Grid__innerScrollContainer\": {\n        overflow: \"auto !important\"\n    }\n});\n\nconst listWidth = 800;\n\nconst BlocksList = props => {\n    const [, setTimestamp] = useState(null);\n    const rightPanelElement = useRef(null);\n    const prevProps = useRef(null);\n\n    useEffect(() => {\n        rightPanelElement.current = document.querySelector(\".webiny-split-view__right-panel\");\n        setTimestamp(new Date().getTime());\n    }, []);\n\n    useEffect(() => {\n        if (!prevProps.current) {\n            return;\n        }\n\n        // Scroll only if the active block category has changed\n        if (rightPanelElement && prevProps.current.category !== props.category) {\n            if (rightPanelElement.current.scrollTop === 0) {\n                rightPanelElement.current.scroll(0, 1);\n                return;\n            }\n            rightPanelElement.current.scroll(0, 0);\n        }\n    });\n\n    useEffect(() => {\n        prevProps.current = props;\n    });\n\n    const { blocks, category, onEdit, onDelete, deactivatePlugin, addBlock } = props;\n\n    const getRowHeight = ({ index }) => {\n        let height = get(blocks[index], \"image.meta.height\", 50);\n\n        const width = get(blocks[index], \"image.meta.width\", 50);\n        if (width > listWidth) {\n            const downscaleRatio = width / listWidth;\n            height = height / downscaleRatio;\n        }\n        return height + 100;\n    };\n\n    const renderRow = ({ index, key, style }) => {\n        const plugin = blocks[index];\n\n        return (\n            <div key={key} style={style} data-testid=\"pb-editor-page-blocks-list-item\">\n                <BlockPreview\n                    plugin={plugin}\n                    onEdit={() => onEdit(plugin)}\n                    onDelete={() => onDelete(plugin)}\n                    addBlockToContent={addBlock}\n                    deactivatePlugin={deactivatePlugin}\n                />\n            </div>\n        );\n    };\n\n    if (!rightPanelElement.current) {\n        return null;\n    }\n\n    return (\n        <WindowScroller scrollElement={rightPanelElement.current}>\n            {({ isScrolling, registerChild, onChildScroll, scrollTop }) => (\n                <div style={{ flex: \"1 1 auto\" }}>\n                    <div\n                        style={{ width: \"800px\", margin: \"0 auto\" }}\n                        ref={registerChild}\n                        data-testid={\"pb-editor-page-blocks-list\"}\n                    >\n                        <List\n                            className={listStyle}\n                            key={category}\n                            autoHeight\n                            height={window.innerHeight - 70}\n                            isScrolling={isScrolling}\n                            onScroll={onChildScroll}\n                            rowCount={blocks.length}\n                            rowHeight={getRowHeight}\n                            rowRenderer={renderRow}\n                            scrollTop={scrollTop}\n                            width={listWidth}\n                            overscanRowCount={2}\n                        />\n                    </div>\n                </div>\n            )}\n        </WindowScroller>\n    );\n};\n\nexport default BlocksList;\n"],"file":"BlocksList.js"}