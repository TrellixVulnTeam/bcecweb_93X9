import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject;

import _regeneratorRuntime from "@babel/runtime/regenerator";
import React from "react";
import gql from "graphql-tag";
import { pageAtom } from "../../../recoil/modules";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { useRouter } from "@webiny/react-router";
import { MenuItem } from "@webiny/ui/Menu";
import { ListItemGraphic } from "@webiny/ui/List";
import { Icon } from "@webiny/ui/Icon";
import { ReactComponent as HomeIcon } from "@svgr/webpack!../../../../admin/assets/round-home-24px.svg";
import { useMutation } from "@apollo/react-hooks";
import { ConfirmationDialog } from "@webiny/ui/ConfirmationDialog";
import { useRecoilValue } from "recoil";
import { usePageBuilderSettings } from "../../../../admin/hooks/usePageBuilderSettings";
var PUBLISH_PAGE = gql(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    mutation PbPublishPage($id: ID!) {\n        pageBuilder {\n            publishPage(id: $id) {\n                data {\n                    id\n                    path\n                    status\n                    locked\n                }\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n"])));

var SetAsHomepageButton = function SetAsHomepageButton() {
  var page = useRecoilValue(pageAtom);

  var _useRouter = useRouter(),
      history = _useRouter.history;

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var publishPageMutation = useMutation(PUBLISH_PAGE);

  var _usePageBuilderSettin = usePageBuilderSettings(),
      settings = _usePageBuilderSettin.settings,
      updateSettingsMutation = _usePageBuilderSettin.updateSettingsMutation,
      isSpecialPage = _usePageBuilderSettin.isSpecialPage;

  return /*#__PURE__*/React.createElement(ConfirmationDialog, {
    message: /*#__PURE__*/React.createElement("span", null, "You're about to set this page as your new homepage, are you sure you want to continue? Note that the page will automatically be published.")
  }, function (_ref) {
    var showConfirmation = _ref.showConfirmation;
    return /*#__PURE__*/React.createElement(MenuItem, {
      disabled: isSpecialPage(page, "home"),
      onClick: function onClick() {
        showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
          var _publishPageMutation, publish, _updateSettingsMutati, updateSettings, response, error;

          return _regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _publishPageMutation = _slicedToArray(publishPageMutation, 1), publish = _publishPageMutation[0];
                  _context.next = 3;
                  return publish({
                    variables: {
                      id: page.id
                    }
                  });

                case 3:
                  _updateSettingsMutati = _slicedToArray(updateSettingsMutation, 1), updateSettings = _updateSettingsMutati[0];
                  _context.next = 6;
                  return updateSettings({
                    variables: {
                      data: {
                        pages: _objectSpread(_objectSpread({}, settings.pages), {}, {
                          home: page.id
                        })
                      }
                    }
                  });

                case 6:
                  response = _context.sent;
                  error = response.data.pageBuilder.updateSettings.error;

                  if (!error) {
                    _context.next = 10;
                    break;
                  }

                  return _context.abrupt("return", showSnackbar(error.message));

                case 10:
                  history.push("/page-builder/pages?id=".concat(page.id)); // Let's wait a bit, because we are also redirecting the user.

                  setTimeout(function () {
                    return showSnackbar("New homepage set successfully!");
                  }, 500);

                case 12:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        })));
      }
    }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(HomeIcon, null)
    })), "Set as homepage");
  });
};

export default /*#__PURE__*/React.memo(SetAsHomepageButton);
//# sourceMappingURL=SetAsHomepageButton.js.map