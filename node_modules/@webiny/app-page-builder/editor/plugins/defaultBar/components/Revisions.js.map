{"version":3,"sources":["../../../../../src/editor/plugins/defaultBar/components/Revisions.tsx"],"names":["React","revisionsAtom","css","useRouter","Menu","MenuItem","ButtonDefault","Icon","Typography","useRecoilValue","buttonStyle","color","menuList","flexDirection","justifyContent","alignItems","textAlign","RevisionStatusEnum","getStatus","revision","published","PUBLISHED","locked","LOCKED","DRAFT","Revisions","revisions","history","evt","push","detail","index","id","map","rev","status","version"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAA+BC,aAA/B;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,cAAT,QAA+B,QAA/B;;AAGA,IAAMC,WAAW,gBAAGR,GAAG,CAAC;AACpB,kBAAgB;AACZS,IAAAA,KAAK,EAAE;AADK;AADI,CAAD,uBAAvB;AAMA,IAAMC,QAAQ,gBAAGV,GAAG,CAAC;AACjB,oBAAkB;AACdW,IAAAA,aAAa,EAAE,QADD;AAEdC,IAAAA,cAAc,EAAE,QAFF;AAGdC,IAAAA,UAAU,EAAE,UAHE;AAIdC,IAAAA,SAAS,EAAE;AAJG;AADD,CAAD,oBAApB;IASKC,kB;;WAAAA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;GAAAA,kB,KAAAA,kB;;AAKL,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAAwD;AACtE,MAAIA,QAAQ,CAACC,SAAb,EAAwB;AACpB,WAAOH,kBAAkB,CAACI,SAA1B;AACH,GAFD,MAEO,IAAIF,QAAQ,CAACG,MAAT,IAAmB,CAACH,QAAQ,CAACC,SAAjC,EAA4C;AAC/C,WAAOH,kBAAkB,CAACM,MAA1B;AACH;;AACD,SAAON,kBAAkB,CAACO,KAA1B;AACH,CAPD;;AASA,IAAMC,SAAkC,GAAG,SAArCA,SAAqC,GAAM;AAC7C,MAAMC,SAAS,GAAGjB,cAAc,CAACR,aAAD,CAAhC;;AACA,mBAAoBE,SAAS,EAA7B;AAAA,MAAQwB,OAAR,cAAQA,OAAR;;AACA,sBACI,oBAAC,IAAD;AACI,IAAA,SAAS,EAAEf,QADf;AAEI,IAAA,QAAQ,EAAE,kBAAAgB,GAAG,EAAI;AACbD,MAAAA,OAAO,CAACE,IAAR,gCAAqCH,SAAS,CAACE,GAAG,CAACE,MAAJ,CAAWC,KAAZ,CAAT,CAA4BC,EAAjE;AACH,KAJL;AAKI,IAAA,MAAM,eACF,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAEtB;AAA1B,kCACc,oBAAC,IAAD;AAAM,MAAA,IAAI,eAAE,oBAAC,UAAD;AAAZ,MADd;AANR,KAWKgB,SAAS,CAACO,GAAV,CAAc,UAAAC,GAAG,EAAI;AAClB,QAAMC,MAAM,GAAGjB,SAAS,CAACgB,GAAD,CAAxB;AACA,wBACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAG,CAACF,EAAnB;AAAuB,MAAA,QAAQ,EAAEG,MAAM,KAAKlB,kBAAkB,CAACO;AAA/D,oBACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE;AAAjB,YAA4BU,GAAG,CAACE,OAAhC,CADJ,eAEI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE;AAAjB,YAA8BD,MAA9B,OAFJ,CADJ;AAMH,GARA,CAXL,CADJ;AAuBH,CA1BD;;AA4BA,eAAeV,SAAf","sourcesContent":["import React from \"react\";\nimport { RevisionItemAtomType, revisionsAtom } from \"../../../recoil/modules\";\nimport { css } from \"emotion\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { Menu, MenuItem } from \"@webiny/ui/Menu\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { useRecoilValue } from \"recoil\";\nimport { ReactComponent as DownButton } from \"./icons/round-arrow_drop_down-24px.svg\";\n\nconst buttonStyle = css({\n    \"&.mdc-button\": {\n        color: \"var(--mdc-theme-text-primary-on-background) !important\"\n    }\n});\n\nconst menuList = css({\n    \".mdc-list-item\": {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"baseline\",\n        textAlign: \"left\"\n    }\n});\n\nenum RevisionStatusEnum {\n    PUBLISHED = \"published\",\n    LOCKED = \"locked\",\n    DRAFT = \"draft\"\n}\nconst getStatus = (revision: RevisionItemAtomType): RevisionStatusEnum => {\n    if (revision.published) {\n        return RevisionStatusEnum.PUBLISHED;\n    } else if (revision.locked && !revision.published) {\n        return RevisionStatusEnum.LOCKED;\n    }\n    return RevisionStatusEnum.DRAFT;\n};\n\nconst Revisions: React.FunctionComponent = () => {\n    const revisions = useRecoilValue(revisionsAtom);\n    const { history } = useRouter();\n    return (\n        <Menu\n            className={menuList}\n            onSelect={evt => {\n                history.push(`/page-builder/editor/${revisions[evt.detail.index].id}`);\n            }}\n            handle={\n                <ButtonDefault className={buttonStyle}>\n                    Revisions <Icon icon={<DownButton />} />\n                </ButtonDefault>\n            }\n        >\n            {revisions.map(rev => {\n                const status = getStatus(rev);\n                return (\n                    <MenuItem key={rev.id} disabled={status !== RevisionStatusEnum.DRAFT}>\n                        <Typography use={\"body2\"}>v{rev.version}</Typography>\n                        <Typography use={\"caption\"}>({status}) </Typography>\n                    </MenuItem>\n                );\n            })}\n        </Menu>\n    );\n};\n\nexport default Revisions;\n"],"file":"Revisions.js"}