import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React, { useState } from "react";
import { plugins } from "@webiny/plugins";
import { OverlayLayout } from "@webiny/app-admin/components/OverlayLayout";
import { SplitView, LeftPanel, RightPanel } from "@webiny/app-admin/components/SplitView";
import { Typography } from "@webiny/ui/Typography";
import { Form } from "@webiny/form";
import { Icon } from "@webiny/ui/Icon";
import { ButtonPrimary } from "@webiny/ui/Button";
import { List, ListItem, ListItemGraphic } from "@webiny/ui/List";
import { SimpleForm, SimpleFormFooter, SimpleFormContent, SimpleFormHeader } from "@webiny/app-admin/components/SimpleForm";
import { Title, listItem, ListItemTitle, listStyle, TitleContent } from "./PageSettingsStyled";
import { usePageSettings } from "../../../hooks/usePageSettings";

var PageSettings = function PageSettings() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var pluginsByType = plugins.byType("pb-editor-page-settings");

  var _useState = useState(pluginsByType[0].name),
      _useState2 = _slicedToArray(_useState, 2),
      active = _useState2[0],
      setActive = _useState2[1];

  var activePlugin = pluginsByType.find(function (pl) {
    return pl.name === active;
  });

  if (!activePlugin) {
    return null;
  }

  return /*#__PURE__*/React.createElement(PageSettingsContent, Object.assign({}, props, {
    setActive: setActive,
    pluginsByType: pluginsByType,
    activePlugin: activePlugin
  }));
};

var PageSettingsContent = function PageSettingsContent(_ref) {
  var pluginsByType = _ref.pluginsByType,
      setActive = _ref.setActive,
      activePlugin = _ref.activePlugin;

  var _usePageSettings = usePageSettings(),
      pageData = _usePageSettings.pageData,
      closeSettings = _usePageSettings.closeSettings,
      savePage = _usePageSettings.savePage;

  return /*#__PURE__*/React.createElement(OverlayLayout, {
    barMiddle: Title,
    onExited: closeSettings
  }, /*#__PURE__*/React.createElement(SplitView, null, /*#__PURE__*/React.createElement(LeftPanel, {
    span: 5
  }, /*#__PURE__*/React.createElement(List, {
    twoLine: true,
    className: listStyle
  }, pluginsByType.map(function (pl) {
    return /*#__PURE__*/React.createElement(ListItem, {
      key: pl.name,
      className: listItem,
      onClick: function onClick() {
        return setActive(pl.name);
      }
    }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
      icon: pl.icon
    })), /*#__PURE__*/React.createElement(TitleContent, null, /*#__PURE__*/React.createElement(ListItemTitle, null, pl.title), /*#__PURE__*/React.createElement(Typography, {
      use: "subtitle2"
    }, pl.description)));
  }))), /*#__PURE__*/React.createElement(RightPanel, {
    span: 7
  }, /*#__PURE__*/React.createElement(Form, {
    data: pageData,
    onSubmit: savePage
  }, function (_ref2) {
    var Bind = _ref2.Bind,
        submit = _ref2.submit,
        form = _ref2.form,
        data = _ref2.data,
        setValue = _ref2.setValue;
    return /*#__PURE__*/React.createElement(SimpleForm, null, /*#__PURE__*/React.createElement(SimpleFormHeader, {
      title: activePlugin.title
    }), /*#__PURE__*/React.createElement(SimpleFormContent, null, activePlugin.render({
      Bind: Bind,
      form: form,
      data: data,
      setValue: setValue
    })), /*#__PURE__*/React.createElement(SimpleFormFooter, null, /*#__PURE__*/React.createElement(ButtonPrimary, {
      onClick: submit
    }, "Save settings")));
  }))));
};

export default /*#__PURE__*/React.memo(PageSettings);
//# sourceMappingURL=PageSettings.js.map