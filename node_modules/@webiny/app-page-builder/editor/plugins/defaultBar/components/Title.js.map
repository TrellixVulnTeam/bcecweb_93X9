{"version":3,"sources":["../../../../../src/editor/plugins/defaultBar/components/Title.tsx"],"names":["React","useState","useCallback","useEventActionHandler","UpdatePageRevisionActionEvent","pageAtom","useRecoilValue","useSnackbar","Input","Tooltip","Typography","PageMeta","PageTitle","pageTitleWrapper","PageVersion","TitleInputWrapper","TitleWrapper","extractPageInfo","page","title","version","locked","category","pageTitle","pageVersion","pageLocked","pageCategory","name","pageCategoryUrl","url","Title","handler","showSnackbar","editTitle","setEdit","stateTitle","setTitle","updatePage","data","trigger","onFinish","enableEdit","onBlur","onKeyDown","e","key","preventDefault","autoFocus","window","Cypress","width","display","memo"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, SyntheticEvent } from \"react\";\nimport { useEventActionHandler } from \"../../../hooks/useEventActionHandler\";\nimport { UpdatePageRevisionActionEvent } from \"../../../recoil/actions\";\nimport { pageAtom, PageAtomType } from \"../../../recoil/modules\";\nimport { useRecoilValue } from \"recoil\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport {\n    PageMeta,\n    PageTitle,\n    pageTitleWrapper,\n    PageVersion,\n    TitleInputWrapper,\n    TitleWrapper\n} from \"./Styled\";\n\ndeclare global {\n    interface Window {\n        Cypress: any;\n    }\n}\n\nconst extractPageInfo = (page: PageAtomType): any => {\n    const { title, version, locked, category } = page;\n    return {\n        pageTitle: title,\n        pageVersion: version,\n        pageLocked: locked,\n        pageCategory: category?.name,\n        pageCategoryUrl: category?.url\n    };\n};\n\nconst Title: React.FunctionComponent = () => {\n    const handler = useEventActionHandler();\n    const page = useRecoilValue(pageAtom);\n    const { showSnackbar } = useSnackbar();\n    const { pageTitle, pageVersion, pageLocked, pageCategory } = extractPageInfo(page);\n    const [editTitle, setEdit] = useState<boolean>(false);\n    const [stateTitle, setTitle] = useState<string>(null);\n    let title = stateTitle === null ? pageTitle : stateTitle;\n\n    const updatePage = data => {\n        handler.trigger(\n            new UpdatePageRevisionActionEvent({\n                page: data,\n                onFinish: () => {\n                    showSnackbar(`Page title updated successfully!`);\n                }\n            })\n        );\n    };\n\n    const enableEdit = useCallback(() => setEdit(true), []);\n\n    const onBlur = useCallback(() => {\n        if (title === \"\") {\n            title = \"Untitled\";\n            setTitle(title);\n        }\n        setEdit(false);\n        updatePage({ title });\n    }, [title]);\n\n    const onKeyDown = useCallback(\n        (e: SyntheticEvent) => {\n            // @ts-ignore\n            switch (e.key) {\n                case \"Escape\":\n                    e.preventDefault();\n                    setEdit(false);\n                    setTitle(pageTitle);\n                    break;\n                case \"Enter\":\n                    if (title === \"\") {\n                        title = \"Untitled\";\n                        setTitle(title);\n                    }\n\n                    e.preventDefault();\n                    setEdit(false);\n\n                    updatePage({ title });\n                    break;\n                default:\n                    return;\n            }\n        },\n        [title, pageTitle]\n    );\n\n    // Disable autoFocus because for some reason, blur event would automatically be triggered when clicking\n    // on the page title when doing Cypress testing. Not sure if this is RMWC or Cypress related issue.\n    const autoFocus = !window.Cypress;\n\n    return editTitle ? (\n        <TitleInputWrapper>\n            <Input\n                autoFocus={autoFocus}\n                fullwidth\n                value={title}\n                onChange={setTitle}\n                onKeyDown={onKeyDown}\n                onBlur={onBlur}\n            />\n        </TitleInputWrapper>\n    ) : (\n        <TitleWrapper>\n            <PageMeta>\n                <Typography use={\"overline\"}>\n                    {`${pageCategory} (status: ${pageLocked ? \"published\" : \"draft\"})`}\n                </Typography>\n            </PageMeta>\n            <div style={{ width: \"100%\", display: \"flex\" }}>\n                <Tooltip\n                    className={pageTitleWrapper}\n                    placement={\"bottom\"}\n                    content={<span>Rename</span>}\n                >\n                    <PageTitle data-testid=\"pb-editor-page-title\" onClick={enableEdit}>\n                        {title}\n                    </PageTitle>\n                </Tooltip>\n                <PageVersion>{`(v${pageVersion})`}</PageVersion>\n            </div>\n        </TitleWrapper>\n    );\n};\n\nexport default React.memo(Title);\n"],"file":"Title.js"}