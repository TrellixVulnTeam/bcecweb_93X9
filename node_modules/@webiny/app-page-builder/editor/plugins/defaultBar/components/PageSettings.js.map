{"version":3,"sources":["../../../../../src/editor/plugins/defaultBar/components/PageSettings.tsx"],"names":["React","useState","plugins","OverlayLayout","SplitView","LeftPanel","RightPanel","Typography","Form","Icon","ButtonPrimary","List","ListItem","ListItemGraphic","SimpleForm","SimpleFormFooter","SimpleFormContent","SimpleFormHeader","Title","listItem","ListItemTitle","listStyle","TitleContent","usePageSettings","PageSettings","props","pluginsByType","byType","name","active","setActive","activePlugin","find","pl","PageSettingsContent","pageData","closeSettings","savePage","map","icon","title","description","Bind","submit","form","data","setValue","render","memo"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { plugins } from \"@webiny/plugins\";\nimport { OverlayLayout } from \"@webiny/app-admin/components/OverlayLayout\";\nimport { SplitView, LeftPanel, RightPanel } from \"@webiny/app-admin/components/SplitView\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Form } from \"@webiny/form\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { List, ListItem, ListItemGraphic } from \"@webiny/ui/List\";\nimport {\n    SimpleForm,\n    SimpleFormFooter,\n    SimpleFormContent,\n    SimpleFormHeader\n} from \"@webiny/app-admin/components/SimpleForm\";\nimport { Title, listItem, ListItemTitle, listStyle, TitleContent } from \"./PageSettingsStyled\";\nimport { PbEditorPageSettingsPlugin } from \"~/types\";\nimport { usePageSettings } from \"~/editor/hooks/usePageSettings\";\n\ntype PageSettingsPropsType = {\n    [key: string]: any;\n};\nconst PageSettings: React.FunctionComponent<PageSettingsPropsType> = (props = {}) => {\n    const pluginsByType = plugins.byType<PbEditorPageSettingsPlugin>(\"pb-editor-page-settings\");\n    const [active, setActive] = useState(pluginsByType[0].name);\n    const activePlugin = pluginsByType.find(pl => pl.name === active);\n    if (!activePlugin) {\n        return null;\n    }\n\n    return (\n        <PageSettingsContent\n            {...props}\n            setActive={setActive}\n            pluginsByType={pluginsByType}\n            activePlugin={activePlugin}\n        />\n    );\n};\n\ntype PageSettingsContentPropsType = {\n    pluginsByType: PbEditorPageSettingsPlugin[];\n    setActive: (name: string) => void;\n    activePlugin: PbEditorPageSettingsPlugin;\n};\nconst PageSettingsContent: React.FunctionComponent<PageSettingsContentPropsType> = ({\n    pluginsByType,\n    setActive,\n    activePlugin\n}) => {\n    const { pageData, closeSettings, savePage } = usePageSettings();\n    return (\n        <OverlayLayout barMiddle={Title} onExited={closeSettings}>\n            <SplitView>\n                <LeftPanel span={5}>\n                    <List twoLine className={listStyle}>\n                        {pluginsByType.map(pl => (\n                            <ListItem\n                                key={pl.name}\n                                className={listItem}\n                                onClick={() => setActive(pl.name)}\n                            >\n                                <ListItemGraphic>\n                                    <Icon icon={pl.icon as any} />\n                                </ListItemGraphic>\n                                <TitleContent>\n                                    <ListItemTitle>{pl.title}</ListItemTitle>\n                                    <Typography use={\"subtitle2\"}>{pl.description}</Typography>\n                                </TitleContent>\n                            </ListItem>\n                        ))}\n                    </List>\n                </LeftPanel>\n                <RightPanel span={7}>\n                    <Form data={pageData} onSubmit={savePage}>\n                        {({ Bind, submit, form, data, setValue }) => (\n                            <SimpleForm>\n                                <SimpleFormHeader title={activePlugin.title} />\n                                <SimpleFormContent>\n                                    {activePlugin.render({ Bind, form, data, setValue } as any)}\n                                </SimpleFormContent>\n                                <SimpleFormFooter>\n                                    <ButtonPrimary onClick={submit}>Save settings</ButtonPrimary>\n                                </SimpleFormFooter>\n                            </SimpleForm>\n                        )}\n                    </Form>\n                </RightPanel>\n            </SplitView>\n        </OverlayLayout>\n    );\n};\n\nexport default React.memo(PageSettings);\n"],"file":"PageSettings.js"}