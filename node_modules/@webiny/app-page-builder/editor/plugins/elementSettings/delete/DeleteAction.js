import React, { useCallback } from "react";
import { useEventActionHandler } from "../../../hooks/useEventActionHandler";
import { DeleteElementActionEvent } from "../../../recoil/actions";
import { activeElementAtom, elementByIdSelector } from "../../../recoil/modules";
import { plugins } from "@webiny/plugins";
import { useRecoilValue } from "recoil";

var DeleteAction = function DeleteAction(_ref) {
  var children = _ref.children;
  var eventActionHandler = useEventActionHandler();
  var activeElementId = useRecoilValue(activeElementAtom);
  var element = useRecoilValue(elementByIdSelector(activeElementId));

  if (!element) {
    return null;
  }

  var onClick = useCallback(function () {
    eventActionHandler.trigger(new DeleteElementActionEvent({
      element: element
    }));
  }, [activeElementId]);
  var plugin = plugins.byType("pb-editor-page-element").find(function (pl) {
    return pl.elementType === element.type;
  });

  if (!plugin) {
    return null;
  }

  if (typeof plugin.canDelete === "function") {
    if (!plugin.canDelete({
      element: element
    })) {
      return null;
    }
  }

  return /*#__PURE__*/React.cloneElement(children, {
    onClick: onClick
  });
};

export default /*#__PURE__*/React.memo(DeleteAction);
//# sourceMappingURL=DeleteAction.js.map