{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/height/HeightSettings.tsx"],"names":["React","css","useRecoilValue","merge","set","get","plugins","Tooltip","Form","useEventActionHandler","UpdateElementActionEvent","uiAtom","activeElementAtom","elementWithChildrenByIdSelector","applyFallbackDisplayMode","classes","Accordion","Wrapper","SpacingPicker","rightCellStyle","justifySelf","spacingPickerStyle","width","display","heightUnitOptions","label","value","HeightUnits","validateHeight","parsedValue","parseInt","isNaN","auto","Error","endsWith","percentage","px","em","vh","DATA_NAMESPACE","Settings","defaultAccordionValue","displayMode","handler","activeElementId","element","updateSettings","data","form","validate","valid","newElement","trigger","history","useMemo","byType","find","pl","config","activeDisplayModeConfig","settings","fallbackValue","mode","icon","Bind","simpleGrid","onChange","validation","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport { useRecoilValue } from \"recoil\";\nimport merge from \"lodash/merge\";\nimport set from \"lodash/set\";\nimport get from \"lodash/get\";\nimport { plugins } from \"@webiny/plugins\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { Form } from \"@webiny/form\";\nimport {\n    PbEditorPageElementSettingsRenderComponentProps,\n    PbEditorElement,\n    PbEditorResponsiveModePlugin\n} from \"../../../../types\";\nimport { useEventActionHandler } from \"../../../hooks/useEventActionHandler\";\nimport { UpdateElementActionEvent } from \"../../../recoil/actions\";\nimport {\n    uiAtom,\n    activeElementAtom,\n    elementWithChildrenByIdSelector\n} from \"../../../recoil/modules\";\nimport { applyFallbackDisplayMode } from \"../elementSettingsUtils\";\n// Components\nimport { classes } from \"../components/StyledComponents\";\nimport Accordion from \"../components/Accordion\";\nimport Wrapper from \"../components/Wrapper\";\nimport SpacingPicker from \"../components/SpacingPicker\";\n\nconst rightCellStyle = css({\n    justifySelf: \"end\"\n});\n\nconst spacingPickerStyle = css({\n    width: \"120px\",\n    \"& .inner-wrapper\": {\n        display: \"flex\"\n    }\n});\n\nconst heightUnitOptions = [\n    {\n        label: \"%\",\n        value: \"%\"\n    },\n    {\n        label: \"px\",\n        value: \"px\"\n    },\n    {\n        label: \"em\",\n        value: \"em\"\n    },\n    {\n        label: \"vh\",\n        value: \"vh\"\n    },\n    {\n        label: \"auto\",\n        value: \"auto\"\n    }\n];\n\nenum HeightUnits {\n    percentage = \"%\",\n    px = \"px\",\n    em = \"em\",\n    vh = \"vh\",\n    auto = \"auto\"\n}\n\nconst validateHeight = (value: string | undefined) => {\n    if (!value) {\n        return null;\n    }\n    const parsedValue = parseInt(value);\n\n    if (isNaN(parsedValue) && value !== HeightUnits.auto) {\n        throw Error(\"Enter a valid number!\");\n    }\n\n    if (parsedValue < 0) {\n        throw Error(\"Height can't be negative!\");\n    }\n\n    if (\n        value.endsWith(HeightUnits.percentage) ||\n        value.endsWith(HeightUnits.px) ||\n        value.endsWith(HeightUnits.em) ||\n        value.endsWith(HeightUnits.vh) ||\n        value.endsWith(HeightUnits.auto)\n    ) {\n        return true;\n    }\n\n    throw Error(\"Specify a valid value!\");\n};\n\nconst DATA_NAMESPACE = \"data.settings.height\";\n\nconst Settings: React.FunctionComponent<PbEditorPageElementSettingsRenderComponentProps> = ({\n    defaultAccordionValue\n}) => {\n    const { displayMode } = useRecoilValue(uiAtom);\n    const handler = useEventActionHandler();\n    const activeElementId = useRecoilValue(activeElementAtom);\n    const element = useRecoilValue(elementWithChildrenByIdSelector(activeElementId));\n    const updateSettings = async (data, form) => {\n        const valid = await form.validate();\n        if (!valid) {\n            return;\n        }\n\n        const newElement: PbEditorElement = merge(\n            {},\n            element,\n            set({}, `${DATA_NAMESPACE}.${displayMode}`, data)\n        );\n\n        return handler.trigger(\n            new UpdateElementActionEvent({\n                element: newElement,\n                history: true\n            })\n        );\n    };\n\n    const { config: activeDisplayModeConfig } = React.useMemo(() => {\n        return plugins\n            .byType<PbEditorResponsiveModePlugin>(\"pb-editor-responsive-mode\")\n            .find(pl => pl.config.displayMode === displayMode);\n    }, [displayMode]);\n\n    const settings = React.useMemo(() => {\n        const fallbackValue = applyFallbackDisplayMode(displayMode, mode =>\n            get(element, `${DATA_NAMESPACE}.${mode}`)\n        );\n        return get(element, `${DATA_NAMESPACE}.${displayMode}`, fallbackValue || { value: \"100%\" });\n    }, [displayMode, element]);\n\n    return (\n        <Accordion\n            title={\"Height\"}\n            defaultValue={defaultAccordionValue}\n            icon={\n                <Tooltip content={`Changes will apply for ${activeDisplayModeConfig.displayMode}`}>\n                    {activeDisplayModeConfig.icon}\n                </Tooltip>\n            }\n        >\n            <Form data={settings} onChange={updateSettings}>\n                {({ Bind }) => (\n                    <Wrapper\n                        label={\"Height\"}\n                        containerClassName={classes.simpleGrid}\n                        rightCellClassName={rightCellStyle}\n                    >\n                        <Bind name={\"value\"} validators={validateHeight}>\n                            {({ value, onChange, validation }) => (\n                                <SpacingPicker\n                                    value={value}\n                                    onChange={onChange}\n                                    validation={validation}\n                                    options={heightUnitOptions}\n                                    className={spacingPickerStyle}\n                                    useDefaultStyle={false}\n                                />\n                            )}\n                        </Bind>\n                    </Wrapper>\n                )}\n            </Form>\n        </Accordion>\n    );\n};\n\nexport default React.memo(Settings);\n"],"file":"HeightSettings.js"}