{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/advanced/advancedSettingsEditorAction.ts"],"names":["plugins","advancedSettingsEditorAction","state","meta","element","source","sourcePlugin","byType","find","pl","elementType","type","sourceOnCreate","onCreate","plugin","activeElement","id","sidebar","activeTabIndex","highlightTab"],"mappings":";AAEA,SAASA,OAAT,QAAwB,iBAAxB;AAEA,OAAO,IAAMC,4BAA8D,GAAG,SAAjEA,4BAAiE,CAC1EC,KAD0E,EAE1EC,IAF0E,QAIzE;AAAA,MADCC,OACD,QADCA,OACD;AAAA,MADUC,MACV,QADUA,MACV;AACD;AACA,MAAMC,YAAY,GAAGN,OAAO,CACvBO,MADgB,CACkB,wBADlB,EAEhBC,IAFgB,CAEX,UAAAC,EAAE;AAAA,WAAIA,EAAE,CAACC,WAAH,KAAmBL,MAAM,CAACM,IAA9B;AAAA,GAFS,CAArB;;AAGA,MAAI,CAACL,YAAL,EAAmB;AACf,WAAO,EAAP;AACH;;AACD,MAAkBM,cAAlB,GAAqCN,YAArC,CAAQO,QAAR;;AACA,MAAI,CAACD,cAAD,IAAmBA,cAAc,KAAK,MAA1C,EAAkD;AAC9C;AACA,QAAME,MAAM,GAAGd,OAAO,CACjBO,MADU,CACwB,wBADxB,EAEVC,IAFU,CAEL,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACC,WAAH,KAAmBN,OAAO,CAACO,IAA/B;AAAA,KAFG,CAAf;;AAGA,QAAI,CAACG,MAAL,EAAa;AACT,aAAO,EAAP;AACH;;AACD,QAAQD,QAAR,GAAqBC,MAArB,CAAQD,QAAR;;AACA,QAAIA,QAAQ,IAAIA,QAAQ,KAAK,eAA7B,EAA8C;AAC1C,aAAO;AACHX,QAAAA,KAAK,kCACEA,KADF;AAEDa,UAAAA,aAAa,EAAEX,OAAO,CAACY,EAFtB;AAGDC,UAAAA,OAAO,EAAE;AACL;AACAC,YAAAA,cAAc,EAAE,CAFX;AAGL;AACAC,YAAAA,YAAY,EAAE;AAJT;AAHR;AADF,OAAP;AAYH;AACJ;;AACD,SAAO,EAAP;AACH,CAtCM","sourcesContent":["import { CreateElementEventActionCallable } from \"../../../recoil/actions/createElement/types\";\nimport { PbEditorPageElementPlugin } from \"../../../../types\";\nimport { plugins } from \"@webiny/plugins\";\n\nexport const advancedSettingsEditorAction: CreateElementEventActionCallable = (\n    state,\n    meta,\n    { element, source }\n) => {\n    // Check the source of the element (could be `saved` element which behaves differently from other elements)\n    const sourcePlugin = plugins\n        .byType<PbEditorPageElementPlugin>(\"pb-editor-page-element\")\n        .find(pl => pl.elementType === source.type);\n    if (!sourcePlugin) {\n        return {};\n    }\n    const { onCreate: sourceOnCreate } = sourcePlugin;\n    if (!sourceOnCreate || sourceOnCreate !== \"skip\") {\n        // If source element does not define a specific `onCreate` behavior - continue with the actual element plugin\n        const plugin = plugins\n            .byType<PbEditorPageElementPlugin>(\"pb-editor-page-element\")\n            .find(pl => pl.elementType === element.type);\n        if (!plugin) {\n            return {};\n        }\n        const { onCreate } = plugin;\n        if (onCreate && onCreate === \"open-settings\") {\n            return {\n                state: {\n                    ...state,\n                    activeElement: element.id,\n                    sidebar: {\n                        // Mark \"Element\" settings tab active in sidebar.\n                        activeTabIndex: 1,\n                        // Highlight \"Element\" settings tab in sidebar.\n                        highlightTab: true\n                    }\n                }\n            };\n        }\n    }\n    return {};\n};\n"],"file":"advancedSettingsEditorAction.js"}