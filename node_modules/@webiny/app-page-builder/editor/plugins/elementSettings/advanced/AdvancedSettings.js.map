{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/advanced/AdvancedSettings.tsx"],"names":["React","useMemo","merge","useEventActionHandler","UpdateElementActionEvent","plugins","renderPlugins","withActiveElement","Form","emptyElement","data","type","AdvancedSettings","element","eventActionHandler","advancedSettingsPlugin","byType","filter","pl","elementType","onSubmit","formData","reduce","onSave","trigger","history","length","id","submit","Bind","form","wrapper","AdvancedSettingsMemoized","memo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,qBAAT;AACA,SAASC,wBAAT;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,iBAAT;AACA,SAASC,IAAT,QAAqB,cAArB;AAGA,IAAMC,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAArB;;AAKA,IAAMC,gBAAoE,GAAG,SAAvEA,gBAAuE,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC1F,cAAuBA,OAAO,IAAI,WAAUJ,YAAV,CAAlC;AAAA,MAAQC,IAAR,SAAQA,IAAR;AAAA,MAAcC,IAAd,SAAcA,IAAd;;AAEA,MAAMG,kBAAkB,GAAGX,qBAAqB,EAAhD,CAH0F,CAK1F;;AACA,MAAMY,sBAAsB,GAAGd,OAAO,CAAC,YAAM;AACzC,WAAOI,OAAO,CACTW,MADE,CAEC,0CAFD,EAIFC,MAJE,CAIK,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACC,WAAH,KAAmBN,OAAO,CAACF,IAA3B,IAAmCO,EAAE,CAACC,WAAH,KAAmB,KAA1D;AAAA,KAJP,CAAP;AAKH,GANqC,EAMnC,CAACN,OAAO,CAACF,IAAT,CANmC,CAAtC;;AAQA,MAAMS,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAwB;AACrCA,IAAAA,QAAQ,GAAGN,sBAAsB,CAACO,MAAvB,CAA8B,UAACD,QAAD,EAAWH,EAAX,EAAkB;AACvD,UAAIA,EAAE,CAACK,MAAP,EAAe;AACX,eAAOL,EAAE,CAACK,MAAH,CAAUF,QAAV,CAAP;AACH;;AACD,aAAOA,QAAP;AACH,KALU,EAKRA,QALQ,CAAX;AAOAP,IAAAA,kBAAkB,CAACU,OAAnB,CACI,IAAIpB,wBAAJ,CAA6B;AACzBS,MAAAA,OAAO,EAAEX,KAAK,CAACW,OAAD,EAAU,MAAV,EAAkBQ,QAAlB,CADW;AAEzBI,MAAAA,OAAO,EAAE;AAFgB,KAA7B,CADJ;AAMH,GAdD;;AAgBA,MAAI,CAACV,sBAAsB,CAACW,MAA5B,EAAoC;AAChC,WAAO,IAAP;AACH;;AAED,sBACI,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEb,OAAO,IAAIA,OAAO,CAACc,EAA9B;AAAkC,IAAA,IAAI,EAAEjB,IAAxC;AAA8C,IAAA,QAAQ,EAAEU;AAAxD,KACK;AAAA,QAAGQ,MAAH,SAAGA,MAAH;AAAA,QAAWC,IAAX,SAAWA,IAAX;AAAA,QAAiBnB,IAAjB,SAAiBA,IAAjB;AAAA,QAAuBoB,IAAvB,SAAuBA,IAAvB;AAAA,wBACG,0CACKxB,aAAa,CACV,0CADU,EAEV;AAAEuB,MAAAA,IAAI,EAAJA,IAAF;AAAQnB,MAAAA,IAAI,EAAJA,IAAR;AAAcoB,MAAAA,IAAI,EAAJA,IAAd;AAAoBF,MAAAA,MAAM,EAANA;AAApB,KAFU,EAGV;AACIG,MAAAA,OAAO,EAAE,KADb;AAEId,MAAAA,MAAM,EAAE,gBAAAC,EAAE;AAAA,eAAIA,EAAE,CAACC,WAAH,KAAmBR,IAAnB,IAA2BO,EAAE,CAACC,WAAH,KAAmB,KAAlD;AAAA;AAFd,KAHU,CADlB,CADH;AAAA,GADL,CADJ;AAgBH,CAlDD;;AAoDA,IAAMa,wBAAwB,gBAAGhC,KAAK,CAACiC,IAAN,CAAWrB,gBAAX,CAAjC;AAEA,eAAeL,iBAAiB,GAAGyB,wBAAH,CAAhC","sourcesContent":["import React, { useMemo } from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { merge } from \"dot-prop-immutable\";\nimport { useEventActionHandler } from \"../../../hooks/useEventActionHandler\";\nimport { UpdateElementActionEvent } from \"../../../recoil/actions\";\nimport { plugins } from \"@webiny/plugins\";\nimport { renderPlugins } from \"@webiny/app/plugins\";\nimport { withActiveElement } from \"../../../components\";\nimport { Form } from \"@webiny/form\";\nimport { PbEditorPageElementAdvancedSettingsPlugin, PbEditorElement } from \"../../../../types\";\n\nconst emptyElement = { data: {}, type: null };\n\ntype AdvancedSettingsPropsType = {\n    element: PbEditorElement;\n};\nconst AdvancedSettings: React.FunctionComponent<AdvancedSettingsPropsType> = ({ element }) => {\n    const { data, type } = element || cloneDeep(emptyElement);\n\n    const eventActionHandler = useEventActionHandler();\n\n    // Get element settings plugins\n    const advancedSettingsPlugin = useMemo(() => {\n        return plugins\n            .byType<PbEditorPageElementAdvancedSettingsPlugin>(\n                \"pb-editor-page-element-advanced-settings\"\n            )\n            .filter(pl => pl.elementType === element.type || pl.elementType === \"all\");\n    }, [element.type]);\n\n    const onSubmit = (formData: FormData) => {\n        formData = advancedSettingsPlugin.reduce((formData, pl) => {\n            if (pl.onSave) {\n                return pl.onSave(formData);\n            }\n            return formData;\n        }, formData);\n\n        eventActionHandler.trigger(\n            new UpdateElementActionEvent({\n                element: merge(element, \"data\", formData),\n                history: true\n            })\n        );\n    };\n\n    if (!advancedSettingsPlugin.length) {\n        return null;\n    }\n\n    return (\n        <Form key={element && element.id} data={data} onSubmit={onSubmit}>\n            {({ submit, Bind, data, form }) => (\n                <>\n                    {renderPlugins<PbEditorPageElementAdvancedSettingsPlugin>(\n                        \"pb-editor-page-element-advanced-settings\",\n                        { Bind, data, form, submit },\n                        {\n                            wrapper: false,\n                            filter: pl => pl.elementType === type || pl.elementType === \"all\"\n                        }\n                    )}\n                </>\n            )}\n        </Form>\n    );\n};\n\nconst AdvancedSettingsMemoized = React.memo(AdvancedSettings);\n\nexport default withActiveElement()(AdvancedSettingsMemoized);\n"],"file":"AdvancedSettings.js"}