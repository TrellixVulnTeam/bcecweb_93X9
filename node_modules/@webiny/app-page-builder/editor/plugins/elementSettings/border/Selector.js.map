{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/border/Selector.tsx"],"names":["React","css","Typography","Grid","Cell","IconButton","enabled","color","cellStyle","marginBottom","getValue","value","side","Selector","label","updateValue","top","right","bottom","left","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { ReactComponent as TopIcon } from \"./icons/round-border_top-24px.svg\";\nimport { ReactComponent as RightIcon } from \"./icons/round-border_right-24px.svg\";\nimport { ReactComponent as BottomIcon } from \"./icons/round-border_bottom-24px.svg\";\nimport { ReactComponent as LeftIcon } from \"./icons/round-border_left-24px.svg\";\n\nconst enabled = css({\n    color: \"var(--mdc-theme-primary, #fa5723) !important\"\n});\n\nconst cellStyle = { marginBottom: 0 };\n\nconst getValue = (value, side) => {\n    const enabled = value[side];\n    return typeof enabled === \"undefined\" ? true : enabled;\n};\n\ntype SelectorPropsType = {\n    label: string;\n    value: object;\n    updateValue: (value: any) => void;\n};\nconst Selector: React.FunctionComponent<SelectorPropsType> = ({ label, value, updateValue }) => {\n    const top = getValue(value, \"top\");\n    const right = getValue(value, \"right\");\n    const bottom = getValue(value, \"bottom\");\n    const left = getValue(value, \"left\");\n\n    return (\n        <Grid>\n            <Cell span={4}>\n                <Typography use={\"overline\"}>{label}</Typography>\n            </Cell>\n            <Cell span={8}>\n                <Grid>\n                    <Cell span={3} style={cellStyle}>\n                        <IconButton\n                            onClick={() => updateValue({ ...value, top: !top })}\n                            className={top && enabled}\n                            icon={<TopIcon />}\n                        />\n                    </Cell>\n                    <Cell span={3} style={cellStyle}>\n                        <IconButton\n                            onClick={() => updateValue({ ...value, right: !right })}\n                            className={right && enabled}\n                            icon={<RightIcon />}\n                        />\n                    </Cell>\n                    <Cell span={3} style={cellStyle}>\n                        <IconButton\n                            onClick={() => updateValue({ ...value, bottom: !bottom })}\n                            className={bottom && enabled}\n                            icon={<BottomIcon />}\n                        />\n                    </Cell>\n                    <Cell span={3} style={cellStyle}>\n                        <IconButton\n                            onClick={() => updateValue({ ...value, left: !left })}\n                            className={left && enabled}\n                            icon={<LeftIcon />}\n                        />\n                    </Cell>\n                </Grid>\n            </Cell>\n        </Grid>\n    );\n};\n\nexport default React.memo(Selector);\n"],"file":"Selector.js"}