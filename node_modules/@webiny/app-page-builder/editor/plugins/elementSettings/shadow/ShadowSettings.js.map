{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/shadow/ShadowSettings.tsx"],"names":["React","get","useRecoilValue","activeElementAtom","elementWithChildrenByIdSelector","useUpdateHandlers","InputField","Wrapper","BaseColorPickerComponent","ContentWrapper","classes","Accordion","DATA_NAMESPACE","Settings","activeElementId","element","dataNamespace","getUpdateValue","getUpdatePreview","simpleGrid","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport get from \"lodash/get\";\nimport { useRecoilValue } from \"recoil\";\nimport { activeElementAtom, elementWithChildrenByIdSelector } from \"../../../recoil/modules\";\nimport useUpdateHandlers from \"../useUpdateHandlers\";\n// Components\nimport InputField from \"../components/InputField\";\nimport Wrapper from \"../components/Wrapper\";\nimport { BaseColorPickerComponent } from \"../components/ColorPicker\";\nimport { ContentWrapper, classes } from \"../components/StyledComponents\";\nimport Accordion from \"../components/Accordion\";\n\nconst DATA_NAMESPACE = \"data.settings.shadow\";\n\nconst Settings: React.FunctionComponent = () => {\n    const activeElementId = useRecoilValue(activeElementAtom);\n    const element = useRecoilValue(elementWithChildrenByIdSelector(activeElementId));\n    const { getUpdateValue, getUpdatePreview } = useUpdateHandlers({\n        element,\n        dataNamespace: DATA_NAMESPACE\n    });\n\n    return (\n        <Accordion title={\"Shadow\"}>\n            <ContentWrapper direction={\"column\"}>\n                <Wrapper label={\"Color\"} containerClassName={classes.simpleGrid}>\n                    <BaseColorPickerComponent\n                        label={\"Color\"}\n                        valueKey={DATA_NAMESPACE + \".color\"}\n                        updateValue={getUpdateValue(\"color\")}\n                        updatePreview={getUpdatePreview(\"color\")}\n                    />\n                </Wrapper>\n                <Wrapper\n                    containerClassName={classes.simpleGrid}\n                    label={\"Horizontal offset\"}\n                    leftCellSpan={8}\n                    rightCellSpan={4}\n                >\n                    <InputField\n                        value={get(element, DATA_NAMESPACE + \".horizontal\", 0)}\n                        onChange={getUpdateValue(\"horizontal\")}\n                    />\n                </Wrapper>\n\n                <Wrapper\n                    containerClassName={classes.simpleGrid}\n                    label={\"Vertical offset\"}\n                    leftCellSpan={8}\n                    rightCellSpan={4}\n                >\n                    <InputField\n                        value={get(element, DATA_NAMESPACE + \".vertical\", 0)}\n                        onChange={getUpdateValue(\"vertical\")}\n                    />\n                </Wrapper>\n\n                <Wrapper\n                    containerClassName={classes.simpleGrid}\n                    label={\"Blur\"}\n                    leftCellSpan={8}\n                    rightCellSpan={4}\n                >\n                    <InputField\n                        value={get(element, DATA_NAMESPACE + \".blur\", 0)}\n                        onChange={getUpdateValue(\"blur\")}\n                    />\n                </Wrapper>\n\n                <Wrapper\n                    containerClassName={classes.simpleGrid}\n                    label={\"Spread\"}\n                    leftCellSpan={8}\n                    rightCellSpan={4}\n                >\n                    <InputField\n                        value={get(element, DATA_NAMESPACE + \".spread\", 0)}\n                        onChange={getUpdateValue(\"spread\")}\n                    />\n                </Wrapper>\n            </ContentWrapper>\n        </Accordion>\n    );\n};\n\nexport default React.memo(Settings);\n"],"file":"ShadowSettings.js"}