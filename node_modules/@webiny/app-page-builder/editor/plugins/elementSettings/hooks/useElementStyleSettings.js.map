{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/hooks/useElementStyleSettings.tsx"],"names":["useCallback","useEffect","useRecoilState","useRecoilValue","plugins","useKeyHandler","userElementStyleSettingsPlugins","activeElementAtom","elementByIdSelector","getElementActions","plugin","settings","pluginSettings","elementType","elementActions","map","pl","byName","options","Array","isArray","filter","type","index","array","findIndex","item","name","useElementStyleSettings","activeElement","setActiveElementAtomValue","element","deactivateElement","addKeyHandler","removeKeyHandler","e","preventDefault","byType","find"],"mappings":"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","sourcesContent":["import { useCallback, useEffect } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { plugins } from \"@webiny/plugins\";\nimport { PbEditorPageElementPlugin } from \"../../../../types\";\nimport { useKeyHandler } from \"../../../hooks/useKeyHandler\";\nimport { userElementStyleSettingsPlugins } from \"../../../helpers\";\nimport { activeElementAtom, elementByIdSelector } from \"../../../recoil/modules\";\n\nconst getElementActions = plugin => {\n    if (!plugin || !plugin.settings) {\n        return [];\n    }\n\n    const pluginSettings = [\n        ...userElementStyleSettingsPlugins(plugin.elementType),\n        ...plugin.settings\n    ];\n\n    const elementActions = pluginSettings.map(pl => {\n        if (typeof pl === \"string\") {\n            return { plugin: plugins.byName(pl), options: {} };\n        }\n\n        if (Array.isArray(pl)) {\n            return { plugin: plugins.byName(pl[0]), options: pl[1] };\n        }\n\n        return null;\n    });\n\n    return (\n        elementActions\n            // Eliminate empty plugins\n            .filter(pl => {\n                return pl && pl.plugin;\n            })\n            // Eliminate plugins other than \"PbEditorPageElementStyleSettingsPlugin\".\n            .filter(pl => {\n                return (\n                    pl && pl.plugin && pl.plugin.type === \"pb-editor-page-element-style-settings\"\n                );\n            })\n            // Eliminate duplicate plugins\n            .filter(\n                (pl, index, array) =>\n                    array.findIndex(item => item.plugin.name === pl.plugin.name) === index\n            )\n    );\n};\n\nconst useElementStyleSettings = () => {\n    const [activeElement, setActiveElementAtomValue] = useRecoilState(activeElementAtom);\n    const element = useRecoilValue(elementByIdSelector(activeElement));\n    const elementType = element?.type;\n\n    const deactivateElement = useCallback(() => {\n        setActiveElementAtomValue(null);\n    }, []);\n\n    const { addKeyHandler, removeKeyHandler } = useKeyHandler();\n\n    useEffect(() => {\n        addKeyHandler(\"escape\", e => {\n            e.preventDefault();\n            deactivateElement();\n        });\n        return () => removeKeyHandler(\"escape\");\n    });\n\n    const plugin = plugins\n        .byType<PbEditorPageElementPlugin>(\"pb-editor-page-element\")\n        .find(pl => pl.elementType === elementType);\n\n    return getElementActions(plugin);\n};\n\nexport default useElementStyleSettings;\n"],"file":"useElementStyleSettings.js"}