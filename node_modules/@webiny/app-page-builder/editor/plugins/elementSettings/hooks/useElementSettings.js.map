{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/hooks/useElementSettings.tsx"],"names":["useEffect","useCallback","useRecoilState","useRecoilValue","plugins","useKeyHandler","userElementSettingsPlugins","activeElementAtom","elementByIdSelector","getElementActions","plugin","settings","pluginSettings","elementType","actions","map","pl","byName","options","Array","isArray","elementActions","filter","index","array","findIndex","item","name","useElementSettings","activeElement","setActiveElementAtomValue","element","type","undefined","deactivateElement","addKeyHandler","removeKeyHandler","e","preventDefault","byType","find"],"mappings":"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","sourcesContent":["import { useEffect, useCallback } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { plugins } from \"@webiny/plugins\";\nimport { PbEditorPageElementPlugin } from \"../../../../types\";\nimport { useKeyHandler } from \"../../../hooks/useKeyHandler\";\nimport { userElementSettingsPlugins } from \"../../../helpers\";\nimport { activeElementAtom, elementByIdSelector } from \"../../../recoil/modules\";\n\nconst getElementActions = plugin => {\n    if (!plugin || !plugin.settings) {\n        return [];\n    }\n\n    const pluginSettings = [...userElementSettingsPlugins(plugin.elementType), ...plugin.settings];\n\n    const actions = pluginSettings.map(pl => {\n        if (typeof pl === \"string\") {\n            return { plugin: plugins.byName(pl), options: {} };\n        }\n\n        if (Array.isArray(pl)) {\n            return { plugin: plugins.byName(pl[0]), options: pl[1] };\n        }\n\n        return null;\n    });\n\n    const elementActions = [\n        ...actions,\n        { plugin: plugins.byName(\"pb-editor-page-element-settings-save\"), options: {} }\n    ];\n\n    return (\n        elementActions\n            // Eliminate empty plugins\n            .filter(pl => {\n                return pl && pl.plugin;\n            })\n            // Eliminate duplicate plugins\n            .filter((pl, index, array) => {\n                return array.findIndex(item => item.plugin.name === pl.plugin.name) === index;\n            })\n    );\n};\n\nconst useElementSettings = () => {\n    const [activeElement, setActiveElementAtomValue] = useRecoilState(activeElementAtom);\n    const element = useRecoilValue(elementByIdSelector(activeElement));\n    const elementType = element ? element.type : undefined;\n\n    const deactivateElement = useCallback(() => {\n        3;\n        setActiveElementAtomValue(null);\n    }, []);\n\n    const { addKeyHandler, removeKeyHandler } = useKeyHandler();\n\n    useEffect(() => {\n        addKeyHandler(\"escape\", e => {\n            e.preventDefault();\n            deactivateElement();\n        });\n        return () => removeKeyHandler(\"escape\");\n    });\n\n    const plugin = plugins\n        .byType<PbEditorPageElementPlugin>(\"pb-editor-page-element\")\n        .find(pl => pl.elementType === elementType);\n\n    return getElementActions(plugin);\n};\n\nexport default useElementSettings;\n"],"file":"useElementSettings.js"}