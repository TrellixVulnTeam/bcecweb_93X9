{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/width/WidthSettings.tsx"],"names":["React","useRecoilValue","css","merge","set","get","Form","plugins","Tooltip","useEventActionHandler","UpdateElementActionEvent","activeElementAtom","elementWithChildrenByIdSelector","uiAtom","Accordion","Wrapper","SpacingPicker","classes","applyFallbackDisplayMode","rightCellStyle","justifySelf","spacingPickerStyle","width","display","widthUnitOptions","label","value","WidthUnits","validateWidth","parsedValue","parseInt","isNaN","auto","Error","endsWith","percentage","px","em","vw","DATA_NAMESPACE","Settings","defaultAccordionValue","displayMode","activeElementId","element","handler","updateSettings","data","form","validate","valid","newElement","trigger","history","useMemo","byType","find","pl","config","activeDisplayModeConfig","settings","fallbackValue","mode","icon","Bind","simpleGrid","onChange","validation","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { css } from \"emotion\";\nimport merge from \"lodash/merge\";\nimport set from \"lodash/set\";\nimport get from \"lodash/get\";\nimport { Form } from \"@webiny/form\";\nimport { plugins } from \"@webiny/plugins\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport {\n    PbEditorPageElementSettingsRenderComponentProps,\n    PbEditorResponsiveModePlugin,\n    PbEditorElement\n} from \"../../../../types\";\nimport { useEventActionHandler } from \"../../../hooks/useEventActionHandler\";\nimport { UpdateElementActionEvent } from \"../../../../editor/recoil/actions\";\nimport {\n    activeElementAtom,\n    elementWithChildrenByIdSelector,\n    uiAtom\n} from \"../../../../editor/recoil/modules\";\n// Components\nimport Accordion from \"../components/Accordion\";\nimport Wrapper from \"../components/Wrapper\";\nimport SpacingPicker from \"../components/SpacingPicker\";\nimport { classes } from \"../components/StyledComponents\";\nimport { applyFallbackDisplayMode } from \"../elementSettingsUtils\";\n\nconst rightCellStyle = css({\n    justifySelf: \"end\"\n});\n\nconst spacingPickerStyle = css({\n    width: \"120px\",\n    \"& .inner-wrapper\": {\n        display: \"flex\"\n    }\n});\n\nconst widthUnitOptions = [\n    {\n        label: \"%\",\n        value: \"%\"\n    },\n    {\n        label: \"px\",\n        value: \"px\"\n    },\n    {\n        label: \"em\",\n        value: \"em\"\n    },\n    {\n        label: \"vw\",\n        value: \"vw\"\n    },\n    {\n        label: \"auto\",\n        value: \"auto\"\n    }\n];\n\nenum WidthUnits {\n    percentage = \"%\",\n    px = \"px\",\n    em = \"em\",\n    vw = \"vw\",\n    auto = \"auto\"\n}\n\nconst validateWidth = (value: string | undefined) => {\n    if (!value) {\n        return null;\n    }\n    const parsedValue = parseInt(value);\n\n    if (isNaN(parsedValue) && value !== WidthUnits.auto) {\n        throw Error(\"Enter a valid number!\");\n    }\n\n    if (parsedValue < 0) {\n        throw Error(\"Value can't be negative!\");\n    }\n\n    if (\n        value.endsWith(WidthUnits.percentage) ||\n        value.endsWith(WidthUnits.px) ||\n        value.endsWith(WidthUnits.em) ||\n        value.endsWith(WidthUnits.vw) ||\n        value.endsWith(WidthUnits.auto)\n    ) {\n        return true;\n    }\n\n    throw Error(\"Specify a valid value!\");\n};\n\nconst DATA_NAMESPACE = \"data.settings.width\";\n\nconst Settings: React.FunctionComponent<PbEditorPageElementSettingsRenderComponentProps> = ({\n    defaultAccordionValue\n}) => {\n    const { displayMode } = useRecoilValue(uiAtom);\n    const activeElementId = useRecoilValue(activeElementAtom);\n    const element = useRecoilValue(elementWithChildrenByIdSelector(activeElementId));\n\n    const handler = useEventActionHandler();\n    const updateSettings = async (data, form) => {\n        const valid = await form.validate();\n        if (!valid) {\n            return;\n        }\n\n        const newElement: PbEditorElement = merge(\n            {},\n            element,\n            set({}, `${DATA_NAMESPACE}.${displayMode}`, data)\n        );\n\n        return handler.trigger(\n            new UpdateElementActionEvent({\n                element: newElement,\n                history: true\n            })\n        );\n    };\n\n    const { config: activeDisplayModeConfig } = React.useMemo(() => {\n        return plugins\n            .byType<PbEditorResponsiveModePlugin>(\"pb-editor-responsive-mode\")\n            .find(pl => pl.config.displayMode === displayMode);\n    }, [displayMode]);\n\n    const settings = React.useMemo(() => {\n        const fallbackValue = applyFallbackDisplayMode(displayMode, mode =>\n            get(element, `${DATA_NAMESPACE}.${mode}`)\n        );\n\n        return get(element, `${DATA_NAMESPACE}.${displayMode}`, fallbackValue || { value: \"100%\" });\n    }, [displayMode, element]);\n\n    return (\n        <Accordion\n            title={\"Width\"}\n            defaultValue={defaultAccordionValue}\n            icon={\n                <Tooltip content={`Changes will apply for ${activeDisplayModeConfig.displayMode}`}>\n                    {activeDisplayModeConfig.icon}\n                </Tooltip>\n            }\n        >\n            <Form data={settings} onChange={updateSettings}>\n                {({ Bind }) => (\n                    <Wrapper\n                        label={\"Width\"}\n                        containerClassName={classes.simpleGrid}\n                        rightCellClassName={rightCellStyle}\n                    >\n                        <Bind name={\"value\"} validators={validateWidth}>\n                            {({ value, onChange, validation }) => (\n                                <SpacingPicker\n                                    value={value}\n                                    onChange={onChange}\n                                    validation={validation}\n                                    options={widthUnitOptions}\n                                    className={spacingPickerStyle}\n                                    useDefaultStyle={false}\n                                />\n                            )}\n                        </Bind>\n                    </Wrapper>\n                )}\n            </Form>\n        </Accordion>\n    );\n};\nexport default React.memo(Settings);\n"],"file":"WidthSettings.js"}