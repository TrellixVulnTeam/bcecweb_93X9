import _defineProperty from "@babel/runtime/helpers/defineProperty";
import React from "react";
import { css } from "emotion";
import classNames from "classnames";
import { Tooltip } from "@webiny/ui/Tooltip";
import { IconButton } from "@webiny/ui/Button";
// Components
import { ContentWrapper } from "../components/StyledComponents"; // Icons

import { ReactComponent as AlignTextLeftIcon } from "@svgr/webpack!../align/icons/format_align_left.svg";
import { ReactComponent as AlignTextCenterIcon } from "@svgr/webpack!../align/icons/format_align_center.svg";
import { ReactComponent as AlignTextRightIcon } from "@svgr/webpack!../align/icons/format_align_right.svg";
import { ReactComponent as AlignTextJustifyIcon } from "@svgr/webpack!../align/icons/format_align_justify.svg";
var classes = {
  activeIcon: /*#__PURE__*/css({
    "&.mdc-icon-button": {
      color: "var(--mdc-theme-primary)"
    }
  }, "label:activeIcon;"),
  icon: /*#__PURE__*/css({
    "&.mdc-icon-button": {
      color: "var(--mdc-theme-text-primary-on-background)"
    }
  }, "label:icon;")
};
// Icons map for dynamic render
var icons = {
  left: /*#__PURE__*/React.createElement(AlignTextLeftIcon, null),
  center: /*#__PURE__*/React.createElement(AlignTextCenterIcon, null),
  right: /*#__PURE__*/React.createElement(AlignTextRightIcon, null),
  justify: /*#__PURE__*/React.createElement(AlignTextJustifyIcon, null)
};
var alignments = Object.keys(icons);

var TextAlignment = function TextAlignment(_ref) {
  var value = _ref.value,
      onChange = _ref.onChange;
  return /*#__PURE__*/React.createElement(ContentWrapper, null, alignments.map(function (type) {
    var _classNames;

    return /*#__PURE__*/React.createElement(Tooltip, {
      key: type,
      content: type,
      placement: "top"
    }, /*#__PURE__*/React.createElement(IconButton, {
      className: classNames((_classNames = {}, _defineProperty(_classNames, classes.activeIcon, value === type), _defineProperty(_classNames, classes.icon, value !== type), _classNames)),
      icon: icons[type],
      onClick: function onClick() {
        return onChange(type);
      }
    }));
  }));
};

export default /*#__PURE__*/React.memo(TextAlignment);
//# sourceMappingURL=TextAlignment.js.map