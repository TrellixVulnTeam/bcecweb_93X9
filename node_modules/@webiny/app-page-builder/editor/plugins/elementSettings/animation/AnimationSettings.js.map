{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/animation/AnimationSettings.tsx"],"names":["React","useEffect","useRecoilValue","css","get","Cell","Grid","activeElementAtom","elementByIdSelector","ElementAnimation","useUpdateHandlers","DurationInput","SelectField","ContentWrapper","Accordion","Wrapper","InputField","classes","grid","padding","marginBottom","animationTypeSelectWrapper","inputWrapper","width","margin","STEP","MAX_VALUE","DATA_NAMESPACE","Settings","defaultAccordionValue","activeElementId","element","dataNamespace","getUpdateValue","getUpdatePreview","animationName","animationDuration","animationElement","document","querySelector","classList","remove","setTimeout","add","AnimationSettings","props","animation"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { css } from \"emotion\";\nimport get from \"lodash/get\";\nimport { Cell, Grid } from \"@webiny/ui/Grid\";\nimport { PbEditorPageElementSettingsRenderComponentProps } from \"../../../../types\";\nimport { activeElementAtom, elementByIdSelector } from \"../../../recoil/modules\";\nimport ElementAnimation from \"../../../../render/components/ElementAnimation\";\nimport useUpdateHandlers from \"../useUpdateHandlers\";\n// Components\nimport DurationInput from \"../components/SliderWithInput\";\nimport SelectField from \"../components/SelectField\";\nimport { ContentWrapper } from \"../components/StyledComponents\";\nimport Accordion from \"../components/Accordion\";\nimport Wrapper from \"../components/Wrapper\";\nimport InputField from \"../components/InputField\";\n// Icon\nimport { ReactComponent as TimerIcon } from \"./icons/round-av_timer-24px.svg\";\n\nconst classes = {\n    grid: css({\n        \"&.mdc-layout-grid\": {\n            padding: 0,\n            marginBottom: 24\n        }\n    }),\n    animationTypeSelectWrapper: css({}),\n    inputWrapper: css({\n        \"& .mdc-text-field\": {\n            width: \"100% !important\",\n            margin: \"0px !important\"\n        }\n    })\n};\n\n/**\n * Duration and delay accept values from 50 to 3000, with step 50ms.\n * https://github.com/michalsnik/aos#setting-duration-delay\n */\nconst STEP = 50;\nconst MAX_VALUE = 3000;\nconst DATA_NAMESPACE = \"data.settings.animation\";\ntype SettingsPropsType = {\n    animation: any;\n};\nconst Settings: React.FunctionComponent<\n    SettingsPropsType & PbEditorPageElementSettingsRenderComponentProps\n> = ({ defaultAccordionValue }) => {\n    const activeElementId = useRecoilValue(activeElementAtom);\n    const element = useRecoilValue(elementByIdSelector(activeElementId));\n\n    const { getUpdateValue, getUpdatePreview } = useUpdateHandlers({\n        element,\n        dataNamespace: DATA_NAMESPACE\n    });\n    const animationName = get(element, DATA_NAMESPACE + \".name\", \"\");\n    const animationDuration = get(element, DATA_NAMESPACE + \".duration\", 0);\n    // Trigger animation manually on \"animation\" type change.\n    useEffect(() => {\n        if (animationName) {\n            const animationElement = document.querySelector(`[data-aos=${animationName}]`);\n            if (animationElement) {\n                animationElement.classList.remove(\"aos-animate\");\n                setTimeout(\n                    () => animationElement.classList.add(\"aos-animate\"),\n                    animationDuration || 250\n                );\n            }\n        }\n    }, [animationName, animationDuration]);\n\n    return (\n        <Accordion title={\"Animation\"} defaultValue={defaultAccordionValue}>\n            <ContentWrapper direction={\"column\"}>\n                <Grid className={classes.grid}>\n                    <Cell span={12}>\n                        <Wrapper label={\"Animation\"}>\n                            <SelectField\n                                value={get(element, DATA_NAMESPACE + \".name\", \"\")}\n                                onChange={getUpdateValue(\"name\")}\n                            >\n                                <option value=\"\">No animation</option>\n                                <optgroup label=\"Fade\">\n                                    <option value=\"fade\">Fade</option>\n                                    <option value=\"fade-up\">Fade Up</option>\n                                    <option value=\"fade-down\">Fade Down</option>\n                                    <option value=\"fade-left\">Fade Left</option>\n                                    <option value=\"fade-right\">Fade Right</option>\n                                    <option value=\"fade-up-right\">Fade Up Right</option>\n                                    <option value=\"fade-up-left\">Fade Up Left</option>\n                                    <option value=\"fade-down-right\">Fade Down Right</option>\n                                    <option value=\"fade-down-left\">Fade Down Left</option>\n                                </optgroup>\n                                <optgroup label=\"Flip\">\n                                    <option value=\"flip-up\">Flip Up</option>\n                                    <option value=\"flip-down\">Flip Down</option>\n                                    <option value=\"flip-left\">Flip Left</option>\n                                    <option value=\"flip-right\">Flip Right</option>\n                                </optgroup>\n                                <optgroup label=\"Slide\">\n                                    <option value=\"slide-up\">Slide Up</option>\n                                    <option value=\"slide-down\">Slide Down</option>\n                                    <option value=\"slide-left\">Slide Left</option>\n                                    <option value=\"slide-right\">Slide Right</option>\n                                </optgroup>\n                            </SelectField>\n                        </Wrapper>\n                    </Cell>\n                    <Cell span={12}>\n                        <DurationInput\n                            className={\"no-bottom-padding\"}\n                            label={\"Duration\"}\n                            icon={<TimerIcon />}\n                            valueKey={DATA_NAMESPACE + \".duration\"}\n                            updateValue={getUpdateValue(\"duration\")}\n                            updatePreview={getUpdatePreview(\"duration\")}\n                            max={MAX_VALUE}\n                            step={STEP}\n                        />\n                    </Cell>\n                    <Cell span={12}>\n                        <Wrapper label={\"Delay\"}>\n                            <InputField\n                                placeholder={\"ms\"}\n                                value={get(element, DATA_NAMESPACE + \".delay\", 0)}\n                                onChange={getUpdateValue(\"delay\")}\n                                min={0}\n                                max={MAX_VALUE}\n                                step={STEP}\n                            />\n                        </Wrapper>\n                    </Cell>\n                    <Cell span={12}>\n                        <Wrapper label={\"Offset\"}>\n                            <InputField\n                                placeholder={\"px\"}\n                                value={get(element, DATA_NAMESPACE + \".offset\", 0)}\n                                onChange={getUpdateValue(\"offset\")}\n                            />\n                        </Wrapper>\n                    </Cell>\n                    <Cell span={12}>\n                        <Wrapper label={\"Easing\"}>\n                            <SelectField\n                                value={get(element, DATA_NAMESPACE + \".easing\", \"\")}\n                                onChange={getUpdateValue(\"easing\")}\n                            >\n                                <option value=\"\">Default</option>\n                                <option value=\"linear\">Linear</option>\n                                <option value=\"ease\">Ase</option>\n                                <option value=\"ease-in\">Ase in</option>\n                                <option value=\"ease-out\">Out</option>\n                                <option value=\"ease-in-out\">In out</option>\n                                <option value=\"ease-in-back\">In back</option>\n                                <option value=\"ease-out-back\">Out back</option>\n                                <option value=\"ease-in-out-back\">In out-back</option>\n                                <option value=\"ease-in-sine\">In sine</option>\n                                <option value=\"ease-out-sine\">Out sine</option>\n                                <option value=\"ease-in-out-sine\">In out-sine</option>\n                                <option value=\"ease-in-quad\">In quad</option>\n                                <option value=\"ease-out-quad\">Out quad</option>\n                                <option value=\"ease-in-out-quad\">In out-quad</option>\n                                <option value=\"ease-in-cubic\">In cubic</option>\n                                <option value=\"ease-out-cubic\">Out cubic</option>\n                                <option value=\"ease-in-out-cubic\">In out-cubic</option>\n                                <option value=\"ease-in-quart\">In quart</option>\n                                <option value=\"ease-out-quart\">Out quart</option>\n                                <option value=\"ease-in-out-quart\">In out-quart</option>\n                            </SelectField>\n                        </Wrapper>\n                    </Cell>\n                </Grid>\n            </ContentWrapper>\n        </Accordion>\n    );\n};\ntype AnimationSettingsPropsType = {\n    title?: string;\n    styleAttribute?: string;\n};\nconst AnimationSettings: React.FunctionComponent<\n    AnimationSettingsPropsType & PbEditorPageElementSettingsRenderComponentProps\n> = props => {\n    return (\n        <ElementAnimation>\n            {animation => {\n                return <Settings {...props} animation={animation} />;\n            }}\n        </ElementAnimation>\n    );\n};\nexport default AnimationSettings;\n"],"file":"AnimationSettings.js"}