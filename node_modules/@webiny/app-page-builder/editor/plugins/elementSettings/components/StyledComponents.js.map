{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/components/StyledComponents.ts"],"names":["styled","css","classes","simpleGrid","padding","margin","grid","Footer","backgroundColor","paddingBottom","paddingRight","InputContainer","props","height","width","hasOwnProperty","paddingTop","ContentWrapper","display","flexDirection","direction","COLORS","lightGray","gray","darkGray","darkestGray","black","TopLeft","gridArea","Top","TopRight","Left","Center","border","Right","BottomLeft","Bottom","BottomRight","SpacingGrid","gridTemplateColumns","gridTemplateRows","gap","gridTemplateAreas","fontSize","fontFamily","justifyContent","SimpleButton","boxSizing","borderRadius","cursor","ButtonContainer","marginTop","justifySelfEndStyle","justifySelf"],"mappings":"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","sourcesContent":["import styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\n\nexport const classes = {\n    simpleGrid: css({\n        \"&.mdc-layout-grid\": {\n            padding: 0,\n            margin: \"0px 0px 16px\"\n        }\n    }),\n    grid: css({\n        \"& .mdc-layout-grid\": {\n            padding: 0,\n            margin: \"0px 0px 16px\"\n        }\n    })\n};\n\nexport const Footer = styled(\"div\")({\n    backgroundColor: \"var(--mdc-theme-background)\",\n    paddingBottom: 10,\n    margin: \"0 -15px -15px -15px\",\n    \".mdc-layout-grid\": {\n        padding: \"15px 10px 10px 15px\",\n        \".mdc-layout-grid__cell.mdc-layout-grid__cell--span-4\": {\n            paddingRight: 10\n        }\n    }\n});\n\ntype InputContainerProps = {\n    width?: number | string;\n    margin?: number | string;\n};\n\nexport const InputContainer = styled<\"div\", InputContainerProps>(\"div\")(props => ({\n    \"> .mdc-text-field.mdc-text-field--upgraded\": {\n        height: \"30px !important\",\n        width: props.width || 50,\n        margin: props.hasOwnProperty(\"margin\") ? props.margin : \"0 0 0 18px\",\n        \".mdc-text-field__input\": {\n            paddingTop: 16\n        }\n    }\n}));\n\ntype ContentWrapperProps = {\n    direction?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n};\n\nexport const ContentWrapper = styled<\"div\", ContentWrapperProps>(\"div\")(props => ({\n    display: \"flex\",\n    flexDirection: props.direction || \"row\"\n}));\n\nexport const COLORS = {\n    lightGray: \"hsla(0, 0%, 97%, 1)\",\n    gray: \"hsla(300, 2%, 92%, 1)\",\n    darkGray: \"hsla(0, 0%, 70%, 1)\",\n    darkestGray: \"hsla(0, 0%, 20%, 1)\",\n    black: \"hsla(208, 100%, 5%, 1)\"\n};\n\nexport const TopLeft = styled(\"div\")({\n    gridArea: \"topLeft\"\n});\nexport const Top = styled(\"div\")({\n    gridArea: \"top\"\n});\nexport const TopRight = styled(\"div\")({\n    gridArea: \"topRight\"\n});\nexport const Left = styled(\"div\")({\n    gridArea: \"left\"\n});\nexport const Center = styled(\"div\")({\n    gridArea: \"center\",\n    backgroundColor: \"rgb(204,229,255)\",\n    border: \"1px dashed rgb(0,64,133)\"\n});\nexport const Right = styled(\"div\")({\n    gridArea: \"right\"\n});\nexport const BottomLeft = styled(\"div\")({\n    gridArea: \"bottomLeft\"\n});\nexport const Bottom = styled(\"div\")({\n    gridArea: \"bottom\"\n});\nexport const BottomRight = styled(\"div\")({\n    gridArea: \"bottomRight\"\n});\nexport const SpacingGrid = styled(\"div\")({\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 2fr 1fr\",\n    gridTemplateRows: \"1fr 1fr 1fr\",\n    gap: \"0px 0px\",\n    gridTemplateAreas:\n        '\"topLeft top topRight\"' + '\"left center right\"' + '\"bottomLeft bottom bottomRight\"',\n    border: \"1px dashed rgb(21,87,36)\",\n    backgroundColor: COLORS.lightGray,\n\n    \"& .text\": {\n        fontSize: 11,\n        padding: \"4px 8px\"\n    },\n    \"& .mono\": {\n        fontFamily: \"monospace\"\n    },\n    \"& .align-center\": {\n        display: \"flex\",\n        justifyContent: \"center\"\n    }\n});\nexport const SimpleButton = styled(\"button\")({\n    boxSizing: \"border-box\",\n    border: \"1px solid var(--mdc-theme-on-background)\",\n    borderRadius: 1,\n    backgroundColor: \"transparent\",\n    padding: \"8px 16px\",\n    cursor: \"pointer\"\n});\nexport const ButtonContainer = styled(\"div\")({\n    marginTop: 16\n});\nexport const justifySelfEndStyle = css({\n    justifySelf: \"end\"\n});\n"],"file":"StyledComponents.js"}