import _get from "lodash/get";
import React from "react";
import { activeElementAtom, elementByIdSelector } from "../../../recoil/modules";
import { Typography } from "@webiny/ui/Typography";
import { Grid, Cell } from "@webiny/ui/Grid";
import { Input as InputCmp } from "@webiny/ui/Input";
import { useRecoilValue } from "recoil";
import { InputContainer } from "./StyledComponents";

var Input = function Input(_ref) {
  var label = _ref.label,
      value = _ref.value,
      valueKey = _ref.valueKey,
      defaultValue = _ref.defaultValue,
      placeholder = _ref.placeholder,
      updateValue = _ref.updateValue,
      inputWidth = _ref.inputWidth,
      className = _ref.className,
      containerClassName = _ref.containerClassName;
  var activeElementId = useRecoilValue(activeElementAtom);
  var element = useRecoilValue(elementByIdSelector(activeElementId));
  var keyValue = valueKey ? _get(element, valueKey, defaultValue) : value;
  return /*#__PURE__*/React.createElement(Grid, {
    className: containerClassName
  }, /*#__PURE__*/React.createElement(Cell, {
    span: 4
  }, /*#__PURE__*/React.createElement(Typography, {
    use: "overline"
  }, label)), /*#__PURE__*/React.createElement(Cell, {
    span: 8
  }, /*#__PURE__*/React.createElement(InputContainer, {
    className: className,
    width: inputWidth
  }, /*#__PURE__*/React.createElement(InputCmp, {
    placeholder: placeholder,
    value: keyValue,
    onChange: updateValue
  }))));
};

export default /*#__PURE__*/React.memo(Input);
//# sourceMappingURL=Input.js.map