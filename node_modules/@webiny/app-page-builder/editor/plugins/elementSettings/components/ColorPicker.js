import React from "react";
import lodashGet from "lodash/get";
import ColorPickerCmp from "../../../components/ColorPicker/ColorPicker";
import { activeElementAtom, elementByIdSelector } from "../../../recoil/modules";
import { Typography } from "@webiny/ui/Typography";
import { Grid, Cell } from "@webiny/ui/Grid";
import { useRecoilValue } from "recoil";

var extrapolateActiveElementValue = function extrapolateActiveElementValue(value, valueKey, defaultValue) {
  if (!valueKey) {
    return value;
  }

  var activeElementId = useRecoilValue(activeElementAtom);
  var element = useRecoilValue(elementByIdSelector(activeElementId));

  if (!element) {
    throw new Error("There is no active element.");
  }

  return lodashGet(element, valueKey, defaultValue);
};

var ColorPicker = function ColorPicker(_ref) {
  var label = _ref.label,
      value = _ref.value,
      valueKey = _ref.valueKey,
      defaultValue = _ref.defaultValue,
      updatePreview = _ref.updatePreview,
      updateValue = _ref.updateValue,
      className = _ref.className;
  var targetValue = extrapolateActiveElementValue(value, valueKey, defaultValue);
  return /*#__PURE__*/React.createElement(Grid, {
    className: className
  }, /*#__PURE__*/React.createElement(Cell, {
    span: 4
  }, /*#__PURE__*/React.createElement(Typography, {
    use: "subtitle2"
  }, label)), /*#__PURE__*/React.createElement(Cell, {
    span: 8
  }, /*#__PURE__*/React.createElement(ColorPickerCmp, {
    compact: true,
    value: targetValue,
    onChange: updatePreview,
    onChangeComplete: updateValue
  })));
};

export default /*#__PURE__*/React.memo(ColorPicker);
export var BaseColorPickerComponent = function BaseColorPickerComponent(_ref2) {
  var value = _ref2.value,
      valueKey = _ref2.valueKey,
      defaultValue = _ref2.defaultValue,
      updatePreview = _ref2.updatePreview,
      updateValue = _ref2.updateValue,
      handlerClassName = _ref2.handlerClassName;
  var targetValue = extrapolateActiveElementValue(value, valueKey, defaultValue);
  return /*#__PURE__*/React.createElement(ColorPickerCmp, {
    handlerClassName: handlerClassName,
    compact: true,
    value: targetValue,
    onChange: updatePreview,
    onChangeComplete: updateValue
  });
};
export var BaseColorPicker = /*#__PURE__*/React.memo(BaseColorPickerComponent);
//# sourceMappingURL=ColorPicker.js.map