{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/components/Action.tsx"],"names":["useEventActionHandler","TogglePluginActionEvent","React","useEffect","useCallback","isPluginActiveSelector","activePluginsByTypeTotalSelector","css","IconButton","useKeyHandler","Tooltip","useRecoilValue","editorPageElementSettingsPluginType","activeStyle","color","Action","plugin","icon","tooltip","onClick","shortcut","props","eventActionHandler","isPluginActive","settingsActive","addKeyHandler","removeKeyHandler","clickHandler","trigger","name","closeOtherInGroup","map","short","e","preventDefault","visible"],"mappings":";;AAAA,SAASA,qBAAT;AACA,SAASC,uBAAT;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA4D,OAA5D;AACA,SAASC,sBAAT,EAAiCC,gCAAjC;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,aAAT;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,cAAT,QAA+B,QAA/B;AAEA,IAAMC,mCAAmC,GAAG,iCAA5C;AAEA,IAAMC,WAAW,gBAAGN,GAAG,CAAC;AACpB,uBAAqB;AACjBO,IAAAA,KAAK,EAAE;AADU;AADD,CAAD,uBAAvB;;AAgBA,IAAMC,MAA4C,GAAG,SAA/CA,MAA+C,OAO/C;AAAA,MANFC,MAME,QANFA,MAME;AAAA,MALFC,IAKE,QALFA,IAKE;AAAA,MAJFC,OAIE,QAJFA,OAIE;AAAA,MAHFC,OAGE,QAHFA,OAGE;AAAA,2BAFFC,QAEE;AAAA,MAFFA,QAEE,8BAFS,EAET;AAAA,MADCC,KACD;;AACF,MAAMC,kBAAkB,GAAGtB,qBAAqB,EAAhD;AACA,MAAMuB,cAAc,GAAGZ,cAAc,CAACN,sBAAsB,CAACW,MAAD,CAAvB,CAArC;AACA,MAAMQ,cAAc,GAChBb,cAAc,CAACL,gCAAgC,CAACM,mCAAD,CAAjC,CAAd,GAAwF,CAD5F;;AAGA,uBAA4CH,aAAa,EAAzD;AAAA,MAAQgB,aAAR,kBAAQA,aAAR;AAAA,MAAuBC,gBAAvB,kBAAuBA,gBAAvB;;AAEA,MAAMC,YAAY,GAAGvB,WAAW,CAAC,YAAM;AACnC,QAAI,OAAOe,OAAP,KAAmB,UAAvB,EAAmC;AAC/B,aAAOA,OAAO,EAAd;AACH;;AACDG,IAAAA,kBAAkB,CAACM,OAAnB,CACI,IAAI3B,uBAAJ,CAA4B;AACxB4B,MAAAA,IAAI,EAAEb,MADkB;AAExBc,MAAAA,iBAAiB,EAAE;AAFK,KAA5B,CADJ;AAMH,GAV+B,EAU7B,CAACd,MAAD,EAASG,OAAT,CAV6B,CAAhC;AAYAhB,EAAAA,SAAS,CAAC,YAAM;AACZiB,IAAAA,QAAQ,CAACW,GAAT,CAAa,UAAAC,KAAK,EAAI;AAClBP,MAAAA,aAAa,CAACO,KAAD,EAAQ,UAAAC,CAAC,EAAI;AACtB,YAAIT,cAAJ,EAAoB;AAChB;AACH;;AAEDS,QAAAA,CAAC,CAACC,cAAF;AACAf,QAAAA,OAAO;AACV,OAPY,CAAb;AAQH,KATD;AAWA,WAAO,YAAM;AACTC,MAAAA,QAAQ,CAACW,GAAT,CAAa,UAAAC,KAAK,EAAI;AAClBN,QAAAA,gBAAgB,CAACM,KAAD,CAAhB;AACH,OAFD;AAGH,KAJD;AAKH,GAjBQ,EAiBN,CAACb,OAAD,CAjBM,CAAT;AAmBA,sBACI,oBAAC,OAAD;AACI,IAAA,SAAS,EAAE,QADf;AAEI,IAAA,OAAO,eAAE,kCAAOD,OAAP;AAFb,KAGSK,cAAc,GAAG;AAAEY,IAAAA,OAAO,EAAE;AAAX,GAAH,GAAwB,EAH/C,gBAKI,oBAAC,UAAD;AACI,IAAA,IAAI,EAAElB,IADV;AAEI,IAAA,OAAO,EAAEU,YAFb;AAGI,IAAA,SAAS,EAAEJ,cAAc,IAAIV,WAHjC;AAII,mBAAaQ,KAAK,CAAC,aAAD;AAJtB,IALJ,CADJ;AAcH,CA5DD;;AA8DA,eAAeN,MAAf","sourcesContent":["import { useEventActionHandler } from \"../../../hooks/useEventActionHandler\";\nimport { TogglePluginActionEvent } from \"../../../recoil/actions\";\nimport React, { useEffect, useCallback, ReactElement } from \"react\";\nimport { isPluginActiveSelector, activePluginsByTypeTotalSelector } from \"../../../recoil/modules\";\nimport { css } from \"emotion\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { useKeyHandler } from \"../../../hooks/useKeyHandler\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { useRecoilValue } from \"recoil\";\n\nconst editorPageElementSettingsPluginType = \"pb-editor-page-element-settings\";\n\nconst activeStyle = css({\n    \"&.mdc-icon-button\": {\n        color: \"var(--mdc-theme-primary)\"\n    }\n});\n\ntype ActionProps = {\n    plugin?: string;\n    icon?: ReactElement;\n    tooltip?: string;\n    onClick?: () => void;\n    shortcut?: string[];\n    // For testing purposes.\n    \"data-testid\"?: string;\n};\n\nconst Action: React.FunctionComponent<ActionProps> = ({\n    plugin,\n    icon,\n    tooltip,\n    onClick,\n    shortcut = [],\n    ...props\n}) => {\n    const eventActionHandler = useEventActionHandler();\n    const isPluginActive = useRecoilValue(isPluginActiveSelector(plugin));\n    const settingsActive =\n        useRecoilValue(activePluginsByTypeTotalSelector(editorPageElementSettingsPluginType)) > 0;\n\n    const { addKeyHandler, removeKeyHandler } = useKeyHandler();\n\n    const clickHandler = useCallback(() => {\n        if (typeof onClick === \"function\") {\n            return onClick();\n        }\n        eventActionHandler.trigger(\n            new TogglePluginActionEvent({\n                name: plugin,\n                closeOtherInGroup: true\n            })\n        );\n    }, [plugin, onClick]);\n\n    useEffect(() => {\n        shortcut.map(short => {\n            addKeyHandler(short, e => {\n                if (settingsActive) {\n                    return;\n                }\n\n                e.preventDefault();\n                onClick();\n            });\n        });\n\n        return () => {\n            shortcut.map(short => {\n                removeKeyHandler(short);\n            });\n        };\n    }, [onClick]);\n\n    return (\n        <Tooltip\n            placement={\"bottom\"}\n            content={<span>{tooltip}</span>}\n            {...(isPluginActive ? { visible: false } : {})}\n        >\n            <IconButton\n                icon={icon}\n                onClick={clickHandler}\n                className={isPluginActive && activeStyle}\n                data-testid={props[\"data-testid\"]}\n            />\n        </Tooltip>\n    );\n};\n\nexport default Action;\n"],"file":"Action.js"}