import _get from "lodash/get";
import React from "react";
import { activeElementAtom, elementWithChildrenByIdSelector } from "../../../recoil/modules";
import { Typography } from "@webiny/ui/Typography";
import { Grid, Cell } from "@webiny/ui/Grid";
import { Select as SelectCmp } from "@webiny/ui/Select";
import { css } from "emotion";
import { useRecoilValue } from "recoil";
var selectStyle = /*#__PURE__*/css({
  select: {
    height: 35,
    paddingTop: "4px !important"
  }
}, "label:selectStyle;");

var Select = function Select(_ref) {
  var label = _ref.label,
      value = _ref.value,
      valueKey = _ref.valueKey,
      defaultValue = _ref.defaultValue,
      updateValue = _ref.updateValue,
      options = _ref.options,
      children = _ref.children,
      className = _ref.className;
  var activeElementId = useRecoilValue(activeElementAtom);
  var element = useRecoilValue(elementWithChildrenByIdSelector(activeElementId));
  var keyValue = valueKey ? _get(element, valueKey, defaultValue) : value;
  return /*#__PURE__*/React.createElement(Grid, {
    className: className
  }, /*#__PURE__*/React.createElement(Cell, {
    span: 4
  }, /*#__PURE__*/React.createElement(Typography, {
    use: "overline"
  }, label)), /*#__PURE__*/React.createElement(Cell, {
    span: 8
  }, /*#__PURE__*/React.createElement(SelectCmp, {
    className: selectStyle,
    value: keyValue,
    onChange: updateValue,
    options: options
  }, children)));
};

export default /*#__PURE__*/React.memo(Select);
//# sourceMappingURL=Select.js.map