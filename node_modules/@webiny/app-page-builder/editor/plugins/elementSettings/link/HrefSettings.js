import React from "react";
import { css } from "emotion";
import { merge } from "dot-prop-immutable";
import { Switch } from "@webiny/ui/Switch";
import { Form } from "@webiny/form";
import { validation } from "@webiny/validation";
import { withActiveElement } from "../../../components";
import { DelayedOnChange } from "../../../components/DelayedOnChange";
import { useEventActionHandler } from "../../../hooks/useEventActionHandler";
import { UpdateElementActionEvent } from "../../../recoil/actions";
// Components
import Accordion from "../components/Accordion";
import Wrapper from "../components/Wrapper";
import InputField from "../components/InputField";
var classes = {
  gridClass: /*#__PURE__*/css({
    "&.mdc-layout-grid": {
      padding: 0,
      marginBottom: 24
    }
  }, "label:gridClass;"),
  gridCellClass: /*#__PURE__*/css({
    justifySelf: "end"
  }, "label:gridCellClass;")
};

var LinkSettingsComponent = function LinkSettingsComponent(_ref) {
  var _element$data;

  var element = _ref.element,
      defaultAccordionValue = _ref.defaultAccordionValue;
  var handler = useEventActionHandler();

  var _ref2 = ((_element$data = element.data) === null || _element$data === void 0 ? void 0 : _element$data.link) || {},
      href = _ref2.href,
      newTab = _ref2.newTab;

  var updateElement = function updateElement(element) {
    handler.trigger(new UpdateElementActionEvent({
      element: element,
      history: true
    }));
  };

  var updateSettings = function updateSettings(data) {
    var attrKey = "data.link";
    var newElement = merge(element, attrKey, data);
    updateElement(newElement);
  };

  return /*#__PURE__*/React.createElement(Accordion, {
    title: "Link",
    defaultValue: defaultAccordionValue
  }, /*#__PURE__*/React.createElement(Form, {
    data: {
      href: href,
      newTab: newTab
    },
    onChange: updateSettings
  }, function (_ref3) {
    var Bind = _ref3.Bind;
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Wrapper, {
      label: "URL",
      containerClassName: classes.gridClass
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "href",
      validators: validation.create("url:allowRelative:allowHref")
    }, /*#__PURE__*/React.createElement(DelayedOnChange, null, function (props) {
      return /*#__PURE__*/React.createElement(InputField, Object.assign({
        value: props.value || "",
        onChange: props.onChange,
        placeholder: "https://webiny.com/blog"
      }, props));
    }))), /*#__PURE__*/React.createElement(Wrapper, {
      label: "New tab",
      containerClassName: classes.gridClass,
      rightCellClassName: classes.gridCellClass
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "newTab"
    }, /*#__PURE__*/React.createElement(Switch, null))));
  }));
};

export default withActiveElement()(LinkSettingsComponent);
//# sourceMappingURL=HrefSettings.js.map