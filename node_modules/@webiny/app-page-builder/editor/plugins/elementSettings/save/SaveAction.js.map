{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/save/SaveAction.tsx"],"names":["React","useEffect","useCallback","useState","dataURLtoBlob","SaveDialog","pick","get","createElementPlugin","createBlockPlugin","activeElementAtom","elementByIdSelector","useApolloClient","plugins","useSnackbar","useKeyHandler","CREATE_PAGE_ELEMENT","UPDATE_PAGE_ELEMENT","useRecoilValue","CREATE_FILE","useEventActionHandler","removeIds","el","id","elements","map","length","getDataURLImageDimensions","dataURL","Promise","resolve","image","window","Image","onload","width","height","src","pluginOnSave","element","plugin","byType","find","pl","elementType","type","onSave","SaveAction","children","activeElementId","addKeyHandler","removeKeyHandler","getElementTree","showSnackbar","isDialogOpened","setOpenDialog","client","onSubmit","formData","content","preview","meta","blob","name","fileUploaderPlugin","byName","upload","apolloClient","previewImage","private","mutate","mutation","variables","data","createdImageResponse","createdImage","error","query","overwrite","source","res","hideDialog","mutationName","toUpperCase","slice","showDialog","cloneElement","onClick"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from \"react\";\nimport dataURLtoBlob from \"dataurl-to-blob\";\nimport SaveDialog from \"./SaveDialog\";\nimport pick from \"lodash.pick\";\nimport get from \"lodash/get\";\nimport createElementPlugin from \"../../../../admin/utils/createElementPlugin\";\nimport createBlockPlugin from \"../../../../admin/utils/createBlockPlugin\";\nimport { activeElementAtom, elementByIdSelector } from \"../../../recoil/modules\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { plugins } from \"@webiny/plugins\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useKeyHandler } from \"../../../hooks/useKeyHandler\";\nimport { CREATE_PAGE_ELEMENT, UPDATE_PAGE_ELEMENT } from \"../../../../admin/graphql/pages\";\nimport { useRecoilValue } from \"recoil\";\nimport { CREATE_FILE } from \"./SaveDialog/graphql\";\nimport { FileUploaderPlugin } from \"@webiny/app/types\";\nimport {\n    PbEditorPageElementPlugin,\n    PbEditorPageElementSaveActionPlugin,\n    PbEditorElement\n} from \"../../../../types\";\nimport { useEventActionHandler } from \"../../../hooks/useEventActionHandler\";\n\nconst removeIds = el => {\n    delete el.id;\n\n    el.elements = el.elements.map(el => {\n        delete el.id;\n        if (el.elements && el.elements.length) {\n            el = removeIds(el);\n        }\n\n        return el;\n    });\n\n    return el;\n};\n\ntype ImageDimensionsType = {\n    width: number;\n    height: number;\n};\nfunction getDataURLImageDimensions(dataURL: string): Promise<ImageDimensionsType> {\n    return new Promise(resolve => {\n        const image = new window.Image();\n        image.onload = function () {\n            resolve({ width: image.width, height: image.height });\n        };\n        image.src = dataURL;\n    });\n}\n\nconst pluginOnSave = (element: PbEditorElement): PbEditorElement => {\n    const plugin = plugins\n        .byType<PbEditorPageElementSaveActionPlugin>(\"pb-editor-page-element-save-action\")\n        .find(pl => pl.elementType === element.type);\n    if (!plugin) {\n        return element;\n    }\n    return plugin.onSave(element);\n};\n\nconst SaveAction: React.FunctionComponent = ({ children }) => {\n    const activeElementId = useRecoilValue(activeElementAtom);\n    const element = useRecoilValue(elementByIdSelector(activeElementId));\n    const { addKeyHandler, removeKeyHandler } = useKeyHandler();\n    const { getElementTree } = useEventActionHandler();\n    const { showSnackbar } = useSnackbar();\n    const [isDialogOpened, setOpenDialog] = useState<boolean>(false);\n    const client = useApolloClient();\n\n    const onSubmit = async formData => {\n        formData.content = pluginOnSave(removeIds(await getElementTree(element)));\n\n        const meta = await getDataURLImageDimensions(formData.preview);\n        const blob = dataURLtoBlob(formData.preview);\n        blob.name = \"pb-editor-page-element-\" + element.id + \".png\";\n\n        const fileUploaderPlugin = plugins.byName<FileUploaderPlugin>(\"app-file-manager-storage\");\n        const previewImage = await fileUploaderPlugin.upload(blob, { apolloClient: client });\n        previewImage.meta = meta;\n        previewImage.meta.private = true;\n\n        const createdImageResponse = await client.mutate({\n            mutation: CREATE_FILE,\n            variables: {\n                data: previewImage\n            }\n        });\n\n        const createdImage = get(createdImageResponse, \"data.fileManager.createFile\", {});\n        if (createdImage.error) {\n            return showSnackbar(\"Image could not be saved.\");\n        } else if (!createdImage.data.id) {\n            return showSnackbar(\"Missing saved image id.\");\n        }\n\n        formData.preview = createdImage.data;\n\n        const query = formData.overwrite ? UPDATE_PAGE_ELEMENT : CREATE_PAGE_ELEMENT;\n\n        const { data: res } = await client.mutate({\n            mutation: query,\n            variables: formData.overwrite\n                ? {\n                      id: element.source,\n                      data: pick(formData, [\"content\", \"id\", \"preview\"])\n                  }\n                : { data: pick(formData, [\"type\", \"category\", \"preview\", \"name\", \"content\"]) }\n        });\n\n        hideDialog();\n        const mutationName = formData.overwrite ? \"updatePageElement\" : \"createPageElement\";\n        const data = get(res, `pageBuilder.${mutationName}.data`);\n        if (data.type === \"block\") {\n            createBlockPlugin(data);\n        } else {\n            createElementPlugin(data);\n        }\n\n        showSnackbar(\n            <span>\n                {formData.type[0].toUpperCase() + formData.type.slice(1)}{\" \"}\n                <strong>{data.name}</strong> was saved!\n            </span>\n        );\n    };\n\n    useEffect(() => {\n        isDialogOpened ? addKeyHandler(\"escape\", hideDialog) : removeKeyHandler(\"escape\");\n    }, [isDialogOpened]);\n\n    const showDialog = useCallback(() => setOpenDialog(true), []);\n    const hideDialog = useCallback(() => setOpenDialog(false), []);\n\n    if (!element) {\n        return null;\n    }\n\n    const plugin = plugins\n        .byType<PbEditorPageElementPlugin>(\"pb-editor-page-element\")\n        .find(pl => pl.elementType === element.type);\n\n    if (!plugin) {\n        return null;\n    }\n\n    return (\n        <>\n            <SaveDialog\n                key={element.id}\n                element={element}\n                open={isDialogOpened}\n                onClose={hideDialog}\n                onSubmit={onSubmit}\n                type={element.type === \"block\" ? \"block\" : \"element\"}\n            />\n            {React.cloneElement(children as React.ReactElement, { onClick: showDialog })}\n        </>\n    );\n};\n\nexport default SaveAction;\n"],"file":"SaveAction.js"}