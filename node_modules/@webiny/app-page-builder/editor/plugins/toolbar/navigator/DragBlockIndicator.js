import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React from "react";
import { useDrag } from "react-dnd";
import { ReactComponent as DragIndicatorIcon } from "@svgr/webpack!./assets/drag_indicator_24px.svg";
var BLOCK = "block";

var DragBlockIndicator = function DragBlockIndicator(_ref) {
  var type = _ref.type;

  var _useDrag = useDrag({
    item: {
      type: type
    },
    collect: function collect(monitor) {
      return {
        isDragging: monitor.isDragging()
      };
    },
    canDrag: false
  }),
      _useDrag2 = _slicedToArray(_useDrag, 2),
      drag = _useDrag2[1];

  if (type !== BLOCK) {
    return null;
  }

  return /*#__PURE__*/React.createElement("div", {
    ref: drag
  }, /*#__PURE__*/React.createElement(DragIndicatorIcon, {
    className: "drag-indicator"
  }));
};

export default DragBlockIndicator;
//# sourceMappingURL=DragBlockIndicator.js.map