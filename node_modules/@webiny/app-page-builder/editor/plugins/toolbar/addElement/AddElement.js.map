{"version":3,"sources":["../../../../../src/editor/plugins/toolbar/addElement/AddElement.tsx"],"names":["React","useCallback","useEffect","useState","useMemo","Styled","activePluginParamsByNameSelector","useEventActionHandler","DeactivatePluginActionEvent","DragEndActionEvent","DragStartActionEvent","DropElementActionEvent","Draggable","plugins","usePageBuilder","useRecoilValue","css","List","ListItem","ListItemMeta","Icon","Typography","ButtonFloating","useKeyHandler","ADD_ELEMENT","categoriesList","backgroundColor","boxShadow","borderTop","width","fontWeight","borderBottom","color","AddElement","handler","plugin","params","removeKeyHandler","addKeyHandler","dragStart","trigger","dragEnd","deactivatePlugin","name","dropElement","args","getGroups","byType","getGroupElements","group","filter","el","toolbar","setGroup","theme","refresh","enableDragOverlay","document","querySelector","classList","add","disableDragOverlay","remove","renderDraggable","element","elementType","target","props","setTimeout","type","drag","renderOverlay","onClick","label","renderClickable","item","source","cloneElement","key","e","preventDefault","emptyViewContent","find","pl","selectedGroup","emptyView","groupElements","map","title","icon","length","preview","memo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,EAAkDC,OAAlD,QAAiE,OAAjE;AACA,OAAO,KAAKC,MAAZ;AACA,SAASC,gCAAT;AACA,SAASC,qBAAT;AACA,SACIC,2BADJ,EAEIC,kBAFJ,EAGIC,oBAHJ,EAIIC,sBAJJ;AAOA,OAAOC,SAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,cAAT;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,YAAzB,QAA6C,iBAA7C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAGA,SAASC,aAAT;AAEA,IAAMC,WAAW,GAAG,+BAApB,C,CAEA;;AACA,IAAMC,cAAc,gBAAGT,GAAG,CAAC;AACvBU,EAAAA,eAAe,EAAE,0BADM;AAEvBC,EAAAA,SAAS,EAAE,mDAFY;AAGvBC,EAAAA,SAAS,EAAE,uCAHY;AAIvB,oBAAkB;AACdC,IAAAA,KAAK,EAAE,GADO;AAEdC,IAAAA,UAAU,EAAE,gBAFE;AAGdC,IAAAA,YAAY,EAAE,uCAHA;AAId,gBAAY;AACRL,MAAAA,eAAe,EAAE,6BADT;AAERM,MAAAA,KAAK,EAAE,0BAFC;AAGR,8BAAwB;AACpBA,QAAAA,KAAK,EAAE;AADa;AAHhB;AAJE;AAJK,CAAD,0BAA1B;;AAkBA,IAAMC,UAAmC,GAAG,SAAtCA,UAAsC,GAAM;AAC9C,MAAMC,OAAO,GAAG3B,qBAAqB,EAArC;AACA,MAAM4B,MAAM,GAAGpB,cAAc,CAACT,gCAAgC,CAACkB,WAAD,CAAjC,CAA7B;;AACA,aAAmBW,MAAM,IAAI,EAA7B;AAAA,MAAQC,MAAR,QAAQA,MAAR;;AACA,uBAA4Cb,aAAa,EAAzD;AAAA,MAAQc,gBAAR,kBAAQA,gBAAR;AAAA,MAA0BC,aAA1B,kBAA0BA,aAA1B;;AAEA,MAAMC,SAAS,GAAGtC,WAAW,CAAC,YAAM;AAChCiC,IAAAA,OAAO,CAACM,OAAR,CAAgB,IAAI9B,oBAAJ,EAAhB;AACH,GAF4B,EAE1B,EAF0B,CAA7B;AAGA,MAAM+B,OAAO,GAAGxC,WAAW,CAAC,YAAM;AAC9BiC,IAAAA,OAAO,CAACM,OAAR,CAAgB,IAAI/B,kBAAJ,EAAhB;AACH,GAF0B,EAExB,EAFwB,CAA3B;AAGA,MAAMiC,gBAAgB,GAAGzC,WAAW,CAAC,YAAM;AACvCiC,IAAAA,OAAO,CAACM,OAAR,CACI,IAAIhC,2BAAJ,CAAgC;AAC5BmC,MAAAA,IAAI,EAAEnB;AADsB,KAAhC,CADJ;AAKH,GANmC,EAMjC,EANiC,CAApC;AAOA,MAAMoB,WAAW,GAAG3C,WAAW,CAAC,UAAC4C,IAAD,EAAqC;AACjEX,IAAAA,OAAO,CAACM,OAAR,CAAgB,IAAI7B,sBAAJ,CAA2BkC,IAA3B,CAAhB;AACH,GAF8B,EAE5B,EAF4B,CAA/B;AAGA,MAAMC,SAAS,GAAG7C,WAAW,CAAC,YAAM;AAChC,WAAOY,OAAO,CAACkC,MAAR,CAA+C,8BAA/C,CAAP;AACH,GAF4B,EAE1B,EAF0B,CAA7B;AAIA,MAAMC,gBAAgB,GAAG/C,WAAW,CAAC,UAAAgD,KAAK,EAAI;AAC1C,WAAOpC,OAAO,CACTkC,MADE,CACgC,wBADhC,EAEFG,MAFE,CAEK,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACC,OAAH,IAAcD,EAAE,CAACC,OAAH,CAAWH,KAAX,KAAqBA,KAAvC;AAAA,KAFP,CAAP;AAGH,GAJmC,EAIjC,EAJiC,CAApC;;AAMA,kBAA0B9C,QAAQ,CAAS2C,SAAS,GAAG,CAAH,CAAT,CAAeH,IAAxB,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcI,QAAd;;AAEA,wBAAkBvC,cAAc,EAAhC;AAAA,MAAQwC,KAAR,mBAAQA,KAAR;;AAEA,MAAMC,OAAO,GAAGtD,WAAW,CAAC,YAAM;AAC9BoD,IAAAA,QAAQ,CAACJ,KAAD,CAAR;AACH,GAF0B,EAExB,EAFwB,CAA3B;AAIA,MAAMO,iBAAiB,GAAGvD,WAAW,CAAC,YAAM;AACxC,QAAMkD,EAAE,GAAGM,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAX;;AACA,QAAI,CAACP,EAAL,EAAS;AACL;AACH;;AACDA,IAAAA,EAAE,CAACQ,SAAH,CAAaC,GAAb,CAAiB,oBAAjB;AACH,GANoC,EAMlC,EANkC,CAArC;AAQA,MAAMC,kBAAkB,GAAG5D,WAAW,CAAC,YAAM;AACzC,QAAMkD,EAAE,GAAGM,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAX;;AACA,QAAI,CAACP,EAAL,EAAS;AACL;AACH;;AACDA,IAAAA,EAAE,CAACQ,SAAH,CAAaG,MAAb,CAAoB,oBAApB;AACH,GANqC,EAMnC,EANmC,CAAtC;AAQA,MAAMC,eAAe,GAAG9D,WAAW,CAAC,UAAC+D,OAAD,EAAU7B,MAAV,EAAqB;AACrD,QAAQ8B,WAAR,GAAwB9B,MAAxB,CAAQ8B,WAAR;AAEA,wBACI,oBAAC,SAAD;AACI,MAAA,OAAO,EAAE,IADb;AAEI,MAAA,GAAG,EAAE9B,MAAM,CAACQ,IAFhB;AAGI,MAAA,MAAM,EAAER,MAAM,CAAC+B,MAHnB;AAII,MAAA,SAAS,EAAE,mBAAAC,KAAK,EAAI;AAChB5B,QAAAA,SAAS;AACT6B,QAAAA,UAAU,CAAC1B,gBAAD,EAAmB,EAAnB,CAAV;AACA,eAAO;AAAE2B,UAAAA,IAAI,EAAEJ,WAAR;AAAqBC,UAAAA,MAAM,EAAEC,KAAK,CAACD;AAAnC,SAAP;AACH,OARL;AASI,MAAA,OAAO,EAAE,mBAAM;AACXzB,QAAAA,OAAO;AACV;AAXL,OAaK;AAAA,UAAG6B,IAAH,SAAGA,IAAH;AAAA,0BACG;AAAK,QAAA,GAAG,EAAEA;AAAV,SAAiBC,aAAa,CAACP,OAAD,EAAU,IAAV,EAAgB,aAAhB,EAA+B7B,MAA/B,CAA9B,CADH;AAAA,KAbL,CADJ;AAmBH,GAtBkC,EAsBhC,EAtBgC,CAAnC;AAwBA,MAAMoC,aAAa,GAAGtE,WAAW,CAC7B,UAAC+D,OAAD,EAA4C;AAAA,QAAlCQ,OAAkC,uEAAxB,IAAwB;AAAA,QAAlBC,KAAkB;AAAA,QAAXtC,MAAW;AACxC,wBACI,oBAAC,MAAD,CAAQ,cAAR,qBACI,oBAAC,MAAD,CAAQ,OAAR,qBACI,oBAAC,MAAD,CAAQ,QAAR;AAAiB,MAAA,SAAS,EAAE;AAA5B,MADJ,eAEI,oBAAC,MAAD,CAAQ,QAAR;AAAiB,MAAA,SAAS,EAAE;AAA5B,oBACI,oBAAC,cAAD;AACI,4DAA6CA,MAAM,CAAC8B,WAApD,CADJ;AAEI,MAAA,OAAO,EAAEO,OAFb;AAGI,MAAA,KAAK,EAAEC,KAHX;AAII,MAAA,IAAI,eAAE,oBAAC,OAAD,OAJV;AAKI,MAAA,WAAW,EAAEjB,iBALjB;AAMI,MAAA,SAAS,EAAEK;AANf,MADJ,CAFJ,CADJ,EAcKG,OAdL,CADJ;AAkBH,GApB4B,EAqB7B,CAACR,iBAAD,EAAoBK,kBAApB,CArB6B,CAAjC;AAwBA,MAAMa,eAAe,GAAGzE,WAAW,CAC/B,UAAC+D,OAAD,EAAU7B,MAAV,EAAqB;AACjB,QAAMwC,IAAI,GAAGJ,aAAa,CACtBP,OADsB,EAEtB,YAAM;AACFpB,MAAAA,WAAW,CAAC;AACRgC,QAAAA,MAAM,EAAE;AAAEP,UAAAA,IAAI,EAAElC,MAAM,CAAC8B;AAAf,SADA;AAERC,QAAAA,MAAM,oBAAO9B,MAAP;AAFE,OAAD,CAAX;AAIAM,MAAAA,gBAAgB;AACnB,KARqB,EAStB,cATsB,EAUtBP,MAVsB,CAA1B;AAaA,wBAAOnC,KAAK,CAAC6E,YAAN,CAAmBF,IAAnB,EAAyB;AAAEG,MAAAA,GAAG,EAAE3C,MAAM,CAACQ;AAAd,KAAzB,CAAP;AACH,GAhB8B,EAiB/B,CAACP,MAAD,EAASM,gBAAT,EAA2BE,WAA3B,EAAwC2B,aAAxC,CAjB+B,CAAnC;AAoBArE,EAAAA,SAAS,CAAC,YAAM;AACZoC,IAAAA,aAAa,CAAC,QAAD,EAAW,UAAAyC,CAAC,EAAI;AACzBA,MAAAA,CAAC,CAACC,cAAF;AACAtC,MAAAA,gBAAgB;AACnB,KAHY,CAAb;AAKA,WAAO;AAAA,aAAML,gBAAgB,CAAC,QAAD,CAAtB;AAAA,KAAP;AACH,GAPQ,CAAT;AASA,MAAM4C,gBAAgB,GAAG7E,OAAO,CAAC,YAAM;AACnC,0BAAiC0C,SAAS,GAAGoC,IAAZ,CAAiB,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACxC,IAAH,KAAYM,KAAhB;AAAA,KAAnB,CAAjC;AAAA,QAAemC,aAAf,mBAAQnC,KAAR;;AACA,WAAOmC,aAAa,CAACC,SAArB;AACH,GAH+B,EAG7B,CAACpC,KAAD,CAH6B,CAAhC;AAKA,MAAMqC,aAAa,GAAGrC,KAAK,GAAGD,gBAAgB,CAACC,KAAD,CAAnB,GAA6B,EAAxD;AAEA,sBACI,oBAAC,MAAD,CAAQ,IAAR,qBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAExB;AAAjB,KACKqB,SAAS,GAAGyC,GAAZ,CAAgB,UAAApD,MAAM;AAAA,wBACnB,oBAAC,QAAD;AACI,MAAA,OAAO,EAAE;AAAA,eAAMkB,QAAQ,CAAClB,MAAM,CAACQ,IAAR,CAAd;AAAA,OADb;AAEI,MAAA,GAAG,EAAER,MAAM,CAACQ,IAFhB;AAGI,MAAA,SAAS,EAAER,MAAM,CAACQ,IAAP,KAAgBM,KAAhB,IAAyB;AAHxC,OAKKd,MAAM,CAACc,KAAP,CAAauC,KALlB,EAOKrD,MAAM,CAACc,KAAP,CAAawC,IAAb,iBACG,oBAAC,YAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEtD,MAAM,CAACc,KAAP,CAAawC;AAAzB,MADJ,CARR,CADmB;AAAA,GAAtB,CADL,CADJ,eAkBI,oBAAC,MAAD,CAAQ,QAAR,QACKH,aAAa,CAACI,MAAd,GACKJ,aAAa,CAACC,GAAd,CAAkB,UAAApD,MAAM,EAAI;AACxB,WAAO,CAACC,MAAM,GAAGsC,eAAH,GAAqBX,eAA5B,gBACH;AAAK,mBAAU;AAAf,oBACI,oBAAC,MAAD,CAAQ,UAAR,qBACI,oBAAC,MAAD,CAAQ,YAAR,QACK,OAAO5B,MAAM,CAACiB,OAAP,CAAeoC,KAAtB,KAAgC,UAAhC,GACGrD,MAAM,CAACiB,OAAP,CAAeoC,KAAf,CAAqB;AAAEjC,MAAAA,OAAO,EAAPA;AAAF,KAArB,CADH,gBAGG,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAC;AAAhB,OACKpB,MAAM,CAACiB,OAAP,CAAeoC,KADpB,CAJR,CADJ,eAUI,oBAAC,MAAD,CAAQ,oBAAR,QACKrD,MAAM,CAACiB,OAAP,CAAeuC,OAAf,CAAuB;AAAErC,MAAAA,KAAK,EAALA;AAAF,KAAvB,CADL,CAVJ,CADJ,CADG,EAiBHnB,MAjBG,CAAP;AAmBH,GApBD,CADL,GAsBK8C,gBAvBV,CAlBJ,CADJ;AA8CH,CA1LD;;AA4LA,4BAAejF,KAAK,CAAC4F,IAAN,CAAW3D,UAAX,CAAf","sourcesContent":["import React, { useCallback, useEffect, useState, useMemo } from \"react\";\nimport * as Styled from \"./StyledComponents\";\nimport { activePluginParamsByNameSelector } from \"../../../recoil/modules\";\nimport { useEventActionHandler } from \"../../../hooks/useEventActionHandler\";\nimport {\n    DeactivatePluginActionEvent,\n    DragEndActionEvent,\n    DragStartActionEvent,\n    DropElementActionEvent\n} from \"../../../recoil/actions\";\nimport { DropElementActionArgsType } from \"../../../recoil/actions/dropElement/types\";\nimport Draggable from \"../../../components/Draggable\";\nimport { plugins } from \"@webiny/plugins\";\nimport { usePageBuilder } from \"../../../../hooks/usePageBuilder\";\nimport { useRecoilValue } from \"recoil\";\nimport { css } from \"emotion\";\nimport { List, ListItem, ListItemMeta } from \"@webiny/ui/List\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { ButtonFloating } from \"@webiny/ui/Button\";\nimport { ReactComponent as AddIcon } from \"../../../assets/icons/add.svg\";\nimport { PbEditorPageElementGroupPlugin, PbEditorPageElementPlugin } from \"../../../../types\";\nimport { useKeyHandler } from \"../../../hooks/useKeyHandler\";\n\nconst ADD_ELEMENT = \"pb-editor-toolbar-add-element\";\n\n// @ts-ignore\nconst categoriesList = css({\n    backgroundColor: \"var(--mdc-theme-surface)\",\n    boxShadow: \"inset 1px 0px 5px 0px var(--mdc-theme-background)\",\n    borderTop: \"1px solid var(--mdc-theme-background)\",\n    \".mdc-list-item\": {\n        width: 150,\n        fontWeight: \"600 !important\",\n        borderBottom: \"1px solid var(--mdc-theme-background)\",\n        \"&.active\": {\n            backgroundColor: \"var(--mdc-theme-background)\",\n            color: \"var(--mdc-theme-primary)\",\n            \".mdc-list-item__meta\": {\n                color: \"var(--mdc-theme-primary)\"\n            }\n        }\n    }\n});\n\nconst AddElement: React.FunctionComponent = () => {\n    const handler = useEventActionHandler();\n    const plugin = useRecoilValue(activePluginParamsByNameSelector(ADD_ELEMENT));\n    const { params } = plugin || {};\n    const { removeKeyHandler, addKeyHandler } = useKeyHandler();\n\n    const dragStart = useCallback(() => {\n        handler.trigger(new DragStartActionEvent());\n    }, []);\n    const dragEnd = useCallback(() => {\n        handler.trigger(new DragEndActionEvent());\n    }, []);\n    const deactivatePlugin = useCallback(() => {\n        handler.trigger(\n            new DeactivatePluginActionEvent({\n                name: ADD_ELEMENT\n            })\n        );\n    }, []);\n    const dropElement = useCallback((args: DropElementActionArgsType) => {\n        handler.trigger(new DropElementActionEvent(args));\n    }, []);\n    const getGroups = useCallback(() => {\n        return plugins.byType<PbEditorPageElementGroupPlugin>(\"pb-editor-page-element-group\");\n    }, []);\n\n    const getGroupElements = useCallback(group => {\n        return plugins\n            .byType<PbEditorPageElementPlugin>(\"pb-editor-page-element\")\n            .filter(el => el.toolbar && el.toolbar.group === group);\n    }, []);\n\n    const [group, setGroup] = useState<string>(getGroups()[0].name);\n\n    const { theme } = usePageBuilder();\n\n    const refresh = useCallback(() => {\n        setGroup(group);\n    }, []);\n\n    const enableDragOverlay = useCallback(() => {\n        const el = document.querySelector(\".pb-editor\");\n        if (!el) {\n            return;\n        }\n        el.classList.add(\"pb-editor-dragging\");\n    }, []);\n\n    const disableDragOverlay = useCallback(() => {\n        const el = document.querySelector(\".pb-editor\");\n        if (!el) {\n            return;\n        }\n        el.classList.remove(\"pb-editor-dragging\");\n    }, []);\n\n    const renderDraggable = useCallback((element, plugin) => {\n        const { elementType } = plugin;\n\n        return (\n            <Draggable\n                enabled={true}\n                key={plugin.name}\n                target={plugin.target}\n                beginDrag={props => {\n                    dragStart();\n                    setTimeout(deactivatePlugin, 20);\n                    return { type: elementType, target: props.target };\n                }}\n                endDrag={() => {\n                    dragEnd();\n                }}\n            >\n                {({ drag }) => (\n                    <div ref={drag}>{renderOverlay(element, null, \"Drag to Add\", plugin)}</div>\n                )}\n            </Draggable>\n        );\n    }, []);\n\n    const renderOverlay = useCallback(\n        (element, onClick = null, label, plugin) => {\n            return (\n                <Styled.ElementPreview>\n                    <Styled.Overlay>\n                        <Styled.Backdrop className={\"backdrop\"} />\n                        <Styled.AddBlock className={\"add-block\"}>\n                            <ButtonFloating\n                                data-testid={`pb-editor-add-element-button-${plugin.elementType}`}\n                                onClick={onClick}\n                                label={label}\n                                icon={<AddIcon />}\n                                onMouseDown={enableDragOverlay}\n                                onMouseUp={disableDragOverlay}\n                            />\n                        </Styled.AddBlock>\n                    </Styled.Overlay>\n                    {element}\n                </Styled.ElementPreview>\n            );\n        },\n        [enableDragOverlay, disableDragOverlay]\n    );\n\n    const renderClickable = useCallback(\n        (element, plugin) => {\n            const item = renderOverlay(\n                element,\n                () => {\n                    dropElement({\n                        source: { type: plugin.elementType } as any,\n                        target: { ...params }\n                    });\n                    deactivatePlugin();\n                },\n                \"Click to Add\",\n                plugin\n            );\n\n            return React.cloneElement(item, { key: plugin.name });\n        },\n        [params, deactivatePlugin, dropElement, renderOverlay]\n    );\n\n    useEffect(() => {\n        addKeyHandler(\"escape\", e => {\n            e.preventDefault();\n            deactivatePlugin();\n        });\n\n        return () => removeKeyHandler(\"escape\");\n    });\n\n    const emptyViewContent = useMemo(() => {\n        const { group: selectedGroup } = getGroups().find(pl => pl.name === group);\n        return selectedGroup.emptyView;\n    }, [group]);\n\n    const groupElements = group ? getGroupElements(group) : [];\n\n    return (\n        <Styled.Flex>\n            <List className={categoriesList}>\n                {getGroups().map(plugin => (\n                    <ListItem\n                        onClick={() => setGroup(plugin.name)}\n                        key={plugin.name}\n                        className={plugin.name === group && \"active\"}\n                    >\n                        {plugin.group.title}\n\n                        {plugin.group.icon && (\n                            <ListItemMeta>\n                                <Icon icon={plugin.group.icon} />\n                            </ListItemMeta>\n                        )}\n                    </ListItem>\n                ))}\n            </List>\n            <Styled.Elements>\n                {groupElements.length\n                    ? groupElements.map(plugin => {\n                          return (params ? renderClickable : renderDraggable)(\n                              <div data-role=\"draggable\">\n                                  <Styled.ElementBox>\n                                      <Styled.ElementTitle>\n                                          {typeof plugin.toolbar.title === \"function\" ? (\n                                              plugin.toolbar.title({ refresh })\n                                          ) : (\n                                              <Typography use=\"overline\">\n                                                  {plugin.toolbar.title}\n                                              </Typography>\n                                          )}\n                                      </Styled.ElementTitle>\n                                      <Styled.ElementPreviewCanvas>\n                                          {plugin.toolbar.preview({ theme })}\n                                      </Styled.ElementPreviewCanvas>\n                                  </Styled.ElementBox>\n                              </div>,\n                              plugin\n                          );\n                      })\n                    : emptyViewContent}\n            </Styled.Elements>\n        </Styled.Flex>\n    );\n};\n\nexport default React.memo(AddElement);\n"],"file":"AddElement.js"}