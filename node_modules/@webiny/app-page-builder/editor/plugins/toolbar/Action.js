import React, { useCallback } from "react";
import { useEventActionHandler } from "../../hooks/useEventActionHandler";
import { TogglePluginActionEvent } from "../../recoil/actions";
import { isPluginActiveSelector } from "../../recoil/modules";
import { css } from "emotion";
import { IconButton } from "@webiny/ui/Button";
import { Tooltip } from "@webiny/ui/Tooltip";
import { useRecoilValue } from "recoil";
var activeStyle = /*#__PURE__*/css({
  ".mdc-icon-button__icon": {
    color: "var(--mdc-theme-primary)"
  }
}, "label:activeStyle;");

var getButtonIcon = function getButtonIcon(icon, isActive) {
  if (Array.isArray(icon)) {
    return isActive ? icon[0] : icon[1];
  }

  return icon;
};

var Action = function Action(_ref) {
  var id = _ref.id,
      icon = _ref.icon,
      onClick = _ref.onClick,
      tooltip = _ref.tooltip,
      plugin = _ref.plugin,
      closeOtherInGroup = _ref.closeOtherInGroup;
  var handler = useEventActionHandler();
  var isActive = useRecoilValue(isPluginActiveSelector(plugin));
  var togglePlugin = useCallback(function () {
    if (!plugin) {
      return;
    }

    handler.trigger(new TogglePluginActionEvent({
      name: plugin,
      closeOtherInGroup: closeOtherInGroup
    }));
  }, [plugin, closeOtherInGroup]);
  var clickHandler = useCallback(function () {
    if (typeof onClick === "function") {
      return onClick();
    }

    togglePlugin();
  }, [plugin, closeOtherInGroup]);
  var btnIcon = getButtonIcon(icon, isActive);
  var iconButton = /*#__PURE__*/React.createElement(IconButton, {
    id: id,
    icon: btnIcon,
    onClick: clickHandler,
    className: isActive && activeStyle
  });

  if (tooltip) {
    return /*#__PURE__*/React.createElement(Tooltip, Object.assign({
      placement: "right",
      content: /*#__PURE__*/React.createElement("span", null, tooltip)
    }, isActive ? {
      visible: false
    } : {}), iconButton);
  }

  return iconButton;
};

export default /*#__PURE__*/React.memo(Action);
//# sourceMappingURL=Action.js.map