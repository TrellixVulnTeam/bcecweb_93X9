import * as React from "react";
import { BindComponent } from "@webiny/form";
import { OEmbedProps } from "../../../../components/OEmbed";
import { PbEditorElement, PbEditorPageElementPlugin, PbEditorPageElementAdvancedSettingsPlugin } from "../../../../../types";
declare type EmbedPluginConfig = {
    type: string;
    toolbar?: {
        title?: string;
        group?: string;
        preview?: () => React.ReactNode;
    };
    render?: ({ element }: {
        element: any;
    }) => React.ReactNode;
    oembed?: {
        global?: string;
        sdk?: string;
        onData?: (data: {
            [key: string]: any;
        }) => {
            [key: string]: any;
        };
        renderEmbed?: (props: OEmbedProps) => React.ReactElement;
        init?: (params: {
            node: HTMLElement;
        }) => void;
    };
    settings?: Array<string | Array<string | any>> | Function;
    create?: Function;
    target?: Array<string>;
    onCreate?: string;
    renderElementPreview?: (params: {
        element: PbEditorElement;
        width: number;
        height: number;
    }) => React.ReactElement;
};
export declare const createEmbedPlugin: (config: EmbedPluginConfig) => PbEditorPageElementPlugin;
declare type EmbedPluginSidebarConfig = {
    type: string;
    render(params?: {
        Bind: BindComponent;
        submit: () => void;
    }): React.ReactElement;
};
export declare const createEmbedSettingsPlugin: ({ type, render }: EmbedPluginSidebarConfig) => PbEditorPageElementAdvancedSettingsPlugin;
export {};
