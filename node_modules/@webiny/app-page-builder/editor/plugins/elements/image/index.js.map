{"version":3,"sources":["../../../../../src/editor/plugins/elements/image/index.tsx"],"names":["React","styled","kebabCase","ImageSettings","Image","imageCreatedEditorAction","CreateElementActionEvent","DisplayMode","createInitialPerDeviceSettingValue","PreviewBox","textAlign","height","svg","width","args","elementType","defaultToolbar","title","group","preview","defaultSettings","image","name","type","toolbar","settings","target","create","options","defaultValue","elements","data","horizontalAlignFlex","DESKTOP","margin","all","padding","render","element","onEditorMount","handler","on"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport kebabCase from \"lodash/kebabCase\";\nimport ImageSettings from \"./ImageSettings\";\nimport Image from \"./Image\";\nimport { imageCreatedEditorAction } from \"./imageCreatedEditorAction\";\nimport { CreateElementActionEvent } from \"../../../recoil/actions\";\nimport { ReactComponent as ImageIcon } from \"./round-image-24px.svg\";\nimport {\n    PbEditorPageElementPlugin,\n    PbEditorPageElementStyleSettingsPlugin,\n    PbEditorEventActionPlugin,\n    DisplayMode,\n    PbEditorElementPluginArgs\n} from \"../../../../types\";\nimport { Plugin } from \"@webiny/plugins/types\";\nimport { createInitialPerDeviceSettingValue } from \"../../elementSettings/elementSettingsUtils\";\n\nconst PreviewBox = styled(\"div\")({\n    textAlign: \"center\",\n    height: 50,\n    svg: {\n        height: 50,\n        width: 50\n    }\n});\n\nexport default (args: PbEditorElementPluginArgs = {}): Plugin[] => {\n    const elementType = kebabCase(args.elementType || \"image\");\n\n    const defaultToolbar = {\n        title: \"Image\",\n        group: \"pb-editor-element-group-basic\",\n        preview() {\n            return (\n                <PreviewBox>\n                    <ImageIcon />\n                </PreviewBox>\n            );\n        }\n    };\n\n    const defaultSettings = [\n        \"pb-editor-page-element-style-settings-image\",\n        [\"pb-editor-page-element-style-settings-background\", { image: false }],\n        \"pb-editor-page-element-style-settings-link\",\n        \"pb-editor-page-element-style-settings-border\",\n        \"pb-editor-page-element-style-settings-shadow\",\n        \"pb-editor-page-element-style-settings-horizontal-align-flex\",\n        \"pb-editor-page-element-style-settings-padding\",\n        \"pb-editor-page-element-style-settings-margin\",\n        \"pb-editor-page-element-settings-clone\",\n        \"pb-editor-page-element-settings-delete\"\n    ];\n\n    return [\n        {\n            name: `pb-editor-page-element-${elementType}`,\n            type: \"pb-editor-page-element\",\n            elementType: elementType,\n            toolbar:\n                typeof args.toolbar === \"function\" ? args.toolbar(defaultToolbar) : defaultToolbar,\n            settings:\n                typeof args.settings === \"function\"\n                    ? args.settings(defaultSettings)\n                    : defaultSettings,\n            target: [\"cell\", \"block\"],\n            create(options) {\n                const defaultValue = {\n                    type: this.elementType,\n                    elements: [],\n                    data: {\n                        settings: {\n                            horizontalAlignFlex: createInitialPerDeviceSettingValue(\n                                \"center\",\n                                DisplayMode.DESKTOP\n                            ),\n                            margin: createInitialPerDeviceSettingValue(\n                                { all: \"0px\" },\n                                DisplayMode.DESKTOP\n                            ),\n                            padding: createInitialPerDeviceSettingValue(\n                                { all: \"0px\" },\n                                DisplayMode.DESKTOP\n                            )\n                        }\n                    },\n                    ...options\n                };\n\n                return typeof args.create === \"function\" ? args.create(defaultValue) : defaultValue;\n            },\n            render({ element }) {\n                return <Image element={element} />;\n            }\n        } as PbEditorPageElementPlugin,\n        {\n            name: \"pb-editor-page-element-style-settings-image\",\n            type: \"pb-editor-page-element-style-settings\",\n            render() {\n                return <ImageSettings />;\n            }\n        } as PbEditorPageElementStyleSettingsPlugin,\n        {\n            name: \"pb-editor-event-action-image-created\",\n            type: \"pb-editor-event-action-plugin\",\n            onEditorMount(handler) {\n                return handler.on(CreateElementActionEvent, imageCreatedEditorAction);\n            }\n        } as PbEditorEventActionPlugin\n    ];\n};\n"],"file":"index.js"}