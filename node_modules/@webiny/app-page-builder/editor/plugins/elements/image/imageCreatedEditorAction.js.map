{"version":3,"sources":["../../../../../src/editor/plugins/elements/image/imageCreatedEditorAction.ts"],"names":["plugins","MAX_ELEMENT_FIND_RETRIES","ELEMENT_FIND_RETRY_TIMEOUT","clickOnImageWithRetries","element","retryNumber","image","document","querySelector","window","CSS","escape","id","click","setTimeout","imageCreatedEditorAction","state","meta","source","type","imagePlugin","byType","find","pl","elementType","onCreate"],"mappings":"AAEA,SAASA,OAAT,QAAwB,iBAAxB;AAEA,IAAMC,wBAAwB,GAAG,EAAjC;AACA,IAAMC,0BAA0B,GAAG,GAAnC;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,OAAD,EAA2BC,WAA3B,EAAmD;AAC/E,MAAMC,KAAkB,GAAGC,QAAQ,CAACC,aAAT,YACnBC,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkBP,OAAO,CAACQ,EAA1B,CADmB,mCAA3B;;AAIA,MAAIN,KAAJ,EAAW;AACPA,IAAAA,KAAK,CAACO,KAAN;AACA;AACH,GAHD,MAGO,IAAIR,WAAW,IAAIJ,wBAAnB,EAA6C;AAChD;AACH;;AACDa,EAAAA,UAAU,CAAC;AAAA,WAAMX,uBAAuB,CAACC,OAAD,EAAUC,WAAW,GAAG,CAAxB,CAA7B;AAAA,GAAD,EAA0DH,0BAA1D,CAAV;AACH,CAZD;;AAcA,OAAO,IAAMa,wBAA0D,GAAG,SAA7DA,wBAA6D,CACtEC,KADsE,EAEtEC,IAFsE,QAIrE;AAAA,MADCb,OACD,QADCA,OACD;AAAA,MADUc,MACV,QADUA,MACV;;AACD,MAAId,OAAO,CAACe,IAAR,KAAiB,OAArB,EAA8B;AAC1B,WAAO,EAAP;AACH,GAHA,CAKD;;;AACA,MAAMC,WAAW,GAAGpB,OAAO,CACtBqB,MADe,CACmB,wBADnB,EAEfC,IAFe,CAEV,UAAAC,EAAE;AAAA,WAAIA,EAAE,CAACC,WAAH,KAAmBN,MAAM,CAACC,IAA9B;AAAA,GAFQ,CAApB;;AAIA,MAAI,CAACC,WAAL,EAAkB;AACd,WAAO,EAAP;AACH;;AAED,MAAQK,QAAR,GAAqBL,WAArB,CAAQK,QAAR;;AACA,MAAI,CAACA,QAAD,IAAaA,QAAQ,KAAK,MAA9B,EAAsC;AAClCtB,IAAAA,uBAAuB,CAACC,OAAD,EAAU,CAAV,CAAvB;AACH;;AACD,SAAO,EAAP;AACH,CAvBM","sourcesContent":["import { CreateElementEventActionCallable } from \"../../../recoil/actions/createElement/types\";\nimport { PbEditorPageElementPlugin, PbEditorElement } from \"../../../../types\";\nimport { plugins } from \"@webiny/plugins\";\n\nconst MAX_ELEMENT_FIND_RETRIES = 10;\nconst ELEMENT_FIND_RETRY_TIMEOUT = 100;\n\nconst clickOnImageWithRetries = (element: PbEditorElement, retryNumber: number) => {\n    const image: HTMLElement = document.querySelector(\n        `#${window.CSS.escape(element.id)} [data-role=\"select-image\"]`\n    );\n\n    if (image) {\n        image.click();\n        return;\n    } else if (retryNumber >= MAX_ELEMENT_FIND_RETRIES) {\n        return;\n    }\n    setTimeout(() => clickOnImageWithRetries(element, retryNumber + 1), ELEMENT_FIND_RETRY_TIMEOUT);\n};\n\nexport const imageCreatedEditorAction: CreateElementEventActionCallable = (\n    state,\n    meta,\n    { element, source }\n) => {\n    if (element.type !== \"image\") {\n        return {};\n    }\n\n    // Check the source of the element (could be `saved` element which behaves differently from other elements)\n    const imagePlugin = plugins\n        .byType<PbEditorPageElementPlugin>(\"pb-editor-page-element\")\n        .find(pl => pl.elementType === source.type);\n\n    if (!imagePlugin) {\n        return {};\n    }\n\n    const { onCreate } = imagePlugin;\n    if (!onCreate || onCreate !== \"skip\") {\n        clickOnImageWithRetries(element, 0);\n    }\n    return {};\n};\n"],"file":"imageCreatedEditorAction.js"}