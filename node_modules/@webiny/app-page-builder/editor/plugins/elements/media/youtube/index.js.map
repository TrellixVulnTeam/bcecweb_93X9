{"version":3,"sources":["../../../../../../src/editor/plugins/elements/media/youtube/index.tsx"],"names":["React","styled","validation","Typography","createEmbedSettingsPlugin","createEmbedPlugin","YoutubeEmbed","placeholder","Accordion","InputField","SimpleButton","kebabCase","PreviewBox","textAlign","height","svg","width","ButtonContainer","marginTop","args","elementType","defaultToolbar","title","group","preview","type","toolbar","create","settings","onCreate","oembed","renderEmbed","props","renderElementPreview","render","Bind","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { validation } from \"@webiny/validation\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { createEmbedSettingsPlugin, createEmbedPlugin } from \"../../utils/oembed\";\nimport YoutubeEmbed from \"./YoutubeEmbed\";\nimport placeholder from \"./placeholder.png\";\nimport { ReactComponent as LogoIcon } from \"./youtube-brands.svg\";\nimport Accordion from \"../../../elementSettings/components/Accordion\";\nimport InputField from \"../../../elementSettings/components/InputField\";\nimport { SimpleButton } from \"../../../elementSettings/components/StyledComponents\";\nimport { PbEditorElementPluginArgs } from \"../../../../../types\";\nimport kebabCase from \"lodash/kebabCase\";\n\nconst PreviewBox = styled(\"div\")({\n    textAlign: \"center\",\n    height: 50,\n    svg: {\n        height: 50,\n        width: 50\n    }\n});\n\nconst ButtonContainer = styled(\"div\")({\n    marginTop: 16\n});\n\nexport default (args: PbEditorElementPluginArgs = {}) => {\n    const elementType = kebabCase(args.elementType || \"youtube\");\n    const defaultToolbar = {\n        title: \"Youtube\",\n        group: \"pb-editor-element-group-media\",\n        preview() {\n            return (\n                <PreviewBox>\n                    <LogoIcon />\n                </PreviewBox>\n            );\n        }\n    };\n\n    return [\n        createEmbedPlugin({\n            type: elementType,\n            toolbar:\n                typeof args.toolbar === \"function\" ? args.toolbar(defaultToolbar) : defaultToolbar,\n            create: args.create,\n            settings: args.settings,\n            onCreate: \"open-settings\",\n            oembed: {\n                renderEmbed(props) {\n                    return <YoutubeEmbed {...props} />;\n                }\n            },\n            renderElementPreview({ width, height }) {\n                return <img style={{ width, height }} src={placeholder} alt={\"Youtube\"} />;\n            }\n        }),\n        createEmbedSettingsPlugin({\n            type: elementType,\n            render({ Bind, submit }) {\n                return (\n                    <Accordion title={\"YouTube\"} defaultValue={true}>\n                        <>\n                            <Bind\n                                name={\"source.url\"}\n                                validators={validation.create(\"required,url\")}\n                            >\n                                <InputField\n                                    placeholder={\"https://youtube.com/watch?v=4qcDLzu8kVM\"}\n                                    description={\"Enter a video URL\"}\n                                />\n                            </Bind>\n                            <ButtonContainer>\n                                <SimpleButton onClick={submit}>\n                                    <Typography use={\"caption\"}>Save</Typography>\n                                </SimpleButton>\n                            </ButtonContainer>\n                        </>\n                    </Accordion>\n                );\n            }\n        })\n    ];\n};\n"],"file":"index.js"}