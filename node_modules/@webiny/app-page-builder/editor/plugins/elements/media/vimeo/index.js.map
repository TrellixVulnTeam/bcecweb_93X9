{"version":3,"sources":["../../../../../../src/editor/plugins/elements/media/vimeo/index.tsx"],"names":["React","styled","kebabCase","Typography","validation","createEmbedPlugin","createEmbedSettingsPlugin","VimeoEmbed","Accordion","InputField","ButtonContainer","SimpleButton","PreviewBox","textAlign","height","svg","width","args","elementType","defaultToolbar","title","group","preview","type","toolbar","create","settings","oembed","renderEmbed","props","renderElementPreview","render","Bind","submit"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,iBAAT,EAA4BC,yBAA5B;AACA,OAAOC,UAAP;;AAEA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,SACIC,eADJ,EAEIC,YAFJ;AAMA,IAAMC,UAAU,gBAAGX,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAC7BY,EAAAA,SAAS,EAAE,QADkB;AAE7BC,EAAAA,MAAM,EAAE,EAFqB;AAG7BC,EAAAA,GAAG,EAAE;AACDD,IAAAA,MAAM,EAAE,EADP;AAEDE,IAAAA,KAAK,EAAE;AAFN;AAHwB,CAAjB,CAAhB;AASA,gBAAe,YAA0C;AAAA,MAAzCC,IAAyC,uEAAP,EAAO;AACrD,MAAMC,WAAW,GAAGhB,SAAS,CAACe,IAAI,CAACC,WAAL,IAAoB,OAArB,CAA7B;AACA,MAAMC,cAAc,GAAG;AACnBC,IAAAA,KAAK,EAAE,OADY;AAEnBC,IAAAA,KAAK,EAAE,+BAFY;AAGnBC,IAAAA,OAHmB,qBAGT;AACN,0BACI,oBAAC,UAAD,qBACI,oBAAC,QAAD,OADJ,CADJ;AAKH;AATkB,GAAvB;AAYA,SAAO,CACHjB,iBAAiB,CAAC;AACdkB,IAAAA,IAAI,EAAEL,WADQ;AAEdM,IAAAA,OAAO,EACH,OAAOP,IAAI,CAACO,OAAZ,KAAwB,UAAxB,GAAqCP,IAAI,CAACO,OAAL,CAAaL,cAAb,CAArC,GAAoEA,cAH1D;AAIdM,IAAAA,MAAM,EAAER,IAAI,CAACQ,MAJC;AAKdC,IAAAA,QAAQ,EAAET,IAAI,CAACS,QALD;AAMdC,IAAAA,MAAM,EAAE;AACJC,MAAAA,WADI,uBACQC,KADR,EACe;AACf,4BAAO,oBAAC,UAAD,EAAgBA,KAAhB,CAAP;AACH;AAHG,KANM;AAWdC,IAAAA,oBAXc,kCAWS;AACnB,0BAAO,+CAAP;AACH;AAba,GAAD,CADd,EAgBHxB,yBAAyB,CAAC;AACtBiB,IAAAA,IAAI,EAAEL,WADgB;AAEtBa,IAAAA,MAFsB,wBAEG;AAAA,UAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AACrB,0BACI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,OAAlB;AAA2B,QAAA,YAAY,EAAE;AAAzC,sBACI,uDACI,oBAAC,IAAD;AACI,QAAA,IAAI,EAAE,YADV;AAEI,QAAA,UAAU,EAAE7B,UAAU,CAACqB,MAAX,CAAkB,cAAlB;AAFhB,sBAII,oBAAC,UAAD;AACI,QAAA,WAAW,EAAE,6BADjB;AAEI,QAAA,WAAW,EAAE;AAFjB,QAJJ,CADJ,eAUI,oBAAC,eAAD,qBACI,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAEQ;AAAvB,sBACI,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAE;AAAjB,gBADJ,CADJ,CAVJ,CADJ,CADJ;AAoBH;AAvBqB,GAAD,CAhBtB,CAAP;AA0CH,CAxDD","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport kebabCase from \"lodash/kebabCase\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { validation } from \"@webiny/validation\";\nimport { createEmbedPlugin, createEmbedSettingsPlugin } from \"../../utils/oembed\";\nimport VimeoEmbed from \"./VimeoEmbed\";\nimport { ReactComponent as LogoIcon } from \"./vimeo-v-brands.svg\";\nimport Accordion from \"../../../elementSettings/components/Accordion\";\nimport InputField from \"../../../elementSettings/components/InputField\";\nimport {\n    ButtonContainer,\n    SimpleButton\n} from \"../../../elementSettings/components/StyledComponents\";\nimport { PbEditorElementPluginArgs } from \"../../../../../types\";\n\nconst PreviewBox = styled(\"div\")({\n    textAlign: \"center\",\n    height: 50,\n    svg: {\n        height: 50,\n        width: 50\n    }\n});\n\nexport default (args: PbEditorElementPluginArgs = {}) => {\n    const elementType = kebabCase(args.elementType || \"vimeo\");\n    const defaultToolbar = {\n        title: \"Vimeo\",\n        group: \"pb-editor-element-group-media\",\n        preview() {\n            return (\n                <PreviewBox>\n                    <LogoIcon />\n                </PreviewBox>\n            );\n        }\n    };\n\n    return [\n        createEmbedPlugin({\n            type: elementType,\n            toolbar:\n                typeof args.toolbar === \"function\" ? args.toolbar(defaultToolbar) : defaultToolbar,\n            create: args.create,\n            settings: args.settings,\n            oembed: {\n                renderEmbed(props) {\n                    return <VimeoEmbed {...props} />;\n                }\n            },\n            renderElementPreview() {\n                return <div>Vimeo video</div>;\n            }\n        }),\n        createEmbedSettingsPlugin({\n            type: elementType,\n            render({ Bind, submit }) {\n                return (\n                    <Accordion title={\"Vimeo\"} defaultValue={true}>\n                        <>\n                            <Bind\n                                name={\"source.url\"}\n                                validators={validation.create(\"required,url\")}\n                            >\n                                <InputField\n                                    placeholder={\"https://vimeo.com/158050352\"}\n                                    description={\"Enter a video URL\"}\n                                />\n                            </Bind>\n                            <ButtonContainer>\n                                <SimpleButton onClick={submit}>\n                                    <Typography use={\"caption\"}>Save</Typography>\n                                </SimpleButton>\n                            </ButtonContainer>\n                        </>\n                    </Accordion>\n                );\n            }\n        })\n    ];\n};\n"],"file":"index.js"}