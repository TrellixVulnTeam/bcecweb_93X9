{"version":3,"sources":["../../../../../src/editor/plugins/elements/button/SimpleEditableText.tsx"],"names":["React","useCallback","useRef","SimpleEditableText","value","defaultValue","onFocus","onBlur","onChange","options","element","className","inputRef","onChangeHandler","ev","target","elementValue","innerHTML","replace","preventDefault","stopPropagation","current","onBlurHandler","onFocusHandler","createElement","contentEditable","onInput","dangerouslySetInnerHTML","__html","ref","memo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,QAA2C,OAA3C;;AAYA,IAAMC,kBAAgE,GAAG,SAAnEA,kBAAmE,OAQnE;AAAA,wBAPFC,KAOE;AAAA,MAPKC,YAOL,2BAPoB,EAOpB;AAAA,MANFC,OAME,QANFA,OAME;AAAA,MALFC,MAKE,QALFA,MAKE;AAAA,MAJFC,QAIE,QAJFA,QAIE;AAAA,0BAHFC,OAGE;AAAA,MAHFA,OAGE,6BAHQ,EAGR;AAAA,MAFFC,OAEE,QAFFA,OAEE;AAAA,MADFC,SACE,QADFA,SACE;AACF,MAAMP,KAAK,GAAGF,MAAM,CAASG,YAAT,CAApB;AACA,MAAMO,QAAQ,GAAGV,MAAM,CAAC,IAAD,CAAvB;AAEA,MAAMW,eAAe,GAAGZ,WAAW,CAC/B,UAACa,EAAD,EAAoB;AAChB,QAAMC,MAAM,GAAGD,EAAE,CAACC,MAAlB,CADgB,CAEhB;;AACA,QAAMC,YAAY,GAAGD,MAAM,CAACE,SAAP,CAAiBC,OAAjB,CAAyB,UAAzB,EAAqC,EAArC,KAA4C,EAAjE;AACAJ,IAAAA,EAAE,CAACK,cAAH;AACAL,IAAAA,EAAE,CAACM,eAAH;;AACA,QAAIJ,YAAY,KAAKZ,KAAK,CAACiB,OAA3B,EAAoC;AAChC,aAAO,KAAP;AACH;;AACDjB,IAAAA,KAAK,CAACiB,OAAN,GAAgBL,YAAhB;AACAR,IAAAA,QAAQ,CAACQ,YAAD,CAAR;AACH,GAZ8B,EAa/B,CAACR,QAAD,CAb+B,CAAnC;AAgBA,MAAMc,aAAa,GAAGrB,WAAW,CAAC,YAAM;AACpC,QAAI,CAACM,MAAL,EAAa;AACT;AACH;;AACDA,IAAAA,MAAM;AACT,GALgC,EAK9B,CAACA,MAAD,CAL8B,CAAjC;AAOA,MAAMgB,cAAc,GAAGtB,WAAW,CAAC,YAAM;AACrC,QAAI,CAACK,OAAL,EAAc;AACV;AACH;;AACDA,IAAAA,OAAO;AACV,GALiC,EAK/B,CAACA,OAAD,CAL+B,CAAlC;AAOA,sBAAON,KAAK,CAACwB,aAAN,CAAoBd,OAAO,IAAI,KAA/B;AACHC,IAAAA,SAAS,EAAEA,SADR;AAEHc,IAAAA,eAAe,EAAE,IAFd;AAGHC,IAAAA,OAAO,EAAEb,eAHN;AAIHN,IAAAA,MAAM,EAAEe,aAJL;AAKHhB,IAAAA,OAAO,EAAEiB,cALN;AAMHI,IAAAA,uBAAuB,EAAE;AACrBC,MAAAA,MAAM,EAAExB,KAAK,CAACiB;AADO,KANtB;AASHQ,IAAAA,GAAG,EAAEjB;AATF,KAUAH,OAVA,EAAP;AAYH,CAtDD;;AAwDA,4BAAeT,KAAK,CAAC8B,IAAN,CAAW3B,kBAAX,CAAf","sourcesContent":["import React, { useCallback, useRef } from \"react\";\n\ntype SimpleTextPropsType = {\n    value?: string;\n    onFocus?: () => void;\n    onBlur?: () => void;\n    onChange: (value: string) => void;\n    options?: Record<keyof HTMLElement, any>;\n    element?: string;\n    className?: string;\n    focusInput?: boolean;\n};\nconst SimpleEditableText: React.FunctionComponent<SimpleTextPropsType> = ({\n    value: defaultValue = \"\",\n    onFocus,\n    onBlur,\n    onChange,\n    options = {},\n    element,\n    className\n}) => {\n    const value = useRef<string>(defaultValue);\n    const inputRef = useRef(null);\n\n    const onChangeHandler = useCallback(\n        (ev: InputEvent) => {\n            const target = ev.target as HTMLElement;\n            // Remove space from HTML\n            const elementValue = target.innerHTML.replace(/&nbsp;/gi, \"\") || \"\";\n            ev.preventDefault();\n            ev.stopPropagation();\n            if (elementValue === value.current) {\n                return false;\n            }\n            value.current = elementValue;\n            onChange(elementValue);\n        },\n        [onChange]\n    );\n\n    const onBlurHandler = useCallback(() => {\n        if (!onBlur) {\n            return;\n        }\n        onBlur();\n    }, [onBlur]);\n\n    const onFocusHandler = useCallback(() => {\n        if (!onFocus) {\n            return;\n        }\n        onFocus();\n    }, [onFocus]);\n\n    return React.createElement(element || \"div\", {\n        className: className,\n        contentEditable: true,\n        onInput: onChangeHandler,\n        onBlur: onBlurHandler,\n        onFocus: onFocusHandler,\n        dangerouslySetInnerHTML: {\n            __html: value.current\n        },\n        ref: inputRef,\n        ...options\n    });\n};\n\nexport default React.memo(SimpleEditableText);\n"],"file":"SimpleEditableText.js"}