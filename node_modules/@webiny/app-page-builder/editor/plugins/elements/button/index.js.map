{"version":3,"sources":["../../../../../src/editor/plugins/elements/button/index.tsx"],"names":["React","css","kebabCase","DisplayMode","createInitialPerDeviceSettingValue","ButtonSettings","Button","buttonWrapper","display","justifyContent","buttonElementPluginsFactory","args","defaultSettings","defaultToolbar","title","group","preview","elementType","name","type","toolbar","settings","target","create","options","defaultValue","elements","data","buttonText","margin","all","DESKTOP","horizontalAlignFlex","render","element"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SACIC,WADJ;AAMA,SAASC,kCAAT;AACA,OAAOC,cAAP;AACA,OAAOC,MAAP;AAEA,IAAMC,aAAa,gBAAGN,GAAG,CAAC;AACtBO,EAAAA,OAAO,EAAE,MADa;AAEtBC,EAAAA,cAAc,EAAE;AAFM,CAAD,yBAAzB;;AAKA,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,GAA0C;AAAA,MAAzCC,IAAyC,uEAAP,EAAO;AAC1E,MAAMC,eAAe,GAAG,CACpB,8CADoB,EAEpB,4CAFoB,EAGpB,6DAHoB,EAIpB,8CAJoB,EAKpB,uCALoB,EAMpB,wCANoB,CAAxB;AASA,MAAMC,cAAc,GAAG;AACnBC,IAAAA,KAAK,EAAE,QADY;AAEnBC,IAAAA,KAAK,EAAE,+BAFY;AAGnBC,IAAAA,OAHmB,qBAGT;AACN,0BACI;AAAK,QAAA,SAAS,EAAET;AAAhB,sBACI;AAAQ,QAAA,SAAS,EAAE;AAAnB,oBADJ,CADJ;AAKH;AATkB,GAAvB;AAYA,MAAMU,WAAW,GAAGf,SAAS,CAACS,IAAI,CAACM,WAAL,IAAoB,QAArB,CAA7B;AAEA,SAAO,CACH;AACIC,IAAAA,IAAI,mCAA4BD,WAA5B,CADR;AAEIE,IAAAA,IAAI,EAAE,wBAFV;AAGIF,IAAAA,WAAW,EAAEA,WAHjB;AAIIG,IAAAA,OAAO,EACH,OAAOT,IAAI,CAACS,OAAZ,KAAwB,UAAxB,GAAqCT,IAAI,CAACS,OAAL,CAAaP,cAAb,CAArC,GAAoEA,cAL5E;AAMIQ,IAAAA,QAAQ,EACJ,OAAOV,IAAI,CAACU,QAAZ,KAAyB,UAAzB,GACMV,IAAI,CAACU,QAAL,CAAcT,eAAd,CADN,GAEMA,eATd;AAUIU,IAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,OAAT,CAVZ;AAWIC,IAAAA,MAXJ,kBAWWC,OAXX,EAWoB;AACZ,UAAMC,YAAY;AACdN,QAAAA,IAAI,EAAE,KAAKF,WADG;AAEdS,QAAAA,QAAQ,EAAE,EAFI;AAGdC,QAAAA,IAAI,EAAE;AACFC,UAAAA,UAAU,EAAE,UADV;AAEFP,UAAAA,QAAQ,EAAE;AACNQ,YAAAA,MAAM,EAAEzB,kCAAkC,CACtC;AAAE0B,cAAAA,GAAG,EAAE;AAAP,aADsC,EAEtC3B,WAAW,CAAC4B,OAF0B,CADpC;AAKNC,YAAAA,mBAAmB,EAAE5B,kCAAkC,CACnD,QADmD,EAEnDD,WAAW,CAAC4B,OAFuC;AALjD;AAFR;AAHQ,SAgBXP,OAhBW,CAAlB;;AAmBA,aAAO,OAAOb,IAAI,CAACY,MAAZ,KAAuB,UAAvB,GAAoCZ,IAAI,CAACY,MAAL,CAAYE,YAAZ,CAApC,GAAgEA,YAAvE;AACH,KAhCL;AAiCIQ,IAAAA,MAjCJ,wBAiCwB;AAAA,UAAXC,OAAW,QAAXA,OAAW;AAChB,0BAAO,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEA;AAAjB,QAAP;AACH;AAnCL,GADG,EAsCH;AACIhB,IAAAA,IAAI,EAAE,8CADV;AAEIC,IAAAA,IAAI,EAAE,uCAFV;AAGIc,IAAAA,MAHJ,oBAGa;AACL,0BAAO,oBAAC,cAAD,OAAP;AACH;AALL,GAtCG,CAAP;AA8CH,CAtED;;AAwEA,eAAevB,2BAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport kebabCase from \"lodash/kebabCase\";\nimport {\n    DisplayMode,\n    PbEditorPageElementPlugin,\n    PbEditorPageElementStyleSettingsPlugin,\n    PbEditorElementPluginArgs\n} from \"../../../../types\";\nimport { createInitialPerDeviceSettingValue } from \"../../elementSettings/elementSettingsUtils\";\nimport ButtonSettings from \"./ButtonSettings\";\nimport Button from \"./Button\";\n\nconst buttonWrapper = css({\n    display: \"flex\",\n    justifyContent: \"center\"\n});\n\nconst buttonElementPluginsFactory = (args: PbEditorElementPluginArgs = {}) => {\n    const defaultSettings = [\n        \"pb-editor-page-element-style-settings-button\",\n        \"pb-editor-page-element-style-settings-link\",\n        \"pb-editor-page-element-style-settings-horizontal-align-flex\",\n        \"pb-editor-page-element-style-settings-margin\",\n        \"pb-editor-page-element-settings-clone\",\n        \"pb-editor-page-element-settings-delete\"\n    ];\n\n    const defaultToolbar = {\n        title: \"Button\",\n        group: \"pb-editor-element-group-basic\",\n        preview() {\n            return (\n                <div className={buttonWrapper}>\n                    <button className={\"webiny-pb-page-element-button\"}>Click me</button>\n                </div>\n            );\n        }\n    };\n\n    const elementType = kebabCase(args.elementType || \"button\");\n\n    return [\n        {\n            name: `pb-editor-page-element-${elementType}`,\n            type: \"pb-editor-page-element\",\n            elementType: elementType,\n            toolbar:\n                typeof args.toolbar === \"function\" ? args.toolbar(defaultToolbar) : defaultToolbar,\n            settings:\n                typeof args.settings === \"function\"\n                    ? args.settings(defaultSettings)\n                    : defaultSettings,\n            target: [\"cell\", \"block\"],\n            create(options) {\n                const defaultValue = {\n                    type: this.elementType,\n                    elements: [],\n                    data: {\n                        buttonText: \"Click me\",\n                        settings: {\n                            margin: createInitialPerDeviceSettingValue(\n                                { all: \"0px\" },\n                                DisplayMode.DESKTOP\n                            ),\n                            horizontalAlignFlex: createInitialPerDeviceSettingValue(\n                                \"center\",\n                                DisplayMode.DESKTOP\n                            )\n                        }\n                    },\n                    ...options\n                };\n\n                return typeof args.create === \"function\" ? args.create(defaultValue) : defaultValue;\n            },\n            render({ element }) {\n                return <Button element={element} />;\n            }\n        } as PbEditorPageElementPlugin,\n        {\n            name: \"pb-editor-page-element-style-settings-button\",\n            type: \"pb-editor-page-element-style-settings\",\n            render() {\n                return <ButtonSettings />;\n            }\n        } as PbEditorPageElementStyleSettingsPlugin\n    ];\n};\n\nexport default buttonElementPluginsFactory;\n"],"file":"index.js"}