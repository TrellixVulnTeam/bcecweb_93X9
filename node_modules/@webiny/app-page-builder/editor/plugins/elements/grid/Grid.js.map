{"version":3,"sources":["../../../../../src/editor/plugins/elements/grid/Grid.tsx"],"names":["React","kebabCase","styled","css","Element","StyledGrid","display","justifyItems","alignItems","flexDirection","CELL_CLASSNAME","Grid","elementStyle","elementAttributes","customClasses","combineClassNames","element","displayMode","containerStyle","elements","map","child","id","data","settings","grid","size","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,GAAT,QAAoB,SAApB;AAEA,OAAOC,OAAP;AAEA,IAAMC,UAAU,gBAAGH,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAC7BI,EAAAA,OAAO,EAAE,MADoB;AAE7BC,EAAAA,YAAY,EAAE,QAFe;AAG7BC,EAAAA,UAAU,EAAE,QAHiB;AAI7BC,EAAAA,aAAa,EAAE;AAJc,CAAjB,CAAhB;AAMA,IAAMC,cAAc,GAAG,4BAAvB;;AAUA,IAAMC,IAA4C,GAAG,SAA/CA,IAA+C,OAO/C;AAAA,MANFC,YAME,QANFA,YAME;AAAA,MALFC,iBAKE,QALFA,iBAKE;AAAA,MAJFC,aAIE,QAJFA,aAIE;AAAA,MAHFC,iBAGE,QAHFA,iBAGE;AAAA,MAFFC,OAEE,QAFFA,OAEE;AAAA,MADFC,WACE,QADFA,WACE;AACF,MAAMC,cAAc,GAAGN,YAAY,IAAI,EAAvC,CADE,CAEF;;AACA,MAAMJ,UAAU,GAAGI,YAAY,aAAMX,SAAS,CAACgB,WAAD,CAAf,kBAA/B;AACA,sBACI,oBAAC,UAAD;AACI,IAAA,SAAS,EAAEF,iBAAiB,MAAjB,4BACJD,aADI,UAEP,kDAAqCX,GAAG,CAACe,cAAD,gBAFjC;AADf,KAKQL,iBALR;AAMI,IAAA,KAAK,EAAE;AACHL,MAAAA,UAAU,EAAVA;AADG;AANX,MAUKQ,OAAO,CAACG,QAAR,CAAiBC,GAAjB,CAAqB,UAACC,KAAD,EAA4B;AAAA;;AAC9C,wBACI;AACI,MAAA,GAAG,iBAAUA,KAAK,CAACC,EAAhB,CADP;AAEI,MAAA,SAAS,YAAKZ,cAAL,cAAuBA,cAAvB,sCAAyCW,KAAK,CAACE,IAAN,CAAWC,QAApD,kFAAyC,qBAAqBC,IAA9D,0DAAyC,sBAA2BC,IAApE;AAFb,oBAII,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAEL,KAAK,CAACC;AAAnB,MAJJ,CADJ;AAQH,GATA,CAVL,CADJ;AAuBH,CAlCD;;AAmCA,4BAAetB,KAAK,CAAC2B,IAAN,CAAWhB,IAAX,CAAf","sourcesContent":["import React, { CSSProperties } from \"react\";\nimport kebabCase from \"lodash/kebabCase\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\nimport { PbEditorElement, DisplayMode } from \"../../../../types\";\nimport Element from \"../../../components/Element\";\n\nconst StyledGrid = styled(\"div\")({\n    display: \"flex\",\n    justifyItems: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\"\n});\nconst CELL_CLASSNAME = \"webiny-pb-layout-grid-cell\";\n\ntype GridPropsType = {\n    combineClassNames: (...classes: string[]) => string;\n    elementStyle: CSSProperties;\n    elementAttributes: { [key: string]: string };\n    customClasses: string[];\n    element: PbEditorElement;\n    displayMode: DisplayMode;\n};\nconst Grid: React.FunctionComponent<GridPropsType> = ({\n    elementStyle,\n    elementAttributes,\n    customClasses,\n    combineClassNames,\n    element,\n    displayMode\n}) => {\n    const containerStyle = elementStyle || {};\n    // Use per-device style\n    const alignItems = elementStyle[`--${kebabCase(displayMode)}-align-items`];\n    return (\n        <StyledGrid\n            className={combineClassNames(\n                ...customClasses,\n                \"webiny-pb-layout-grid-container \" + css(containerStyle as any)\n            )}\n            {...elementAttributes}\n            style={{\n                alignItems\n            }}\n        >\n            {element.elements.map((child: PbEditorElement) => {\n                return (\n                    <div\n                        key={`cell-${child.id}`}\n                        className={`${CELL_CLASSNAME} ${CELL_CLASSNAME}-${child.data.settings?.grid?.size}`}\n                    >\n                        <Element id={child.id} />\n                    </div>\n                );\n            })}\n        </StyledGrid>\n    );\n};\nexport default React.memo(Grid);\n"],"file":"Grid.js"}