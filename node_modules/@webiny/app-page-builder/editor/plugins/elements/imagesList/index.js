import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import React from "react";
import styled from "@emotion/styled";
import kebabCase from "lodash/kebabCase";
import { DisplayMode } from "../../../../types";
import { createInitialPerDeviceSettingValue } from "../../elementSettings/elementSettingsUtils";
import ImagesList from "./ImagesList";
import ImagesListImagesSettings from "./ImagesListImagesSettings";
import ImagesListDesignSettings from "./ImagesListDesignSettings";
import { ReactComponent as ImageGalleryIcon } from "@svgr/webpack!./icons/round-photo_library-24px.svg";
export default (function () {
  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var PreviewBox = /*#__PURE__*/styled("div", {
    target: "e18t4fdc0",
    label: "PreviewBox"
  })({
    textAlign: "center",
    margin: "0 auto",
    width: 50,
    svg: {
      width: 50
    }
  });
  var elementType = kebabCase(args.elementType || "images-list");
  var defaultToolbar = {
    title: "Image Gallery",
    group: "pb-editor-element-group-basic",
    preview: function preview() {
      return /*#__PURE__*/React.createElement(PreviewBox, null, /*#__PURE__*/React.createElement(ImageGalleryIcon, null));
    }
  };
  var defaultSettings = ["pb-editor-page-element-settings-delete"];
  return [{
    name: "pb-editor-page-element-".concat(elementType),
    type: "pb-editor-page-element",
    elementType: elementType,
    toolbar: typeof args.toolbar === "function" ? args.toolbar(defaultToolbar) : defaultToolbar,
    settings: typeof args.settings === "function" ? args.settings(defaultSettings) : defaultSettings,
    target: ["cell", "block"],
    onCreate: "open-settings",
    create: function create() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var defaultValue = _objectSpread({
        type: this.elementType,
        data: {
          component: "mosaic",
          settings: {
            margin: createInitialPerDeviceSettingValue({
              all: "0px"
            }, DisplayMode.DESKTOP),
            padding: createInitialPerDeviceSettingValue({
              all: "0px"
            }, DisplayMode.DESKTOP)
          }
        }
      }, options);

      return typeof args.create === "function" ? args.create(defaultValue) : defaultValue;
    },
    render: function render(_ref) {
      var element = _ref.element;
      return /*#__PURE__*/React.createElement(ImagesList, {
        data: element.data
      });
    }
  }, {
    name: "pb-editor-page-element-advanced-settings-images-list-filter",
    type: "pb-editor-page-element-advanced-settings",
    elementType: elementType,
    render: function render(props) {
      return /*#__PURE__*/React.createElement(ImagesListImagesSettings, Object.assign({}, props, {
        filter: true
      }));
    }
  }, {
    name: "pb-editor-page-element-advanced-settings-images-list-design",
    type: "pb-editor-page-element-advanced-settings",
    elementType: elementType,
    render: function render(props) {
      return /*#__PURE__*/React.createElement(ImagesListDesignSettings, props);
    }
  }];
});
//# sourceMappingURL=index.js.map