{"version":3,"sources":["../../../../../src/editor/plugins/elements/imagesList/ImagesListImagesSettings.tsx"],"names":["React","css","sortable","FileManager","Grid","Cell","File","Accordion","classes","SimpleButton","ButtonContainer","style","addImagesButton","clear","padding","textAlign","liItem","display","Item","props","children","Component","SortableItem","ImagesListImagesSettings","Bind","submit","simpleGrid","onChange","images","value","Array","isArray","files","showFileManager","map","item","i","updatedValue","slice"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { css } from \"emotion\";\nimport { sortable } from \"react-sortable\";\nimport { FileManager } from \"@webiny/app-admin/components\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport File from \"./File\";\nimport Accordion from \"../../elementSettings/components/Accordion\";\nimport {\n    classes,\n    SimpleButton,\n    ButtonContainer\n} from \"../../elementSettings/components/StyledComponents\";\n\nconst style = {\n    addImagesButton: css({ clear: \"both\", padding: \"20px 10px\", textAlign: \"center\" }),\n    liItem: {\n        display: \"inline-block\"\n    }\n};\n\nclass Item extends React.Component {\n    render() {\n        return (\n            <li style={style.liItem} {...this.props}>\n                {this.props.children}\n            </li>\n        );\n    }\n}\n\nconst SortableItem = sortable(Item);\n\nconst ImagesListImagesSettings = props => {\n    const { Bind, submit } = props;\n    return (\n        <Accordion title={\"Images\"} defaultValue={true}>\n            <Grid className={classes.simpleGrid}>\n                <Cell span={12}>\n                    <Bind name={\"images\"} afterChange={submit}>\n                        {({ onChange, value: images }) => {\n                            /**\n                             * We're creating a fresh copy of value here because all of sudden\n                             * dragging a \"SortableItem\" started throwing TypeError: \"Cannot assign to read only property\"\n                             * which means the state is being mutated by \"Sortable\" somehow.\n                             */\n                            const value = Array.isArray(images) ? [...images] : [];\n                            return (\n                                <FileManager\n                                    images\n                                    multiple\n                                    onChange={files => {\n                                        Array.isArray(value)\n                                            ? onChange([...value, ...files])\n                                            : onChange([...files]);\n                                    }}\n                                >\n                                    {({ showFileManager }) => (\n                                        <>\n                                            <ul className=\"sortable-list\">\n                                                {Array.isArray(value) &&\n                                                    value.map((item, i) => (\n                                                        <SortableItem\n                                                            key={i}\n                                                            onSortItems={onChange}\n                                                            items={value}\n                                                            sortId={i}\n                                                        >\n                                                            <File\n                                                                file={item}\n                                                                onRemove={() => {\n                                                                    // Remove the image at index i\n                                                                    const updatedValue = [\n                                                                        ...value.slice(0, i),\n                                                                        ...value.slice(i + 1)\n                                                                    ];\n                                                                    onChange(updatedValue);\n                                                                }}\n                                                            />\n                                                        </SortableItem>\n                                                    ))}\n                                            </ul>\n                                            <ButtonContainer>\n                                                <SimpleButton onClick={showFileManager}>\n                                                    Add images...\n                                                </SimpleButton>\n                                            </ButtonContainer>\n                                        </>\n                                    )}\n                                </FileManager>\n                            );\n                        }}\n                    </Bind>\n                </Cell>\n            </Grid>\n        </Accordion>\n    );\n};\n\nexport default ImagesListImagesSettings;\n"],"file":"ImagesListImagesSettings.js"}