{"version":3,"sources":["../../../../../src/editor/plugins/elements/list/index.tsx"],"names":["React","kebabCase","DisplayMode","List","className","createInitialTextValue","createInitialPerDeviceSettingValue","args","elementType","defaultToolbar","title","group","preview","defaultSettings","name","type","toolbar","settings","target","create","content","options","previewText","text","defaultValue","elements","data","DESKTOP","margin","all","padding","render","element","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SACIC,WADJ;AAKA,OAAOC,IAAP,IAAeC,SAAf;AACA,SAASC,sBAAT;AACA,SAASC,kCAAT;AAEA,gBAAe,YAAqE;AAAA,MAApEC,IAAoE,uEAAlC,EAAkC;AAChF,MAAMC,WAAW,GAAGP,SAAS,CAACM,IAAI,CAACC,WAAL,IAAoB,MAArB,CAA7B;AAEA,MAAMC,cAAc,GAAG;AACnBC,IAAAA,KAAK,EAAE,MADY;AAEnBC,IAAAA,KAAK,EAAE,+BAFY;AAGnBC,IAAAA,OAHmB,qBAGT;AACN,0BACI;AAAK,QAAA,SAAS,EAAER;AAAhB,sBACI,6CACI,8CADJ,eAEI,8CAFJ,eAGI,8CAHJ,CADJ,CADJ;AASH;AAbkB,GAAvB;AAgBA,MAAMS,eAAe,GAAG,CACpB,4CADoB,EAEpB,kDAFoB,EAGpB,8CAHoB,EAIpB,8CAJoB,EAKpB,+CALoB,EAMpB,8CANoB,EAOpB,uCAPoB,EAQpB,wCARoB,CAAxB;AAWA,SAAO;AACHC,IAAAA,IAAI,mCAA4BN,WAA5B,CADD;AAEHO,IAAAA,IAAI,EAAE,wBAFH;AAGHP,IAAAA,WAAW,EAAEA,WAHV;AAIHQ,IAAAA,OAAO,EAAE,OAAOT,IAAI,CAACS,OAAZ,KAAwB,UAAxB,GAAqCT,IAAI,CAACS,OAAL,CAAaP,cAAb,CAArC,GAAoEA,cAJ1E;AAKHQ,IAAAA,QAAQ,EACJ,OAAOV,IAAI,CAACU,QAAZ,KAAyB,UAAzB,GAAsCV,IAAI,CAACU,QAAL,CAAcJ,eAAd,CAAtC,GAAuEA,eANxE;AAOHK,IAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,OAAT,CAPL;AAQHC,IAAAA,MARG,wBAQkC;AAAA,8BAA5BC,OAA4B;AAAA,UAA5BA,OAA4B,6BAAlB,EAAkB;AAAA,UAAXC,OAAW;;AACjC,UAAMC,WAAW,GACbF,OAAO,CAACG,IAAR,+JADJ;;AAQA,UAAMC,YAAY;AACdT,QAAAA,IAAI,EAAE,KAAKP,WADG;AAEdiB,QAAAA,QAAQ,EAAE,EAFI;AAGdC,QAAAA,IAAI,EAAE;AACFH,UAAAA,IAAI,kCACGjB,kCAAkC,CACjCD,sBAAsB,CAAC;AACnBU,YAAAA,IAAI,EAAE,KAAKP;AADQ,WAAD,CADW,EAIjCN,WAAW,CAACyB,OAJqB,CADrC;AAOAD,YAAAA,IAAI,EAAE;AACFH,cAAAA,IAAI,EAAED;AADJ;AAPN,YADF;AAYFL,UAAAA,QAAQ,EAAE;AACNW,YAAAA,MAAM,EAAEtB,kCAAkC,CACtC;AAAEuB,cAAAA,GAAG,EAAE;AAAP,aADsC,EAEtC3B,WAAW,CAACyB,OAF0B,CADpC;AAKNG,YAAAA,OAAO,EAAExB,kCAAkC,CACvC;AAAEuB,cAAAA,GAAG,EAAE;AAAP,aADuC,EAEvC3B,WAAW,CAACyB,OAF2B;AALrC;AAZR;AAHQ,SA0BXN,OA1BW,CAAlB;;AA6BA,aAAO,OAAOd,IAAI,CAACY,MAAZ,KAAuB,UAAvB,GAAoCZ,IAAI,CAACY,MAAL,CAAYK,YAAZ,CAApC,GAAgEA,YAAvE;AACH,KA/CE;AAgDHO,IAAAA,MAhDG,yBAgDiB;AAAA,UAAXC,OAAW,SAAXA,OAAW;AAChB,0BAAO,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEA,OAAO,CAACC;AAAzB,QAAP;AACH;AAlDE,GAAP;AAoDH,CAlFD","sourcesContent":["import React from \"react\";\nimport kebabCase from \"lodash/kebabCase\";\nimport {\n    DisplayMode,\n    PbEditorPageElementPlugin,\n    PbEditorElementPluginArgs\n} from \"../../../../types\";\nimport List, { className } from \"./List\";\nimport { createInitialTextValue } from \"../utils/textUtils\";\nimport { createInitialPerDeviceSettingValue } from \"../../elementSettings/elementSettingsUtils\";\n\nexport default (args: PbEditorElementPluginArgs = {}): PbEditorPageElementPlugin => {\n    const elementType = kebabCase(args.elementType || \"list\");\n\n    const defaultToolbar = {\n        title: \"List\",\n        group: \"pb-editor-element-group-basic\",\n        preview() {\n            return (\n                <div className={className}>\n                    <ul>\n                        <li>List item 1</li>\n                        <li>List item 2</li>\n                        <li>List item 3</li>\n                    </ul>\n                </div>\n            );\n        }\n    };\n\n    const defaultSettings = [\n        \"pb-editor-page-element-style-settings-text\",\n        \"pb-editor-page-element-style-settings-background\",\n        \"pb-editor-page-element-style-settings-border\",\n        \"pb-editor-page-element-style-settings-shadow\",\n        \"pb-editor-page-element-style-settings-padding\",\n        \"pb-editor-page-element-style-settings-margin\",\n        \"pb-editor-page-element-settings-clone\",\n        \"pb-editor-page-element-settings-delete\"\n    ];\n\n    return {\n        name: `pb-editor-page-element-${elementType}`,\n        type: \"pb-editor-page-element\",\n        elementType: elementType,\n        toolbar: typeof args.toolbar === \"function\" ? args.toolbar(defaultToolbar) : defaultToolbar,\n        settings:\n            typeof args.settings === \"function\" ? args.settings(defaultSettings) : defaultSettings,\n        target: [\"cell\", \"block\"],\n        create({ content = {}, ...options }) {\n            const previewText =\n                content.text ||\n                `<ul>\n                    <li>List item 1</li>\n                    <li>List item 2</li>\n                    <li>List item 3</li>\n                </ul>`;\n\n            const defaultValue = {\n                type: this.elementType,\n                elements: [],\n                data: {\n                    text: {\n                        ...createInitialPerDeviceSettingValue(\n                            createInitialTextValue({\n                                type: this.elementType\n                            }),\n                            DisplayMode.DESKTOP\n                        ),\n                        data: {\n                            text: previewText\n                        }\n                    },\n                    settings: {\n                        margin: createInitialPerDeviceSettingValue(\n                            { all: \"0px\" },\n                            DisplayMode.DESKTOP\n                        ),\n                        padding: createInitialPerDeviceSettingValue(\n                            { all: \"0px\" },\n                            DisplayMode.DESKTOP\n                        )\n                    }\n                },\n                ...options\n            };\n\n            return typeof args.create === \"function\" ? args.create(defaultValue) : defaultValue;\n        },\n        render({ element }) {\n            return <List elementId={element.id} />;\n        }\n    };\n};\n"],"file":"index.js"}