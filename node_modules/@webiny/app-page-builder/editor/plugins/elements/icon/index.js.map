{"version":3,"sources":["../../../../../src/editor/plugins/elements/icon/index.tsx"],"names":["React","styled","kebabCase","DisplayMode","createInitialPerDeviceSettingValue","IconSettings","Icon","getSvg","args","PreviewBox","textAlign","height","color","svg","width","elementType","defaultToolbar","title","group","preview","defaultSettings","alignments","name","type","toolbar","settings","target","create","options","defaultValue","elements","data","icon","id","horizontalAlign","margin","all","DESKTOP","padding","render","props"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport kebabCase from \"lodash/kebabCase\";\nimport {\n    PbEditorPageElementPlugin,\n    PbEditorPageElementStyleSettingsPlugin,\n    DisplayMode,\n    PbEditorElementPluginArgs\n} from \"../../../../types\";\nimport { createInitialPerDeviceSettingValue } from \"../../elementSettings/elementSettingsUtils\";\n// Icons\nimport { ReactComponent as IconSvg } from \"./round-star_border-24px.svg\";\n// Components\nimport IconSettings from \"./IconSettings\";\nimport Icon from \"./Icon\";\nimport { getSvg } from \"../utils/iconUtils\";\n\nexport default (args: PbEditorElementPluginArgs = {}) => {\n    const PreviewBox = styled(\"div\")({\n        textAlign: \"center\",\n        height: 50,\n        color: \"var(--mdc-theme-text-primary-on-background)\",\n        svg: {\n            height: 50,\n            width: 50\n        }\n    });\n\n    const elementType = kebabCase(args.elementType || \"icon\");\n\n    const defaultToolbar = {\n        title: \"Icon\",\n        group: \"pb-editor-element-group-basic\",\n        preview() {\n            return (\n                <PreviewBox>\n                    <IconSvg />\n                </PreviewBox>\n            );\n        }\n    };\n\n    const defaultSettings = [\n        \"pb-editor-page-element-style-settings-icon\",\n        \"pb-editor-page-element-style-settings-padding\",\n        \"pb-editor-page-element-style-settings-margin\",\n        [\n            \"pb-editor-page-element-style-settings-horizontal-align\",\n            { alignments: [\"left\", \"center\", \"right\"] }\n        ],\n        \"pb-editor-page-element-settings-clone\",\n        \"pb-editor-page-element-settings-delete\"\n    ];\n\n    return [\n        {\n            name: `pb-editor-page-element-${elementType}`,\n            type: \"pb-editor-page-element\",\n            elementType: elementType,\n            toolbar:\n                typeof args.toolbar === \"function\" ? args.toolbar(defaultToolbar) : defaultToolbar,\n            settings:\n                typeof args.settings === \"function\"\n                    ? args.settings(defaultSettings)\n                    : defaultSettings,\n            target: [\"cell\", \"block\"],\n            create(options) {\n                const defaultValue = {\n                    type: this.elementType,\n                    elements: [],\n                    data: {\n                        icon: {\n                            id: [\"far\", \"star\"],\n                            svg: getSvg([\"far\", \"star\"], { width: 50 }),\n                            width: 50\n                        },\n                        settings: {\n                            horizontalAlign: \"center\",\n                            margin: createInitialPerDeviceSettingValue(\n                                { all: \"0px\" },\n                                DisplayMode.DESKTOP\n                            ),\n                            padding: createInitialPerDeviceSettingValue(\n                                { all: \"0px\" },\n                                DisplayMode.DESKTOP\n                            )\n                        }\n                    },\n                    ...options\n                };\n                return typeof args.create === \"function\" ? args.create(defaultValue) : defaultValue;\n            },\n            render(props) {\n                return <Icon {...props} />;\n            }\n        } as PbEditorPageElementPlugin,\n        {\n            name: \"pb-editor-page-element-style-settings-icon\",\n            type: \"pb-editor-page-element-style-settings\",\n            render() {\n                return <IconSettings />;\n            }\n        } as PbEditorPageElementStyleSettingsPlugin\n    ];\n};\n"],"file":"index.js"}