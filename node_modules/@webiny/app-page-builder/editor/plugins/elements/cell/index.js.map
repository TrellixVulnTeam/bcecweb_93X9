{"version":3,"sources":["../../../../../src/editor/plugins/elements/cell/index.tsx"],"names":["React","kebabCase","CellContainer","executeAction","CreateElementActionEvent","DeleteElementActionEvent","updateElementAction","addElementToParent","createDroppedElement","createElement","DisplayMode","AfterDropElementActionEvent","createInitialPerDeviceSettingValue","cellPlugin","args","defaultSettings","elementType","type","name","settings","canDelete","create","options","defaultValue","elements","data","margin","top","right","bottom","left","advanced","DESKTOP","padding","all","grid","size","onReceived","source","position","target","state","meta","element","parent","result","history","actions","push","id","render","props","saveActionPlugin","onSave","cellsType"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport kebabCase from \"lodash/kebabCase\";\nimport CellContainer from \"./CellContainer\";\nimport { executeAction } from \"../../../recoil/eventActions\";\nimport { UpdateElementActionArgsType } from \"../../../recoil/actions/updateElement/types\";\nimport {\n    CreateElementActionEvent,\n    DeleteElementActionEvent,\n    updateElementAction\n} from \"../../../recoil/actions\";\nimport { addElementToParent, createDroppedElement, createElement } from \"../../../helpers\";\nimport {\n    DisplayMode,\n    PbEditorPageElementPlugin,\n    PbEditorPageElementSaveActionPlugin,\n    PbEditorElement,\n    PbEditorElementPluginArgs\n} from \"../../../../types\";\nimport { Plugin } from \"@webiny/plugins/types\";\nimport { AfterDropElementActionEvent } from \"../../../recoil/actions/afterDropElement\";\nimport { createInitialPerDeviceSettingValue } from \"../../elementSettings/elementSettingsUtils\";\n\nconst cellPlugin = (args: PbEditorElementPluginArgs = {}): PbEditorPageElementPlugin => {\n    const defaultSettings = [\n        \"pb-editor-page-element-style-settings-background\",\n        \"pb-editor-page-element-style-settings-animation\",\n        \"pb-editor-page-element-style-settings-border\",\n        \"pb-editor-page-element-style-settings-shadow\",\n        \"pb-editor-page-element-style-settings-padding\",\n        \"pb-editor-page-element-style-settings-margin\"\n    ];\n\n    const elementType = kebabCase(args.elementType || \"cell\");\n\n    return {\n        type: \"pb-editor-page-element\",\n        name: `pb-editor-page-element-${elementType}`,\n        elementType,\n        settings:\n            typeof args.settings === \"function\" ? args.settings(defaultSettings) : defaultSettings,\n        canDelete: () => {\n            return false;\n        },\n        create: (options = {}) => {\n            const defaultValue = {\n                type: elementType,\n                elements: [],\n                data: {\n                    settings: {\n                        margin: {\n                            ...createInitialPerDeviceSettingValue(\n                                {\n                                    top: \"0px\",\n                                    right: \"0px\",\n                                    bottom: \"0px\",\n                                    left: \"0px\",\n                                    advanced: true\n                                },\n                                DisplayMode.DESKTOP\n                            )\n                        },\n                        padding: createInitialPerDeviceSettingValue(\n                            { all: \"0px\" },\n                            DisplayMode.DESKTOP\n                        ),\n                        grid: {\n                            size: options.data?.settings?.grid?.size || 1\n                        }\n                    }\n                }\n            };\n            return typeof args.create === \"function\" ? args.create(defaultValue) : defaultValue;\n        },\n        onReceived({ source, position, target, state, meta }) {\n            const element = createDroppedElement(source as any, target);\n            const parent = addElementToParent(element, target, position);\n\n            const result = executeAction<UpdateElementActionArgsType>(\n                state,\n                meta,\n                updateElementAction,\n                {\n                    element: parent,\n                    history: true\n                }\n            );\n\n            result.actions.push(new AfterDropElementActionEvent({ element }));\n\n            if (source.id) {\n                // Delete source element\n                result.actions.push(\n                    new DeleteElementActionEvent({\n                        element: source as PbEditorElement\n                    })\n                );\n\n                return result;\n            }\n\n            result.actions.push(\n                new CreateElementActionEvent({\n                    element,\n                    source: source as PbEditorElement\n                })\n            );\n\n            return result;\n        },\n        render(props) {\n            return <CellContainer {...props} elementId={props.element.id} />;\n        }\n    };\n};\n// this is required because when saving cell element it cannot be without grid element\nconst saveActionPlugin = {\n    type: \"pb-editor-page-element-save-action\",\n    name: \"pb-editor-page-element-save-action-cell\",\n    elementType: \"cell\",\n    onSave(element) {\n        return createElement(\"grid\", {\n            data: {\n                settings: {\n                    grid: {\n                        cellsType: \"12\"\n                    }\n                }\n            },\n            elements: [\n                {\n                    ...element,\n                    data: {\n                        ...element.data,\n                        settings: {\n                            ...element.data.settings,\n                            grid: {\n                                size: \"12\"\n                            }\n                        }\n                    }\n                }\n            ]\n        });\n    }\n} as PbEditorPageElementSaveActionPlugin;\n\nexport default (args?: Omit<PbEditorElementPluginArgs, \"toolbar\">): Plugin[] => [\n    cellPlugin(args),\n    saveActionPlugin\n];\n"],"file":"index.js"}