{"version":3,"sources":["../../../../../src/editor/plugins/elements/cell/Cell.tsx"],"names":["React","styled","DropZone","Element","CellStyle","position","Cell","id","dropElement","index","isLast","type","source","memo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AAGA,IAAMC,SAAS,gBAAGH,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAC5BI,EAAAA,QAAQ,EAAE;AADkB,CAAjB,CAAf;;AAUA,IAAMC,IAA4C,GAAG,SAA/CA,IAA+C,OAM/C;AAAA,MALFC,EAKE,QALFA,EAKE;AAAA,MAJFC,WAIE,QAJFA,WAIE;AAAA,MAHFC,KAGE,QAHFA,KAGE;AAAA,yBAFFC,MAEE;AAAA,MAFFA,MAEE,4BAFO,KAEP;AAAA,MADFC,IACE,QADFA,IACE;AACF,sBACI,oBAAC,SAAD,qBACI,oBAAC,QAAD,CAAU,KAAV;AAAgB,IAAA,IAAI,EAAEA,IAAtB;AAA4B,IAAA,MAAM,EAAE,gBAAAC,MAAM;AAAA,aAAIJ,WAAW,CAACI,MAAD,EAASH,KAAT,CAAf;AAAA;AAA1C,IADJ,eAEI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAEF;AAAb,IAFJ,EAGKG,MAAM,iBACH,oBAAC,QAAD,CAAU,KAAV;AAAgB,IAAA,IAAI,EAAEC,IAAtB;AAA4B,IAAA,MAAM,EAAE,gBAAAC,MAAM;AAAA,aAAIJ,WAAW,CAACI,MAAD,EAASH,KAAK,GAAG,CAAjB,CAAf;AAAA;AAA1C,IAJR,CADJ;AASH,CAhBD;;AAkBA,4BAAeT,KAAK,CAACa,IAAN,CAAWP,IAAX,CAAf","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport DropZone from \"../../../components/DropZone\";\nimport Element from \"../../../components/Element\";\nimport { DragObjectWithTypeWithTarget } from \"../../../components/Droppable\";\n\nconst CellStyle = styled(\"div\")({\n    position: \"relative\"\n});\ntype CellPropsType = {\n    id: string;\n    dropElement: (source: DragObjectWithTypeWithTarget, index: number) => void;\n    type: string;\n    index: number;\n    isLast?: boolean;\n};\nconst Cell: React.FunctionComponent<CellPropsType> = ({\n    id,\n    dropElement,\n    index,\n    isLast = false,\n    type\n}) => {\n    return (\n        <CellStyle>\n            <DropZone.Above type={type} onDrop={source => dropElement(source, index)} />\n            <Element id={id} />\n            {isLast && (\n                <DropZone.Below type={type} onDrop={source => dropElement(source, index + 1)} />\n            )}\n        </CellStyle>\n    );\n};\n\nexport default React.memo(Cell);\n"],"file":"Cell.js"}