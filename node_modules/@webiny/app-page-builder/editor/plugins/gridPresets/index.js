import { plugins } from "@webiny/plugins";
import { ReactComponent as GridIcon66 } from "@svgr/webpack!../../assets/icons/grid-6-6.svg";
import { ReactComponent as GridIcon633 } from "@svgr/webpack!../../assets/icons/grid-6-3-3.svg";
import { ReactComponent as GridIcon336 } from "@svgr/webpack!../../assets/icons/grid-3-3-6.svg";
import { ReactComponent as GridIcon3333 } from "@svgr/webpack!../../assets/icons/grid-3-3-3-3.svg";
import { ReactComponent as GridIcon48 } from "@svgr/webpack!../../assets/icons/grid-4-8.svg";
import { ReactComponent as GridIcon84 } from "@svgr/webpack!../../assets/icons/grid-8-4.svg";
import { ReactComponent as GridIcon22222 } from "@svgr/webpack!../../assets/icons/grid-2-2-2-2-2-2.svg";
import { ReactComponent as GridIcon444 } from "@svgr/webpack!../../assets/icons/grid-4-4-4.svg";
import { ReactComponent as GridIcon12 } from "@svgr/webpack!../../assets/icons/grid-12.svg";
export var calculatePresetCells = function calculatePresetCells(cellsType) {
  var calculated = cellsType.split("-").map(Number);
  var emptyExists = calculated.some(function (c) {
    return c <= 0 || isNaN(c);
  });

  if (!emptyExists) {
    return calculated;
  }

  throw new Error("Cell type ".concat(cellsType, " has an empty or less than zero size cell."));
};
export var calculatePresetPluginCells = function calculatePresetPluginCells(pl) {
  if (!pl.cellsType) {
    throw new Error("There is no cells definition in preset plugin \"".concat(pl.name, "\"."));
  }

  var cells = calculatePresetCells(pl.cellsType);

  if (cells.length === 0) {
    throw new Error("There are no cells in preset plugin \"".concat(pl.name, "\"."));
  }

  return cells;
};
export var getDefaultPresetCellsTypePluginType = function getDefaultPresetCellsTypePluginType() {
  return getDefaultPresetPlugin().cellsType;
};
export var getDefaultPresetPluginCells = function getDefaultPresetPluginCells(cellsType) {
  if (!cellsType) {
    var pl = getDefaultPresetPlugin();
    return calculatePresetCells(pl.cellsType);
  }

  return calculatePresetCells(cellsType);
};
export var getDefaultPresetPlugin = function getDefaultPresetPlugin() {
  var pluginsByType = getPresetPlugins();
  var pl = pluginsByType.find(function () {
    return true;
  });

  if (!pl) {
    throw new Error("There is no default grid preset plugin.");
  }

  return pl;
};
export var getPresetPlugins = function getPresetPlugins() {
  var pluginsByType = plugins.byType("pb-editor-grid-preset");

  if (!pluginsByType || pluginsByType.length === 0) {
    throw new Error("There are no plugins for grid presets defined.");
  }

  return pluginsByType;
};
export var gridPresets = [{
  name: "pb-editor-grid-preset-12",
  type: "pb-editor-grid-preset",
  cellsType: "12",
  icon: GridIcon12
}, {
  name: "pb-editor-grid-preset-6-6",
  type: "pb-editor-grid-preset",
  cellsType: "6-6",
  icon: GridIcon66
}, {
  name: "pb-editor-grid-preset-8-4",
  type: "pb-editor-grid-preset",
  cellsType: "8-4",
  icon: GridIcon84
}, {
  name: "pb-editor-grid-preset-4-8",
  type: "pb-editor-grid-preset",
  cellsType: "4-8",
  icon: GridIcon48
}, {
  name: "pb-editor-grid-preset-4-4-4",
  type: "pb-editor-grid-preset",
  cellsType: "4-4-4",
  icon: GridIcon444
}, {
  name: "pb-editor-grid-preset-6-3-3",
  type: "pb-editor-grid-preset",
  cellsType: "6-3-3",
  icon: GridIcon633
}, {
  name: "pb-editor-grid-preset-3-3-6",
  type: "pb-editor-grid-preset",
  cellsType: "3-3-6",
  icon: GridIcon336
}, {
  name: "pb-editor-grid-preset-3-3-3-3",
  type: "pb-editor-grid-preset",
  cellsType: "3-3-3-3",
  icon: GridIcon3333
}, {
  name: "pb-editor-grid-preset-2-2-2-2-2-2",
  type: "pb-editor-grid-preset",
  cellsType: "2-2-2-2-2-2",
  icon: GridIcon22222
}];
//# sourceMappingURL=index.js.map