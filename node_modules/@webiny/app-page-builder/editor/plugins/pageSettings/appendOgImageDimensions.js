import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _get from "lodash/get";
import _regeneratorRuntime from "@babel/runtime/regenerator";
var OG_IMAGE_DIMENSIONS_PROPERTIES = ["og:image:width", "og:image:height"];
export default /*#__PURE__*/(function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {
    var data, value, setValue, meta, image;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            data = _ref.data, value = _ref.value, setValue = _ref.setValue;
            meta = [];

            if (Array.isArray(_get(data, "settings.social.meta"))) {
              meta = _toConsumableArray(data.settings.social.meta);
              meta = data.settings.social.meta.filter(function (item) {
                return !OG_IMAGE_DIMENSIONS_PROPERTIES.includes(item.property);
              });
            }

            if (!(!value || value.src.startsWith("data:"))) {
              _context.next = 5;
              break;
            }

            return _context.abrupt("return");

          case 5:
            _context.next = 7;
            return new Promise(function (resolve, reject) {
              var image = new window.Image();

              image.onload = function () {
                resolve(image);
              };

              image.onerror = reject;
              image.src = value.src;
            });

          case 7:
            image = _context.sent;
            meta.push({
              property: "og:image:width",
              content: String(image.width)
            }, {
              property: "og:image:height",
              content: String(image.height)
            });
            setValue("settings.social.meta", meta);

          case 10:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x) {
    return _ref2.apply(this, arguments);
  };
})();
//# sourceMappingURL=appendOgImageDimensions.js.map