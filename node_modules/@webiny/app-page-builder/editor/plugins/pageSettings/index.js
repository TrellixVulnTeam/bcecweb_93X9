import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject, _templateObject2, _templateObject3;

import * as React from "react";
import { gql } from "graphql-tag";
import get from "lodash/get";
import { AddQuerySelectionPlugin } from "@webiny/app/plugins/AddQuerySelectionPlugin";
import { ReactComponent as SettingsIcon } from "@svgr/webpack!./icons/round-settings-24px.svg";
import { ReactComponent as SocialIcon } from "@svgr/webpack!./icons/round-thumb_up-24px.svg";
import { ReactComponent as SeoIcon } from "@svgr/webpack!./icons/round-search-24px.svg";
import { GeneralSettingsView } from "../../ui/views/GeneralSettingsView";
import { UIViewPlugin } from "@webiny/app-admin/ui/UIView";
import { PageSettingsView } from "../../ui/views/PageSettingsView";
import { SocialSettingsView } from "../../ui/views/SocialSettingsView";
import appendOgImageDimensions from "./appendOgImageDimensions";
import { HiddenElement } from "@webiny/app-admin/ui/elements/form/HiddenElement";
import { SEOSettingsView } from "../../ui/views/SEOSettingsView";
var plugins = [new UIViewPlugin(PageSettingsView, function (view) {
  view.addSection({
    id: "general",
    title: "General settings",
    description: "Manage things like title, page status, path, and more.",
    icon: /*#__PURE__*/React.createElement(SettingsIcon, null),
    view: new GeneralSettingsView()
  });
  view.addSection({
    id: "social",
    title: "Social media",
    description: "Set share images and settings for social media websites.",
    icon: /*#__PURE__*/React.createElement(SocialIcon, null),
    view: new SocialSettingsView()
  });
  view.addSection({
    id: "seo",
    title: "SEO",
    description: "Control SEO settings like description and keywords.",
    icon: /*#__PURE__*/React.createElement(SeoIcon, null),
    view: new SEOSettingsView()
  });
}),
/**
 * When image is changed in General settings, generate OG image tags in Social Media settings.
 */
new UIViewPlugin(GeneralSettingsView, function (view) {
  var image = view.getElement("image");

  if (!image) {
    return;
  }

  var ogImageTags = new HiddenElement("socialMeta", {
    name: "settings.social.meta"
  });
  ogImageTags.moveToTheEndOf(view.getFormContentElement());
  image.addAfterChange(function (value, form) {
    var src = get(form.data, "settings.social.image.src");
    var hasOgImage = typeof src === "string" && src && !src.startsWith("data:"); // If not already set, set selectedImage as og:image too.

    if (value && !hasOgImage) {
      appendOgImageDimensions({
        data: form.data,
        value: value,
        setValue: form.setValue
      });
    }
  });
}), new AddQuerySelectionPlugin({
  operationName: "PbGetPage",
  selectionPath: "pageBuilder.getPage.data",
  addSelection: gql(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n            {\n                settings {\n                    general {\n                        snippet\n                        image {\n                            id\n                            src\n                        }\n                        tags\n                        layout\n                    }\n                }\n            }\n        "])))
}), new AddQuerySelectionPlugin({
  operationName: "PbGetPage",
  selectionPath: "pageBuilder.getPage.data",
  addSelection: gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n            {\n                settings {\n                    seo {\n                        title\n                        description\n                        meta {\n                            name\n                            content\n                        }\n                    }\n                }\n            }\n        "])))
}), new AddQuerySelectionPlugin({
  operationName: "PbGetPage",
  selectionPath: "pageBuilder.getPage.data",
  addSelection: gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n            {\n                settings {\n                    social {\n                        image {\n                            id\n                            src\n                        }\n                        title\n                        description\n                        meta {\n                            property\n                            content\n                        }\n                    }\n                }\n            }\n        "])))
})];
export default plugins;
//# sourceMappingURL=index.js.map