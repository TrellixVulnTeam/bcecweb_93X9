{"version":3,"sources":["../../src/editor/helpers.ts"],"names":["invariant","customAlphabet","set","omit","plugins","ALPHANUMERIC","getNanoid","flattenElements","el","parent","undefined","els","id","elements","map","child","children","Object","keys","forEach","createElement","type","options","plugin","byType","find","pl","elementType","data","settings","addElementId","create","addElementToParent","element","position","slice","createDroppedElement","source","target","Array","isArray","createBlockElements","name","byName","userElementSettingsPlugins","filter","includes","userElementStyleSettingsPlugins","createEmptyElement","updateBlockPosition","sourcePosition","targetPosition","moveInPlace","arr","from","to","newArray","splice","item"],"mappings":"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","sourcesContent":["import invariant from \"invariant\";\nimport { customAlphabet } from \"nanoid\";\nimport { set } from \"dot-prop-immutable\";\nimport omit from \"lodash/omit\";\nimport { DragObjectWithTypeWithTarget } from \"./components/Droppable\";\nimport { plugins } from \"@webiny/plugins\";\nimport {\n    PbEditorBlockPlugin,\n    PbEditorPageElementPlugin,\n    PbEditorPageElementSettingsPlugin,\n    PbEditorPageElementStyleSettingsPlugin,\n    PbEditorElement\n} from \"~/types\";\n\nconst ALPHANUMERIC = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\nexport const getNanoid = customAlphabet(ALPHANUMERIC, 10);\n\ntype FlattenElementsType = {\n    [id: string]: PbEditorElement;\n};\nexport const flattenElements = (el, parent = undefined): FlattenElementsType => {\n    const els = {};\n    els[el.id] = set(\n        el,\n        \"elements\",\n        (el.elements || []).map(child => {\n            if (typeof child === \"string\") {\n                return child;\n            }\n            const children = flattenElements(child, el.id);\n            Object.keys(children).forEach(id => {\n                els[id] = omit(children[id], [\"path\"]);\n            });\n            return child.id;\n        })\n    );\n\n    els[el.id].parent = parent;\n\n    return els;\n};\n\ninterface CreateElement {\n    (type: string, options?: { [key: string]: any }, parent?: PbEditorElement): PbEditorElement;\n}\n\nexport const createElement: CreateElement = (type, options = {}, parent) => {\n    const plugin = plugins\n        .byType<PbEditorPageElementPlugin>(\"pb-editor-page-element\")\n        .find(pl => pl.elementType === type);\n\n    invariant(plugin, `Missing element plugin for type \"${type}\"!`);\n\n    return {\n        id: getNanoid(),\n        data: {\n            settings: {}\n        },\n        elements: [],\n        parent: parent ? parent.id : undefined,\n        type,\n        ...addElementId(plugin.create(options, parent))\n    };\n};\n\nexport const addElementToParent = (\n    element: PbEditorElement,\n    parent: PbEditorElement,\n    position?: number\n): PbEditorElement => {\n    if (position === undefined || position === null) {\n        return {\n            ...parent,\n            elements: [...parent.elements, { ...element, parent: parent.id }]\n        };\n    }\n\n    return {\n        ...parent,\n        elements: [\n            ...parent.elements.slice(0, position),\n            { ...element, parent: parent.id },\n            ...parent.elements.slice(position)\n        ]\n    };\n};\n\nexport const createDroppedElement = (\n    source: DragObjectWithTypeWithTarget,\n    target: PbEditorElement\n): PbEditorElement => {\n    if (source.id) {\n        return {\n            id: getNanoid(),\n            type: source.type,\n            elements: (source as any).elements || [],\n            data: (source as any).data || {},\n            parent: target.id\n        };\n    }\n\n    return createElement(source.type, {}, target);\n};\n// Add unique id to elements recur\nconst addElementId = (element: Omit<PbEditorElement, \"id\">) => {\n    element.id = getNanoid();\n\n    if (Array.isArray(element.elements)) {\n        element.elements = element.elements.map((el: PbEditorElement) => {\n            return addElementId(el);\n        });\n    }\n    return element;\n};\n\nexport const createBlockElements = (name: string) => {\n    const plugin = plugins.byName<PbEditorBlockPlugin>(name);\n\n    invariant(plugin, `Missing block plugin \"${name}\"!`);\n\n    return {\n        id: getNanoid(),\n        data: {},\n        elements: [],\n        ...addElementId(plugin.create())\n    };\n};\n\nexport const userElementSettingsPlugins = (elementType: string) => {\n    return plugins\n        .byType<PbEditorPageElementSettingsPlugin>(\"pb-editor-page-element-settings\")\n        .filter(pl => {\n            if (typeof pl.elements === \"boolean\") {\n                return pl.elements === true;\n            }\n            if (Array.isArray(pl.elements)) {\n                return pl.elements.includes(elementType);\n            }\n\n            return false;\n        })\n        .map(pl => pl.name);\n};\n\nexport const userElementStyleSettingsPlugins = (elementType: string) => {\n    return plugins\n        .byType<PbEditorPageElementStyleSettingsPlugin>(\"pb-editor-page-element-style-settings\")\n        .filter(pl => {\n            if (typeof pl.elements === \"boolean\") {\n                return pl.elements === true;\n            }\n            if (Array.isArray(pl.elements)) {\n                return pl.elements.includes(elementType);\n            }\n\n            return false;\n        })\n        .map(pl => pl.name);\n};\n\ntype CreateEmptyElementCallableType = (\n    args: Pick<PbEditorElement, \"id\" | \"type\">\n) => PbEditorElement;\n\nexport const createEmptyElement: CreateEmptyElementCallableType = ({ id, type }) => {\n    return {\n        id,\n        type,\n        data: {\n            settings: {}\n        },\n        elements: []\n    };\n};\n\nexport const updateBlockPosition = ({ parent, sourcePosition, targetPosition }) => {\n    if (sourcePosition === targetPosition) {\n        return parent;\n    }\n\n    return {\n        ...parent,\n        elements: moveInPlace(parent.elements, sourcePosition, targetPosition)\n    };\n};\n\nexport const moveInPlace = (arr: any[], from: number, to: number): any[] => {\n    const newArray = [...arr];\n\n    const [item] = newArray.splice(from, 1);\n    newArray.splice(to, 0, item);\n\n    return newArray;\n};\n"],"file":"helpers.js"}