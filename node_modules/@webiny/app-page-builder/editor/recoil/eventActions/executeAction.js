import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _regeneratorRuntime from "@babel/runtime/regenerator";
export var executeAction = function executeAction(state, meta, action, args, previousResult) {
  var previousState = (previousResult === null || previousResult === void 0 ? void 0 : previousResult.state) || {};
  var previousActions = (previousResult === null || previousResult === void 0 ? void 0 : previousResult.actions) || [];
  var result = action(_objectSpread(_objectSpread({}, state), previousState), meta, args);
  return {
    state: _objectSpread(_objectSpread({}, previousState), result.state),
    actions: previousActions.concat(result.actions || [])
  };
};
export var executeAsyncAction = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(state, meta, action, args, previousResult) {
    var previousState, previousActions, result;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            previousState = (previousResult === null || previousResult === void 0 ? void 0 : previousResult.state) || {};
            previousActions = (previousResult === null || previousResult === void 0 ? void 0 : previousResult.actions) || [];
            _context.next = 4;
            return action(_objectSpread(_objectSpread({}, state), previousState), meta, args);

          case 4:
            result = _context.sent;
            return _context.abrupt("return", {
              state: _objectSpread(_objectSpread({}, previousState), result.state),
              actions: previousActions.concat(result.actions || [])
            });

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function executeAsyncAction(_x, _x2, _x3, _x4, _x5) {
    return _ref.apply(this, arguments);
  };
}();
//# sourceMappingURL=executeAction.js.map