{"version":3,"sources":["../../../../../../src/editor/recoil/modules/plugins/selectors/activePluginsByTypeNamesSelector.ts"],"names":["selectorFamily","pluginsAtom","activePluginsByTypeNamesSelector","key","get","type","activePlugins","pluginsByType","length","map","p","name"],"mappings":"AAAA,SAASA,cAAT,QAA+B,QAA/B;AACA,SAASC,WAAT;AAEA,OAAO,IAAMC,gCAAgC,GAAGF,cAAc,CAAmB;AAC7EG,EAAAA,GAAG,EAAE,kCADwE;AAE7EC,EAAAA,GAAG,EAAE,aAAAC,IAAI,EAAI;AACT,WAAO,gBAAa;AAAA,UAAVD,GAAU,QAAVA,GAAU;AAChB,UAAME,aAAa,GAAGF,GAAG,CAACH,WAAD,CAAzB;AACA,UAAMM,aAAa,GAAGD,aAAa,CAACD,IAAD,CAAnC;;AACA,UAAI,CAACE,aAAD,IAAkBA,aAAa,CAACC,MAAd,KAAyB,CAA/C,EAAkD;AAC9C,eAAO,EAAP;AACH;;AACD,aAAOD,aAAa,CAACE,GAAd,CAAkB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAN;AAAA,OAAnB,CAAP;AACH,KAPD;AAQH;AAX4E,CAAnB,CAAvD","sourcesContent":["import { selectorFamily } from \"recoil\";\nimport { pluginsAtom } from \"../pluginsAtom\";\n\nexport const activePluginsByTypeNamesSelector = selectorFamily<string[], string>({\n    key: \"activePluginsByTypeNamesSelector\",\n    get: type => {\n        return ({ get }) => {\n            const activePlugins = get(pluginsAtom);\n            const pluginsByType = activePlugins[type];\n            if (!pluginsByType || pluginsByType.length === 0) {\n                return [];\n            }\n            return pluginsByType.map(p => p.name);\n        };\n    }\n});\n"],"file":"activePluginsByTypeNamesSelector.js"}