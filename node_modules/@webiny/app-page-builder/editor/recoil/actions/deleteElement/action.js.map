{"version":3,"sources":["../../../../../src/editor/recoil/actions/deleteElement/action.ts"],"names":["UpdateElementTreeActionEvent","SaveRevisionActionEvent","removeElementFromParent","parent","id","elements","filter","child","getElementParentById","state","getElementById","element","deleteElementAction","meta","args","newParent","activeElement","highlightElement","actions"],"mappings":";;;;AAEA,SAASA,4BAAT,EAAuCC,uBAAvC,QAAsE,IAAtE;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,MAAD,EAA0BC,EAA1B,EAA0D;AACtF,yCACOD,MADP;AAEIE,IAAAA,QAAQ,EAAEF,MAAM,CAACE,QAAP,CAAgBC,MAAhB,CAAuB,UAAAC,KAAK;AAAA,aAAIA,KAAK,KAAKH,EAAd;AAAA,KAA5B;AAFd;AAIH,CALD;;AAOA,IAAMI,oBAAoB;AAAA,sEAAG,iBAAOC,KAAP,EAAcL,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHK,KAAK,CAACC,cAAN,CAAqBN,EAArB,CADG;;AAAA;AACnBO,YAAAA,OADmB;AAAA;AAAA,mBAEZF,KAAK,CAACC,cAAN,CAAqBC,OAAO,CAACR,MAA7B,CAFY;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBK,oBAAoB;AAAA;AAAA;AAAA,GAA1B;;AAKA,OAAO,IAAMI,mBAAqE;AAAA,uEAAG,kBACjFH,KADiF,EAEjFI,IAFiF,EAGjFC,IAHiF;AAAA;AAAA;AAAA;AAAA;AAAA;AAKzEH,YAAAA,OALyE,GAK7DG,IAL6D,CAKzEH,OALyE;AAAA;AAAA,mBAM5DH,oBAAoB,CAACC,KAAD,EAAQE,OAAO,CAACP,EAAhB,CANwC;;AAAA;AAM3ED,YAAAA,MAN2E;AAO3EY,YAAAA,SAP2E,GAO/Db,uBAAuB,CAACC,MAAD,EAASQ,OAAO,CAACP,EAAjB,CAPwC;AAAA,8CAS1E;AACHK,cAAAA,KAAK,kCACEA,KADF;AAEDJ,gBAAAA,QAAQ,kCACDI,KAAK,CAACJ,QADL,2BAEHU,SAAS,CAACX,EAFP,EAEYW,SAFZ,EAFP;AAMDC,gBAAAA,aAAa,EAAE,IANd;AAODC,gBAAAA,gBAAgB,EAAE;AAPjB,gBADF;AAUHC,cAAAA,OAAO,EAAE,CAAC,IAAIjB,uBAAJ,EAAD,EAAgC,IAAID,4BAAJ,EAAhC;AAVN,aAT0E;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArEY,mBAAqE;AAAA;AAAA;AAAA,GAA3E","sourcesContent":["import { EventActionCallable, PbEditorElement } from \"~/types\";\nimport { DeleteElementActionArgsType } from \"./types\";\nimport { UpdateElementTreeActionEvent, SaveRevisionActionEvent } from \"..\";\n\nconst removeElementFromParent = (parent: PbEditorElement, id: string): PbEditorElement => {\n    return {\n        ...parent,\n        elements: parent.elements.filter(child => child !== id)\n    };\n};\n\nconst getElementParentById = async (state, id): Promise<PbEditorElement> => {\n    const element = await state.getElementById(id);\n    return await state.getElementById(element.parent);\n};\n\nexport const deleteElementAction: EventActionCallable<DeleteElementActionArgsType> = async (\n    state,\n    meta,\n    args\n) => {\n    const { element } = args;\n    const parent = await getElementParentById(state, element.id);\n    const newParent = removeElementFromParent(parent, element.id);\n\n    return {\n        state: {\n            ...state,\n            elements: {\n                ...state.elements,\n                [newParent.id]: newParent\n            },\n            activeElement: null,\n            highlightElement: null\n        },\n        actions: [new SaveRevisionActionEvent(), new UpdateElementTreeActionEvent()]\n    };\n};\n"],"file":"action.js"}