import { UpdateElementTreeActionEvent, SaveRevisionActionEvent } from "..";
import { flattenElements } from "../../../helpers";
export var updateElementAction = function updateElementAction(state, _ref, _ref2) {
  var client = _ref.client;
  var element = _ref2.element,
      history = _ref2.history,
      triggerUpdateElementTree = _ref2.triggerUpdateElementTree;
  var actions = [];

  if (history === true) {
    if (!client) {
      throw new Error("You cannot save revision while updating if you do not pass client arg.");
    }

    actions.push(new SaveRevisionActionEvent());
  } // Add "UpdateElementTreeActionEvent" to actions.


  if (triggerUpdateElementTree) {
    actions.push(new UpdateElementTreeActionEvent());
  }

  var flattenedContent = flattenElements(element);
  return {
    state: {
      elements: flattenedContent
    },
    actions: actions
  };
};
//# sourceMappingURL=action.js.map