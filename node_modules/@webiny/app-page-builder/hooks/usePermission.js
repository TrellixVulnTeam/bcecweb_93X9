import { useCallback, useMemo } from "react";
import get from "lodash/get";
import { useSecurity } from "@webiny/app-security";

var usePermission = function usePermission() {
  var _useSecurity = useSecurity(),
      identity = _useSecurity.identity;

  var pbPagePermission = useMemo(function () {
    return identity.getPermission("pb.page");
  }, []);
  var hasFullAccess = useMemo(function () {
    return identity.getPermission("pb.*");
  }, []);
  var canEdit = useCallback(function (item) {
    if (hasFullAccess) {
      return true;
    }

    var creatorId = get(item, "createdBy.id");

    if (!pbPagePermission) {
      return false;
    }

    if (pbPagePermission.own && creatorId) {
      return creatorId === identity.login;
    }

    if (typeof pbPagePermission.rwd === "string") {
      return pbPagePermission.rwd.includes("w");
    }

    return true;
  }, [pbPagePermission, hasFullAccess]);
  var canDelete = useCallback(function (item) {
    if (hasFullAccess) {
      return true;
    }

    if (!pbPagePermission) {
      return false;
    }

    if (pbPagePermission.own) {
      return get(item, "createdBy.id") === identity.login;
    }

    if (typeof pbPagePermission.rwd === "string") {
      return pbPagePermission.rwd.includes("d");
    }

    return true;
  }, [pbPagePermission, hasFullAccess]);
  var canPublish = useCallback(function () {
    if (hasFullAccess) {
      return true;
    }

    if (!pbPagePermission) {
      return false;
    }

    if (typeof pbPagePermission.pw === "string") {
      return pbPagePermission.pw.includes("p");
    }

    return false;
  }, [pbPagePermission, hasFullAccess]);
  var canUnpublish = useCallback(function () {
    if (hasFullAccess) {
      return true;
    }

    if (!pbPagePermission) {
      return false;
    }

    if (typeof pbPagePermission.pw === "string") {
      return pbPagePermission.pw.includes("u");
    }

    return false;
  }, [pbPagePermission, hasFullAccess]);
  var canRequestReview = useCallback(function () {
    if (hasFullAccess) {
      return true;
    }

    if (!pbPagePermission) {
      return false;
    }

    if (typeof pbPagePermission.pw === "string") {
      return pbPagePermission.pw.includes("r");
    }

    return false;
  }, [pbPagePermission, hasFullAccess]);
  var canRequestChange = useCallback(function () {
    if (hasFullAccess) {
      return true;
    }

    if (!pbPagePermission) {
      return false;
    }

    if (typeof pbPagePermission.pw === "string") {
      return pbPagePermission.pw.includes("c");
    }

    return false;
  }, [pbPagePermission, hasFullAccess]);
  return {
    canEdit: canEdit,
    canDelete: canDelete,
    canPublish: canPublish,
    canUnpublish: canUnpublish,
    canRequestReview: canRequestReview,
    canRequestChange: canRequestChange
  };
};

export default usePermission;
//# sourceMappingURL=usePermission.js.map