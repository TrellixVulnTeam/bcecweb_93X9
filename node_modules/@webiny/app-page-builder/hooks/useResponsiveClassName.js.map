{"version":3,"sources":["../../src/hooks/useResponsiveClassName.ts"],"names":["React","plugins","kebabCase","PageBuilderContext","useResponsiveClassName","useContext","responsiveDisplayMode","displayMode","setDisplayMode","ref","useRef","responsiveModeConfigs","useMemo","byType","map","pl","config","resizeObserver","ResizeObserver","entries","entry","contentRect","width","height","handlerResize","pageElementRef","useCallback","node","current","disconnect","observe","mode","forEach","minWidth","responsiveClassName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,SAASC,kBAAT;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACjC,0BAEIJ,KAAK,CAACK,UAAN,CAA0CF,kBAA1C,CAFJ;AAAA,gDACIG,qBADJ;AAAA,MAC6BC,WAD7B,yBAC6BA,WAD7B;AAAA,MAC0CC,cAD1C,yBAC0CA,cAD1C;;AAGA,MAAMC,GAAG,GAAGT,KAAK,CAACU,MAAN,EAAZ,CAJiC,CAKjC;;AACA,MAAMC,qBAAqB,GAAGX,KAAK,CAACY,OAAN,CAAc,YAAM;AAC9C,WAAOX,OAAO,CACTY,MADE,CACmC,2BADnC,EAEFC,GAFE,CAEE,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACC,MAAP;AAAA,KAFJ,CAAP;AAGH,GAJ6B,EAI3B,EAJ2B,CAA9B,CANiC,CAWjC;;AACA,MAAMC,cAAc,GAAGjB,KAAK,CAACY,OAAN,CAAc,YAAM;AACvC,WAAO,IAAIM,cAAJ,CAAmB,UAAAC,OAAO,EAAI;AAAA,iDACbA,OADa;AAAA;;AAAA;AACjC,4DAA6B;AAAA,cAAlBC,KAAkB;AACzB,mCAA0BA,KAAK,CAACC,WAAhC;AAAA,cAAQC,KAAR,sBAAQA,KAAR;AAAA,cAAeC,MAAf,sBAAeA,MAAf;AACAC,UAAAA,aAAa,CAAC;AAAEF,YAAAA,KAAK,EAALA,KAAF;AAASC,YAAAA,MAAM,EAANA;AAAT,WAAD,CAAb;AACH;AAJgC;AAAA;AAAA;AAAA;AAAA;AAKpC,KALM,CAAP;AAMH,GAPsB,EAOpB,EAPoB,CAAvB;AASA,MAAME,cAAc,GAAGzB,KAAK,CAAC0B,WAAN,CAAkB,UAAAC,IAAI,EAAI;AAC7C,QAAIlB,GAAG,CAACmB,OAAR,EAAiB;AACb;AACAX,MAAAA,cAAc,CAACY,UAAf;AACH;;AACD,QAAIF,IAAJ,EAAU;AACN;AACAV,MAAAA,cAAc,CAACa,OAAf,CAAuBH,IAAvB,EAFM,CAGN;;AACAlB,MAAAA,GAAG,CAACmB,OAAJ,GAAcD,IAAd;AACH;AACJ,GAXsB,EAWpB,EAXoB,CAAvB,CArBiC,CAkCjC;;AACA,MAAMH,aAAa,GAAGxB,KAAK,CAAC0B,WAAN,CAClB,gBAAe;AAAA,QAAZJ,KAAY,QAAZA,KAAY;AACX,QAAIS,IAAI,GAAG,SAAX;AACApB,IAAAA,qBAAqB,CAACqB,OAAtB,CAA8B,UAAAhB,MAAM,EAAI;AACpC,UAAIM,KAAK,IAAIN,MAAM,CAACiB,QAApB,EAA8B;AAC1BF,QAAAA,IAAI,GAAGf,MAAM,CAACT,WAAd;AACH;AACJ,KAJD;AAMAC,IAAAA,cAAc,CAACuB,IAAD,CAAd;AACH,GAViB,EAWlB,CAACpB,qBAAD,CAXkB,CAAtB;AAcA,SAAO;AACHc,IAAAA,cAAc,EAAdA,cADG;AAEHS,IAAAA,mBAAmB,mCAA4BhC,SAAS,CAACK,WAAD,CAArC;AAFhB,GAAP;AAIH,CArDD;;AAuDA,eAAeH,sBAAf","sourcesContent":["import React from \"react\";\nimport { plugins } from \"@webiny/plugins\";\nimport kebabCase from \"lodash/kebabCase\";\nimport { PbRenderResponsiveModePlugin } from \"../types\";\nimport { PageBuilderContext, PageBuilderContextValue } from \"../contexts/PageBuilder\";\n\nconst useResponsiveClassName = () => {\n    const {\n        responsiveDisplayMode: { displayMode, setDisplayMode }\n    } = React.useContext<PageBuilderContextValue>(PageBuilderContext);\n    const ref = React.useRef();\n    // Get \"responsive-mode\" plugins\n    const responsiveModeConfigs = React.useMemo(() => {\n        return plugins\n            .byType<PbRenderResponsiveModePlugin>(\"pb-render-responsive-mode\")\n            .map(pl => pl.config);\n    }, []);\n    // Create resize observer\n    const resizeObserver = React.useMemo(() => {\n        return new ResizeObserver(entries => {\n            for (const entry of entries) {\n                const { width, height } = entry.contentRect;\n                handlerResize({ width, height });\n            }\n        });\n    }, []);\n\n    const pageElementRef = React.useCallback(node => {\n        if (ref.current) {\n            // Make sure to cleanup any events/references added to the last instance\n            resizeObserver.disconnect();\n        }\n        if (node) {\n            // Add resize observer\n            resizeObserver.observe(node);\n            // Save a reference to the node\n            ref.current = node;\n        }\n    }, []);\n\n    // Handle document resize\n    const handlerResize = React.useCallback(\n        ({ width }) => {\n            let mode = \"desktop\";\n            responsiveModeConfigs.forEach(config => {\n                if (width <= config.minWidth) {\n                    mode = config.displayMode;\n                }\n            });\n\n            setDisplayMode(mode);\n        },\n        [responsiveModeConfigs]\n    );\n\n    return {\n        pageElementRef,\n        responsiveClassName: `webiny-pb-media-query--${kebabCase(displayMode)}`\n    };\n};\n\nexport default useResponsiveClassName;\n"],"file":"useResponsiveClassName.js"}