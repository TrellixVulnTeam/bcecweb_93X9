import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _get from "lodash/get";
import kebabCase from "lodash/kebabCase";
import { applyPerDeviceStyleWithFallback } from "../../../utils";
export default [{
  name: "pb-render-page-element-style-horizontal-align",
  type: "pb-render-page-element-style",
  renderStyle: function renderStyle(_ref) {
    var element = _ref.element,
        style = _ref.style;

    var _get2 = _get(element, "data.settings", {}),
        horizontalAlign = _get2.horizontalAlign;

    if (!horizontalAlign) {
      return style;
    }

    return _objectSpread(_objectSpread({}, style), {}, {
      textAlign: horizontalAlign
    });
  }
}, {
  name: "pb-render-page-element-style-horizontal-align-flex",
  type: "pb-render-page-element-style",
  renderStyle: function renderStyle(_ref2) {
    var element = _ref2.element,
        style = _ref2.style;

    var _get3 = _get(element, "data.settings", {}),
        horizontalAlignFlex = _get3.horizontalAlignFlex; // Set per-device property value


    applyPerDeviceStyleWithFallback(function (_ref3) {
      var displayMode = _ref3.displayMode,
          fallbackMode = _ref3.fallbackMode;

      var fallbackValue = _get(style, "--".concat(kebabCase(fallbackMode), "-justify-content"), "flex-start");

      style["--".concat(kebabCase(displayMode), "-justify-content")] = _get(horizontalAlignFlex, displayMode, fallbackValue);
    });
    return style;
  }
}, {
  name: "pb-render-page-element-style-vertical-align",
  type: "pb-render-page-element-style",
  renderStyle: function renderStyle(_ref4) {
    var element = _ref4.element,
        style = _ref4.style;

    var _get4 = _get(element, "data.settings", {}),
        verticalAlign = _get4.verticalAlign; // Set per-device property value


    applyPerDeviceStyleWithFallback(function (_ref5) {
      var displayMode = _ref5.displayMode,
          fallbackMode = _ref5.fallbackMode;

      var fallbackValue = _get(style, "--".concat(kebabCase(fallbackMode), "-align-items"), "flex-start");

      style["--".concat(kebabCase(displayMode), "-align-items")] = _get(verticalAlign, displayMode, fallbackValue);
    });
    return style;
  }
}];
//# sourceMappingURL=index.js.map