{"version":3,"sources":["../../../../../src/render/plugins/elementSettings/border/index.ts"],"names":["kebabCase","camelCase","applyPerDeviceStyleWithFallback","borderRadiusSides","boxSides","removeUnitFromEnd","value","unit","replace","name","type","renderStyle","element","style","border","forEach","side","index","displayMode","fallbackMode","advancedWidth","fallbackWidthValue","allWidth","sideWidth","advancedRadius","borderRadiusSide","fallbackRadiusValue","allRadius","sideRadius"],"mappings":";AACA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,SAASC,+BAAT;AAEA,IAAMC,iBAAiB,GAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,aAA1B,EAAyC,cAAzC,CAA1B;AACA,IAAMC,QAAQ,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,CAAjB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAgC;AAAA,MAAhBC,IAAgB,uEAAT,IAAS;;AACtD,MAAID,KAAJ,EAAW;AACP,WAAOA,KAAK,CAACE,OAAN,CAAcD,IAAd,EAAoB,EAApB,CAAP;AACH;;AACD,SAAOD,KAAP;AACH,CALD;;AAOA,eAAe;AACXG,EAAAA,IAAI,EAAE,qCADK;AAEXC,EAAAA,IAAI,EAAE,8BAFK;AAGXC,EAAAA,WAHW,6BAGqB;AAAA,QAAlBC,OAAkB,QAAlBA,OAAkB;AAAA,QAATC,KAAS,QAATA,KAAS;;AAC5B,gBAAmB,KAAID,OAAJ,EAAa,eAAb,EAA8B,EAA9B,CAAnB;AAAA,QAAQE,MAAR,SAAQA,MAAR,CAD4B,CAG5B;;;AACAV,IAAAA,QAAQ,CAACW,OAAT,CAAiB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC9B;AACAf,MAAAA,+BAA+B,CAAC,iBAAmC;AAAA,YAAhCgB,WAAgC,SAAhCA,WAAgC;AAAA,YAAnBC,YAAmB,SAAnBA,YAAmB;AAC/D;AACAN,QAAAA,KAAK,aAAMb,SAAS,CAACkB,WAAD,CAAf,qBAAuCF,IAAvC,YAAL,GAA4D,KACxDF,MADwD,YAErDI,WAFqD,aAGxD,KAAIL,KAAJ,cAAgBb,SAAS,CAACmB,YAAD,CAAzB,qBAAkDH,IAAlD,YAHwD,CAA5D,CAF+D,CAO/D;;AACAH,QAAAA,KAAK,aAAMb,SAAS,CAACkB,WAAD,CAAf,qBAAuCF,IAAvC,YAAL,GAA4D,KACxDF,MADwD,YAErDI,WAFqD,aAGxD,KAAIL,KAAJ,cAAgBb,SAAS,CAACmB,YAAD,CAAzB,qBAAkDH,IAAlD,YAHwD,CAA5D,CAR+D,CAa/D;;AACA,YAAMI,aAAa,GAAG,KAAIN,MAAJ,YAAeI,WAAf,sBAA6C,KAA7C,CAAtB;;AACA,YAAMG,kBAAkB,GAAG,KACvBR,KADuB,cAElBb,SAAS,CAACmB,YAAD,CAFS,qBAEgBH,IAFhB,aAGvB,CAHuB,CAA3B;;AAKA,YAAMM,QAAQ,GAAG,KACbR,MADa,YAEVI,WAFU,iBAGbb,iBAAiB,CAACgB,kBAAD,CAHJ,CAAjB;;AAKA,YAAME,SAAS,GAAG,KACdT,MADc,YAEXI,WAFW,oBAEUF,IAFV,GAGdX,iBAAiB,CAACgB,kBAAD,CAHH,CAAlB;;AAKAR,QAAAA,KAAK,aAAMb,SAAS,CAACkB,WAAD,CAAf,qBAAuCF,IAAvC,YAAL,GACI,CAACI,aAAa,GAAGG,SAAH,GAAeD,QAA7B,IAAyC,IAD7C,CA9B+D,CAgC/D;;AACA,YAAME,cAAc,GAAG,KAAIV,MAAJ,YAAeI,WAAf,uBAA8C,KAA9C,CAAvB;;AACA,YAAMO,gBAAgB,GAAGtB,iBAAiB,CAACc,KAAD,CAA1C;;AACA,YAAMS,mBAAmB,GAAG,KACxBb,KADwB,cAEnBb,SAAS,CAACmB,YAAD,CAFU,qBAEenB,SAAS,CAACyB,gBAAD,CAFxB,cAGxB,CAHwB,CAA5B;;AAKA,YAAME,SAAS,GAAG,KACdb,MADc,YAEXI,WAFW,kBAGdb,iBAAiB,CAACqB,mBAAD,CAHH,CAAlB;;AAKA,YAAME,UAAU,GAAG,KACfd,MADe,YAEZI,WAFY,qBAEUjB,SAAS,CAACwB,gBAAD,CAFnB,GAGfpB,iBAAiB,CAACqB,mBAAD,CAHF,CAAnB;;AAKAb,QAAAA,KAAK,aAAMb,SAAS,CAACkB,WAAD,CAAf,qBAAuClB,SAAS,CAACyB,gBAAD,CAAhD,aAAL,GACI,CAACD,cAAc,GAAGI,UAAH,GAAgBD,SAA/B,IAA4C,IADhD;AAEH,OApD8B,CAA/B;AAqDH,KAvDD;AAyDA,WAAOd,KAAP;AACH;AAjEU,CAAf","sourcesContent":["import { get } from \"lodash\";\nimport kebabCase from \"lodash/kebabCase\";\nimport camelCase from \"lodash/camelCase\";\nimport { PbRenderElementStylePlugin } from \"../../../../types\";\nimport { applyPerDeviceStyleWithFallback } from \"../../../utils\";\n\nconst borderRadiusSides = [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"];\nconst boxSides = [\"top\", \"right\", \"bottom\", \"left\"];\n\nconst removeUnitFromEnd = (value: string, unit = \"px\") => {\n    if (value) {\n        return value.replace(unit, \"\");\n    }\n    return value;\n};\n\nexport default {\n    name: \"pb-render-page-element-style-border\",\n    type: \"pb-render-page-element-style\",\n    renderStyle({ element, style }) {\n        const { border } = get(element, \"data.settings\", {});\n\n        // Set \"per-side\" border style\n        boxSides.forEach((side, index) => {\n            // Set per-device property value\n            applyPerDeviceStyleWithFallback(({ displayMode, fallbackMode }) => {\n                // Set \"border style\"\n                style[`--${kebabCase(displayMode)}-border-${side}-style`] = get(\n                    border,\n                    `${displayMode}.style`,\n                    get(style, `--${kebabCase(fallbackMode)}-border-${side}-style`)\n                );\n                // Set \"border-color\"\n                style[`--${kebabCase(displayMode)}-border-${side}-color`] = get(\n                    border,\n                    `${displayMode}.color`,\n                    get(style, `--${kebabCase(fallbackMode)}-border-${side}-color`)\n                );\n                // Set \"border-width\"\n                const advancedWidth = get(border, `${displayMode}.width.advanced`, false);\n                const fallbackWidthValue = get(\n                    style,\n                    `--${kebabCase(fallbackMode)}-border-${side}-width`,\n                    0\n                );\n                const allWidth = get(\n                    border,\n                    `${displayMode}.width.all`,\n                    removeUnitFromEnd(fallbackWidthValue)\n                );\n                const sideWidth = get(\n                    border,\n                    `${displayMode}.width.${side}`,\n                    removeUnitFromEnd(fallbackWidthValue)\n                );\n                style[`--${kebabCase(displayMode)}-border-${side}-width`] =\n                    (advancedWidth ? sideWidth : allWidth) + \"px\";\n                // Set \"border-radius\".\n                const advancedRadius = get(border, `${displayMode}.radius.advanced`, false);\n                const borderRadiusSide = borderRadiusSides[index];\n                const fallbackRadiusValue = get(\n                    style,\n                    `--${kebabCase(fallbackMode)}-border-${kebabCase(borderRadiusSide)}-radius`,\n                    0\n                );\n                const allRadius = get(\n                    border,\n                    `${displayMode}.radius.all`,\n                    removeUnitFromEnd(fallbackRadiusValue)\n                );\n                const sideRadius = get(\n                    border,\n                    `${displayMode}.radius.${camelCase(borderRadiusSide)}`,\n                    removeUnitFromEnd(fallbackRadiusValue)\n                );\n                style[`--${kebabCase(displayMode)}-border-${kebabCase(borderRadiusSide)}-radius`] =\n                    (advancedRadius ? sideRadius : allRadius) + \"px\";\n            });\n        });\n\n        return style;\n    }\n} as PbRenderElementStylePlugin;\n"],"file":"index.js"}