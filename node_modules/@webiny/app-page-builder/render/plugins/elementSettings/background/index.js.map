{"version":3,"sources":["../../../../../src/render/plugins/elementSettings/background/index.ts"],"names":["kebabCase","applyPerDeviceStyleWithFallback","scaling","cover","backgroundSize","backgroundRepeat","contain","originalSize","tile","tileHorizontally","tileVertically","name","type","renderStyle","element","style","background","displayMode","fallbackMode","image","src","scaleSettings","position"],"mappings":"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","sourcesContent":["import { get } from \"lodash\";\nimport kebabCase from \"lodash/kebabCase\";\nimport { PbRenderElementStylePlugin } from \"../../../../types\";\nimport { applyPerDeviceStyleWithFallback } from \"../../../utils\";\n\nconst scaling = {\n    cover: {\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\"\n    },\n    contain: {\n        backgroundSize: \"contain\",\n        backgroundRepeat: \"no-repeat\"\n    },\n    originalSize: {\n        backgroundSize: \"auto\",\n        backgroundRepeat: \"no-repeat\"\n    },\n    tile: {\n        backgroundSize: \"auto\",\n        backgroundRepeat: \"repeat\"\n    },\n    tileHorizontally: {\n        backgroundSize: \"auto\",\n        backgroundRepeat: \"repeat-x\"\n    },\n    tileVertically: {\n        backgroundSize: \"auto\",\n        backgroundRepeat: \"repeat-y\"\n    }\n};\n\nexport default {\n    name: \"pb-render-page-element-style-background\",\n    type: \"pb-render-page-element-style\",\n    renderStyle({ element, style }) {\n        const { background } = get(element, \"data.settings\", {});\n\n        // Set per-device property value\n        applyPerDeviceStyleWithFallback(({ displayMode, fallbackMode }) => {\n            // Set background color\n            style[`--${kebabCase(displayMode)}-background-color`] = get(\n                background,\n                `${displayMode}.color`,\n                get(style, `--${kebabCase(fallbackMode)}-background-color`, \"transparent\")\n            );\n            // Set background image properties\n            const image = get(background, `${displayMode}.image`);\n            const src = get(image, \"file.src\");\n            if (src) {\n                const scaleSettings = get(scaling, get(image, \"scaling\", \"cover\"), {});\n                const position = get(image, \"position\", \"center center\");\n\n                style[`--${kebabCase(displayMode)}-background-size`] = scaleSettings.backgroundSize;\n                style[`--${kebabCase(displayMode)}-background-repeat`] =\n                    scaleSettings.backgroundRepeat;\n                style[`--${kebabCase(displayMode)}-background-image`] = src ? `url(${src})` : \"\";\n                style[`--${kebabCase(displayMode)}-background-position`] = position;\n            } else {\n                style[`--${kebabCase(displayMode)}-background-size`] = get(\n                    style,\n                    `--${kebabCase(fallbackMode)}-background-size`,\n                    \"none\"\n                );\n                style[`--${kebabCase(displayMode)}-background-repeat`] = get(\n                    style,\n                    `--${kebabCase(fallbackMode)}-background-repeat`,\n                    \"none\"\n                );\n                style[`--${kebabCase(displayMode)}-background-image`] = get(\n                    style,\n                    `--${kebabCase(fallbackMode)}-background-image`,\n                    \"none\"\n                );\n                style[`--${kebabCase(displayMode)}-background-position`] = get(\n                    style,\n                    `--${kebabCase(fallbackMode)}-background-position`,\n                    \"none\"\n                );\n            }\n        });\n\n        return style;\n    }\n} as PbRenderElementStylePlugin;\n"],"file":"index.js"}