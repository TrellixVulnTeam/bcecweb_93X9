{"version":3,"sources":["../../../../../src/render/plugins/elementSettings/padding/index.ts"],"names":["kebabCase","applyPerDeviceStyleWithFallback","validateSpacingValue","value","parsedValue","parseInt","Number","isNaN","name","type","renderStyle","element","style","padding","forEach","side","displayMode","fallbackMode","fallbackPaddingValue","adv"],"mappings":";AACA,OAAOA,SAAP,MAAsB,kBAAtB;AAEA,SAASC,+BAAT;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,KAAK,EAAI;AAClC,MAAMC,WAAW,GAAGC,QAAQ,CAACF,KAAD,CAA5B;;AACA,MAAIG,MAAM,CAACC,KAAP,CAAaH,WAAb,CAAJ,EAA+B;AAC3B,WAAO,KAAP;AACH;;AACD,SAAOD,KAAP;AACH,CAND;;AAQA,eAAe;AACXK,EAAAA,IAAI,EAAE,sCADK;AAEXC,EAAAA,IAAI,EAAE,8BAFK;AAGXC,EAAAA,WAHW,6BAGqB;AAAA,QAAlBC,OAAkB,QAAlBA,OAAkB;AAAA,QAATC,KAAS,QAATA,KAAS;;AAC5B,gBAAoB,KAAID,OAAJ,EAAa,eAAb,EAA8B,EAA9B,CAApB;AAAA,QAAQE,OAAR,SAAQA,OAAR,CAD4B,CAG5B;;;AACA,KAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,EAAmCC,OAAnC,CAA2C,UAAAC,IAAI,EAAI;AAC/C;AACAd,MAAAA,+BAA+B,CAAC,iBAAmC;AAAA,YAAhCe,WAAgC,SAAhCA,WAAgC;AAAA,YAAnBC,YAAmB,SAAnBA,YAAmB;;AAC/D,YAAMC,oBAAoB,GAAG,KACzBN,KADyB,cAEpBZ,SAAS,CAACiB,YAAD,CAFW,sBAEeF,IAFf,EAA7B;;AAIA,YAAMI,GAAG,GAAG,KAAIN,OAAJ,YAAgBG,WAAhB,gBAAwC,KAAxC,CAAZ;;AACA,YAAMb,KAAK,GAAGgB,GAAG,GACX,KAAIN,OAAJ,YAAgBG,WAAhB,cAA+BD,IAA/B,GAAuCG,oBAAvC,CADW,GAEX,KAAIL,OAAJ,YAAgBG,WAAhB,WAAmCE,oBAAnC,CAFN;AAGAN,QAAAA,KAAK,aAAMZ,SAAS,CAACgB,WAAD,CAAf,sBAAwCD,IAAxC,EAAL,GAAuDb,oBAAoB,CAACC,KAAD,CAA3E;AACH,OAV8B,CAA/B;AAWH,KAbD;AAeA,WAAOS,KAAP;AACH;AAvBU,CAAf","sourcesContent":["import { get } from \"lodash\";\nimport kebabCase from \"lodash/kebabCase\";\nimport { PbRenderElementStylePlugin } from \"../../../../types\";\nimport { applyPerDeviceStyleWithFallback } from \"../../../utils\";\n\nconst validateSpacingValue = value => {\n    const parsedValue = parseInt(value);\n    if (Number.isNaN(parsedValue)) {\n        return \"0px\";\n    }\n    return value;\n};\n\nexport default {\n    name: \"pb-render-page-element-style-padding\",\n    type: \"pb-render-page-element-style\",\n    renderStyle({ element, style }) {\n        const { padding } = get(element, \"data.settings\", {});\n\n        // Set per side padding value\n        [\"top\", \"right\", \"bottom\", \"left\"].forEach(side => {\n            // Set per-device property value\n            applyPerDeviceStyleWithFallback(({ displayMode, fallbackMode }) => {\n                const fallbackPaddingValue = get(\n                    style,\n                    `--${kebabCase(fallbackMode)}-padding-${side}`\n                );\n                const adv = get(padding, `${displayMode}.advanced`, false);\n                const value = adv\n                    ? get(padding, `${displayMode}.${side}`, fallbackPaddingValue)\n                    : get(padding, `${displayMode}.all`, fallbackPaddingValue);\n                style[`--${kebabCase(displayMode)}-padding-${side}`] = validateSpacingValue(value);\n            });\n        });\n\n        return style;\n    }\n} as PbRenderElementStylePlugin;\n"],"file":"index.js"}