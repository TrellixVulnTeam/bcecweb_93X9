import _get from "lodash/get";
import kebabCase from "lodash/kebabCase";
import { applyPerDeviceStyleWithFallback } from "../../../utils";

var validateSpacingValue = function validateSpacingValue(value) {
  var parsedValue = parseInt(value);

  if (Number.isNaN(parsedValue)) {
    return "0px";
  }

  return value;
};

export default {
  name: "pb-render-page-element-style-padding",
  type: "pb-render-page-element-style",
  renderStyle: function renderStyle(_ref) {
    var element = _ref.element,
        style = _ref.style;

    var _get2 = _get(element, "data.settings", {}),
        padding = _get2.padding; // Set per side padding value


    ["top", "right", "bottom", "left"].forEach(function (side) {
      // Set per-device property value
      applyPerDeviceStyleWithFallback(function (_ref2) {
        var displayMode = _ref2.displayMode,
            fallbackMode = _ref2.fallbackMode;

        var fallbackPaddingValue = _get(style, "--".concat(kebabCase(fallbackMode), "-padding-").concat(side));

        var adv = _get(padding, "".concat(displayMode, ".advanced"), false);

        var value = adv ? _get(padding, "".concat(displayMode, ".").concat(side), fallbackPaddingValue) : _get(padding, "".concat(displayMode, ".all"), fallbackPaddingValue);
        style["--".concat(kebabCase(displayMode), "-padding-").concat(side)] = validateSpacingValue(value);
      });
    });
    return style;
  }
};
//# sourceMappingURL=index.js.map