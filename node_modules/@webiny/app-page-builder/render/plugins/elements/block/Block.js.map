{"version":3,"sources":["../../../../../src/render/plugins/elements/block/Block.tsx"],"names":["React","css","kebabCase","Element","ElementRoot","ElementAnimation","PageBuilderContext","Block","element","useContext","displayMode","responsiveDisplayMode","elementStyle","elementAttributes","customClasses","combineClassNames","containerStyle","width","alignItems","justifyContent","display","elements","map","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,OAAP;AACA,SAASC,WAAT;AAEA,OAAOC,gBAAP;AAEA,SAASC,kBAAT;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAyC;AAAA,MAAtCC,OAAsC,QAAtCA,OAAsC;;AACnD,0BAEIR,KAAK,CAACS,UAAN,CAA0CH,kBAA1C,CAFJ;AAAA,MAC6BI,WAD7B,qBACIC,qBADJ,CAC6BD,WAD7B;;AAGA,sBACI,oBAAC,gBAAD,qBACI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEF;AAAtB,KACK,iBAA2E;AAAA,QAAxEI,YAAwE,SAAxEA,YAAwE;AAAA,QAA1DC,iBAA0D,SAA1DA,iBAA0D;AAAA,QAAvCC,aAAuC,SAAvCA,aAAuC;AAAA,QAAxBC,iBAAwB,SAAxBA,iBAAwB;AACxE,QAAMC,cAAc,GAAGJ,YAAvB,CADwE,CAExE;;AACA,QAAMK,KAAK,GAAGL,YAAY,aAAMV,SAAS,CAACQ,WAAD,CAAf,kBAA1B;AACA;AACpB;AACA;AACA;;AACoB,QAAMQ,UAAU,GAAGN,YAAY,aAAMV,SAAS,CAACQ,WAAD,CAAf,sBAA/B;AACA,QAAMS,cAAc,GAAGP,YAAY,aAAMV,SAAS,CAACQ,WAAD,CAAf,kBAAnC;AAEA,wBACI;AACI,MAAA,KAAK,EAAE;AAAEO,QAAAA,KAAK,EAAE,MAAT;AAAiBG,QAAAA,OAAO,EAAE;AAA1B,OADX;AAEI,MAAA,SAAS,EACL,mDACAnB,GAAG,CAACe,cAAD;AAJX,OAMQH,iBANR,gBAQI;AACI,MAAA,KAAK,EAAE;AACHI,QAAAA,KAAK,EAALA,KADG;AAEHE,QAAAA,cAAc,EAAdA,cAFG;AAGHD,QAAAA,UAAU,EAAVA;AAHG,OADX;AAMI,MAAA,SAAS,EAAEH,iBAAiB,MAAjB,UACP,0DADO,4BAEJD,aAFI;AANf,OAWKN,OAAO,CAACa,QAAR,CAAiBC,GAAjB,CAAqB,UAAAd,OAAO;AAAA,0BACzB,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,OAAO,CAACe,EAAtB;AAA0B,QAAA,OAAO,EAAEf;AAAnC,QADyB;AAAA,KAA5B,CAXL,CARJ,CADJ;AA0BH,GAtCL,CADJ,CADJ;AA4CH,CAhDD;;AAkDA,eAAeD,KAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport kebabCase from \"lodash/kebabCase\";\nimport Element from \"../../../components/Element\";\nimport { ElementRoot } from \"../../../components/ElementRoot\";\nimport { PbElement } from \"../../../../types\";\nimport ElementAnimation from \"../../../components/ElementAnimation\";\nimport { Interpolation } from \"@emotion/core\";\nimport { PageBuilderContext, PageBuilderContextValue } from \"../../../../contexts/PageBuilder\";\n\nconst Block = ({ element }: { element: PbElement }) => {\n    const {\n        responsiveDisplayMode: { displayMode }\n    } = React.useContext<PageBuilderContextValue>(PageBuilderContext);\n    return (\n        <ElementAnimation>\n            <ElementRoot element={element}>\n                {({ elementStyle, elementAttributes, customClasses, combineClassNames }) => {\n                    const containerStyle = elementStyle;\n                    // Use per-device style\n                    const width = elementStyle[`--${kebabCase(displayMode)}-align-items`];\n                    /**\n                     * We're swapping \"justifyContent\" & \"alignItems\" value here because\n                     * \".webiny-pb-layout-block\" has \"flex-direction: column\"\n                     */\n                    const alignItems = elementStyle[`--${kebabCase(displayMode)}-justify-content`];\n                    const justifyContent = elementStyle[`--${kebabCase(displayMode)}-align-items`];\n\n                    return (\n                        <div\n                            style={{ width: \"100%\", display: \"flex\" }}\n                            className={\n                                \"webiny-pb-layout-block-container \" +\n                                css(containerStyle as Interpolation)\n                            }\n                            {...elementAttributes}\n                        >\n                            <div\n                                style={{\n                                    width,\n                                    justifyContent,\n                                    alignItems\n                                }}\n                                className={combineClassNames(\n                                    \"webiny-pb-layout-block webiny-pb-base-page-element-style\",\n                                    ...customClasses\n                                )}\n                            >\n                                {element.elements.map(element => (\n                                    <Element key={element.id} element={element} />\n                                ))}\n                            </div>\n                        </div>\n                    );\n                }}\n            </ElementRoot>\n        </ElementAnimation>\n    );\n};\n\nexport default Block;\n"],"file":"Block.js"}