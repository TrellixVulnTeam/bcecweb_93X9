{"version":3,"sources":["../../../../../src/render/plugins/elements/button/Button.tsx"],"names":["React","kebabCase","ElementRoot","Link","PageBuilderContext","Button","element","useContext","displayMode","responsiveDisplayMode","data","type","icon","link","svg","position","classes","content","__html","buttonText","getAllClasses","elementStyle","elementAttributes","justifyContent","display","href","newTab","pointerEvents"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,WAAT;AAEA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,kBAAT;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAyC;AAAA,MAAtCC,OAAsC,QAAtCA,OAAsC;;AACpD,0BAEIN,KAAK,CAACO,UAAN,CAA0CH,kBAA1C,CAFJ;AAAA,MAC6BI,WAD7B,qBACIC,qBADJ,CAC6BD,WAD7B;;AAGA,cAAmDF,OAAO,CAACI,IAAR,IAAgB,EAAnE;AAAA,yBAAQC,IAAR;AAAA,MAAQA,IAAR,2BAAe,SAAf;AAAA,yBAA0BC,IAA1B;AAAA,MAA0BA,IAA1B,2BAAiC,EAAjC;AAAA,yBAAqCC,IAArC;AAAA,MAAqCA,IAArC,2BAA4C,EAA5C;;AACA,kBAAuBD,IAAvB,CAAQE,GAAR;AAAA,MAAQA,GAAR,0BAAc,IAAd;AACA,uBAA8BF,IAA9B,CAAQG,QAAR;AAAA,MAAQA,QAAR,+BAAmB,MAAnB;AAEA,MAAMC,OAAO,GAAG,CACZ,mCADY,EAEZ,+BAFY,EAGZ,oCAAoCL,IAHxB,EAIZ,0CAA0CI,QAJ9B,CAAhB;AAOA,MAAME,OAAO,gBACT,0CACKH,GAAG,iBAAI;AAAM,IAAA,uBAAuB,EAAE;AAAEI,MAAAA,MAAM,EAAEJ;AAAV;AAA/B,IADZ,eAEI,+BAAIR,OAAO,CAACI,IAAR,CAAaS,UAAjB,CAFJ,CADJ;AAOA,sBACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAE,mCAAxB;AAA6D,IAAA,OAAO,EAAEb;AAAtE,KACK,iBAAwD;AAAA,QAArDc,aAAqD,SAArDA,aAAqD;AAAA,QAAtCC,YAAsC,SAAtCA,YAAsC;AAAA,QAAxBC,iBAAwB,SAAxBA,iBAAwB;AACrD;AACA,QAAMC,cAAc,GAAGF,YAAY,aAAMpB,SAAS,CAACO,WAAD,CAAf,sBAAnC;AAEA,wBACI;AAAK,MAAA,KAAK,EAAE;AAAEgB,QAAAA,OAAO,EAAE,MAAX;AAAmBD,QAAAA,cAAc,EAAdA;AAAnB;AAAZ,oBACI,oBAAC,IAAD;AACI,MAAA,EAAE,EAAEV,IAAI,CAACY,IAAL,IAAa,GADrB;AAEI,MAAA,MAAM,EAAEZ,IAAI,CAACa,MAAL,GAAc,QAAd,GAAyB,OAFrC;AAGI,MAAA,KAAK,EACD,CAACb,IAAI,CAACY,IAAN,mCACWJ,YADX;AACyBM,QAAAA,aAAa,EAAE;AADxC,WAEMN;AANd,OAQQC,iBARR;AASI,MAAA,SAAS,EAAEF,aAAa,MAAb,SAAiBJ,OAAjB;AATf,QAWKC,OAXL,CADJ,CADJ;AAiBH,GAtBL,CADJ;AA0BH,CAhDD;;AAkDA,eAAeZ,MAAf","sourcesContent":["import React from \"react\";\nimport kebabCase from \"lodash/kebabCase\";\nimport { ElementRoot } from \"../../../components/ElementRoot\";\nimport { PbElement } from \"../../../../types\";\nimport { Link } from \"@webiny/react-router\";\nimport { PageBuilderContext, PageBuilderContextValue } from \"../../../../contexts/PageBuilder\";\n\nconst Button = ({ element }: { element: PbElement }) => {\n    const {\n        responsiveDisplayMode: { displayMode }\n    } = React.useContext<PageBuilderContextValue>(PageBuilderContext);\n    const { type = \"default\", icon = {}, link = {} } = element.data || {};\n    const { svg = null } = icon;\n    const { position = \"left\" } = icon;\n\n    const classes = [\n        \"webiny-pb-base-page-element-style\",\n        \"webiny-pb-page-element-button\",\n        \"webiny-pb-page-element-button--\" + type,\n        \"webiny-pb-page-element-button__icon--\" + position\n    ];\n\n    const content = (\n        <>\n            {svg && <span dangerouslySetInnerHTML={{ __html: svg }} />}\n            <p>{element.data.buttonText}</p>\n        </>\n    );\n\n    return (\n        <ElementRoot className={\"webiny-pb-base-page-element-style\"} element={element}>\n            {({ getAllClasses, elementStyle, elementAttributes }) => {\n                // Use per-device style\n                const justifyContent = elementStyle[`--${kebabCase(displayMode)}-justify-content`];\n\n                return (\n                    <div style={{ display: \"flex\", justifyContent }}>\n                        <Link\n                            to={link.href || \"/\"}\n                            target={link.newTab ? \"_blank\" : \"_self\"}\n                            style={\n                                !link.href\n                                    ? { ...elementStyle, pointerEvents: \"none\" }\n                                    : elementStyle\n                            }\n                            {...elementAttributes}\n                            className={getAllClasses(...classes)}\n                        >\n                            {content}\n                        </Link>\n                    </div>\n                );\n            }}\n        </ElementRoot>\n    );\n};\n\nexport default Button;\n"],"file":"Button.js"}