{"version":3,"sources":["../../../../../src/render/plugins/elements/cell/Cell.tsx"],"names":["Element","ElementAnimation","ElementRoot","React","Cell","element","data","settings","grid","size","Error","id","elements","map","memo"],"mappings":"AAAA,OAAOA,OAAP;AACA,OAAOC,gBAAP;AACA,SAASC,WAAT;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAKA,IAAMC,IAA4C,GAAG,SAA/CA,IAA+C,OAAiB;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAClE,wDAAiBA,OAAO,CAACC,IAAR,CAAaC,QAA9B,2DAAiB,uBAAuBC,IAAxC;AAAA,MAAQC,IAAR,yBAAQA,IAAR;;AACA,MAAI,CAACA,IAAL,EAAW;AACP,UAAM,IAAIC,KAAJ,0BAA2BL,OAAO,CAACM,EAAnC,oCAAN;AACH;;AACD,sBACI,oBAAC,gBAAD,qBACI,oBAAC,WAAD;AACI,IAAA,OAAO,EAAEN,OADb;AAEI,IAAA,SAAS,oGAA6FI,IAA7F;AAFb,KAIKJ,OAAO,CAACO,QAAR,CAAiBC,GAAjB,CAAqB,UAAAR,OAAO;AAAA,wBACzB,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACM,EAAtB;AAA0B,MAAA,OAAO,EAAEN;AAAnC,MADyB;AAAA,GAA5B,CAJL,CADJ,CADJ;AAYH,CAjBD;;AAmBA,4BAAeF,KAAK,CAACW,IAAN,CAAWV,IAAX,CAAf","sourcesContent":["import Element from \"../../../components/Element\";\nimport ElementAnimation from \"../../../components/ElementAnimation\";\nimport { ElementRoot } from \"../../../components/ElementRoot\";\nimport { PbElement } from \"../../../../types\";\nimport React from \"react\";\n\ntype GridPropsType = {\n    element: PbElement;\n};\nconst Cell: React.FunctionComponent<GridPropsType> = ({ element }) => {\n    const { size } = element.data.settings?.grid;\n    if (!size) {\n        throw new Error(`Cell with id \"${element.id}\" does not have size defined.`);\n    }\n    return (\n        <ElementAnimation>\n            <ElementRoot\n                element={element}\n                className={`webiny-pb-base-page-element-style webiny-pb-layout-grid-cell webiny-pb-layout-grid-cell-${size}`}\n            >\n                {element.elements.map(element => (\n                    <Element key={element.id} element={element} />\n                ))}\n            </ElementRoot>\n        </ElementAnimation>\n    );\n};\n\nexport default React.memo(Cell);\n"],"file":"Cell.js"}