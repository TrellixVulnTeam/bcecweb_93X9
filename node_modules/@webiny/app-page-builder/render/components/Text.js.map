{"version":3,"sources":["../../../src/render/components/Text.tsx"],"names":["React","useMemo","classNames","get","usePageBuilder","ElementRoot","applyFallbackDisplayMode","DATA_NAMESPACE","TextElement","element","rootClassName","displayMode","responsiveDisplayMode","fallbackValue","mode","value","textContent","tag","typography","className","createElement","dangerouslySetInnerHTML","__html","memo"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,cAAT;AAEA,SAASC,WAAT;AACA,SAASC,wBAAT;AAEA,IAAMC,cAAc,GAAG,WAAvB;;AAMA,IAAMC,WAAmD,GAAG,SAAtDA,WAAsD,OAAgC;AAAA,MAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AACxF,wBAEIN,cAAc,EAFlB;AAAA,MAC6BO,WAD7B,mBACIC,qBADJ,CAC6BD,WAD7B;;AAIA,MAAME,aAAa,GAAGZ,OAAO,CACzB;AAAA,WACIK,wBAAwB,CAACK,WAAD,EAA6B,UAAAG,IAAI;AAAA,aACrDX,GAAG,CAACM,OAAD,YAAaF,cAAb,cAA+BO,IAA/B,EADkD;AAAA,KAAjC,CAD5B;AAAA,GADyB,EAKzB,CAACH,WAAD,CALyB,CAA7B;AAQA,MAAMI,KAAK,GAAGZ,GAAG,CAACM,OAAD,YAAaF,cAAb,cAA+BI,WAA/B,GAA8CE,aAA9C,CAAjB;AACA,MAAMG,WAAW,GAAGb,GAAG,CAACM,OAAD,YAAaF,cAAb,gBAAvB;AACA,MAAMU,GAAG,GAAGd,GAAG,CAACY,KAAD,EAAQ,KAAR,CAAf;AACA,MAAMG,UAAU,GAAGf,GAAG,CAACY,KAAD,EAAQ,YAAR,CAAtB;AAEA,sBACI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEN,OAAtB;AAA+B,IAAA,SAAS,EAAEP,UAAU,CAACiB,SAAD,EAAYT,aAAZ,EAA2BQ,UAA3B;AAApD,kBACKlB,KAAK,CAACoB,aAAN,CAAoBH,GAApB,EAAyB;AACtBI,IAAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEN;AAAV;AADH,GAAzB,CADL,CADJ;AAOH,CAzBD;;AA2BA,OAAO,IAAMG,SAAS,GAAG,+DAAlB;AAEP,4BAAenB,KAAK,CAACuB,IAAN,CAAWf,WAAX,CAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport classNames from \"classnames\";\nimport get from \"lodash/get\";\nimport { usePageBuilder } from \"../../hooks/usePageBuilder\";\nimport { DisplayMode, PbElement } from \"../../types\";\nimport { ElementRoot } from \"./ElementRoot\";\nimport { applyFallbackDisplayMode } from \"../../editor/plugins/elementSettings/elementSettingsUtils\";\n\nconst DATA_NAMESPACE = \"data.text\";\n\ntype TextPropsType = {\n    element: PbElement;\n    rootClassName?: string;\n};\nconst TextElement: React.FunctionComponent<TextPropsType> = ({ element, rootClassName }) => {\n    const {\n        responsiveDisplayMode: { displayMode }\n    } = usePageBuilder();\n\n    const fallbackValue = useMemo(\n        () =>\n            applyFallbackDisplayMode(displayMode as DisplayMode, mode =>\n                get(element, `${DATA_NAMESPACE}.${mode}`)\n            ),\n        [displayMode]\n    );\n\n    const value = get(element, `${DATA_NAMESPACE}.${displayMode}`, fallbackValue);\n    const textContent = get(element, `${DATA_NAMESPACE}.data.text`);\n    const tag = get(value, \"tag\");\n    const typography = get(value, \"typography\");\n\n    return (\n        <ElementRoot element={element} className={classNames(className, rootClassName, typography)}>\n            {React.createElement(tag, {\n                dangerouslySetInnerHTML: { __html: textContent }\n            })}\n        </ElementRoot>\n    );\n};\n\nexport const className = \"webiny-pb-base-page-element-style webiny-pb-page-element-text\";\n\nexport default React.memo(TextElement);\n"],"file":"Text.js"}