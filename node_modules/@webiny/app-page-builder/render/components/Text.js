import React, { useMemo } from "react";
import classNames from "classnames";
import get from "lodash/get";
import { usePageBuilder } from "../../hooks/usePageBuilder";
import { ElementRoot } from "./ElementRoot";
import { applyFallbackDisplayMode } from "../../editor/plugins/elementSettings/elementSettingsUtils";
var DATA_NAMESPACE = "data.text";

var TextElement = function TextElement(_ref) {
  var element = _ref.element,
      rootClassName = _ref.rootClassName;

  var _usePageBuilder = usePageBuilder(),
      displayMode = _usePageBuilder.responsiveDisplayMode.displayMode;

  var fallbackValue = useMemo(function () {
    return applyFallbackDisplayMode(displayMode, function (mode) {
      return get(element, "".concat(DATA_NAMESPACE, ".").concat(mode));
    });
  }, [displayMode]);
  var value = get(element, "".concat(DATA_NAMESPACE, ".").concat(displayMode), fallbackValue);
  var textContent = get(element, "".concat(DATA_NAMESPACE, ".data.text"));
  var tag = get(value, "tag");
  var typography = get(value, "typography");
  return /*#__PURE__*/React.createElement(ElementRoot, {
    element: element,
    className: classNames(className, rootClassName, typography)
  }, /*#__PURE__*/React.createElement(tag, {
    dangerouslySetInnerHTML: {
      __html: textContent
    }
  }));
};

export var className = "webiny-pb-base-page-element-style webiny-pb-page-element-text";
export default /*#__PURE__*/React.memo(TextElement);
//# sourceMappingURL=Text.js.map