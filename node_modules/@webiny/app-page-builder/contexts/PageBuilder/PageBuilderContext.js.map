{"version":3,"sources":["../../../src/contexts/PageBuilder/PageBuilderContext.tsx"],"names":["React","plugins","DisplayMode","PageBuilderContext","createContext","PageBuilderProvider","children","useState","DESKTOP","displayMode","setDisplayMode","value","useMemo","theme","Object","assign","byType","map","pl","responsiveDisplayMode","PageBuilderConsumer","props","cloneElement","pageBuilder"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAAiCC,WAAjC;AAEA,OAAO,IAAMC,kBAAkB,gBAAGH,KAAK,CAACI,aAAN,CAAoB,IAApB,CAA3B;AAqBP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAA4C;AAAA,MAAzCC,QAAyC,QAAzCA,QAAyC;;AAC3E,wBAAsCN,KAAK,CAACO,QAAN,CAAeL,WAAW,CAACM,OAA3B,CAAtC;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,KAA8B,GAAGX,KAAK,CAACY,OAAN,CAAc,YAAM;AACvD,QAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,OAAAD,MAAM,GAChB,EADgB,4BAEbb,OAAO,CAACe,MAAR,CAA8B,UAA9B,EAA0CC,GAA1C,CAA8C,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACL,KAAP;AAAA,KAAhD,CAFa,GAApB;AAKA,WAAO;AACHA,MAAAA,KAAK,EAALA;AADG,KAAP;AAGH,GATsC,EASpC,EAToC,CAAvC;AAWA,sBACI,oBAAC,kBAAD,CAAoB,QAApB;AACI,IAAA,KAAK,kCACEF,KADF;AAEDQ,MAAAA,qBAAqB,EAAE;AACnBV,QAAAA,WAAW,EAAXA,WADmB;AAEnBC,QAAAA,cAAc,EAAdA;AAFmB;AAFtB;AADT,KASKJ,QATL,CADJ;AAaH,CA3BM;AA6BP,OAAO,IAAMc,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,MAAGd,QAAH,SAAGA,QAAH;AAAA,sBAC/B,oBAAC,kBAAD,CAAoB,QAApB,QACK,UAAAe,KAAK;AAAA,wBAAIrB,KAAK,CAACsB,YAAN,CAAmBhB,QAAnB,EAA6B;AAAEiB,MAAAA,WAAW,EAAEF;AAAf,KAA7B,CAAJ;AAAA,GADV,CAD+B;AAAA,CAA5B","sourcesContent":["import * as React from \"react\";\nimport { plugins } from \"@webiny/plugins\";\nimport { PbThemePlugin, PbTheme, DisplayMode } from \"../../types\";\n\nexport const PageBuilderContext = React.createContext(null);\n\nexport type ResponsiveDisplayMode = {\n    displayMode: string;\n    setDisplayMode: Function;\n};\n\nexport type PageBuilderContextValue = {\n    theme: PbTheme;\n    defaults?: {\n        pages?: {\n            notFound?: React.ComponentType<any>;\n        };\n    };\n    responsiveDisplayMode?: ResponsiveDisplayMode;\n};\n\nexport type PageBuilderProviderProps = {\n    children?: React.ReactChild | React.ReactChild[];\n};\n\nexport const PageBuilderProvider = ({ children }: PageBuilderProviderProps) => {\n    const [displayMode, setDisplayMode] = React.useState(DisplayMode.DESKTOP);\n\n    const value: PageBuilderContextValue = React.useMemo(() => {\n        const theme = Object.assign(\n            {},\n            ...plugins.byType<PbThemePlugin>(\"pb-theme\").map(pl => pl.theme)\n        );\n\n        return {\n            theme\n        };\n    }, []);\n\n    return (\n        <PageBuilderContext.Provider\n            value={{\n                ...value,\n                responsiveDisplayMode: {\n                    displayMode,\n                    setDisplayMode\n                }\n            }}\n        >\n            {children}\n        </PageBuilderContext.Provider>\n    );\n};\n\nexport const PageBuilderConsumer = ({ children }) => (\n    <PageBuilderContext.Consumer>\n        {props => React.cloneElement(children, { pageBuilder: props })}\n    </PageBuilderContext.Consumer>\n);\n"],"file":"PageBuilderContext.js"}