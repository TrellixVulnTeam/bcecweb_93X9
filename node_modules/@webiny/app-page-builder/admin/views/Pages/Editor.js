import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
var _excluded = ["revisions", "content"];
import _regeneratorRuntime from "@babel/runtime/regenerator";
import React, { useCallback, useState } from "react";
import editorMock from "../../assets/editor-mock.png";
import { createElement } from "../../../editor/helpers";
import { useRouter } from "@webiny/react-router";
import { useQuery, useMutation } from "@apollo/react-hooks";
import { Editor as PbEditor } from "../../../editor";
import { useSavedElements } from "../../hooks/useSavedElements";
import Snackbar from "@webiny/app-admin/ui/views/AdminView/components/Snackbar";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { DialogContainer } from "@webiny/app-admin/ui/views/AdminView/components/Dialog";
import { Typography } from "@webiny/ui/Typography";
import { LoadingEditor, LoadingTitle } from "./EditorStyled.js";
import { GET_PAGE, CREATE_PAGE_FROM } from "./graphql";

var extractPageGetPage = function extractPageGetPage(data) {
  var _data$pageBuilder;

  return ((_data$pageBuilder = data.pageBuilder) === null || _data$pageBuilder === void 0 ? void 0 : _data$pageBuilder.getPage) || {};
};

var extractPageData = function extractPageData(data) {
  var getPageData = extractPageGetPage(data);
  return getPageData.data;
};

var extractPageErrorData = function extractPageErrorData(data) {
  var getPageData = extractPageGetPage(data);
  return getPageData.error || {};
};

var Editor = function Editor() {
  var _useRouter = useRouter(),
      match = _useRouter.match,
      history = _useRouter.history;

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var ready = useSavedElements();

  var _useState = useState(true),
      _useState2 = _slicedToArray(_useState, 2),
      loading = _useState2[0],
      setLoading = _useState2[1];

  var _useState3 = useState(null),
      _useState4 = _slicedToArray(_useState3, 2),
      data = _useState4[0],
      setData = _useState4[1];

  var params = match.params;
  var renderEditor = useCallback(function (_ref) {
    var data = _ref.data,
        loading = _ref.loading;

    if (loading || !ready) {
      return /*#__PURE__*/React.createElement(LoadingEditor, null, /*#__PURE__*/React.createElement("img", {
        src: editorMock,
        alt: "page builder editor mock"
      }), /*#__PURE__*/React.createElement(LoadingTitle, null, /*#__PURE__*/React.createElement(Typography, {
        tag: "div",
        use: "headline6"
      }, "Loading Editor", /*#__PURE__*/React.createElement("span", null, "."), /*#__PURE__*/React.createElement("span", null, "."), /*#__PURE__*/React.createElement("span", null, "."))));
    }

    if (!data) {
      return null;
    }

    var _data$revisions = data.revisions,
        revisions = _data$revisions === void 0 ? [] : _data$revisions,
        content = data.content,
        restOfPageData = _objectWithoutProperties(data, _excluded);

    var page = _objectSpread(_objectSpread({}, restOfPageData), {}, {
      content: content || createElement("document")
    });

    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PbEditor, {
      page: page,
      revisions: revisions
    }), /*#__PURE__*/React.createElement("div", {
      style: {
        zIndex: 30,
        position: "absolute"
      }
    }, /*#__PURE__*/React.createElement(Snackbar, null)), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(DialogContainer, null)));
  }, [ready]);

  var _useMutation = useMutation(CREATE_PAGE_FROM),
      _useMutation2 = _slicedToArray(_useMutation, 1),
      createPageFrom = _useMutation2[0];

  useQuery(GET_PAGE, {
    variables: {
      id: decodeURIComponent(params.id)
    },
    fetchPolicy: "network-only",
    onCompleted: function () {
      var _onCompleted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {
        var errorData, error, page, response;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                errorData = extractPageErrorData(data);
                error = errorData.message;

                if (!error) {
                  _context.next = 7;
                  break;
                }

                setLoading(false);
                history.push("/page-builder/pages");
                showSnackbar(error);
                return _context.abrupt("return");

              case 7:
                page = extractPageData(data);

                if (!(page.status === "draft")) {
                  _context.next = 12;
                  break;
                }

                setData(page);
                _context.next = 17;
                break;

              case 12:
                _context.next = 14;
                return createPageFrom({
                  variables: {
                    from: page.id
                  }
                });

              case 14:
                response = _context.sent;
                history.push("/page-builder/editor/".concat(encodeURIComponent(response.data.pageBuilder.createPage.data.id)));
                setTimeout(function () {
                  return showSnackbar("New revision created.");
                }, 1500);

              case 17:
                setLoading(false);

              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function onCompleted(_x) {
        return _onCompleted.apply(this, arguments);
      }

      return onCompleted;
    }()
  });
  return renderEditor({
    loading: loading,
    data: data
  });
};

export default Editor;
//# sourceMappingURL=Editor.js.map