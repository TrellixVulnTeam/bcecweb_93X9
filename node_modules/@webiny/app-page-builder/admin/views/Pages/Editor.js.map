{"version":3,"sources":["../../../../src/admin/views/Pages/Editor.tsx"],"names":["React","useCallback","useState","editorMock","createElement","useRouter","useQuery","useMutation","Editor","PbEditor","useSavedElements","Snackbar","useSnackbar","DialogContainer","Typography","LoadingEditor","LoadingTitle","GET_PAGE","CREATE_PAGE_FROM","extractPageGetPage","data","pageBuilder","getPage","extractPageData","getPageData","extractPageErrorData","error","match","history","showSnackbar","ready","loading","setLoading","setData","params","renderEditor","revisions","content","restOfPageData","page","zIndex","position","createPageFrom","variables","id","decodeURIComponent","fetchPolicy","onCompleted","errorData","message","push","status","from","response","encodeURIComponent","createPage","setTimeout"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport editorMock from \"../../assets/editor-mock.png\";\nimport { createElement } from \"~/editor/helpers\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Editor as PbEditor } from \"../../../editor\";\nimport { useSavedElements } from \"../../hooks/useSavedElements\";\nimport Snackbar from \"@webiny/app-admin/ui/views/AdminView/components/Snackbar\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { DialogContainer } from \"@webiny/app-admin/ui/views/AdminView/components/Dialog\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { LoadingEditor, LoadingTitle } from \"./EditorStyled.js\";\nimport { GET_PAGE, CREATE_PAGE_FROM } from \"./graphql\";\n\nconst extractPageGetPage = (data: any): any => {\n    return data.pageBuilder?.getPage || {};\n};\n\nconst extractPageData = (data: any): any => {\n    const getPageData = extractPageGetPage(data);\n    return getPageData.data;\n};\n\nconst extractPageErrorData = (data: any): any => {\n    const getPageData = extractPageGetPage(data);\n    return getPageData.error || {};\n};\n\nconst Editor: React.FunctionComponent = () => {\n    const { match, history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    const ready = useSavedElements();\n    const [loading, setLoading] = useState(true);\n    const [data, setData] = useState(null);\n\n    const params: { id: string } = match.params as any;\n\n    const renderEditor = useCallback(\n        ({ data, loading }) => {\n            if (loading || !ready) {\n                return (\n                    <LoadingEditor>\n                        <img src={editorMock} alt={\"page builder editor mock\"} />\n                        <LoadingTitle>\n                            <Typography tag={\"div\"} use={\"headline6\"}>\n                                Loading Editor<span>.</span>\n                                <span>.</span>\n                                <span>.</span>\n                            </Typography>\n                        </LoadingTitle>\n                    </LoadingEditor>\n                );\n            }\n\n            if (!data) {\n                return null;\n            }\n\n            const { revisions = [], content, ...restOfPageData } = data;\n            const page = {\n                ...restOfPageData,\n                content: content || createElement(\"document\")\n            };\n\n            return (\n                <React.Fragment>\n                    <PbEditor page={page} revisions={revisions} />\n                    <div style={{ zIndex: 30, position: \"absolute\" }}>\n                        <Snackbar />\n                    </div>\n                    <div>\n                        <DialogContainer />\n                    </div>\n                </React.Fragment>\n            );\n        },\n        [ready]\n    );\n\n    const [createPageFrom] = useMutation(CREATE_PAGE_FROM);\n\n    useQuery(GET_PAGE, {\n        variables: { id: decodeURIComponent(params.id) },\n        fetchPolicy: \"network-only\",\n        onCompleted: async data => {\n            const errorData = extractPageErrorData(data);\n            const error = errorData.message;\n            if (error) {\n                setLoading(false);\n                history.push(`/page-builder/pages`);\n                showSnackbar(error);\n                return;\n            }\n\n            const page = extractPageData(data);\n            if (page.status === \"draft\") {\n                setData(page);\n            } else {\n                const response = await createPageFrom({\n                    variables: { from: page.id }\n                });\n\n                history.push(\n                    `/page-builder/editor/${encodeURIComponent(\n                        response.data.pageBuilder.createPage.data.id\n                    )}`\n                );\n                setTimeout(() => showSnackbar(\"New revision created.\"), 1500);\n            }\n            setLoading(false);\n        }\n    });\n\n    return renderEditor({ loading, data });\n};\n\nexport default Editor;\n"],"file":"Editor.js"}