import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import React, { useMemo, useState, useCallback } from "react";
import { SplitView, LeftPanel, RightPanel } from "@webiny/app-admin/components/SplitView";
import PagesDataList from "./PagesDataList";
import PageDetails from "./PageDetails";
import { useSecurity } from "@webiny/app-security";
import CategoriesDialog from "../Categories/CategoriesDialog";
import { CircularProgress } from "@webiny/ui/Progress";
import { useRouter } from "@webiny/react-router";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { useMutation } from "@apollo/react-hooks";
import { CREATE_PAGE } from "../../graphql/pages";
import * as GQLCache from "./cache";

var Pages = function Pages() {
  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      creatingPage = _useState2[0],
      setCreatingPage = _useState2[1];

  var _useState3 = useState(false),
      _useState4 = _slicedToArray(_useState3, 2),
      showCategoriesDialog = _useState4[0],
      setCategoriesDialog = _useState4[1];

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var _useRouter = useRouter(),
      history = _useRouter.history;

  var openDialog = useCallback(function () {
    return setCategoriesDialog(true);
  }, []);
  var closeDialog = useCallback(function () {
    return setCategoriesDialog(false);
  }, []);

  var _useMutation = useMutation(CREATE_PAGE),
      _useMutation2 = _slicedToArray(_useMutation, 1),
      create = _useMutation2[0];

  var createPageMutation = useCallback( /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {
      var category, res, _res$data$pageBuilder, error, data;

      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              category = _ref.slug;
              _context.prev = 1;
              setCreatingPage(true);
              _context.next = 5;
              return create({
                variables: {
                  category: category
                },
                update: function update(cache, _ref3) {
                  var data = _ref3.data;

                  if (data.pageBuilder.createPage.error) {
                    return;
                  }

                  GQLCache.addPageToListCache(cache, data.pageBuilder.createPage.data);
                }
              });

            case 5:
              res = _context.sent;
              setCreatingPage(false);
              closeDialog();
              _res$data$pageBuilder = res.data.pageBuilder.createPage, error = _res$data$pageBuilder.error, data = _res$data$pageBuilder.data;

              if (error) {
                showSnackbar(error.message);
              } else {
                history.push("/page-builder/editor/".concat(encodeURIComponent(data.id)));
              }

              _context.next = 15;
              break;

            case 12:
              _context.prev = 12;
              _context.t0 = _context["catch"](1);
              showSnackbar(_context.t0.message);

            case 15:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[1, 12]]);
    }));

    return function (_x) {
      return _ref2.apply(this, arguments);
    };
  }(), []);

  var _useSecurity = useSecurity(),
      identity = _useSecurity.identity;

  var canCreate = useMemo(function () {
    var permission = identity.getPermission("pb.page");

    if (!permission) {
      return false;
    }

    if (typeof permission.rwd !== "string") {
      return true;
    }

    return permission.rwd.includes("w");
  }, []);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CategoriesDialog, {
    open: showCategoriesDialog,
    onClose: closeDialog,
    onSelect: createPageMutation
  }, creatingPage && /*#__PURE__*/React.createElement(CircularProgress, {
    label: "Creating page..."
  })), /*#__PURE__*/React.createElement(SplitView, null, /*#__PURE__*/React.createElement(LeftPanel, null, /*#__PURE__*/React.createElement(PagesDataList, {
    canCreate: canCreate,
    onCreatePage: openDialog
  })), /*#__PURE__*/React.createElement(RightPanel, null, /*#__PURE__*/React.createElement(PageDetails, {
    canCreate: canCreate,
    onCreatePage: openDialog
  }))));
};

export default Pages;
//# sourceMappingURL=Pages.js.map