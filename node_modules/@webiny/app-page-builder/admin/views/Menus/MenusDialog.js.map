{"version":3,"sources":["../../../../src/admin/views/Menus/MenusDialog.tsx"],"names":["React","css","useRouter","Query","Dialog","DialogTitle","DialogContent","DialogActions","List","ListItem","ListItemText","ListItemTextPrimary","ListItemTextSecondary","ButtonDefault","LIST_MENUS","narrowDialog","width","minWidth","MenusDialog","open","onClose","onSelect","children","history","data","loading","pageBuilder","menus","map","item","id","name","url","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SACIC,MADJ,EAEIC,WAFJ,EAGIC,aAHJ,EAIIC,aAJJ,QAMO,mBANP;AAOA,SACIC,IADJ,EAEIC,QAFJ,EAGIC,YAHJ,EAIIC,mBAJJ,EAKIC,qBALJ,QAMO,iBANP;AAOA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT;AAEA,IAAMC,YAAY,gBAAGd,GAAG,CAAC;AACrB,0BAAwB;AACpBe,IAAAA,KAAK,EAAE,GADa;AAEpBC,IAAAA,QAAQ,EAAE;AAFU;AADH,CAAD,wBAAxB;;AAcA,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAA2C;AAAA,MAAxCC,IAAwC,QAAxCA,IAAwC;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACvF,mBAAoBpB,SAAS,EAA7B;AAAA,MAAQqB,OAAR,cAAQA,OAAR;;AACA,sBACI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAEJ,IADV;AAEI,IAAA,OAAO,EAAEC,OAFb;AAGI,IAAA,SAAS,EAAEL,YAHf;AAII,mBAAY;AAJhB,KAMKO,QANL,eAOI,oBAAC,WAAD,wBAPJ,eAQI,oBAAC,aAAD,qBACI,oBAAC,IAAD;AAAM,IAAA,OAAO;AAAb,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAER;AAAd,KACK,iBAAuB;AAAA,QAApBU,IAAoB,SAApBA,IAAoB;AAAA,QAAdC,OAAc,SAAdA,OAAc;;AACpB,QAAIA,OAAJ,EAAa;AACT,0BAAO,qDAAP;AACH;;AAED,wBACI,oBAAC,KAAD,CAAO,QAAP,QACKD,IAAI,CAACE,WAAL,CAAiBC,KAAjB,CAAuBH,IAAvB,CAA4BI,GAA5B,CAAgC,UAAAC,IAAI;AAAA,0BACjC,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,QAAA,OAAO,EAAE;AAAA,iBAAMT,QAAQ,CAACQ,IAAD,CAAd;AAAA;AAAjC,sBACI,oBAAC,YAAD,qBACI,oBAAC,mBAAD,QACKA,IAAI,CAACE,IADV,CADJ,eAII,oBAAC,qBAAD,QACKF,IAAI,CAACG,GADV,CAJJ,CADJ,CADiC;AAAA,KAApC,CADL,CADJ;AAgBH,GAtBL,CADJ,CADJ,CARJ,eAoCI,oBAAC,aAAD,qBACI,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAE;AAAA,aAAMT,OAAO,CAACU,IAAR,CAAa,qBAAb,CAAN;AAAA;AAAxB,yBADJ,CApCJ,CADJ;AA4CH,CA9CD;;AAgDA,eAAef,WAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { Query } from \"@apollo/react-components\";\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    DialogOnClose\n} from \"@webiny/ui/Dialog\";\nimport {\n    List,\n    ListItem,\n    ListItemText,\n    ListItemTextPrimary,\n    ListItemTextSecondary\n} from \"@webiny/ui/List\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\nimport { LIST_MENUS } from \"./graphql\";\n\nconst narrowDialog = css({\n    \".mdc-dialog__surface\": {\n        width: 400,\n        minWidth: 400\n    }\n});\n\nexport type MenusDialogProps = {\n    open: boolean;\n    onClose: DialogOnClose;\n    onSelect: Function;\n    children: any;\n};\n\nconst MenusDialog: React.FC<MenusDialogProps> = ({ open, onClose, onSelect, children }) => {\n    const { history } = useRouter();\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            className={narrowDialog}\n            data-testid=\"pb-new-page-menu-modal\"\n        >\n            {children}\n            <DialogTitle>Select a menu</DialogTitle>\n            <DialogContent>\n                <List twoLine>\n                    <Query query={LIST_MENUS}>\n                        {({ data, loading }) => {\n                            if (loading) {\n                                return <span>Loading menus...</span>;\n                            }\n\n                            return (\n                                <React.Fragment>\n                                    {data.pageBuilder.menus.data.map(item => (\n                                        <ListItem key={item.id} onClick={() => onSelect(item)}>\n                                            <ListItemText>\n                                                <ListItemTextPrimary>\n                                                    {item.name}\n                                                </ListItemTextPrimary>\n                                                <ListItemTextSecondary>\n                                                    {item.url}\n                                                </ListItemTextSecondary>\n                                            </ListItemText>\n                                        </ListItem>\n                                    ))}\n                                </React.Fragment>\n                            );\n                        }}\n                    </Query>\n                </List>\n            </DialogContent>\n            <DialogActions>\n                <ButtonDefault onClick={() => history.push(\"/page-builder/menus\")}>\n                    + Create new menu\n                </ButtonDefault>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default MenusDialog;\n"],"file":"MenusDialog.js"}