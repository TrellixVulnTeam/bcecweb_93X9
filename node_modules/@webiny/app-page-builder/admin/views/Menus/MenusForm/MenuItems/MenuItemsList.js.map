{"version":3,"sources":["../../../../../../src/admin/views/Menus/MenusForm/MenuItems/MenuItemsList.tsx"],"names":["React","SortableTree","plugins","MenuItemRenderer","Typography","styled","TreeWrapper","width","height","backgroundColor","EmptyTree","display","alignItems","justifyContent","color","MenuItemsList","props","items","onChange","editItem","deleteItem","canSave","data","Array","isArray","dom","length","canHaveChildren","node","id","pbMenuItemPlugins","byType","plugin","find","pl","menuItem","type","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,gBAAP;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAGA,IAAMC,WAAW,gBAAGD,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAC9BE,EAAAA,KAAK,EAAE,MADuB;AAE9BC,EAAAA,MAAM,EAAE,GAFsB;AAG9B,4KACI;AACIC,IAAAA,eAAe,EAAE;AADrB;AAJ0B,CAAjB,CAAjB;AASA,IAAMC,SAAS,gBAAGL,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAC5BE,EAAAA,KAAK,EAAE,MADqB;AAE5BC,EAAAA,MAAM,EAAE,MAFoB;AAG5BG,EAAAA,OAAO,EAAE,MAHmB;AAI5BC,EAAAA,UAAU,EAAE,QAJgB;AAK5BC,EAAAA,cAAc,EAAE,QALY;AAM5BC,EAAAA,KAAK,EAAE;AANqB,CAAjB,CAAf;;IASMC,a;;;;;;;;;;;;;WAOF,kBAAS;AACL,wBAA2D,KAAKC,KAAhE;AAAA,UAAQC,KAAR,eAAQA,KAAR;AAAA,UAAeC,QAAf,eAAeA,QAAf;AAAA,UAAyBC,QAAzB,eAAyBA,QAAzB;AAAA,UAAmCC,UAAnC,eAAmCA,UAAnC;AAAA,UAA+CC,OAA/C,eAA+CA,OAA/C;AACA,UAAMC,IAAI,GAAGC,KAAK,CAACC,OAAN,CAAcP,KAAd,uBAA2BA,KAA3B,IAAoC,EAAjD;AAEA,UAAIQ,GAAG,gBACH,oBAAC,SAAD,qBACI,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAE;AAAjB,8CADJ,CADJ;;AAKA,UAAIH,IAAI,CAACI,MAAL,GAAc,CAAlB,EAAqB;AACjBD,QAAAA,GAAG,gBACC,oBAAC,YAAD;AACI,UAAA,QAAQ,EAAEH,IADd;AAEI,UAAA,QAAQ,EAAEJ,QAFd;AAGI,UAAA,mBAAmB,EAAEH,aAAa,CAACY,eAHvC;AAII,UAAA,mBAAmB,EAAExB,gBAJzB;AAKI,UAAA,SAAS,EAAE,EALf;AAMI,UAAA,UAAU,EAAE;AAAA,gBAAGyB,IAAH,QAAGA,IAAH;AAAA,mBAAcA,IAAI,CAACC,EAAnB;AAAA,WANhB;AAOI,UAAA,iBAAiB,EAAE;AAAA,mBAAO;AACtBV,cAAAA,QAAQ,EAARA,QADsB;AAEtBC,cAAAA,UAAU,EAAVA,UAFsB;AAGtBC,cAAAA,OAAO,EAAPA;AAHsB,aAAP;AAAA;AAPvB,UADJ;AAeH;;AAED,0BAAO,oBAAC,WAAD,QAAcI,GAAd,CAAP;AACH;;;WAlCD,yBAAuBG,IAAvB,EAA6B;AACzB,UAAME,iBAAiB,GAAG5B,OAAO,CAAC6B,MAAR,CAAiC,cAAjC,CAA1B;AACA,UAAMC,MAAM,GAAGF,iBAAiB,CAACG,IAAlB,CAAuB,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACC,QAAH,CAAYC,IAAZ,KAAqBR,IAAI,CAACQ,IAA9B;AAAA,OAAzB,CAAf;AACA,aAAOJ,MAAM,GAAGA,MAAM,CAACG,QAAP,CAAgBR,eAAnB,GAAqC,KAAlD;AACH;;;;EALuB3B,KAAK,CAACqC,S;;AAsClC,eAAetB,aAAf","sourcesContent":["import React from \"react\";\nimport SortableTree from \"react-sortable-tree\";\nimport { plugins } from \"@webiny/plugins\";\nimport MenuItemRenderer from \"./MenuItemRenderer\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport styled from \"@emotion/styled\";\nimport { PbMenuItemPlugin } from \"../../../../../types\";\n\nconst TreeWrapper = styled(\"div\")({\n    width: \"100%\",\n    height: 400,\n    \".rst__lineHalfHorizontalRight::before, .rst__lineFullVertical::after, .rst__lineHalfVerticalTop::after, .rst__lineHalfVerticalBottom::after, .rst__lineChildren::after\":\n        {\n            backgroundColor: \"var(--mdc-theme-on-surface)\"\n        }\n});\n\nconst EmptyTree = styled(\"div\")({\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"var(--mdc-theme-on-surface)\"\n});\n\nclass MenuItemsList extends React.Component<any> {\n    static canHaveChildren(node) {\n        const pbMenuItemPlugins = plugins.byType<PbMenuItemPlugin>(\"pb-menu-item\");\n        const plugin = pbMenuItemPlugins.find(pl => pl.menuItem.type === node.type);\n        return plugin ? plugin.menuItem.canHaveChildren : false;\n    }\n\n    render() {\n        const { items, onChange, editItem, deleteItem, canSave } = this.props;\n        const data = Array.isArray(items) ? [...items] : [];\n\n        let dom = (\n            <EmptyTree>\n                <Typography use={\"overline\"}>There are no menu items to display</Typography>\n            </EmptyTree>\n        );\n        if (data.length > 0) {\n            dom = (\n                <SortableTree\n                    treeData={data}\n                    onChange={onChange}\n                    canNodeHaveChildren={MenuItemsList.canHaveChildren}\n                    nodeContentRenderer={MenuItemRenderer}\n                    rowHeight={80}\n                    getNodeKey={({ node }) => node.id}\n                    generateNodeProps={() => ({\n                        editItem,\n                        deleteItem,\n                        canSave\n                    })}\n                />\n            );\n        }\n\n        return <TreeWrapper>{dom}</TreeWrapper>;\n    }\n}\n\nexport default MenuItemsList;\n"],"file":"MenuItemsList.js"}