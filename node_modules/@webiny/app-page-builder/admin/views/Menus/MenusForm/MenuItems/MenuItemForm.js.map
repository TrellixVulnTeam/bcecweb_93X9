{"version":3,"sources":["../../../../../../src/admin/views/Menus/MenusForm/MenuItems/MenuItemForm.tsx"],"names":["uniqid","useHandlers","plugins","findObject","MenuItemForm","props","onCancel","editItem","currentMenuItem","deleteItem","__new","onSubmit","items","onChange","data","item","id","target","source","index","menuItemPlugins","byType","plugin","find","pl","menuItem","type","renderForm"],"mappings":";;;;AACA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,UAAP;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC1B,qBAA+BJ,WAAW,CAACI,KAAD,EAAQ;AAC9CC,IAAAA,QAAQ,EACJ;AAAA,UAAGC,QAAH,QAAGA,QAAH;AAAA,UAAaC,eAAb,QAAaA,eAAb;AAAA,UAA8BC,UAA9B,QAA8BA,UAA9B;AAAA,aACA,YAAM;AACF,YAAID,eAAe,CAACE,KAApB,EAA2B;AACvBD,UAAAA,UAAU,CAACD,eAAD,CAAV;AACH,SAFD,MAEO;AACHD,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,OAPD;AAAA,KAF0C;AAU9CI,IAAAA,QAAQ,EACJ;AAAA,UAAGC,KAAH,SAAGA,KAAH;AAAA,UAAUC,QAAV,SAAUA,QAAV;AAAA,UAAoBN,QAApB,SAAoBA,QAApB;AAAA,aACA,UAAAO,IAAI,EAAI;AACJ,YAAMC,IAAI,GAAG,MAAK,QAAOD,IAAP,UAAL,EAA2B,CAAC,OAAD,CAA3B,CAAb;;AACA,YAAIC,IAAI,CAACC,EAAT,EAAa;AACT,cAAMC,MAAM,GAAGd,UAAU,CAACS,KAAD,EAAQG,IAAI,CAACC,EAAb,CAAzB;;AACA,cAAIC,MAAJ,EAAY;AACRA,YAAAA,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACE,KAArB,IAA8BJ,IAA9B;AACAF,YAAAA,QAAQ,oBAAKD,KAAL,EAAR;AACH;AACJ,SAND,MAMO;AACHG,UAAAA,IAAI,CAACC,EAAL,GAAUhB,MAAM,EAAhB;AACAa,UAAAA,QAAQ,8BAAKD,KAAL,IAAYG,IAAZ,GAAR;AACH;;AAEDR,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAfD;AAAA;AAX0C,GAAR,CAA1C;AAAA,MAAQD,QAAR,gBAAQA,QAAR;AAAA,MAAkBK,QAAlB,gBAAkBA,QAAlB;;AA6BA,MAAQH,eAAR,GAA4BH,KAA5B,CAAQG,eAAR;AACA,MAAMY,eAAe,GAAGlB,OAAO,CAACmB,MAAR,CAAiC,cAAjC,CAAxB;AACA,MAAMC,MAAM,GAAGF,eAAe,CAACG,IAAhB,CAAqB,UAAAC,EAAE;AAAA,WAAIA,EAAE,CAACC,QAAH,CAAYC,IAAZ,KAAqBlB,eAAe,CAACkB,IAAzC;AAAA,GAAvB,CAAf;;AACA,MAAI,CAACJ,MAAL,EAAa;AACT,WAAO,IAAP;AACH;;AACD,SAAOA,MAAM,CAACG,QAAP,CAAgBE,UAAhB,CAA2B;AAAEhB,IAAAA,QAAQ,EAARA,QAAF;AAAYL,IAAAA,QAAQ,EAARA,QAAZ;AAAsBQ,IAAAA,IAAI,EAAEN;AAA5B,GAA3B,CAAP;AACH,CArCD;;AAuCA,eAAeJ,YAAf","sourcesContent":["import { omit, omitBy, isNull } from \"lodash\";\nimport uniqid from \"uniqid\";\nimport { useHandlers } from \"@webiny/app/hooks/useHandlers\";\nimport { plugins } from \"@webiny/plugins\";\nimport findObject from \"./findObject\";\nimport { PbMenuItemPlugin } from \"../../../../../types\";\n\nconst MenuItemForm = props => {\n    const { onCancel, onSubmit } = useHandlers(props, {\n        onCancel:\n            ({ editItem, currentMenuItem, deleteItem }) =>\n            () => {\n                if (currentMenuItem.__new) {\n                    deleteItem(currentMenuItem);\n                } else {\n                    editItem(null);\n                }\n            },\n        onSubmit:\n            ({ items, onChange, editItem }) =>\n            data => {\n                const item = omit(omitBy(data, isNull), [\"__new\"]);\n                if (item.id) {\n                    const target = findObject(items, item.id);\n                    if (target) {\n                        target.source[target.index] = item;\n                        onChange([...items]);\n                    }\n                } else {\n                    item.id = uniqid();\n                    onChange([...items, item]);\n                }\n\n                editItem(null);\n            }\n    });\n\n    const { currentMenuItem } = props;\n    const menuItemPlugins = plugins.byType<PbMenuItemPlugin>(\"pb-menu-item\");\n    const plugin = menuItemPlugins.find(pl => pl.menuItem.type === currentMenuItem.type);\n    if (!plugin) {\n        return null;\n    }\n    return plugin.menuItem.renderForm({ onSubmit, onCancel, data: currentMenuItem });\n};\n\nexport default MenuItemForm;\n"],"file":"MenuItemForm.js"}