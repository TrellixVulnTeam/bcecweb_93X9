{"version":3,"sources":["../../../../../src/admin/views/Menus/MenusForm/MenuItems.tsx"],"names":["React","css","styled","uniqid","plugins","Grid","Cell","Icon","Menu","List","ListItem","ListItemGraphic","ButtonPrimary","MenuItemsList","MenuItemForm","findObject","Typography","leftPanel","padding","backgroundColor","overflow","menuItems","width","MenuHolder","textAlign","color","AddMenu","margin","MenuItems","createRef","currentMenuItem","plugin","props","onChange","value","newItem","type","menuItem","id","__new","editItem","data","setState","item","target","source","splice","index","items","canSave","state","pbMenuItemPlugins","byType","deleteItem","map","pl","name","addItem","whiteSpace","icon","title","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\nimport uniqid from \"uniqid\";\nimport { plugins } from \"@webiny/plugins\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { Menu } from \"@webiny/ui/Menu\";\nimport { List, ListItem, ListItemGraphic } from \"@webiny/ui/List\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport MenuItemsList from \"./MenuItems/MenuItemsList\";\nimport MenuItemForm from \"./MenuItems/MenuItemForm\";\nimport findObject from \"./MenuItems/findObject\";\nimport { PbMenuItemPlugin } from \"../../../../types\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Form } from \"@webiny/form\";\n\nconst leftPanel = css({\n    padding: 25,\n    backgroundColor: \"var(--mdc-theme-background)\",\n    overflow: \"auto\"\n});\n\nconst menuItems = css({\n    width: 170\n});\n\nconst MenuHolder = styled(\"div\")({\n    textAlign: \"center\",\n    color: \"var(--mdc-theme-text-primary-on-background)\"\n});\n\nconst AddMenu = styled(\"div\")({\n    width: 180,\n    margin: \"25px auto 0 auto\"\n});\n\ntype Props = {\n    canSave: boolean;\n    menuForm: Form;\n    onChange: Function;\n    value: any;\n};\n\ntype State = {\n    currentMenuItem?: Object;\n};\n\nclass MenuItems extends React.Component<Props, State> {\n    form = React.createRef();\n    state = {\n        currentMenuItem: null\n    };\n\n    addItem = (plugin: PbMenuItemPlugin) => {\n        const { onChange, value } = this.props;\n        const newItem = { type: plugin.menuItem.type, id: uniqid(), __new: true };\n        onChange([...value, newItem]);\n        this.editItem(newItem);\n    };\n\n    editItem = data => {\n        this.setState({ currentMenuItem: data });\n    };\n\n    deleteItem = item => {\n        const { value, onChange } = this.props;\n        const target = findObject(value, item.id);\n        target && target.source.splice(target.index, 1);\n        onChange(value);\n        this.editItem(null);\n    };\n\n    render() {\n        const { value: items, onChange, canSave } = this.props;\n        const { currentMenuItem } = this.state;\n        const pbMenuItemPlugins = plugins.byType<PbMenuItemPlugin>(\"pb-menu-item\");\n\n        return (\n            <>\n                <Grid>\n                    <Cell span={7} className={leftPanel}>\n                        <MenuItemsList\n                            canSave={canSave}\n                            items={items}\n                            onChange={onChange}\n                            editItem={this.editItem}\n                            deleteItem={this.deleteItem}\n                        />\n                    </Cell>\n\n                    <Cell span={5}>\n                        {!currentMenuItem && canSave && (\n                            <>\n                                <MenuHolder>\n                                    <Typography use={\"body2\"}>\n                                        To build your menu you need to create menu items! Begin by\n                                        clicking the &quot;Add menu item&quot; button\n                                    </Typography>\n\n                                    <AddMenu>\n                                        <Menu\n                                            handle={<ButtonPrimary>+ Add menu item</ButtonPrimary>}\n                                            anchor={\"topEnd\"}\n                                        >\n                                            <List className={menuItems}>\n                                                {pbMenuItemPlugins.map(pl => (\n                                                    <ListItem\n                                                        key={pl.name}\n                                                        onClick={() => this.addItem(pl)}\n                                                        style={{ whiteSpace: \"nowrap\" }}\n                                                    >\n                                                        <ListItemGraphic>\n                                                            <Icon icon={pl.menuItem.icon} />\n                                                        </ListItemGraphic>\n                                                        {pl.menuItem.title}\n                                                    </ListItem>\n                                                ))}\n                                            </List>\n                                        </Menu>\n                                    </AddMenu>\n                                </MenuHolder>\n                            </>\n                        )}\n                        {currentMenuItem && (\n                            <MenuItemForm\n                                currentMenuItem={currentMenuItem}\n                                editItem={this.editItem}\n                                deleteItem={this.deleteItem}\n                                items={items}\n                                onChange={onChange}\n                            />\n                        )}\n                    </Cell>\n                </Grid>\n            </>\n        );\n    }\n}\n\nexport default MenuItems;\n"],"file":"MenuItems.js"}