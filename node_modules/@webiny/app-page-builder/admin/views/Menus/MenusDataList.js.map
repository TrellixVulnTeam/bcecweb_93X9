{"version":3,"sources":["../../../../src/admin/views/Menus/MenusDataList.tsx"],"names":["React","useCallback","useMemo","useState","orderBy","i18n","useRouter","useQuery","useMutation","LIST_MENUS","DELETE_MENU","useSnackbar","useConfirmationDialog","useSecurity","DataList","DataListModalOverlay","DataListModalOverlayAction","ScrollList","ListItem","ListItemText","ListItemMeta","ListActions","ListItemTextSecondary","DeleteIcon","ButtonIcon","ButtonSecondary","SearchUI","Cell","Grid","Select","serializeSorters","deserializeSorters","t","ns","SORTERS","label","sorters","createdOn","title","PageBuilderMenusDataList","canCreate","filter","setFilter","sort","setSort","history","showSnackbar","listQuery","refetchQueries","query","deleteIt","deleteMutation","showConfirmation","filterMenus","slug","description","toLowerCase","includes","sortMenus","users","Object","entries","key","value","data","pageBuilder","listMenus","URLSearchParams","location","search","get","deleteItem","item","variables","response","error","deletePageBuilderMenu","message","push","identity","pbMenuPermission","getPermission","canDelete","own","createdBy","id","login","rwd","menusDataListModalOverlay","map","loading","find","filteredData","menuList","Boolean"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\";\nimport orderBy from \"lodash/orderBy\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { LIST_MENUS, DELETE_MENU } from \"./graphql\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport { useSecurity } from \"@webiny/app-security\";\n\nimport {\n    DataList,\n    DataListModalOverlay,\n    DataListModalOverlayAction,\n    ScrollList,\n    ListItem,\n    ListItemText,\n    ListItemMeta,\n    ListActions,\n    ListItemTextSecondary\n} from \"@webiny/ui/List\";\n\nimport { DeleteIcon } from \"@webiny/ui/List/DataList/icons\";\nimport { ButtonIcon, ButtonSecondary } from \"@webiny/ui/Button\";\nimport { ReactComponent as AddIcon } from \"@webiny/app-admin/assets/icons/add-18px.svg\";\nimport { ReactComponent as FilterIcon } from \"@webiny/app-admin/assets/icons/filter-24px.svg\";\nimport SearchUI from \"@webiny/app-admin/components/SearchUI\";\nimport { Cell, Grid } from \"@webiny/ui/Grid\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { serializeSorters, deserializeSorters } from \"../utils\";\n\nconst t = i18n.ns(\"app-page-builder/admin/menus/data-list\");\n\nconst SORTERS = [\n    {\n        label: t`Newest to oldest`,\n        sorters: { createdOn: \"desc\" }\n    },\n    {\n        label: t`Oldest to newest`,\n        sorters: { createdOn: \"asc\" }\n    },\n    {\n        label: t`Title A-Z`,\n        sorters: { title: \"asc\" }\n    },\n    {\n        label: t`Title Z-A`,\n        sorters: { title: \"desc\" }\n    }\n];\n\ntype PageBuilderMenusDataListProps = {\n    canCreate: boolean;\n};\nconst PageBuilderMenusDataList = ({ canCreate }: PageBuilderMenusDataListProps) => {\n    const [filter, setFilter] = useState(\"\");\n    const [sort, setSort] = useState(serializeSorters(SORTERS[0].sorters));\n    const { history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    const listQuery = useQuery(LIST_MENUS);\n    const [deleteIt, deleteMutation] = useMutation(DELETE_MENU, {\n        refetchQueries: [{ query: LIST_MENUS }]\n    });\n\n    const { showConfirmation } = useConfirmationDialog();\n\n    const filterMenus = useCallback(\n        ({ title, slug, description }) => {\n            return (\n                title.toLowerCase().includes(filter) ||\n                slug.toLowerCase().includes(filter) ||\n                (description && description.toLowerCase().includes(filter))\n            );\n        },\n        [filter]\n    );\n\n    const sortMenus = useCallback(\n        users => {\n            if (!sort) {\n                return users;\n            }\n            const [[key, value]] = Object.entries(deserializeSorters(sort));\n            return orderBy(users, [key], [value]);\n        },\n        [sort]\n    );\n\n    const data = listQuery?.data?.pageBuilder?.listMenus?.data || [];\n    const slug = new URLSearchParams(location.search).get(\"slug\");\n\n    const deleteItem = useCallback(\n        item => {\n            showConfirmation(async () => {\n                const response = await deleteIt({\n                    variables: item\n                });\n\n                const error = response?.data?.pageBuilder?.deletePageBuilderMenu?.error;\n                if (error) {\n                    return showSnackbar(error.message);\n                }\n\n                showSnackbar(t`Menu \"{slug}\" deleted.`({ slug: item.slug }));\n\n                if (slug === item.slug) {\n                    history.push(`/page-builder/menus`);\n                }\n            });\n        },\n        [slug]\n    );\n\n    const { identity } = useSecurity();\n    const pbMenuPermission = useMemo(() => {\n        return identity.getPermission(\"pb.menu\");\n    }, []);\n\n    const canDelete = useCallback(item => {\n        if (pbMenuPermission.own) {\n            return item.createdBy.id === identity.login;\n        }\n\n        if (typeof pbMenuPermission.rwd === \"string\") {\n            return pbMenuPermission.rwd.includes(\"d\");\n        }\n\n        return true;\n    }, []);\n\n    const menusDataListModalOverlay = useMemo(\n        () => (\n            <DataListModalOverlay>\n                <Grid>\n                    <Cell span={12}>\n                        <Select\n                            value={sort}\n                            onChange={setSort}\n                            label={t`Sort by`}\n                            description={\"Sort pages by\"}\n                        >\n                            {SORTERS.map(({ label, sorters }) => {\n                                return (\n                                    <option key={label} value={serializeSorters(sorters)}>\n                                        {label}\n                                    </option>\n                                );\n                            })}\n                        </Select>\n                    </Cell>\n                </Grid>\n            </DataListModalOverlay>\n        ),\n        [sort]\n    );\n\n    const loading = [listQuery, deleteMutation].find(item => item.loading);\n\n    const filteredData = filter === \"\" ? data : data.filter(filterMenus);\n    const menuList = sortMenus(filteredData);\n\n    return (\n        <DataList\n            loading={Boolean(loading)}\n            data={menuList}\n            title={t`Menus`}\n            actions={\n                canCreate ? (\n                    <ButtonSecondary\n                        data-testid=\"data-list-new-record-button\"\n                        onClick={() => history.push(\"/page-builder/menus?new=true\")}\n                    >\n                        <ButtonIcon icon={<AddIcon />} /> {t`New Menu`}\n                    </ButtonSecondary>\n                ) : null\n            }\n            search={\n                <SearchUI value={filter} onChange={setFilter} inputPlaceholder={t`Search menus`} />\n            }\n            modalOverlay={menusDataListModalOverlay}\n            modalOverlayAction={\n                <DataListModalOverlayAction\n                    icon={<FilterIcon />}\n                    data-testid={\"default-data-list.filter\"}\n                />\n            }\n        >\n            {({ data }) => (\n                <ScrollList data-testid=\"default-data-list\">\n                    {data.map(item => (\n                        <ListItem key={item.slug} selected={item.slug === slug}>\n                            <ListItemText\n                                onClick={() =>\n                                    history.push(`/page-builder/menus?slug=${item.slug}`)\n                                }\n                            >\n                                {item.title}\n                                <ListItemTextSecondary>\n                                    {item.description || t`No description provided.`}\n                                </ListItemTextSecondary>\n                            </ListItemText>\n\n                            {canDelete(item) && (\n                                <ListItemMeta>\n                                    <ListActions>\n                                        <DeleteIcon onClick={() => deleteItem(item)} />\n                                    </ListActions>\n                                </ListItemMeta>\n                            )}\n                        </ListItem>\n                    ))}\n                </ScrollList>\n            )}\n        </DataList>\n    );\n};\n\nexport default PageBuilderMenusDataList;\n"],"file":"MenusDataList.js"}