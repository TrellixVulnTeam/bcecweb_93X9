{"version":3,"sources":["../../../../src/admin/views/Categories/CategoriesForm.tsx"],"names":["React","useCallback","useMemo","styled","i18n","Form","Grid","Cell","ButtonDefault","ButtonIcon","ButtonPrimary","CircularProgress","useMutation","useQuery","SimpleForm","SimpleFormFooter","SimpleFormContent","SimpleFormHeader","validation","GET_CATEGORY","CREATE_CATEGORY","UPDATE_CATEGORY","LIST_CATEGORIES","useRouter","useSnackbar","Input","categoryUrlValidator","plugins","Select","useSecurity","pick","get","set","isEmpty","EmptyView","t","ns","ButtonWrapper","display","justifyContent","CategoriesForm","canCreate","location","history","showSnackbar","layouts","byType","map","pl","layout","newEntry","URLSearchParams","search","slug","getQuery","variables","skip","onCompleted","data","error","pageBuilder","getCategory","push","message","loadedCategory","refetchQueries","query","create","createMutation","update","cache","categoryDataFromCache","readQuery","updatedCategoryData","writeQuery","updateMutation","loading","find","item","onSubmit","formData","isUpdate","operation","args","response","category","identity","pbMenuPermission","getPermission","canSave","own","createdBy","id","login","rwd","includes","showEmptyView","form","Bind","name","createdOn","title","submit"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { Form } from \"@webiny/form\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { ButtonDefault, ButtonIcon, ButtonPrimary } from \"@webiny/ui/Button\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport {\n    SimpleForm,\n    SimpleFormFooter,\n    SimpleFormContent,\n    SimpleFormHeader\n} from \"@webiny/app-admin/components/SimpleForm\";\nimport { validation } from \"@webiny/validation\";\nimport { GET_CATEGORY, CREATE_CATEGORY, UPDATE_CATEGORY, LIST_CATEGORIES } from \"./graphql\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { categoryUrlValidator } from \"./validators\";\nimport { plugins } from \"@webiny/plugins\";\nimport { PbPageLayoutPlugin } from \"../../../types\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { useSecurity } from \"@webiny/app-security\";\nimport pick from \"object.pick\";\nimport get from \"lodash/get\";\nimport set from \"lodash/set\";\nimport isEmpty from \"lodash/isEmpty\";\nimport EmptyView from \"@webiny/app-admin/components/EmptyView\";\nimport { ReactComponent as AddIcon } from \"@webiny/app-admin/assets/icons/add-18px.svg\";\n\nconst t = i18n.ns(\"app-page-builder/admin/categories/form\");\n\nconst ButtonWrapper = styled(\"div\")({\n    display: \"flex\",\n    justifyContent: \"space-between\"\n});\n\ntype CategoriesFormProps = {\n    canCreate: boolean;\n};\nconst CategoriesForm = ({ canCreate }: CategoriesFormProps) => {\n    const { location, history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n\n    const layouts = React.useMemo(\n        () => plugins.byType<PbPageLayoutPlugin>(\"pb-page-layout\").map(pl => pl.layout),\n        []\n    );\n    const newEntry = new URLSearchParams(location.search).get(\"new\") === \"true\";\n    const slug = new URLSearchParams(location.search).get(\"slug\");\n\n    const getQuery = useQuery(GET_CATEGORY, {\n        variables: { slug },\n        skip: !slug,\n        onCompleted: data => {\n            const error = data?.pageBuilder?.getCategory?.error;\n            if (error) {\n                history.push(\"/page-builder/categories\");\n                showSnackbar(error.message);\n            }\n        }\n    });\n\n    const loadedCategory = getQuery.data?.pageBuilder?.getCategory?.data || {};\n\n    const [create, createMutation] = useMutation(CREATE_CATEGORY, {\n        refetchQueries: [{ query: LIST_CATEGORIES }]\n    });\n\n    const [update, updateMutation] = useMutation(UPDATE_CATEGORY, {\n        refetchQueries: [{ query: LIST_CATEGORIES }],\n        update: (cache, { data }) => {\n            const categoryDataFromCache = cache.readQuery<Record<string, any>>({\n                query: GET_CATEGORY,\n                variables: { slug }\n            });\n            const updatedCategoryData = get(data, \"pageBuilder.category.data\");\n\n            if (updatedCategoryData) {\n                cache.writeQuery({\n                    query: GET_CATEGORY,\n                    data: set(\n                        categoryDataFromCache,\n                        \"pageBuilder.getCategory.data\",\n                        updatedCategoryData\n                    )\n                });\n            }\n        }\n    });\n\n    const loading = [getQuery, createMutation, updateMutation].find(item => item.loading);\n\n    const onSubmit = useCallback(\n        async formData => {\n            const isUpdate = loadedCategory.slug;\n            const data = pick(formData, [\"slug\", \"name\", \"url\", \"layout\"]);\n\n            const [operation, args] = isUpdate\n                ? [update, { variables: { slug: formData.slug, data } }]\n                : [create, { variables: { data } }];\n\n            const response = await operation(args);\n\n            const error = response?.data?.pageBuilder?.category?.error;\n            if (error) {\n                return showSnackbar(error.message);\n            }\n\n            !isUpdate && history.push(`/page-builder/categories?slug=${formData.slug}`);\n            showSnackbar(t`Category saved successfully.`);\n        },\n        [loadedCategory.slug]\n    );\n\n    const data = useMemo(() => {\n        return getQuery.data?.pageBuilder?.getCategory.data || {};\n    }, [loadedCategory.slug]);\n\n    const { identity } = useSecurity();\n    const pbMenuPermission = useMemo(() => {\n        return identity.getPermission(\"pb.category\");\n    }, []);\n\n    const canSave = useMemo(() => {\n        // User should be able to save the form\n        // if it's a new entry and user has the \"own\" permission set.\n        if (!loadedCategory.slug && pbMenuPermission.own) {\n            return true;\n        }\n\n        if (pbMenuPermission.own) {\n            return loadedCategory?.createdBy?.id === identity.login;\n        }\n\n        if (typeof pbMenuPermission.rwd === \"string\") {\n            return pbMenuPermission.rwd.includes(\"w\");\n        }\n\n        return true;\n    }, [loadedCategory.slug]);\n\n    const showEmptyView = !newEntry && !loading && isEmpty(data);\n    // Render \"No content selected\" view.\n    if (showEmptyView) {\n        return (\n            <EmptyView\n                title={t`Click on the left side list to display category details {message}`({\n                    message: canCreate ? \"or create a...\" : \"\"\n                })}\n                action={\n                    canCreate ? (\n                        <ButtonDefault\n                            data-testid=\"new-record-button\"\n                            onClick={() => history.push(\"/page-builder/categories?new=true\")}\n                        >\n                            <ButtonIcon icon={<AddIcon />} /> {t`New Category`}\n                        </ButtonDefault>\n                    ) : null\n                }\n            />\n        );\n    }\n\n    return (\n        <Form data={data} onSubmit={onSubmit}>\n            {({ data, form, Bind }) => (\n                <SimpleForm>\n                    {loading && <CircularProgress />}\n                    <SimpleFormHeader title={data.name || t`New category`} />\n                    <SimpleFormContent>\n                        <Grid>\n                            <Cell span={6}>\n                                <Bind name=\"name\" validators={validation.create(\"required\")}>\n                                    <Input label={t`Name`} />\n                                </Bind>\n                            </Cell>\n                            <Cell span={6}>\n                                <Bind name=\"slug\" validators={validation.create(\"required\")}>\n                                    <Input disabled={data.createdOn} label={t`Slug`} />\n                                </Bind>\n                            </Cell>\n                            <Cell span={12}>\n                                <Bind\n                                    name=\"url\"\n                                    validators={[\n                                        validation.create(\"required\"),\n                                        categoryUrlValidator\n                                    ]}\n                                >\n                                    <Input disabled={data.id} label={t`URL`} />\n                                </Bind>\n                            </Cell>\n                            <Cell span={6}>\n                                <Bind name=\"layout\" defaultValue={layouts[0].name}>\n                                    <Select label={t`Layout`}>\n                                        {layouts.map(({ name, title }) => (\n                                            <option key={name} value={name}>\n                                                {title}\n                                            </option>\n                                        ))}\n                                    </Select>\n                                </Bind>\n                            </Cell>\n                        </Grid>\n                    </SimpleFormContent>\n                    <SimpleFormFooter>\n                        <ButtonWrapper>\n                            <ButtonDefault\n                                onClick={() => history.push(\"/page-builder/categories\")}\n                            >{t`Cancel`}</ButtonDefault>\n                            {canSave && (\n                                <ButtonPrimary\n                                    onClick={form.submit}\n                                >{t`Save category`}</ButtonPrimary>\n                            )}\n                        </ButtonWrapper>\n                    </SimpleFormFooter>\n                </SimpleForm>\n            )}\n        </Form>\n    );\n};\n\nexport default CategoriesForm;\n"],"file":"CategoriesForm.js"}