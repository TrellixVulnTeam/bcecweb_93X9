{"version":3,"sources":["../../../../src/admin/utils/components/Title.tsx"],"names":["React","useState","useCallback","useApolloClient","styled","useHandlers","plugins","Typography","IconButton","useSnackbar","DELETE_PAGE_ELEMENT","UPDATE_PAGE_ELEMENT","EditElementDialog","createElementPlugin","ConfirmationDialog","EditIconWrapper","position","top","right","DeleteIconWrapper","Title","props","pluginName","plugin","title","client","editDialogOpened","setEditDialog","showSnackbar","openEditDialog","closeEditDialog","onSubmit","id","refresh","name","mutate","mutation","variables","data","response","pageBuilder","updatePageElement","error","setTimeout","message","showConfirmation","res","deletePageElement","unregister"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport styled from \"@emotion/styled\";\nimport { useHandlers } from \"@webiny/app/hooks/useHandlers\";\nimport { plugins } from \"@webiny/plugins\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { ReactComponent as DeleteIcon } from \"../../../editor/assets/icons/close.svg\";\nimport { ReactComponent as EditIcon } from \"../../../editor/assets/icons/edit.svg\";\nimport { DELETE_PAGE_ELEMENT, UPDATE_PAGE_ELEMENT } from \"./graphql\";\nimport EditElementDialog from \"./EditElementDialog\";\nimport createElementPlugin from \"../createElementPlugin\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\n\nconst EditIconWrapper = styled(\"div\")({\n    position: \"absolute\",\n    top: 0,\n    right: 48\n});\nconst DeleteIconWrapper = styled(\"div\")({\n    position: \"absolute\",\n    top: 0,\n    right: 16\n});\n\nconst Title = props => {\n    const { plugin: pluginName, title } = props;\n\n    const client = useApolloClient();\n    const [editDialogOpened, setEditDialog] = useState(false);\n    const { showSnackbar } = useSnackbar();\n\n    const openEditDialog = useCallback(() => setEditDialog(true), []);\n    const closeEditDialog = useCallback(() => setEditDialog(false), []);\n\n    const { onSubmit } = useHandlers(props, {\n        onSubmit:\n            ({ id, refresh }) =>\n            async plugin => {\n                const { title: name } = plugin;\n                const response = await client.mutate({\n                    mutation: UPDATE_PAGE_ELEMENT,\n                    variables: {\n                        id,\n                        data: { name }\n                    }\n                });\n\n                const { error, data } = response.data.pageBuilder.updatePageElement;\n                if (error) {\n                    closeEditDialog();\n                    setTimeout(() => {\n                        // For better UX, success message is shown after 300ms has passed.\n                        showSnackbar(error.message);\n                    }, 300);\n\n                    return;\n                }\n\n                // This will replace previously registered block plugin.\n                createElementPlugin(data);\n                closeEditDialog();\n                refresh();\n\n                setTimeout(() => {\n                    // For better UX, success message is shown after 300ms has passed.\n                    showSnackbar(\"Element \" + plugin.title + \" successfully saved.\");\n                }, 300);\n            }\n    });\n\n    return (\n        <ConfirmationDialog\n            title=\"Delete saved element\"\n            message={\n                <p>\n                    Are you sure you want to permanently delete the <strong>{title}</strong>{\" \"}\n                    element?\n                </p>\n            }\n        >\n            {({ showConfirmation }) => (\n                <Typography use=\"overline\">\n                    {title}\n                    <>\n                        <EditIconWrapper>\n                            <IconButton icon={<EditIcon />} onClick={openEditDialog} />\n                        </EditIconWrapper>{\" \"}\n                        <EditElementDialog\n                            onSubmit={onSubmit}\n                            plugin={pluginName}\n                            open={!!editDialogOpened}\n                            onClose={closeEditDialog}\n                        />\n                    </>\n\n                    <DeleteIconWrapper>\n                        <IconButton\n                            icon={<DeleteIcon />}\n                            onClick={() =>\n                                showConfirmation(async () => {\n                                    const { plugin, refresh, id } = props;\n                                    const { data: res } = await client.mutate({\n                                        mutation: DELETE_PAGE_ELEMENT,\n                                        variables: { id }\n                                    });\n\n                                    const { error } = res.pageBuilder.deletePageElement;\n                                    if (error) {\n                                        return showSnackbar(error.message);\n                                    }\n\n                                    plugins.unregister(plugin);\n\n                                    refresh();\n\n                                    showSnackbar(\n                                        <span>\n                                            Element <strong>{title}</strong> deleted!\n                                        </span>\n                                    );\n                                })\n                            }\n                        />\n                    </DeleteIconWrapper>\n                </Typography>\n            )}\n        </ConfirmationDialog>\n    );\n};\n\nexport default Title;\n"],"file":"Title.js"}