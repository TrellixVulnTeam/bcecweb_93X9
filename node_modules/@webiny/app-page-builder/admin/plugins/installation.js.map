{"version":3,"sources":["../../../src/admin/plugins/installation.tsx"],"names":["React","useState","useCallback","lazy","gql","useApolloClient","i18n","Form","Alert","Grid","Cell","ButtonPrimary","CircularProgress","Input","validation","SimpleForm","SimpleFormHeader","SimpleFormFooter","SimpleFormContent","t","ns","IS_INSTALLED","INSTALL","installationSteps","PBInstaller","onInstalled","client","loading","setLoading","error","setError","onSubmit","form","setTimeout","mutate","mutation","variables","data","res","pageBuilder","install","message","label","Bind","submit","create","name","type","title","dependencies","secure","getInstalledVersion","query","version","render","upgrades","getComponent"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, lazy } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { Form } from \"@webiny/form\";\nimport { Alert } from \"@webiny/ui/Alert\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { Input } from \"@webiny/ui/Input\";\n\nimport { validation } from \"@webiny/validation\";\nimport {\n    SimpleForm,\n    SimpleFormHeader,\n    SimpleFormFooter,\n    SimpleFormContent\n} from \"@webiny/app-admin/components/SimpleForm\";\n\nconst t = i18n.ns(\"api-page-builder/admin/installation\");\n\nconst IS_INSTALLED = gql`\n    query IsPageBuilderInstalled {\n        pageBuilder {\n            version\n        }\n    }\n`;\n\nconst INSTALL = gql`\n    mutation InstallPageBuilder($data: PbInstallInput!) {\n        pageBuilder {\n            install(data: $data) {\n                data\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n`;\n\n// eslint-disable-next-line\nconst installationSteps = {\n    1: t`Creating page categories...`,\n    2: t`Creating page blocks...`,\n    3: t`Creating pages...`,\n    4: t`Creating menus...`,\n    5: t`Finalizing...`\n};\n\nconst PBInstaller = ({ onInstalled }) => {\n    const client = useApolloClient();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const onSubmit = useCallback(async form => {\n        setLoading(true);\n        setError(null);\n        setTimeout(async () => {\n            // Temporary fix for the ES index creation failure.\n            // Let's try waiting a bit before running the installation.\n            const { data: res } = await client.mutate({\n                mutation: INSTALL,\n                variables: { data: form }\n            });\n            setLoading(false);\n            const { error } = res.pageBuilder.install;\n            if (error) {\n                setError(error.message);\n                return;\n            }\n\n            onInstalled();\n        }, 10000);\n    }, []);\n\n    const label = error ? (\n        <Alert title={t`Something went wrong`} type={\"danger\"}>\n            {error}\n        </Alert>\n    ) : (\n        t`Installing Page Builder...`\n    );\n\n    return (\n        <Form onSubmit={onSubmit} submitOnEnter>\n            {({ Bind, submit }) => (\n                <SimpleForm>\n                    {loading && <CircularProgress label={label} />}\n                    <SimpleFormHeader title={t`Install Page Builder`} />\n                    <SimpleFormContent>\n                        <Grid>\n                            <Cell span={12}>\n                                <Bind name=\"name\" validators={validation.create(\"required\")}>\n                                    <Input\n                                        label={t`Site Name`}\n                                        description={t`Name of your website, eg: \"My Site\"`}\n                                    />\n                                </Bind>\n                            </Cell>\n                        </Grid>\n                    </SimpleFormContent>\n                    <SimpleFormFooter>\n                        <ButtonPrimary\n                            data-testid=\"install-pb-button\"\n                            onClick={submit}\n                        >{t`Install Page Builder`}</ButtonPrimary>\n                    </SimpleFormFooter>\n                </SimpleForm>\n            )}\n        </Form>\n    );\n};\n\nexport default {\n    name: \"admin-installation-pb\",\n    type: \"admin-installation\",\n    title: t`Page Builder`,\n    dependencies: [],\n    secure: true,\n    async getInstalledVersion({ client }) {\n        const { data } = await client.query({ query: IS_INSTALLED });\n        return data.pageBuilder.version;\n    },\n    render({ onInstalled }) {\n        return <PBInstaller onInstalled={onInstalled} />;\n    },\n    upgrades: [\n        {\n            version: \"5.0.0\",\n            getComponent() {\n                return lazy(() => import(\"./upgrades/v5.0.0\"));\n            }\n        }\n    ]\n};\n"],"file":"installation.js"}