import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject, _templateObject2, _templateObject3;

import _regeneratorRuntime from "@babel/runtime/regenerator";
import React, { useCallback, useState } from "react";
import gql from "graphql-tag";
import { i18n } from "@webiny/app/i18n";
import { SimpleForm, SimpleFormContent, SimpleFormFooter, SimpleFormHeader } from "@webiny/app-admin/components/SimpleForm";
import { useApolloClient } from "@apollo/react-hooks";
import { Alert } from "@webiny/ui/Alert";
import { CircularProgress } from "@webiny/ui/Progress";
import { Cell, Grid } from "@webiny/ui/Grid";
import { ButtonPrimary } from "@webiny/ui/Button";
import { Typography } from "@webiny/ui/Typography";
var t = i18n.ns("app-headless-cms/admin/installation");
var UPGRADE = gql(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    mutation UpgradePageBuilder($version: String!) {\n        pageBuilder {\n            upgrade(version: $version) {\n                data\n                error {\n                    code\n                    message\n                    data\n                }\n            }\n        }\n    }\n"])));

var Upgrade = function Upgrade(_ref) {
  var onInstalled = _ref.onInstalled;
  var client = useApolloClient();

  var _useState = useState(null),
      _useState2 = _slicedToArray(_useState, 2),
      error = _useState2[0],
      setError = _useState2[1];

  var _useState3 = useState(false),
      _useState4 = _slicedToArray(_useState3, 2),
      loading = _useState4[0],
      setLoading = _useState4[1];

  var startUpgrade = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            setLoading(true);
            _context.next = 3;
            return client.mutate({
              mutation: UPGRADE,
              variables: {
                version: "5.0.0"
              }
            }).then(function (_ref3) {
              var data = _ref3.data;
              setLoading(false);
              var error = data.pageBuilder.upgrade.error;

              if (error) {
                setError(error.message);
                return;
              }

              onInstalled();
            });

          case 3:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })), []);
  var label = error ? /*#__PURE__*/React.createElement(Alert, {
    title: t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Something went wrong"]))),
    type: "danger"
  }, error) : t(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["Upgrading Page Builder..."])));
  return /*#__PURE__*/React.createElement(SimpleForm, null, loading && /*#__PURE__*/React.createElement(CircularProgress, {
    label: label
  }), /*#__PURE__*/React.createElement(SimpleFormHeader, {
    title: "Upgrade Page Builder"
  }), /*#__PURE__*/React.createElement(SimpleFormContent, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
    span: 12
  }, /*#__PURE__*/React.createElement(Typography, {
    use: "body1",
    tag: "div"
  }, "This upgrade will do the following:", /*#__PURE__*/React.createElement("ul", null, /*#__PURE__*/React.createElement("li", null, "insert Elasticsearch records into a dedicated DynamoDB table")))))), /*#__PURE__*/React.createElement(SimpleFormFooter, null, /*#__PURE__*/React.createElement(ButtonPrimary, {
    onClick: startUpgrade
  }, "Upgrade")));
};

export default Upgrade;
//# sourceMappingURL=v5.0.0.js.map