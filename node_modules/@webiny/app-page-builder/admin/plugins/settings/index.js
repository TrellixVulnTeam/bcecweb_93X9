import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject;

import _regeneratorRuntime from "@babel/runtime/regenerator";
import * as React from "react";
import { Route } from "@webiny/react-router";
import { AdminLayout } from "@webiny/app-admin/components/AdminLayout";
import PrerenderingSettings from "./components/prerenderingSettings/PrerenderingSettings";
import WebsiteSettings from "./components/websiteSettings/WebsiteSettings";
import { SecureRoute } from "@webiny/app-security/components";
import { i18n } from "@webiny/app/i18n";
import Helmet from "react-helmet";
import { RoutePlugin } from "@webiny/app/plugins/RoutePlugin";
import { NavigationMenuElement } from "@webiny/app-admin/ui/elements/NavigationMenuElement";
import { UIViewPlugin } from "@webiny/app-admin/ui/UIView";
import { NavigationView } from "@webiny/app-admin/ui/views/NavigationView";
var t = i18n.ns("app-page-builder/admin/menus");
var allPlugins = [new RoutePlugin({
  route: /*#__PURE__*/React.createElement(Route, {
    path: "/settings/page-builder/website",
    render: function render() {
      return /*#__PURE__*/React.createElement(AdminLayout, {
        title: "Page Builder - Website Settings"
      }, /*#__PURE__*/React.createElement(SecureRoute, {
        permission: "pb.settings"
      }, /*#__PURE__*/React.createElement(WebsiteSettings, null)));
    }
  })
}), new RoutePlugin({
  route: /*#__PURE__*/React.createElement(Route, {
    path: "/settings/page-builder/prerendering",
    render: function render() {
      return /*#__PURE__*/React.createElement(AdminLayout, null, /*#__PURE__*/React.createElement(Helmet, {
        title: t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Page Builder - Prerendering Settings"])))
      }), /*#__PURE__*/React.createElement(SecureRoute, {
        permission: "pb.settings"
      }, /*#__PURE__*/React.createElement(PrerenderingSettings, null)));
    }
  })
}), new UIViewPlugin(NavigationView, /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(view) {
    var _view$getSecurityHook, identity, pageBuilderMenu;

    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return view.isRendered();

          case 2:
            _view$getSecurityHook = view.getSecurityHook(), identity = _view$getSecurityHook.identity;

            if (identity.getPermission("pb.settings")) {
              _context.next = 5;
              break;
            }

            return _context.abrupt("return");

          case 5:
            pageBuilderMenu = view.addSettingsMenuElement(new NavigationMenuElement("menu.settings.pageBuilder", {
              label: "Page Builder"
            }));
            pageBuilderMenu.addElement(new NavigationMenuElement("menu.settings.pageBuilder.website", {
              label: "Website",
              path: "/settings/page-builder/website"
            }));
            pageBuilderMenu.addElement(new NavigationMenuElement("menu.settings.pageBuilder.prerendering", {
              label: "Prerendering",
              path: "/settings/page-builder/prerendering"
            }));

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}())];
export default allPlugins;
//# sourceMappingURL=index.js.map