{"version":3,"sources":["../../../../src/admin/plugins/settings/index.tsx"],"names":["React","Route","AdminLayout","PrerenderingSettings","WebsiteSettings","SecureRoute","i18n","Helmet","RoutePlugin","NavigationMenuElement","UIViewPlugin","NavigationView","t","ns","allPlugins","route","view","isRendered","getSecurityHook","identity","getPermission","pageBuilderMenu","addSettingsMenuElement","label","addElement","path"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,WAAT,QAA4B,0CAA5B;AACA,OAAOC,oBAAP;AACA,OAAOC,eAAP;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,qBAAT,QAAsC,qDAAtC;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,cAAT,QAA+B,2CAA/B;AAEA,IAAMC,CAAC,GAAGN,IAAI,CAACO,EAAL,CAAQ,8BAAR,CAAV;AAEA,IAAMC,UAAU,GAAG,CACf,IAAIN,WAAJ,CAAgB;AACZO,EAAAA,KAAK,eACD,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,gCADT;AAEI,IAAA,MAAM,EAAE;AAAA,0BACJ,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAApB,sBACI,oBAAC,WAAD;AAAa,QAAA,UAAU,EAAE;AAAzB,sBACI,oBAAC,eAAD,OADJ,CADJ,CADI;AAAA;AAFZ;AAFQ,CAAhB,CADe,EAef,IAAIP,WAAJ,CAAgB;AACZO,EAAAA,KAAK,eACD,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,qCADT;AAEI,IAAA,MAAM,EAAE;AAAA,0BACJ,oBAAC,WAAD,qBACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAEH,CAAF;AAAb,QADJ,eAEI,oBAAC,WAAD;AAAa,QAAA,UAAU,EAAE;AAAzB,sBACI,oBAAC,oBAAD,OADJ,CAFJ,CADI;AAAA;AAFZ;AAFQ,CAAhB,CAfe,EA8Bf,IAAIF,YAAJ,CAAiCC,cAAjC;AAAA,sEAAiD,iBAAMK,IAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACvCA,IAAI,CAACC,UAAL,EADuC;;AAAA;AAAA,oCAGxBD,IAAI,CAACE,eAAL,EAHwB,EAGrCC,QAHqC,yBAGrCA,QAHqC;;AAAA,gBAIxCA,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAJwC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAQvCC,YAAAA,eARuC,GAQrBL,IAAI,CAACM,sBAAL,CACpB,IAAIb,qBAAJ,CAA0B,2BAA1B,EAAuD;AACnDc,cAAAA,KAAK,EAAE;AAD4C,aAAvD,CADoB,CARqB;AAc7CF,YAAAA,eAAe,CAACG,UAAhB,CACI,IAAIf,qBAAJ,CAA0B,mCAA1B,EAA+D;AAC3Dc,cAAAA,KAAK,EAAE,SADoD;AAE3DE,cAAAA,IAAI,EAAE;AAFqD,aAA/D,CADJ;AAOAJ,YAAAA,eAAe,CAACG,UAAhB,CACI,IAAIf,qBAAJ,CAA0B,wCAA1B,EAAoE;AAChEc,cAAAA,KAAK,EAAE,cADyD;AAEhEE,cAAAA,IAAI,EAAE;AAF0D,aAApE,CADJ;;AArB6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjD;;AAAA;AAAA;AAAA;AAAA,IA9Be,CAAnB;AA4DA,eAAeX,UAAf","sourcesContent":["import * as React from \"react\";\nimport { Route } from \"@webiny/react-router\";\nimport { AdminLayout } from \"@webiny/app-admin/components/AdminLayout\";\nimport PrerenderingSettings from \"./components/prerenderingSettings/PrerenderingSettings\";\nimport WebsiteSettings from \"./components/websiteSettings/WebsiteSettings\";\nimport { SecureRoute } from \"@webiny/app-security/components\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport Helmet from \"react-helmet\";\nimport { RoutePlugin } from \"@webiny/app/plugins/RoutePlugin\";\nimport { NavigationMenuElement } from \"@webiny/app-admin/ui/elements/NavigationMenuElement\";\nimport { UIViewPlugin } from \"@webiny/app-admin/ui/UIView\";\nimport { NavigationView } from \"@webiny/app-admin/ui/views/NavigationView\";\n\nconst t = i18n.ns(\"app-page-builder/admin/menus\");\n\nconst allPlugins = [\n    new RoutePlugin({\n        route: (\n            <Route\n                path=\"/settings/page-builder/website\"\n                render={() => (\n                    <AdminLayout title={\"Page Builder - Website Settings\"}>\n                        <SecureRoute permission={\"pb.settings\"}>\n                            <WebsiteSettings />\n                        </SecureRoute>\n                    </AdminLayout>\n                )}\n            />\n        )\n    }),\n    new RoutePlugin({\n        route: (\n            <Route\n                path=\"/settings/page-builder/prerendering\"\n                render={() => (\n                    <AdminLayout>\n                        <Helmet title={t`Page Builder - Prerendering Settings`} />\n                        <SecureRoute permission={\"pb.settings\"}>\n                            <PrerenderingSettings />\n                        </SecureRoute>\n                    </AdminLayout>\n                )}\n            />\n        )\n    }),\n    new UIViewPlugin<NavigationView>(NavigationView, async view => {\n        await view.isRendered();\n\n        const { identity } = view.getSecurityHook();\n        if (!identity.getPermission(\"pb.settings\")) {\n            return;\n        }\n\n        const pageBuilderMenu = view.addSettingsMenuElement(\n            new NavigationMenuElement(\"menu.settings.pageBuilder\", {\n                label: \"Page Builder\"\n            })\n        );\n\n        pageBuilderMenu.addElement<NavigationMenuElement>(\n            new NavigationMenuElement(\"menu.settings.pageBuilder.website\", {\n                label: \"Website\",\n                path: \"/settings/page-builder/website\"\n            })\n        );\n\n        pageBuilderMenu.addElement<NavigationMenuElement>(\n            new NavigationMenuElement(\"menu.settings.pageBuilder.prerendering\", {\n                label: \"Prerendering\",\n                path: \"/settings/page-builder/prerendering\"\n            })\n        );\n    })\n];\n\nexport default allPlugins;\n"],"file":"index.js"}