{"version":3,"sources":["../../../../../../src/admin/plugins/settings/components/prerenderingSettings/PrerenderingSettings.tsx"],"names":["React","Form","Grid","Cell","ButtonPrimary","useQuery","useMutation","useSnackbar","GET_SETTINGS","UPDATE_SETTINGS","CircularProgress","validation","SimpleForm","SimpleFormFooter","SimpleFormContent","SimpleFormHeader","Input","PrerenderingSettings","showSnackbar","data","queryInProgress","loading","settings","prerendering","appUrl","storageName","update","mutationInProgress","variables","Bind","form","create","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form } from \"@webiny/form\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { GET_SETTINGS, UPDATE_SETTINGS } from \"./graphql\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { get } from \"lodash\";\nimport { validation } from \"@webiny/validation\";\n\nimport {\n    SimpleForm,\n    SimpleFormFooter,\n    SimpleFormContent,\n    SimpleFormHeader\n} from \"@webiny/app-admin/components/SimpleForm\";\nimport { Input } from \"@webiny/ui/Input\";\n\nconst PrerenderingSettings = () => {\n    const { showSnackbar } = useSnackbar();\n\n    const { data, loading: queryInProgress } = useQuery(GET_SETTINGS);\n    const settings = get(data, \"pageBuilder.getSettings.data\") || {};\n\n    const prerendering = get(data, \"pageBuilder.getDefaultSettings.data.prerendering\");\n    const appUrl = get(prerendering, \"app.url\");\n    const storageName = get(prerendering, \"storage.name\");\n\n    const [update, { loading: mutationInProgress }] = useMutation(UPDATE_SETTINGS);\n\n    return (\n        <Form\n            data={settings}\n            onSubmit={async data => {\n                await update({\n                    variables: {\n                        data\n                    }\n                });\n\n                showSnackbar(\"Settings updated successfully.\");\n            }}\n        >\n            {({ Bind, form }) => (\n                <SimpleForm>\n                    {(queryInProgress || mutationInProgress) && <CircularProgress />}\n                    <SimpleFormHeader title=\"Prerendering Settings\" />\n                    <SimpleFormContent>\n                        <Grid>\n                            <Cell span={12}>\n                                <Bind\n                                    name={\"prerendering.app.url\"}\n                                    validators={validation.create(\"url\")}\n                                >\n                                    <Input\n                                        label=\"App URL\"\n                                        description={\n                                            <span>\n                                                The URL to access your app, which is used for\n                                                prerendering.&nbsp;\n                                                {appUrl && (\n                                                    <>\n                                                        If not specified, the default one (\n                                                        <a href={appUrl}>{appUrl}</a>) is used.\n                                                    </>\n                                                )}\n                                            </span>\n                                        }\n                                    />\n                                </Bind>\n                            </Cell>\n                            <Cell span={12}>\n                                <Bind name={\"prerendering.storage.name\"}>\n                                    <Input\n                                        label=\"Storage name\"\n                                        description={\n                                            <span>\n                                                The name of the cloud resource (bucket) where the\n                                                prerendered pages and other related assets are\n                                                stored.&nbsp;\n                                                {storageName && (\n                                                    <>\n                                                        If not specified, the default one (\n                                                        <strong>{storageName}</strong>) is used.\n                                                    </>\n                                                )}\n                                            </span>\n                                        }\n                                    />\n                                </Bind>\n                            </Cell>\n                        </Grid>\n                    </SimpleFormContent>\n                    <SimpleFormFooter>\n                        <ButtonPrimary onClick={form.submit}>Save</ButtonPrimary>\n                    </SimpleFormFooter>\n                </SimpleForm>\n            )}\n        </Form>\n    );\n};\n\nexport default PrerenderingSettings;\n"],"file":"PrerenderingSettings.js"}