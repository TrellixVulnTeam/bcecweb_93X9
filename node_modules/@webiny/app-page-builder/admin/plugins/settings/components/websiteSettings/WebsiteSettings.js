import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _set from "lodash/set";
import _get from "lodash/get";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import React, { useCallback } from "react";
import { css } from "emotion";
import { View } from "@webiny/app/components/View";
import { Form } from "@webiny/form";
import { Grid, Cell } from "@webiny/ui/Grid";
import { Input } from "@webiny/ui/Input";
import { ButtonIcon, ButtonPrimary } from "@webiny/ui/Button";
import SingleImageUpload from "@webiny/app-admin/components/SingleImageUpload";
import { PagesAutocomplete } from "../../../../components/PagesAutocomplete";
import { useQuery, useMutation } from "@apollo/react-hooks";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { GET_SETTINGS, UPDATE_SETTINGS } from "./graphql";
import { CircularProgress } from "@webiny/ui/Progress";
import { validation } from "@webiny/validation";
import { sendEvent, setProperties } from "@webiny/telemetry/react";
import { ReactComponent as EditIcon } from "@svgr/webpack!../../../../assets/edit.svg";
import { useRouter } from "@webiny/react-router";
import { SimpleForm, SimpleFormFooter, SimpleFormContent, SimpleFormHeader } from "@webiny/app-admin/components/SimpleForm";
import { GET_SETTINGS as SETTINGS_QUERY } from "../../../../hooks/usePageBuilderSettings";
var style = {
  moveTrailingIcon: /*#__PURE__*/css({
    ".rmwc-icon": {
      top: "11px !important"
    }
  }, "label:moveTrailingIcon;")
};

var WebsiteSettings = function WebsiteSettings() {
  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var _useRouter = useRouter(),
      history = _useRouter.history;

  var _useQuery = useQuery(GET_SETTINGS),
      data = _useQuery.data,
      queryInProgress = _useQuery.loading;

  var settings = _get(data, "pageBuilder.getSettings.data") || {};

  var defaultSettings = _get(data, "pageBuilder.getDefaultSettings.data");

  var websiteUrl = _get(defaultSettings, "websiteUrl");

  var websitePreviewUrl = _get(defaultSettings, "websitePreviewUrl");

  var _useMutation = useMutation(UPDATE_SETTINGS, {
    update: function update(cache, _ref) {
      var data = _ref.data;
      var dataFromCache = cache.readQuery({
        query: SETTINGS_QUERY
      });

      var updatedSettings = _get(data, "pageBuilder.updateSettings.data");

      if (updatedSettings) {
        cache.writeQuery({
          query: SETTINGS_QUERY,
          data: _set(dataFromCache, "pageBuilder.getSettings.data", updatedSettings)
        });
      }
    }
  }),
      _useMutation2 = _slicedToArray(_useMutation, 2),
      update = _useMutation2[0],
      mutationInProgress = _useMutation2[1].loading;

  var editPage = useCallback(function (id) {
    history.push("/page-builder/editor/".concat(id));
  }, []);
  return /*#__PURE__*/React.createElement(Form, {
    data: settings,
    onSubmit: /*#__PURE__*/function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                data.websiteUrl = (data.websiteUrl || "").replace(/\/+$/g, "");

                if (settings.websiteUrl !== data.websiteUrl && !data.websiteUrl.includes("localhost")) {
                  sendEvent("custom-domain", {
                    domain: data.websiteUrl
                  });
                  setProperties({
                    domain: data.websiteUrl
                  });
                }

                delete data.id;
                _context.next = 5;
                return update({
                  variables: {
                    data: data
                  }
                });

              case 5:
                showSnackbar("Settings updated successfully.");

              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }()
  }, function (_ref3) {
    var Bind = _ref3.Bind,
        form = _ref3.form,
        data = _ref3.data;
    return /*#__PURE__*/React.createElement(SimpleForm, null, (queryInProgress || mutationInProgress) && /*#__PURE__*/React.createElement(CircularProgress, null), /*#__PURE__*/React.createElement(SimpleFormHeader, {
      title: "General"
    }), /*#__PURE__*/React.createElement(SimpleFormContent, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(View, {
      name: "admin.settings.pageBuilder.website.main"
    }, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "name",
      validators: validation.create("required")
    }, /*#__PURE__*/React.createElement(Input, {
      label: "Website name"
    }))), /*#__PURE__*/React.createElement(Cell, {
      span: 6
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "websiteUrl",
      validators: validation.create("url")
    }, /*#__PURE__*/React.createElement(Input, {
      label: "Website URL",
      description: /*#__PURE__*/React.createElement(React.Fragment, null, "The URL on which your app is available.", " ", websiteUrl && /*#__PURE__*/React.createElement(React.Fragment, null, "If not specified, the default one (", /*#__PURE__*/React.createElement("a", {
        href: websiteUrl,
        target: "blank"
      }, websiteUrl), ") will be used."))
    }))), /*#__PURE__*/React.createElement(Cell, {
      span: 6
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "websitePreviewUrl",
      validators: validation.create("url")
    }, /*#__PURE__*/React.createElement(Input, {
      label: "Website preview URL",
      description: /*#__PURE__*/React.createElement(React.Fragment, null, "The preview URL on which your app is available.", " ", websitePreviewUrl && /*#__PURE__*/React.createElement(React.Fragment, null, "If not specified, the default one (", /*#__PURE__*/React.createElement("a", {
        href: websitePreviewUrl,
        target: "blank"
      }, websitePreviewUrl), ") will be used."))
    })))), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }), /*#__PURE__*/React.createElement(Cell, {
      span: 6
    }, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(View, {
      name: "admin.settings.pageBuilder.website.defaultPages"
    }, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(SimpleFormHeader, {
      title: "Default pages"
    })), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "pages.home"
    }, /*#__PURE__*/React.createElement(PagesAutocomplete, {
      className: style.moveTrailingIcon,
      label: "Homepage",
      description: "To set a different page, start typing its title and select it from the dropdown menu. Note that the page must be published in order to appear.",
      trailingIcon: /*#__PURE__*/React.createElement(ButtonPrimary, {
        small: true,
        onClick: function onClick() {
          return editPage(data.pages.home);
        }
      }, /*#__PURE__*/React.createElement(ButtonIcon, {
        icon: /*#__PURE__*/React.createElement(EditIcon, null)
      }), "Edit")
    }))), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "pages.notFound"
    }, /*#__PURE__*/React.createElement(PagesAutocomplete, {
      className: style.moveTrailingIcon,
      label: "Not found (404) page",
      description: "To set a different page, start typing its title and select it from the dropdown menu. Note that the page must be published in order to appear.",
      trailingIcon: /*#__PURE__*/React.createElement(ButtonPrimary, {
        small: true,
        onClick: function onClick() {
          return editPage(data.pages.notFound);
        }
      }, /*#__PURE__*/React.createElement(ButtonIcon, {
        icon: /*#__PURE__*/React.createElement(EditIcon, null)
      }), "Edit")
    })))))), /*#__PURE__*/React.createElement(Cell, {
      span: 6
    }, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(View, {
      name: "admin.settings.pageBuilder.website.images"
    }, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(SimpleFormHeader, {
      title: "Favicon and logo"
    })), /*#__PURE__*/React.createElement(Cell, {
      span: 6
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "favicon"
    }, /*#__PURE__*/React.createElement(SingleImageUpload, {
      onChangePick: ["id", "src"],
      label: "Favicon",
      accept: ["image/png", "image/x-icon", "image/vnd.microsoft.icon"],
      description: /*#__PURE__*/React.createElement("span", null, "Supported file types:", " ", /*#__PURE__*/React.createElement("strong", null, ".png"), " and", " ", /*#__PURE__*/React.createElement("strong", null, ".ico"), " .")
    }))), /*#__PURE__*/React.createElement(Cell, {
      span: 6
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "logo"
    }, /*#__PURE__*/React.createElement(SingleImageUpload, {
      label: "Logo",
      onChangePick: ["id", "src"]
    })))))))), /*#__PURE__*/React.createElement(SimpleFormHeader, {
      title: "Social Media"
    }), /*#__PURE__*/React.createElement(SimpleFormContent, null, /*#__PURE__*/React.createElement(View, {
      name: "admin.settings.pageBuilder.website.social"
    }, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 6
    }, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(View, {
      name: "admin.settings.pageBuilder.website.social.left"
    }, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "social.facebook",
      validators: validation.create("url")
    }, /*#__PURE__*/React.createElement(Input, {
      label: "Facebook"
    }))), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "social.twitter",
      validators: validation.create("url")
    }, /*#__PURE__*/React.createElement(Input, {
      label: "Twitter"
    }))), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "social.instagram",
      validators: validation.create("url")
    }, /*#__PURE__*/React.createElement(Input, {
      label: "Instagram"
    })))))), /*#__PURE__*/React.createElement(Cell, {
      span: 6
    }, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(View, {
      name: "admin.settings.pageBuilder.website.social.right"
    }, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "social.image"
    }, /*#__PURE__*/React.createElement(SingleImageUpload, {
      onChangePick: ["id", "src"],
      label: "Default Open Graph image",
      description: "The default OG image for all pages. Recommended resolution 1596x545." // TODO: @adrian
      // imageEditor={{
      //     crop: {
      //         autoEnable: true,
      //         aspectRatio: 1596 / 545
      //     }
      // }}

    }))))))))), /*#__PURE__*/React.createElement(SimpleFormFooter, null, /*#__PURE__*/React.createElement(ButtonPrimary, {
      onClick: form.submit
    }, "Save")));
  });
};

export default WebsiteSettings;
//# sourceMappingURL=WebsiteSettings.js.map