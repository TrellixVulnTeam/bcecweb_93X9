{"version":3,"sources":["../../../../../src/admin/plugins/permissionRenderer/PageBuilderPermissions/PageBuilderPermissions.tsx"],"names":["React","Fragment","useCallback","useMemo","Grid","Cell","Select","i18n","PermissionInfo","gridNoPaddingClass","Form","Elevation","Typography","Checkbox","CheckboxGroup","CustomSection","t","ns","PAGE_BUILDER","PAGE_BUILDER_FULL_ACCESS","PAGE_BUILDER_SETTINGS_ACCESS","FULL_ACCESS","NO_ACCESS","CUSTOM_ACCESS","ENTITIES","pwOptions","id","name","PageBuilderPermissions","value","onChange","onFormChange","formData","newValue","Array","isArray","filter","item","startsWith","accessLevel","push","forEach","entity","permission","rwd","own","pw","join","settingsAccessLevel","hasFullAccess","find","permissions","length","data","entityPermission","Object","assign","hasSettingsAccess","Bind","setValue","getValue","map","includes","pageAccessScope","marginTop","padding","paddingBottom"],"mappings":"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","sourcesContent":["import React, { Fragment, useCallback, useMemo } from \"react\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { PermissionInfo, gridNoPaddingClass } from \"@webiny/app-admin/components/Permissions\";\nimport { Form } from \"@webiny/form\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Checkbox, CheckboxGroup } from \"@webiny/ui/Checkbox\";\nimport CustomSection from \"./CustomSection\";\n\nconst t = i18n.ns(\"app-page-builder/admin/plugins/permissionRenderer\");\n\nconst PAGE_BUILDER = \"pb\";\nconst PAGE_BUILDER_FULL_ACCESS = \"pb.*\";\nconst PAGE_BUILDER_SETTINGS_ACCESS = `${PAGE_BUILDER}.settings`;\nconst FULL_ACCESS = \"full\";\nconst NO_ACCESS = \"no\";\nconst CUSTOM_ACCESS = \"custom\";\nconst ENTITIES = [\"category\", \"menu\", \"page\"];\n\nconst pwOptions = [\n    { id: \"p\", name: t`Publish` },\n    { id: \"u\", name: t`Unpublish` },\n    { id: \"r\", name: t`Request review` },\n    { id: \"c\", name: t`Request changes` }\n];\n\nexport const PageBuilderPermissions = ({ value, onChange }) => {\n    const onFormChange = useCallback(\n        formData => {\n            let newValue = [];\n            if (Array.isArray(value)) {\n                // Let's just filter out the `pb*` permission objects, it's easier to build new ones from scratch.\n                newValue = value.filter(item => !item.name.startsWith(PAGE_BUILDER));\n            }\n\n            if (formData.accessLevel === NO_ACCESS) {\n                onChange(newValue);\n                return;\n            }\n\n            if (formData.accessLevel === FULL_ACCESS) {\n                newValue.push({ name: PAGE_BUILDER_FULL_ACCESS });\n                onChange(newValue);\n                return;\n            }\n\n            // Handling custom access level.\n\n            // Categories, menus, and pages first.\n            ENTITIES.forEach(entity => {\n                if (\n                    formData[`${entity}AccessScope`] &&\n                    formData[`${entity}AccessScope`] !== NO_ACCESS\n                ) {\n                    const permission: Record<string, any> = {\n                        name: `${PAGE_BUILDER}.${entity}`,\n                        rwd: \"r\"\n                    };\n\n                    if (formData[`${entity}AccessScope`] === \"own\") {\n                        permission.own = true;\n                        permission.rwd = \"rwd\";\n                    } else if (formData[`${entity}RWD`]) {\n                        permission.rwd = formData[`${entity}RWD`];\n                    }\n\n                    // For pages, we can also manage publishing and reviewing of pages.\n                    if (entity === \"page\") {\n                        // Set default publishing workflow value\n                        permission.pw = \"\";\n                        if (Array.isArray(formData[`${entity}PW`])) {\n                            permission.pw = formData[`${entity}PW`].join(\"\");\n                        }\n                    }\n\n                    newValue.push(permission);\n                }\n            });\n\n            // Settings.\n            if (formData.settingsAccessLevel === FULL_ACCESS) {\n                newValue.push({ name: PAGE_BUILDER_SETTINGS_ACCESS });\n            }\n\n            onChange(newValue);\n        },\n        [value]\n    );\n\n    const formData = useMemo(() => {\n        if (!Array.isArray(value)) {\n            return { accessLevel: NO_ACCESS };\n        }\n\n        const hasFullAccess = value.find(\n            item => item.name === PAGE_BUILDER_FULL_ACCESS || item.name === \"*\"\n        );\n        if (hasFullAccess) {\n            return { accessLevel: FULL_ACCESS };\n        }\n\n        const permissions = value.filter(item => item.name.startsWith(PAGE_BUILDER));\n        if (!permissions.length) {\n            return { accessLevel: NO_ACCESS };\n        }\n\n        // We're dealing with custom permissions. Let's first prepare data for \"categories\", \"menus\", and \"pages\".\n        const formData: Record<string, any> = {\n            accessLevel: CUSTOM_ACCESS,\n            settingsAccessLevel: NO_ACCESS\n        };\n\n        ENTITIES.forEach(entity => {\n            const data: Record<string, any> = {\n                [`${entity}AccessScope`]: NO_ACCESS,\n                [`${entity}RWD`]: \"r\"\n            };\n\n            const entityPermission = permissions.find(\n                item => item.name === `${PAGE_BUILDER}.${entity}`\n            );\n\n            if (entityPermission) {\n                data[`${entity}AccessScope`] = entityPermission.own ? \"own\" : FULL_ACCESS;\n                if (entityPermission.rwd) {\n                    data[`${entity}RWD`] = entityPermission.rwd;\n                }\n\n                // For pages, we can also manage publishing workflow.\n                if (entity === \"page\") {\n                    data[`${entity}PW`] = entityPermission.pw ? [...entityPermission.pw] : [];\n                }\n            }\n\n            Object.assign(formData, data);\n        });\n\n        // Finally, let's prepare data for Page Builder settings.\n        const hasSettingsAccess = permissions.find(\n            item => item.name === PAGE_BUILDER_SETTINGS_ACCESS\n        );\n        if (hasSettingsAccess) {\n            formData.settingsAccessLevel = FULL_ACCESS;\n        }\n\n        return formData;\n    }, []);\n\n    return (\n        <Form data={formData} onChange={onFormChange}>\n            {({ data, Bind, setValue }) => (\n                <Fragment>\n                    <Grid className={gridNoPaddingClass}>\n                        <Cell span={6}>\n                            <PermissionInfo title={t`Access Level`} />\n                        </Cell>\n                        <Cell span={6}>\n                            <Bind name={\"accessLevel\"}>\n                                <Select label={t`Access Level`}>\n                                    <option value={NO_ACCESS}>{t`No access`}</option>\n                                    <option value={FULL_ACCESS}>{t`Full access`}</option>\n                                    <option value={CUSTOM_ACCESS}>{t`Custom access`}</option>\n                                </Select>\n                            </Bind>\n                        </Cell>\n                    </Grid>\n                    {data.accessLevel === CUSTOM_ACCESS && (\n                        <Fragment>\n                            <CustomSection\n                                data={data}\n                                Bind={Bind}\n                                setValue={setValue}\n                                entity={\"category\"}\n                                title={\"Categories\"}\n                            />\n                            <CustomSection\n                                data={data}\n                                Bind={Bind}\n                                setValue={setValue}\n                                entity={\"menu\"}\n                                title={\"Menus\"}\n                            />\n\n                            <CustomSection\n                                data={data}\n                                Bind={Bind}\n                                setValue={setValue}\n                                entity={\"page\"}\n                                title={\"Pages\"}\n                            >\n                                <Cell span={12}>\n                                    <Bind name={\"pagePW\"}>\n                                        <CheckboxGroup\n                                            label={t`Publishing actions`}\n                                            description={t`Publishing-related actions that can be performed on the content.`}\n                                        >\n                                            {({ getValue, onChange }) =>\n                                                pwOptions.map(({ id, name }) => (\n                                                    <Checkbox\n                                                        disabled={\n                                                            ![\"full\", \"own\"].includes(\n                                                                data.pageAccessScope\n                                                            )\n                                                        }\n                                                        key={id}\n                                                        label={name}\n                                                        value={getValue(id)}\n                                                        onChange={onChange(id)}\n                                                    />\n                                                ))\n                                            }\n                                        </CheckboxGroup>\n                                    </Bind>\n                                </Cell>\n                            </CustomSection>\n\n                            <Elevation z={1} style={{ marginTop: 10 }}>\n                                <Grid>\n                                    <Cell span={12}>\n                                        <Typography use={\"overline\"}>{t`Settings`}</Typography>\n                                    </Cell>\n                                    <Cell span={12}>\n                                        <Grid style={{ padding: 0, paddingBottom: 24 }}>\n                                            <Cell span={6}>\n                                                <PermissionInfo title={t`Manage settings`} />\n                                            </Cell>\n                                            <Cell span={6} align={\"middle\"}>\n                                                <Bind name={\"settingsAccessLevel\"}>\n                                                    <Select label={t`Access Level`}>\n                                                        <option\n                                                            value={NO_ACCESS}\n                                                        >{t`No access`}</option>\n                                                        <option\n                                                            value={FULL_ACCESS}\n                                                        >{t`Full Access`}</option>\n                                                    </Select>\n                                                </Bind>\n                                            </Cell>\n                                        </Grid>\n                                    </Cell>\n                                </Grid>\n                            </Elevation>\n                        </Fragment>\n                    )}\n                </Fragment>\n            )}\n        </Form>\n    );\n};\n"],"file":"PageBuilderPermissions.js"}