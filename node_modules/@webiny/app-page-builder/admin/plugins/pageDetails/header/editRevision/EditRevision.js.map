{"version":3,"sources":["../../../../../../src/admin/plugins/pageDetails/header/editRevision/EditRevision.tsx"],"names":["React","useCallback","useState","IconButton","useRouter","Tooltip","CREATE_PAGE","GQLCache","useSnackbar","i18n","useMutation","usePermission","t","ns","EditRevision","props","page","canEdit","history","inProgress","setInProgress","showSnackbar","createPageFrom","createFromAndEdit","variables","from","id","update","cache","data","pageBuilder","createPage","error","updateLatestRevisionInListCache","response","message","push","encodeURIComponent","locked"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { ReactComponent as EditIcon } from \"../../../../assets/edit.svg\";\nimport { CREATE_PAGE } from \"~/admin/graphql/pages\";\nimport * as GQLCache from \"~/admin/views/Pages/cache\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport usePermission from \"~/hooks/usePermission\";\n\nconst t = i18n.ns(\"app-headless-cms/app-page-builder/page-details/header/edit\");\n\nconst EditRevision = props => {\n    const { page } = props;\n    const { canEdit } = usePermission();\n    const { history } = useRouter();\n    const [inProgress, setInProgress] = useState<boolean>();\n    const { showSnackbar } = useSnackbar();\n    const [createPageFrom] = useMutation(CREATE_PAGE);\n\n    const createFromAndEdit = useCallback(async () => {\n        setInProgress(true);\n        const response = await createPageFrom({\n            variables: { from: page.id },\n            update(cache, { data }) {\n                if (data.pageBuilder.createPage.error) {\n                    return;\n                }\n\n                GQLCache.updateLatestRevisionInListCache(cache, data.pageBuilder.createPage.data);\n            }\n        });\n        setInProgress(false);\n        const { data, error } = response.data.pageBuilder.createPage;\n        if (error) {\n            return showSnackbar(error.message);\n        }\n        history.push(`/page-builder/editor/${encodeURIComponent(data.id)}`);\n    }, [page]);\n\n    if (!canEdit(page)) {\n        return null;\n    }\n\n    if (page.locked) {\n        return (\n            <Tooltip content={t`Edit`} placement={\"top\"}>\n                <IconButton\n                    disabled={inProgress}\n                    icon={<EditIcon />}\n                    onClick={createFromAndEdit}\n                    data-testid={\"pb-page-details-header-edit-revision\"}\n                />\n            </Tooltip>\n        );\n    }\n\n    return (\n        <Tooltip content={t`Edit`} placement={\"top\"}>\n            <IconButton\n                disabled={inProgress}\n                icon={<EditIcon />}\n                onClick={() => {\n                    history.push(`/page-builder/editor/${encodeURIComponent(page.id)}`);\n                }}\n                data-testid={\"pb-page-details-header-edit-revision\"}\n            />\n        </Tooltip>\n    );\n};\n\nexport default EditRevision;\n"],"file":"EditRevision.js"}