{"version":3,"sources":["../../../../../../src/admin/plugins/pageDetails/header/requestReview/RequestReview.tsx"],"names":["React","IconButton","Tooltip","useConfirmationDialog","i18n","useSnackbar","useMutation","gql","usePermission","t","ns","REQUEST_REVIEW","RequestReview","props","page","canRequestReview","showSnackbar","requestReview","title","message","showConfirmation","buttonEnabled","status","variables","id","response","error","data","pageBuilder"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,SAASC,qBAAT,QAAsC,+CAAtC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,aAAP;AAEA,IAAMC,CAAC,GAAGL,IAAI,CAACM,EAAL,CAAQ,qDAAR,CAAV;AAEA,IAAMC,cAAc,GAAGJ,GAAH,2cAApB;;AAmBA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC3B,MAAQC,IAAR,GAAiBD,KAAjB,CAAQC,IAAR;;AAEA,uBAA6BN,aAAa,EAA1C;AAAA,MAAQO,gBAAR,kBAAQA,gBAAR;;AACA,qBAAyBV,WAAW,EAApC;AAAA,MAAQW,YAAR,gBAAQA,YAAR;;AACA,qBAAwBV,WAAW,CAACK,cAAD,CAAnC;AAAA;AAAA,MAAOM,aAAP;;AAEA,8BAA6Bd,qBAAqB,CAAC;AAC/Ce,IAAAA,KAAK,EAAET,CAAF,qFAD0C;AAE/CU,IAAAA,OAAO,eACH,+BACKV,CAAC,8JAAD,CACG;AACIS,MAAAA,KAAK,eAAE,oCAASJ,IAAI,CAACI,KAAd;AADX,KADH,CADL;AAH2C,GAAD,CAAlD;AAAA,MAAQE,gBAAR,yBAAQA,gBAAR;;AAaA,MAAI,CAACL,gBAAgB,EAArB,EAAyB;AACrB,WAAO,IAAP;AACH;;AAED,MAAMM,aAAa,GAAGP,IAAI,CAACQ,MAAL,KAAgB,OAAhB,IAA2BR,IAAI,CAACQ,MAAL,KAAgB,kBAAjE;AAEA,sBACI,oBAAC,KAAD,CAAO,QAAP,qBACI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEb,CAAF,qFAAhB;AAAqC,IAAA,SAAS,EAAE;AAAhD,kBACI,oBAAC,UAAD;AACI,IAAA,QAAQ,EAAE,CAACY,aADf;AAEI,IAAA,IAAI,eAAE,oBAAC,iBAAD,OAFV;AAGI,IAAA,OAAO,EAAE;AAAA,aACLD,gBAAgB,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACUH,aAAa,CAAC;AACjCM,kBAAAA,SAAS,EAAE;AACPC,oBAAAA,EAAE,EAAEV,IAAI,CAACU;AADF;AADsB,iBAAD,CADvB;;AAAA;AACPC,gBAAAA,QADO;AAOLC,gBAAAA,KAPK,GAOKD,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BX,aAP/B,CAOLS,KAPK;;AAQb,oBAAIA,KAAJ,EAAW;AACPV,kBAAAA,YAAY,CAACU,KAAK,CAACP,OAAP,CAAZ;AACH,iBAFD,MAEO;AACHH,kBAAAA,YAAY,CAACP,CAAD,yGAAZ;AACH;;AAZY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD,GADX;AAAA;AAHb,IADJ,CADJ,CADJ;AA0BH,CApDD;;AAsDA,eAAeG,aAAf","sourcesContent":["import React from \"react\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { ReactComponent as RequestReviewIcon } from \"../../../../assets/emoji_people-24px.svg\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport usePermission from \"../../../../../hooks/usePermission\";\n\nconst t = i18n.ns(\"app-page-builder/page-details/header/request-review\");\n\nconst REQUEST_REVIEW = gql`\n    mutation PbPageRequestReview($id: ID!) {\n        pageBuilder {\n            requestReview(id: $id) {\n                data {\n                    id\n                    status\n                    locked\n                }\n                error {\n                    code\n                    message\n                    data\n                }\n            }\n        }\n    }\n`;\n\nconst RequestReview = props => {\n    const { page } = props;\n\n    const { canRequestReview } = usePermission();\n    const { showSnackbar } = useSnackbar();\n    const [requestReview] = useMutation(REQUEST_REVIEW);\n\n    const { showConfirmation } = useConfirmationDialog({\n        title: t`Request Review`,\n        message: (\n            <p>\n                {t`You are about to request review of the {title} page. Are you sure you want to continue?`(\n                    {\n                        title: <strong>{page.title}</strong>\n                    }\n                )}\n            </p>\n        )\n    });\n\n    if (!canRequestReview()) {\n        return null;\n    }\n\n    const buttonEnabled = page.status === \"draft\" || page.status === \"changesRequested\";\n\n    return (\n        <React.Fragment>\n            <Tooltip content={t`Request Review`} placement={\"top\"}>\n                <IconButton\n                    disabled={!buttonEnabled}\n                    icon={<RequestReviewIcon />}\n                    onClick={() =>\n                        showConfirmation(async () => {\n                            const response = await requestReview({\n                                variables: {\n                                    id: page.id\n                                }\n                            });\n\n                            const { error } = response.data.pageBuilder.requestReview;\n                            if (error) {\n                                showSnackbar(error.message);\n                            } else {\n                                showSnackbar(t`Review request sent successfully.`);\n                            }\n                        })\n                    }\n                />\n            </Tooltip>\n        </React.Fragment>\n    );\n};\n\nexport default RequestReview;\n"],"file":"RequestReview.js"}