{"version":3,"sources":["../../../../../../src/admin/plugins/pageDetails/header/revisionSelector/RevisionSelector.tsx"],"names":["React","css","useRouter","ButtonDefault","Icon","MenuItem","Typography","Menu","statusesLabels","buttonStyle","color","menuList","flexDirection","justifyContent","alignItems","textAlign","width","RevisionSelector","props","page","location","history","query","URLSearchParams","search","revisions","evt","set","detail","index","id","push","toString","version","map","rev","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,cAAP;AAEA,IAAMC,WAAW,gBAAGR,GAAG,CAAC;AACpB,kBAAgB;AACZS,IAAAA,KAAK,EAAE;AADK;AADI,CAAD,uBAAvB;AAMA,IAAMC,QAAQ,gBAAGV,GAAG,CAAC;AACjB,oBAAkB;AACdW,IAAAA,aAAa,EAAE,QADD;AAEdC,IAAAA,cAAc,EAAE,QAFF;AAGdC,IAAAA,UAAU,EAAE,UAHE;AAIdC,IAAAA,SAAS,EAAE,MAJG;AAKdC,IAAAA,KAAK,EAAE;AALO;AADD,CAAD,oBAApB;;AAUA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAC9B,MAAQC,IAAR,GAAiBD,KAAjB,CAAQC,IAAR;;AACA,mBAA8BjB,SAAS,EAAvC;AAAA,MAAQkB,QAAR,cAAQA,QAAR;AAAA,MAAkBC,OAAlB,cAAkBA,OAAlB;;AACA,MAAMC,KAAK,GAAG,IAAIC,eAAJ,CAAoBH,QAAQ,CAACI,MAA7B,CAAd;AAEA,wBAA2BL,IAA3B,CAAQM,SAAR;AAAA,MAAQA,SAAR,gCAAoB,EAApB;AAEA,sBACI,oBAAC,IAAD;AACI,IAAA,SAAS,EAAEd,QADf;AAEI,IAAA,QAAQ,EAAE,kBAAAe,GAAG,EAAI;AACbJ,MAAAA,KAAK,CAACK,GAAN,CAAU,IAAV,EAAgBR,IAAI,CAACM,SAAL,CAAeC,GAAG,CAACE,MAAJ,CAAWC,KAA1B,EAAiCC,EAAjD;AACAT,MAAAA,OAAO,CAACU,IAAR,CAAa;AAAEP,QAAAA,MAAM,EAAEF,KAAK,CAACU,QAAN;AAAV,OAAb;AACH,KALL;AAMI,IAAA,MAAM,eACF,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAEvB;AAA1B,YACMU,IAAI,CAACc,OADX,oBACoB,oBAAC,IAAD;AAAM,MAAA,IAAI,eAAE,oBAAC,UAAD;AAAZ,MADpB;AAPR,KAYKR,SAAS,CAACS,GAAV,CAAc,UAAAC,GAAG;AAAA,wBACd,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAG,CAACL;AAAnB,oBACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE;AAAjB,YAA4BK,GAAG,CAACF,OAAhC,CADJ,eAEI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE;AAAjB,YAA8BzB,cAAc,CAAC2B,GAAG,CAACC,MAAL,CAA5C,MAFJ,CADc;AAAA,GAAjB,CAZL,CADJ;AAqBH,CA5BD;;AA8BA,eAAenB,gBAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { ReactComponent as DownButton } from \"../../../../assets/round-arrow_drop_down-24px.svg\";\nimport { MenuItem } from \"@rmwc/menu\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Menu } from \"@webiny/ui/Menu\";\nimport statusesLabels from \"../../../../constants/pageStatusesLabels\";\n\nconst buttonStyle = css({\n    \"&.mdc-button\": {\n        color: \"var(--mdc-theme-text-primary-on-background) !important\"\n    }\n});\n\nconst menuList = css({\n    \".mdc-list-item\": {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"baseline\",\n        textAlign: \"left\",\n        width: 150\n    }\n});\n\nconst RevisionSelector = props => {\n    const { page } = props;\n    const { location, history } = useRouter();\n    const query = new URLSearchParams(location.search);\n\n    const { revisions = [] } = page;\n\n    return (\n        <Menu\n            className={menuList}\n            onSelect={evt => {\n                query.set(\"id\", page.revisions[evt.detail.index].id);\n                history.push({ search: query.toString() });\n            }}\n            handle={\n                <ButtonDefault className={buttonStyle}>\n                    v{page.version} <Icon icon={<DownButton />} />\n                </ButtonDefault>\n            }\n        >\n            {revisions.map(rev => (\n                <MenuItem key={rev.id}>\n                    <Typography use={\"body2\"}>v{rev.version}</Typography>\n                    <Typography use={\"caption\"}>({statusesLabels[rev.status]})</Typography>\n                </MenuItem>\n            ))}\n        </Menu>\n    );\n};\n\nexport default RevisionSelector;\n"],"file":"RevisionSelector.js"}