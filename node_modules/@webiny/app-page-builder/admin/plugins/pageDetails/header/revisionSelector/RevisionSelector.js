import React from "react";
import { css } from "emotion";
import { useRouter } from "@webiny/react-router";
import { ButtonDefault } from "@webiny/ui/Button";
import { Icon } from "@webiny/ui/Icon";
import { ReactComponent as DownButton } from "@svgr/webpack!../../../../assets/round-arrow_drop_down-24px.svg";
import { MenuItem } from "@rmwc/menu";
import { Typography } from "@webiny/ui/Typography";
import { Menu } from "@webiny/ui/Menu";
import statusesLabels from "../../../../constants/pageStatusesLabels";
var buttonStyle = /*#__PURE__*/css({
  "&.mdc-button": {
    color: "var(--mdc-theme-text-primary-on-background) !important"
  }
}, "label:buttonStyle;");
var menuList = /*#__PURE__*/css({
  ".mdc-list-item": {
    flexDirection: "column",
    justifyContent: "center",
    alignItems: "baseline",
    textAlign: "left",
    width: 150
  }
}, "label:menuList;");

var RevisionSelector = function RevisionSelector(props) {
  var page = props.page;

  var _useRouter = useRouter(),
      location = _useRouter.location,
      history = _useRouter.history;

  var query = new URLSearchParams(location.search);
  var _page$revisions = page.revisions,
      revisions = _page$revisions === void 0 ? [] : _page$revisions;
  return /*#__PURE__*/React.createElement(Menu, {
    className: menuList,
    onSelect: function onSelect(evt) {
      query.set("id", page.revisions[evt.detail.index].id);
      history.push({
        search: query.toString()
      });
    },
    handle: /*#__PURE__*/React.createElement(ButtonDefault, {
      className: buttonStyle
    }, "v", page.version, " ", /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(DownButton, null)
    }))
  }, revisions.map(function (rev) {
    return /*#__PURE__*/React.createElement(MenuItem, {
      key: rev.id
    }, /*#__PURE__*/React.createElement(Typography, {
      use: "body2"
    }, "v", rev.version), /*#__PURE__*/React.createElement(Typography, {
      use: "caption"
    }, "(", statusesLabels[rev.status], ")"));
  }));
};

export default RevisionSelector;
//# sourceMappingURL=RevisionSelector.js.map