{"version":3,"sources":["../../../../../../src/admin/plugins/pageDetails/header/pageOptionsMenu/PageOptionsMenu.tsx"],"names":["React","useCallback","IconButton","Icon","ListItemGraphic","MenuItem","Menu","usePageBuilderSettings","useSiteStatus","css","useSnackbar","classNames","useConfirmationDialog","useConfigureWebsiteUrlDialog","plugins","gql","useMutation","SecureView","PUBLISH_PAGE","menuStyles","width","right","left","opacity","pointerEvents","PageOptionsMenu","props","page","settings","isSpecialPage","getPageUrl","getWebsiteUrl","updateSettingsMutation","isSiteRunning","refreshSiteStatus","showConfigureWebsiteUrlDialog","publishPageMutation","showSnackbar","title","message","status","showConfirmation","target","window","Cypress","url","locked","handlePreviewClick","open","previewButtonLabel","disabled","publish","variables","id","updateSettings","data","pages","home","response","error","pageBuilder","byType","map","plugin","name","render"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { ReactComponent as MoreVerticalIcon } from \"../../../../assets/more_vert.svg\";\nimport { ReactComponent as PreviewIcon } from \"../../../../assets/visibility.svg\";\nimport { ReactComponent as HomeIcon } from \"../../../../assets/round-home-24px.svg\";\nimport { ListItemGraphic } from \"@webiny/ui/List\";\nimport { MenuItem, Menu } from \"@webiny/ui/Menu\";\nimport { usePageBuilderSettings } from \"../../../../hooks/usePageBuilderSettings\";\nimport { useSiteStatus } from \"../../../../hooks/useSiteStatus\";\nimport { css } from \"emotion\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport classNames from \"classnames\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport { useConfigureWebsiteUrlDialog } from \"../../../../hooks/useConfigureWebsiteUrl\";\nimport { plugins } from \"@webiny/plugins\";\nimport { PbPageDetailsHeaderRightOptionsMenuItemPlugin } from \"../../../../../types\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { SecureView } from \"@webiny/app-security\";\n\nconst PUBLISH_PAGE = gql`\n    mutation PbPublishPage($id: ID!) {\n        pageBuilder {\n            publishPage(id: $id) {\n                data {\n                    id\n                    path\n                    status\n                    locked\n                }\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n`;\n\nconst menuStyles = css({\n    width: 250,\n    right: -105,\n    left: \"auto !important\",\n    \".disabled\": {\n        opacity: 0.5,\n        pointerEvents: \"none\"\n    }\n});\n\nconst PageOptionsMenu = props => {\n    const { page } = props;\n    const { settings, isSpecialPage, getPageUrl, getWebsiteUrl, updateSettingsMutation } =\n        usePageBuilderSettings();\n\n    const [isSiteRunning, refreshSiteStatus] = useSiteStatus(getWebsiteUrl());\n    const { showConfigureWebsiteUrlDialog } = useConfigureWebsiteUrlDialog(\n        getWebsiteUrl(),\n        refreshSiteStatus\n    );\n\n    const publishPageMutation = useMutation(PUBLISH_PAGE);\n\n    const { showSnackbar } = useSnackbar();\n    const { showConfirmation } = useConfirmationDialog({\n        title: \"Set as homepage\",\n        message: (\n            <span>\n                You&#39;re about to set the <strong>{page.title}</strong> page as your new homepage,\n                are you sure you want to continue?{\" \"}\n                {page.status !== \"published\" &&\n                    \"Note that your page will be automatically published.\"}\n            </span>\n        )\n    });\n\n    // We must prevent opening in new tab - Cypress doesn't work with new tabs.\n    const target = window.Cypress ? \"_self\" : \"_blank\";\n    const url = getPageUrl(page, !page.locked);\n\n    const handlePreviewClick = useCallback(() => {\n        if (isSiteRunning) {\n            window.open(url, target, \"noopener\");\n        } else {\n            showConfigureWebsiteUrlDialog();\n        }\n    }, [url, isSiteRunning]);\n\n    const previewButtonLabel = page.locked ? \"View\" : \"Preview\";\n    return (\n        <Menu\n            className={menuStyles}\n            handle={\n                <IconButton\n                    data-testid=\"pb-page-details-header-page-options-menu\"\n                    icon={<MoreVerticalIcon />}\n                />\n            }\n        >\n            <MenuItem onClick={handlePreviewClick}>\n                <ListItemGraphic>\n                    <Icon\n                        data-testid=\"pb-page-details-header-page-options-menu-preview\"\n                        icon={<PreviewIcon />}\n                    />\n                </ListItemGraphic>\n                {previewButtonLabel}\n            </MenuItem>\n\n            <SecureView permission={\"pb.settings\"}>\n                <MenuItem\n                    className={classNames({ disabled: isSpecialPage(page, \"home\") })}\n                    onClick={() => {\n                        showConfirmation(async () => {\n                            if (!page.locked) {\n                                const [publish] = publishPageMutation;\n                                await publish({\n                                    variables: { id: page.id }\n                                });\n                            }\n\n                            const [updateSettings] = updateSettingsMutation;\n                            const response = await updateSettings({\n                                variables: {\n                                    data: {\n                                        pages: {\n                                            ...settings.pages,\n                                            home: page.id\n                                        }\n                                    }\n                                }\n                            });\n\n                            const { error } = response.data.pageBuilder.updateSettings;\n                            if (error) {\n                                showSnackbar(error.message);\n                            } else {\n                                showSnackbar(\"Homepage set successfully!\");\n                            }\n                        });\n                    }}\n                >\n                    <ListItemGraphic>\n                        <Icon icon={<HomeIcon />} />\n                    </ListItemGraphic>\n                    Set as homepage\n                </MenuItem>\n            </SecureView>\n\n            {plugins\n                .byType<PbPageDetailsHeaderRightOptionsMenuItemPlugin>(\n                    \"pb-page-details-header-right-options-menu-item\"\n                )\n                .map(plugin => (\n                    <React.Fragment key={plugin.name}>{plugin.render(props)}</React.Fragment>\n                ))}\n        </Menu>\n    );\n};\n\nexport default PageOptionsMenu;\n"],"file":"PageOptionsMenu.js"}