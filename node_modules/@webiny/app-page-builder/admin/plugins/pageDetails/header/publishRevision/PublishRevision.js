import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;

import _regeneratorRuntime from "@babel/runtime/regenerator";
import React, { useMemo } from "react";
import { IconButton } from "@webiny/ui/Button";
import { Tooltip } from "@webiny/ui/Tooltip";
import { useConfirmationDialog } from "@webiny/app-admin/hooks/useConfirmationDialog";
import { i18n } from "@webiny/app/i18n";
import { useSecurity } from "@webiny/app-security";
import { ReactComponent as PublishIcon } from "@svgr/webpack!../../../../assets/round-publish-24px.svg";
import { ReactComponent as UnpublishIcon } from "@svgr/webpack!../../../../assets/unpublish.svg";
import { usePublishRevisionHandler } from "../../pageRevisions/usePublishRevisionHandler";
import usePermission from "../../../../../hooks/usePermission";
var t = i18n.ns("app-headless-cms/app-page-builder/page-details/header/publish");

var PublishRevision = function PublishRevision(props) {
  var _useSecurity = useSecurity(),
      identity = _useSecurity.identity;

  var _usePermission = usePermission(),
      canPublish = _usePermission.canPublish,
      canUnpublish = _usePermission.canUnpublish;

  var page = props.page;

  var _usePublishRevisionHa = usePublishRevisionHandler({
    page: page
  }),
      publishRevision = _usePublishRevisionHa.publishRevision,
      unpublishRevision = _usePublishRevisionHa.unpublishRevision;

  var _useConfirmationDialo = useConfirmationDialog({
    title: t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Publish page"]))),
    message: /*#__PURE__*/React.createElement("p", null, t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["You are about to publish the {title} page. Are you sure you want to continue?"])))({
      title: /*#__PURE__*/React.createElement("strong", null, page.title)
    }))
  }),
      showPublishConfirmation = _useConfirmationDialo.showConfirmation;

  var _useConfirmationDialo2 = useConfirmationDialog({
    title: t(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["Unpublish page"]))),
    message: /*#__PURE__*/React.createElement("p", null, t(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["You are about to unpublish the {title} page. Are you sure you want to continue?"])))({
      title: /*#__PURE__*/React.createElement("strong", null, page.title)
    }))
  }),
      showUnpublishConfirmation = _useConfirmationDialo2.showConfirmation;

  var pbPagePermission = useMemo(function () {
    return identity.getPermission("pb.page");
  }, []);

  if (!pbPagePermission) {
    return null;
  }

  if (page.status === "published" && canUnpublish()) {
    return /*#__PURE__*/React.createElement(Tooltip, {
      content: t(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["Unpublish"]))),
      placement: "top"
    }, /*#__PURE__*/React.createElement(IconButton, {
      icon: /*#__PURE__*/React.createElement(UnpublishIcon, null),
      onClick: function onClick() {
        return showUnpublishConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
          return _regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return unpublishRevision(page);

                case 2:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        })));
      }
    }));
  }

  if (canPublish()) {
    return /*#__PURE__*/React.createElement(Tooltip, {
      content: t(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["Publish"]))),
      placement: "top"
    }, /*#__PURE__*/React.createElement(IconButton, {
      icon: /*#__PURE__*/React.createElement(PublishIcon, null),
      onClick: function onClick() {
        return showPublishConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
          return _regeneratorRuntime.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  _context2.next = 2;
                  return publishRevision(page);

                case 2:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        })));
      }
    }));
  }

  return null;
};

export default PublishRevision;
//# sourceMappingURL=PublishRevision.js.map