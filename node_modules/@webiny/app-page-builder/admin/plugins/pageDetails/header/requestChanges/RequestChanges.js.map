{"version":3,"sources":["../../../../../../src/admin/plugins/pageDetails/header/requestChanges/RequestChanges.tsx"],"names":["React","IconButton","Tooltip","useConfirmationDialog","i18n","useSnackbar","useMutation","gql","usePermission","t","ns","REQUEST_CHANGES","RequestChanges","props","page","canRequestChange","showSnackbar","requestChanges","title","message","showConfirmation","buttonEnabled","status","variables","id","response","error","data","pageBuilder"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,SAASC,qBAAT,QAAsC,+CAAtC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,aAAP;AAEA,IAAMC,CAAC,GAAGL,IAAI,CAACM,EAAL,CAAQ,sDAAR,CAAV;AAEA,IAAMC,eAAe,GAAGJ,GAAH,6cAArB;;AAmBA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC5B,MAAQC,IAAR,GAAiBD,KAAjB,CAAQC,IAAR;;AACA,uBAA6BN,aAAa,EAA1C;AAAA,MAAQO,gBAAR,kBAAQA,gBAAR;;AACA,qBAAyBV,WAAW,EAApC;AAAA,MAAQW,YAAR,gBAAQA,YAAR;;AACA,qBAAyBV,WAAW,CAACK,eAAD,CAApC;AAAA;AAAA,MAAOM,cAAP;;AAEA,8BAA6Bd,qBAAqB,CAAC;AAC/Ce,IAAAA,KAAK,EAAET,CAAF,sFAD0C;AAE/CU,IAAAA,OAAO,eACH,+BACKV,CAAC,+JAAD,CACG;AACIS,MAAAA,KAAK,eAAE,oCAASJ,IAAI,CAACI,KAAd;AADX,KADH,CADL;AAH2C,GAAD,CAAlD;AAAA,MAAQE,gBAAR,yBAAQA,gBAAR;;AAaA,MAAI,CAACL,gBAAgB,EAArB,EAAyB;AACrB,WAAO,IAAP;AACH;;AAED,MAAMM,aAAa,GAAGP,IAAI,CAACQ,MAAL,KAAgB,iBAAtC;AAEA,sBACI,oBAAC,KAAD,CAAO,QAAP,qBACI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEb,CAAF,sFAAhB;AAAsC,IAAA,SAAS,EAAE;AAAjD,kBACI,oBAAC,UAAD;AACI,IAAA,QAAQ,EAAE,CAACY,aADf;AAEI,IAAA,IAAI,eAAE,oBAAC,kBAAD,OAFV;AAGI,IAAA,OAAO,EAAE;AAAA,aACLD,gBAAgB,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACUH,cAAc,CAAC;AAClCM,kBAAAA,SAAS,EAAE;AACPC,oBAAAA,EAAE,EAAEV,IAAI,CAACU;AADF;AADuB,iBAAD,CADxB;;AAAA;AACPC,gBAAAA,QADO;AAOLC,gBAAAA,KAPK,GAOKD,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BX,cAP/B,CAOLS,KAPK;;AAQb,oBAAIA,KAAJ,EAAW;AACPV,kBAAAA,YAAY,CAACU,KAAK,CAACP,OAAP,CAAZ;AACH,iBAFD,MAEO;AACHH,kBAAAA,YAAY,CAACP,CAAD,0GAAZ;AACH;;AAZY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD,GADX;AAAA;AAHb,IADJ,CADJ,CADJ;AA0BH,CAnDD;;AAqDA,eAAeG,cAAf","sourcesContent":["import React from \"react\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { ReactComponent as RequestChangesIcon } from \"../../../../assets/rule-24px.svg\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport usePermission from \"../../../../../hooks/usePermission\";\n\nconst t = i18n.ns(\"app-page-builder/page-details/header/request-changes\");\n\nconst REQUEST_CHANGES = gql`\n    mutation PbPageRequestChanges($id: ID!) {\n        pageBuilder {\n            requestChanges(id: $id) {\n                data {\n                    id\n                    status\n                    locked\n                }\n                error {\n                    code\n                    message\n                    data\n                }\n            }\n        }\n    }\n`;\n\nconst RequestChanges = props => {\n    const { page } = props;\n    const { canRequestChange } = usePermission();\n    const { showSnackbar } = useSnackbar();\n    const [requestChanges] = useMutation(REQUEST_CHANGES);\n\n    const { showConfirmation } = useConfirmationDialog({\n        title: t`Request Changes`,\n        message: (\n            <p>\n                {t`You are about to request changes to the {title} page. Are you sure you want to continue?`(\n                    {\n                        title: <strong>{page.title}</strong>\n                    }\n                )}\n            </p>\n        )\n    });\n\n    if (!canRequestChange()) {\n        return null;\n    }\n\n    const buttonEnabled = page.status === \"reviewRequested\";\n\n    return (\n        <React.Fragment>\n            <Tooltip content={t`Request Changes`} placement={\"top\"}>\n                <IconButton\n                    disabled={!buttonEnabled}\n                    icon={<RequestChangesIcon />}\n                    onClick={() =>\n                        showConfirmation(async () => {\n                            const response = await requestChanges({\n                                variables: {\n                                    id: page.id\n                                }\n                            });\n\n                            const { error } = response.data.pageBuilder.requestChanges;\n                            if (error) {\n                                showSnackbar(error.message);\n                            } else {\n                                showSnackbar(t`Changes request sent successfully.`);\n                            }\n                        })\n                    }\n                />\n            </Tooltip>\n        </React.Fragment>\n    );\n};\n\nexport default RequestChanges;\n"],"file":"RequestChanges.js"}