{"version":3,"sources":["../../../../../../src/admin/plugins/pageDetails/header/deletePage/DeletePage.tsx"],"names":["React","useCallback","useApolloClient","useRouter","useSnackbar","useConfirmationDialog","useDialog","IconButton","Tooltip","DELETE_PAGE","i18n","usePermission","GQLCache","t","ns","DeletePage","props","page","client","showSnackbar","history","showDialog","canDelete","title","message","dataTestId","showConfirmation","confirmDelete","id","split","uniquePageId","mutate","mutation","variables","update","cache","data","pageBuilder","deletePage","error","removePageFromListCache","res","substr","push"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport { useDialog } from \"@webiny/app-admin/hooks/useDialog\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { ReactComponent as DeleteIcon } from \"../../../../assets/delete.svg\";\nimport { DELETE_PAGE } from \"~/admin/graphql/pages\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport usePermission from \"~/hooks/usePermission\";\nimport * as GQLCache from \"~/admin/views/Pages/cache\";\n\nconst t = i18n.ns(\"app-headless-cms/app-page-builder/page-details/header/delete-page\");\n\nconst DeletePage = props => {\n    const { page } = props;\n    const client = useApolloClient();\n    const { showSnackbar } = useSnackbar();\n    const { history } = useRouter();\n    const { showDialog } = useDialog();\n    const { canDelete } = usePermission();\n\n    const { showConfirmation } = useConfirmationDialog({\n        title: t`Delete page`,\n        message: (\n            <p>\n                {t`You are about to delete the entire page and all of its revisions!`}\n                <br />\n                {t`Are you sure you want to permanently delete the page {title}?`({\n                    title: <strong>{page.title}</strong>\n                })}\n            </p>\n        ),\n        dataTestId: \"pb-page-details-header-delete-dialog\"\n    });\n\n    const confirmDelete = useCallback(\n        () =>\n            showConfirmation(async () => {\n                const [uniquePageId] = page.id.split(\"#\");\n                const id = `${uniquePageId}#0001`;\n                const { data: res } = await client.mutate({\n                    mutation: DELETE_PAGE,\n                    variables: { id },\n                    update(cache, { data }) {\n                        if (data.pageBuilder.deletePage.error) {\n                            return;\n                        }\n                        // Also, delete the page from \"LIST_PAGES_ cache\n                        GQLCache.removePageFromListCache(cache, page);\n                    }\n                });\n\n                const { error } = res?.pageBuilder?.deletePage;\n                if (error) {\n                    return showDialog(error.message, { title: t`Could not delete page.` });\n                }\n\n                showSnackbar(\n                    <span>\n                        {t`The page {title} was deleted successfully.`({\n                            title: (\n                                <strong>\n                                    {page.title.substr(0, 20)}\n                                    ...\n                                </strong>\n                            )\n                        })}\n                    </span>\n                );\n\n                history.push(\"/page-builder/pages\");\n            }),\n        [page.id]\n    );\n\n    if (!canDelete(page)) {\n        return null;\n    }\n\n    return (\n        <Tooltip content={\"Delete\"} placement={\"top\"}>\n            <IconButton\n                icon={<DeleteIcon />}\n                onClick={confirmDelete}\n                data-testid={\"pb-page-details-header-delete-button\"}\n            />\n        </Tooltip>\n    );\n};\n\nexport default DeletePage;\n"],"file":"DeletePage.js"}