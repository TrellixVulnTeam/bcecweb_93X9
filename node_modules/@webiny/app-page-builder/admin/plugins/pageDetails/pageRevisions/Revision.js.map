{"version":3,"sources":["../../../../../src/admin/plugins/pageDetails/pageRevisions/Revision.tsx"],"names":["React","css","TimeAgo","ListItem","ListItemText","ListItemTextPrimary","ListItemTextSecondary","ListItemGraphic","ListItemMeta","IconButton","Icon","MenuItem","Menu","MenuDivider","ConfirmationDialog","Tooltip","useRevisionHandlers","useConfigureWebsiteUrlDialog","usePageBuilderSettings","useSiteStatus","usePermission","primaryColor","color","revisionsMenu","width","right","left","getIcon","rev","published","status","locked","icon","text","Div","children","Revision","revision","page","tooltipText","getWebsiteUrl","getPageUrl","isSiteRunning","refreshSiteStatus","deleteRevision","createRevision","publishRevision","unpublishRevision","editRevision","showConfigureWebsiteUrlDialog","canPublish","canUnpublish","canDelete","showConfirmation","title","savedOn","version","window","open","path"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport TimeAgo from \"timeago-react\";\nimport {\n    ListItem,\n    ListItemText,\n    ListItemTextPrimary,\n    ListItemTextSecondary,\n    ListItemGraphic,\n    ListItemMeta\n} from \"@webiny/ui/List\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { MenuItem, Menu, MenuDivider } from \"@webiny/ui/Menu\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { ReactComponent as MoreVerticalIcon } from \"../../../assets/more_vert.svg\";\nimport { ReactComponent as LockIcon } from \"../../../assets/lock.svg\";\nimport { ReactComponent as BeenHereIcon } from \"../../../assets/beenhere.svg\";\nimport { ReactComponent as GestureIcon } from \"../../../assets/gesture.svg\";\nimport { useRevisionHandlers } from \"./useRevisionHandlers\";\nimport { useConfigureWebsiteUrlDialog } from \"../../../hooks/useConfigureWebsiteUrl\";\nimport { usePageBuilderSettings } from \"../../../hooks/usePageBuilderSettings\";\nimport { useSiteStatus } from \"../../../hooks/useSiteStatus\";\nimport { ReactComponent as AddIcon } from \"../../../assets/add.svg\";\nimport { ReactComponent as EditIcon } from \"../../../assets/edit.svg\";\nimport { ReactComponent as PublishIcon } from \"../../../assets/round-publish-24px.svg\";\nimport { ReactComponent as UnpublishIcon } from \"../../../assets/unpublish.svg\";\nimport { ReactComponent as DeleteIcon } from \"../../../assets/delete.svg\";\nimport { ReactComponent as PreviewIcon } from \"../../../assets/visibility.svg\";\nimport { PbPageData, PbPageRevision } from \"../../../../types\";\nimport usePermission from \"../../../../hooks/usePermission\";\n\ntype RevisionProps = {\n    revision: PbPageRevision;\n    page: PbPageData;\n};\n\nconst primaryColor = css({ color: \"var(--mdc-theme-primary)\" });\n\nconst revisionsMenu = css({\n    width: 250,\n    right: -105,\n    left: \"auto !important\"\n});\n\nconst getIcon = (rev: PbPageRevision) => {\n    const published = rev.status === \"published\";\n    switch (true) {\n        case rev.locked && !published:\n            return {\n                icon: <Icon icon={<LockIcon />} />,\n                text: \"This revision is locked (it has already been published)\"\n            };\n        case published:\n            return {\n                icon: <Icon icon={<BeenHereIcon />} className={primaryColor} />,\n                text: \"This revision is currently published!\"\n            };\n        default:\n            return {\n                icon: <Icon icon={<GestureIcon />} />,\n                text: \"This is a draft\"\n            };\n    }\n};\n\nconst Div = ({ children }) => {\n    return <div>{children}</div>;\n};\n\nconst Revision = ({ revision, page }: RevisionProps) => {\n    const { icon, text: tooltipText } = getIcon(revision);\n    const { getWebsiteUrl, getPageUrl } = usePageBuilderSettings();\n    const [isSiteRunning, refreshSiteStatus] = useSiteStatus(getWebsiteUrl());\n\n    const { deleteRevision, createRevision, publishRevision, unpublishRevision, editRevision } =\n        useRevisionHandlers({\n            revision,\n            page\n        });\n\n    const { showConfigureWebsiteUrlDialog } = useConfigureWebsiteUrlDialog(\n        getWebsiteUrl(),\n        refreshSiteStatus\n    );\n\n    const { canPublish, canUnpublish, canDelete } = usePermission();\n\n    return (\n        <ConfirmationDialog\n            title=\"Confirmation required!\"\n            message={<span>Are you sure you want to delete this revision?</span>}\n        >\n            {({ showConfirmation }) => (\n                <ListItem>\n                    <ListItemGraphic>\n                        <Tooltip content={tooltipText} placement={\"bottom\"}>\n                            {icon}\n                        </Tooltip>\n                    </ListItemGraphic>\n                    <ListItemText>\n                        <ListItemTextPrimary>{revision.title}</ListItemTextPrimary>\n                        <ListItemTextSecondary>\n                            Last modified <TimeAgo datetime={revision.savedOn} />\n                            (#{revision.version})\n                        </ListItemTextSecondary>\n                    </ListItemText>\n                    <ListItemMeta>\n                        <Menu\n                            handle={<IconButton icon={<MoreVerticalIcon />} />}\n                            className={revisionsMenu}\n                        >\n                            <MenuItem onClick={createRevision}>\n                                <ListItemGraphic>\n                                    <Icon icon={<AddIcon />} />\n                                </ListItemGraphic>\n                                New from current\n                            </MenuItem>\n                            {!revision.locked && (\n                                <MenuItem onClick={editRevision}>\n                                    <ListItemGraphic>\n                                        <Icon icon={<EditIcon />} />\n                                    </ListItemGraphic>\n                                    Edit\n                                </MenuItem>\n                            )}\n\n                            {revision.status !== \"published\" && canPublish() && (\n                                <MenuItem onClick={() => publishRevision(revision)}>\n                                    <ListItemGraphic>\n                                        <Icon icon={<PublishIcon />} />\n                                    </ListItemGraphic>\n                                    Publish\n                                </MenuItem>\n                            )}\n\n                            {revision.status === \"published\" && canUnpublish() && (\n                                <MenuItem onClick={() => unpublishRevision(revision)}>\n                                    <ListItemGraphic>\n                                        <Icon icon={<UnpublishIcon />} />\n                                    </ListItemGraphic>\n                                    Unpublish\n                                </MenuItem>\n                            )}\n\n                            <MenuItem\n                                onClick={() => {\n                                    if (isSiteRunning) {\n                                        window.open(\n                                            getPageUrl({\n                                                ...revision,\n                                                path: page.path\n                                            }),\n                                            \"_blank\",\n                                            \"noopener\"\n                                        );\n                                    } else {\n                                        showConfigureWebsiteUrlDialog();\n                                    }\n                                }}\n                            >\n                                <ListItemGraphic>\n                                    <Icon icon={<PreviewIcon />} />\n                                </ListItemGraphic>\n                                Preview\n                            </MenuItem>\n\n                            {canDelete(page) && !revision.locked && (\n                                <Div>\n                                    <MenuDivider />\n                                    <MenuItem onClick={() => showConfirmation(deleteRevision)}>\n                                        <ListItemGraphic>\n                                            <Icon icon={<DeleteIcon />} />\n                                        </ListItemGraphic>\n                                        Delete\n                                    </MenuItem>\n                                </Div>\n                            )}\n                        </Menu>\n                    </ListItemMeta>\n                </ListItem>\n            )}\n        </ConfirmationDialog>\n    );\n};\n\nexport default Revision;\n"],"file":"Revision.js"}