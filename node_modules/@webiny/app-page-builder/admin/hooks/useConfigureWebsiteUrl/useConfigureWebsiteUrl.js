import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10;

import React from "react";
import { css } from "emotion";
import { Link } from "@webiny/react-router";
import { i18n } from "@webiny/app/i18n";
import { useDialog } from "@webiny/app-admin/hooks/useDialog";
var t = i18n.ns("app-page-builder/utils");
var confirmationMessageStyles = /*#__PURE__*/css({
  "& code": {
    backgroundColor: "var(--mdc-theme-background)",
    padding: "0px 8px"
  }
}, "label:confirmationMessageStyles;");
var PAGE_BUILDER_SETTINGS_LINK = "/settings/page-builder/website";
export var configureWebsiteUrlTitle = t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Configure website URL"])));
export var ConfigureWebsiteUrlMessage = function ConfigureWebsiteUrlMessage(_ref) {
  var websiteUrl = _ref.websiteUrl;

  if (typeof websiteUrl !== "string") {
    return /*#__PURE__*/React.createElement("span", {
      className: confirmationMessageStyles
    }, t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Public website URL is missing. Please visit the {pageBuilderSettingsLink} and set it first."])))({
      pageBuilderSettingsLink: /*#__PURE__*/React.createElement(Link, {
        to: PAGE_BUILDER_SETTINGS_LINK
      }, t(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["Page Builder settings"]))))
    }));
  }

  var isLocalHost = websiteUrl && websiteUrl.includes("localhost");
  return /*#__PURE__*/React.createElement("span", {
    className: confirmationMessageStyles
  }, t(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["No website is running at"]))), " ", /*#__PURE__*/React.createElement("strong", null, websiteUrl), ".", /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("br", null), isLocalHost ? /*#__PURE__*/React.createElement("span", null, t(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["Either start the server by running"]))), " ", /*#__PURE__*/React.createElement("code", null, "cd apps/website/code && yarn start"), " ") : /*#__PURE__*/React.createElement("span", null, t(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["Either deploy the website by running"]))), " ", /*#__PURE__*/React.createElement("code", null, "yarn webiny deploy apps/website"), " "), /*#__PURE__*/React.createElement("br", null), t(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["or update the website URL by going into the"]))), " ", /*#__PURE__*/React.createElement(Link, {
    to: PAGE_BUILDER_SETTINGS_LINK
  }, t(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["page builder settings."])))));
};
export var useConfigureWebsiteUrlDialog = function useConfigureWebsiteUrlDialog(websiteUrl) {
  var onAccept = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  var _useDialog = useDialog(),
      showDialog = _useDialog.showDialog;

  return {
    showConfigureWebsiteUrlDialog: function showConfigureWebsiteUrlDialog() {
      showDialog( /*#__PURE__*/React.createElement(ConfigureWebsiteUrlMessage, {
        websiteUrl: websiteUrl
      }), {
        title: configureWebsiteUrlTitle,
        actions: {
          accept: {
            label: t(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["Retry"]))),
            onClick: onAccept
          },
          cancel: {
            label: t(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["Cancel"])))
          }
        }
      });
    }
  };
};
//# sourceMappingURL=useConfigureWebsiteUrl.js.map