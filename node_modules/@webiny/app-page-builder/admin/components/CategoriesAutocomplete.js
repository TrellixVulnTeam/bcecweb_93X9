import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _get from "lodash/get";

var _templateObject, _templateObject2;

import React from "react";
import { AutoComplete } from "@webiny/ui/AutoComplete";
import gql from "graphql-tag";
import { useQuery } from "@apollo/react-hooks";
var GET_CATEGORY = gql(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    query GetCategory($slug: String!) {\n        pageBuilder {\n            getCategory(slug: $slug) {\n                data {\n                    slug\n                    name\n                }\n            }\n        }\n    }\n"])));
var LIST_CATEGORIES = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    query ListCategories {\n        pageBuilder {\n            listCategories {\n                data {\n                    slug\n                    name\n                }\n            }\n        }\n    }\n"])));
export function CategoriesAutocomplete(props) {
  var listCategoriesQuery = useQuery(LIST_CATEGORIES);
  var getCategoryQuery = useQuery(GET_CATEGORY, {
    skip: !props.value,
    variables: {
      slug: props.value
    }
  });

  var publishedPages = _get(listCategoriesQuery, "data.pageBuilder.listCategories.data", []);

  var publishedPage = _get(getCategoryQuery, "data.pageBuilder.getCategory.data");

  return /*#__PURE__*/React.createElement(AutoComplete, Object.assign({}, props, {
    options: publishedPages,
    valueProp: "slug",
    textProp: "name",
    value: publishedPage
  }));
}
//# sourceMappingURL=CategoriesAutocomplete.js.map