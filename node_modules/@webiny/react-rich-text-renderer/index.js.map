{"version":3,"sources":["../src/index.tsx"],"names":["React","classNames","renderParagraph","block","props","style","className","data","textAlign","__html","text","renderDelimiter","renderHeader","level","renderImage","caption","file","renderList","items","map","i","renderQuote","defaultRenderers","delimiter","header","image","list","paragraph","quote","RichTextRenderer","renderers","Object","assign","index","renderer","type","node","isValidElement","cloneElement","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport { OutputBlockData } from \"@editorjs/editorjs\";\n\nfunction renderParagraph(block: OutputBlockData) {\n    const props = { style: {}, className: null };\n\n    if (block.data.textAlign) {\n        props.style[\"textAlign\"] = block.data.textAlign;\n    }\n    if (block.data.className) {\n        props.className = block.data.className;\n    }\n    return (\n        <p\n            {...props}\n            className={classNames(\"rte-block-paragraph\", props.className)}\n            dangerouslySetInnerHTML={{ __html: block.data.text }}\n        />\n    );\n}\n\nfunction renderDelimiter() {\n    return <div className=\"rte-block-delimiter\" />;\n}\n\nfunction renderHeader(block: OutputBlockData) {\n    const props = { style: {}, className: null };\n\n    if (block.data.textAlign) {\n        props.style[\"textAlign\"] = block.data.textAlign;\n    }\n    if (block.data.className) {\n        props.className = block.data.className;\n    }\n\n    switch (block.data.level) {\n        case 1:\n            return (\n                <h1\n                    {...props}\n                    className={classNames(\n                        props.className,\n                        \"rte-block-heading rte-block-heading--h1\"\n                    )}\n                    dangerouslySetInnerHTML={{ __html: block.data.text }}\n                />\n            );\n\n        case 2:\n            return (\n                <h2\n                    {...props}\n                    className={classNames(\n                        props.className,\n                        \"rte-block-heading rte-block-heading--h2\"\n                    )}\n                    dangerouslySetInnerHTML={{ __html: block.data.text }}\n                />\n            );\n\n        case 3:\n            return (\n                <h3\n                    {...props}\n                    className={classNames(\n                        props.className,\n                        \"rte-block-heading rte-block-heading--h3\"\n                    )}\n                    dangerouslySetInnerHTML={{ __html: block.data.text }}\n                />\n            );\n\n        case 4:\n            return (\n                <h4\n                    {...props}\n                    className={classNames(\n                        props.className,\n                        \"rte-block-heading rte-block-heading--h4\"\n                    )}\n                    dangerouslySetInnerHTML={{ __html: block.data.text }}\n                />\n            );\n\n        case 5:\n            return (\n                <h5\n                    {...props}\n                    className={classNames(\n                        props.className,\n                        \"rte-block-heading rte-block-heading--h5\"\n                    )}\n                    dangerouslySetInnerHTML={{ __html: block.data.text }}\n                />\n            );\n\n        case 6:\n            return (\n                <h6\n                    {...props}\n                    className={classNames(\n                        props.className,\n                        \"rte-block-heading rte-block-heading--h6\"\n                    )}\n                    dangerouslySetInnerHTML={{ __html: block.data.text }}\n                />\n            );\n    }\n}\n\nfunction renderImage(block: OutputBlockData) {\n    return <img className={\"rte-block-image\"} alt={block.data.caption} src={block.data.file} />;\n}\n\nfunction renderList(block: OutputBlockData) {\n    switch (block.data.style) {\n        case \"unordered\":\n            return (\n                <ul className={\"rte-block-list\"}>\n                    {block.data.items.map((text, i) => (\n                        <li key={i}>{text}</li>\n                    ))}\n                </ul>\n            );\n\n        case \"ordered\":\n            return (\n                <ol className={\"rte-block-list\"}>\n                    {block.data.items.map((text, i) => (\n                        <li key={i}>{text}</li>\n                    ))}\n                </ol>\n            );\n        default:\n            return null;\n    }\n}\n\nfunction renderQuote(block: OutputBlockData) {\n    return (\n        <blockquote className={\"rte-block-blockquote\"}>\n            <p>{block.data.text}</p>\n        </blockquote>\n    );\n}\n\nconst defaultRenderers: Record<string, RichTextBlockRenderer> = {\n    delimiter: renderDelimiter,\n    header: renderHeader,\n    image: renderImage,\n    list: renderList,\n    paragraph: renderParagraph,\n    quote: renderQuote\n};\n\nexport interface RichTextBlockRenderer {\n    (block: OutputBlockData): React.ReactNode;\n}\n\ninterface RichTextRendererProps {\n    data: OutputBlockData[];\n    renderers?: Record<string, RichTextBlockRenderer>;\n}\n\nexport const RichTextRenderer: React.FunctionComponent<RichTextRendererProps> = props => {\n    // Combine default renderers with custom renderers\n    const renderers = Object.assign({}, defaultRenderers, props.renderers);\n\n    return (\n        <React.Fragment>\n            {props.data.map((block, index) => {\n                const renderer = renderers[block.type];\n                if (!renderer) {\n                    return null;\n                }\n\n                const node = renderer(block);\n                if (React.isValidElement(node)) {\n                    return React.cloneElement(node, { key: index });\n                }\n\n                return null;\n            })}\n        </React.Fragment>\n    );\n};\n"],"file":"index.js"}