{"version":3,"sources":["../../../../../../src/admin/components/FormEditor/Tabs/EditTab/EditTab.tsx"],"names":["React","useCallback","useState","Icon","Center","Vertical","Horizontal","Draggable","EditFieldDialog","Field","rowHandle","EditContainer","fieldHandle","fieldContainer","Row","RowContainer","useFormEditor","i18n","t","namespace","EditTab","getFields","insertField","updateField","deleteField","data","moveField","moveRow","getFieldPlugin","editingField","setEditingField","dropTarget","setDropTarget","editField","field","undefined","handleDropField","source","pos","name","ui","row","fieldId","layout","index","position","plugin","createField","fields","length","item","map","drag","isDragging","opacity","fieldIndex","_id"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { cloneDeep } from \"lodash\";\nimport { Center, Vertical, Horizontal } from \"../../DropZone\";\nimport Draggable from \"../../Draggable\";\nimport EditFieldDialog from \"./EditFieldDialog\";\nimport Field from \"./Field\";\nimport { ReactComponent as HandleIcon } from \"../../../../icons/round-drag_indicator-24px.svg\";\nimport { rowHandle, EditContainer, fieldHandle, fieldContainer, Row, RowContainer } from \"./Styled\";\nimport { useFormEditor } from \"../../Context\";\nimport { FieldLayoutPositionType } from \"../../../../../types\";\nimport { i18n } from \"@webiny/app/i18n\";\nconst t = i18n.namespace(\"FormsApp.Editor.EditTab\");\n\nexport const EditTab = () => {\n    const {\n        getFields,\n        insertField,\n        updateField,\n        deleteField,\n        data,\n        moveField,\n        moveRow,\n        getFieldPlugin\n    } = useFormEditor();\n    const [editingField, setEditingField] = useState(null);\n    const [dropTarget, setDropTarget]: [FieldLayoutPositionType, Function] = useState(null);\n\n    const editField = useCallback(field => {\n        setEditingField(cloneDeep(field));\n    }, undefined);\n\n    const handleDropField = useCallback((source, dropTarget) => {\n        const { pos, name, ui } = source;\n\n        if (name === \"custom\") {\n            editField({});\n            setDropTarget(dropTarget);\n            return;\n        }\n\n        if (ui === \"row\") {\n            // Reorder rows.\n            // Reorder logic is different depending on the source and target position.\n            return moveRow(pos.row, dropTarget.row);\n        }\n\n        // If source pos is set, we are moving an existing field.\n        if (pos) {\n            const fieldId = data.layout[pos.row][pos.index];\n            return moveField({ field: fieldId, position: dropTarget });\n        }\n\n        // Find field plugin which handles the dropped field type \"name\".\n        const plugin = getFieldPlugin({ name });\n        insertField(plugin.field.createField(), dropTarget);\n    }, undefined);\n\n    const fields: Array<any> = getFields(true);\n\n    return (\n        <EditContainer>\n            {fields.length === 0 && (\n                <Center onDrop={item => handleDropField(item, { row: 0, index: 0 })}>\n                    {t`Drop your first field here`}\n                </Center>\n            )}\n\n            {fields.map((row, index) => (\n                <Draggable beginDrag={{ ui: \"row\", pos: { row: index } }} key={index}>\n                    {(\n                        {\n                            drag,\n                            isDragging\n                        } /* RowContainer start - includes drag handle, drop zones and the Row itself. */\n                    ) => (\n                        <RowContainer style={{ opacity: isDragging ? 0.3 : 1 }}>\n                            <div className={rowHandle} ref={drag}>\n                                <Icon icon={<HandleIcon />} />\n                            </div>\n                            <Horizontal\n                                onDrop={item => handleDropField(item, { row: index, index: null })}\n                            />\n                            {/* Row start - includes field drop zones and fields */}\n                            <Row>\n                                {row.map((field, fieldIndex) => (\n                                    <Draggable\n                                        key={fieldIndex}\n                                        beginDrag={{\n                                            ui: \"field\",\n                                            name: field.name,\n                                            pos: {\n                                                row: index,\n                                                index: fieldIndex\n                                            }\n                                        }}\n                                    >\n                                        {({ drag }) => (\n                                            <div className={fieldContainer} ref={drag}>\n                                                <Vertical\n                                                    onDrop={item =>\n                                                        handleDropField(item, {\n                                                            row: index,\n                                                            index: fieldIndex\n                                                        })\n                                                    }\n                                                    isVisible={item =>\n                                                        item.ui === \"field\" &&\n                                                        (row.length < 4 || item?.pos?.row === index)\n                                                    }\n                                                />\n\n                                                <div className={fieldHandle}>\n                                                    <Field\n                                                        field={field}\n                                                        onEdit={editField}\n                                                        onDelete={deleteField}\n                                                    />\n                                                </div>\n\n                                                {/* Field end */}\n                                                {fieldIndex === row.length - 1 && (\n                                                    <Vertical\n                                                        last\n                                                        isVisible={item =>\n                                                            item.ui === \"field\" &&\n                                                            (row.length < 4 ||\n                                                                item?.pos?.row === index)\n                                                        }\n                                                        onDrop={item =>\n                                                            handleDropField(item, {\n                                                                row: index,\n                                                                index: fieldIndex + 1\n                                                            })\n                                                        }\n                                                    />\n                                                )}\n                                            </div>\n                                        )}\n                                    </Draggable>\n                                ))}\n                            </Row>\n                            {/* Row end */}\n                            {index === fields.length - 1 && (\n                                <Horizontal\n                                    last\n                                    onDrop={item =>\n                                        handleDropField(item, {\n                                            row: index + 1,\n                                            index: null\n                                        })\n                                    }\n                                />\n                            )}\n                        </RowContainer>\n                    )}\n                </Draggable>\n            ))}\n\n            <EditFieldDialog\n                field={editingField}\n                onClose={editField}\n                onSubmit={data => {\n                    if (data._id) {\n                        updateField(data);\n                    } else {\n                        insertField(data, dropTarget);\n                    }\n                    editField(null);\n                }}\n            />\n        </EditContainer>\n    );\n};\n"],"file":"EditTab.js"}