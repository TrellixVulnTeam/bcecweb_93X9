{"version":3,"sources":["../../../../../../../src/admin/components/FormEditor/Tabs/EditTab/EditFieldDialog/GeneralTab.tsx"],"names":["React","useCallback","Input","Grid","Cell","useFormEditor","validation","GeneralTab","field","form","Bind","setValue","getField","getFieldPlugin","afterChangeLabel","value","uniqueFieldIdValidator","fieldId","existingField","_id","Error","undefined","fieldPlugin","name","additionalSettings","renderSettings","create"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AAEA,SAASC,aAAT;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AASA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAsC;AAAA,MAAnCC,KAAmC,QAAnCA,KAAmC;AAAA,MAA5BC,IAA4B,QAA5BA,IAA4B;AACrD,MAAQC,IAAR,GAA2BD,IAA3B,CAAQC,IAAR;AAAA,MAAcC,QAAd,GAA2BF,IAA3B,CAAcE,QAAd;;AACA,uBAAqCN,aAAa,EAAlD;AAAA,MAAQO,QAAR,kBAAQA,QAAR;AAAA,MAAkBC,cAAlB,kBAAkBA,cAAlB;;AAEA,MAAMC,gBAAgB,GAAGb,WAAW,CAAC,UAAAc,KAAK,EAAI;AAC1CJ,IAAAA,QAAQ,CAAC,SAAD,EAAY,WAAUI,KAAV,CAAZ,CAAR;AACH,GAFmC,EAEjC,EAFiC,CAApC;AAIA,MAAMC,sBAAsB,GAAGf,WAAW,CAAC,UAAAgB,OAAO,EAAI;AAClD,QAAMC,aAAa,GAAGN,QAAQ,CAAC;AAAEK,MAAAA,OAAO,EAAPA;AAAF,KAAD,CAA9B;;AACA,QAAI,CAACC,aAAL,EAAoB;AAChB;AACH;;AAED,QAAIA,aAAa,CAACC,GAAd,KAAsBX,KAAK,CAACW,GAAhC,EAAqC;AACjC,aAAO,IAAP;AACH;;AACD,UAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACH,GAVyC,EAUvCC,SAVuC,CAA1C;AAYA,MAAMC,WAAW,GAAGT,cAAc,CAAC;AAAEU,IAAAA,IAAI,EAAEf,KAAK,CAACe;AAAd,GAAD,CAAlC;AAEA,MAAIC,kBAAkB,GAAG,IAAzB;;AACA,MAAI,OAAOF,WAAW,CAACd,KAAZ,CAAkBiB,cAAzB,KAA4C,UAAhD,EAA4D;AACxDD,IAAAA,kBAAkB,GAAGF,WAAW,CAACd,KAAZ,CAAkBiB,cAAlB,CAAiC;AAClDhB,MAAAA,IAAI,EAAJA,IADkD;AAElDK,MAAAA,gBAAgB,EAAhBA,gBAFkD;AAGlDE,MAAAA,sBAAsB,EAAtBA;AAHkD,KAAjC,CAArB;AAKH;;AAED,sBACI,uDACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAE,OADV;AAEI,IAAA,UAAU,EAAEV,UAAU,CAACoB,MAAX,CAAkB,UAAlB,CAFhB;AAGI,IAAA,WAAW,EAAEZ;AAHjB,kBAKI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,OAAd;AAAuB,IAAA,SAAS,EAAE;AAAlC,IALJ,CADJ,CADJ,eAUI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAE,SADV;AAEI,IAAA,UAAU,EAAE,CAACR,UAAU,CAACoB,MAAX,CAAkB,UAAlB,CAAD,EAAgCV,sBAAhC;AAFhB,kBAII,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAd,IAJJ,CADJ,CAVJ,eAkBI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,WAAd;AAA2B,IAAA,WAAW,EAAE;AAAxC,IADJ,CADJ,CAlBJ,CADJ,EAyBKQ,kBAzBL,CADJ;AA6BH,CA5DD;;AA8DA,eAAejB,UAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { camelCase } from \"lodash\";\nimport { useFormEditor } from \"../../../Context\";\nimport { validation } from \"@webiny/validation\";\nimport { FbFormModelField } from \"../../../../../../types\";\nimport { FormRenderPropParams } from \"@webiny/form/Form\";\n\ntype GeneralTabProps = {\n    field: FbFormModelField;\n    form: FormRenderPropParams;\n};\n\nconst GeneralTab = ({ field, form }: GeneralTabProps) => {\n    const { Bind, setValue } = form;\n    const { getField, getFieldPlugin } = useFormEditor();\n\n    const afterChangeLabel = useCallback(value => {\n        setValue(\"fieldId\", camelCase(value));\n    }, []);\n\n    const uniqueFieldIdValidator = useCallback(fieldId => {\n        const existingField = getField({ fieldId });\n        if (!existingField) {\n            return;\n        }\n\n        if (existingField._id === field._id) {\n            return true;\n        }\n        throw new Error(\"Please enter a unique Field ID\");\n    }, undefined);\n\n    const fieldPlugin = getFieldPlugin({ name: field.name });\n\n    let additionalSettings = null;\n    if (typeof fieldPlugin.field.renderSettings === \"function\") {\n        additionalSettings = fieldPlugin.field.renderSettings({\n            form,\n            afterChangeLabel,\n            uniqueFieldIdValidator\n        });\n    }\n\n    return (\n        <>\n            <Grid>\n                <Cell span={6}>\n                    <Bind\n                        name={\"label\"}\n                        validators={validation.create(\"required\")}\n                        afterChange={afterChangeLabel}\n                    >\n                        <Input label={\"Label\"} autoFocus={true} />\n                    </Bind>\n                </Cell>\n                <Cell span={6}>\n                    <Bind\n                        name={\"fieldId\"}\n                        validators={[validation.create(\"required\"), uniqueFieldIdValidator]}\n                    >\n                        <Input label={\"Field ID\"} />\n                    </Bind>\n                </Cell>\n                <Cell span={12}>\n                    <Bind name={\"helpText\"}>\n                        <Input label={\"Help text\"} description={\"Help text (optional)\"} />\n                    </Bind>\n                </Cell>\n            </Grid>\n            {additionalSettings}\n        </>\n    );\n};\n\nexport default GeneralTab;\n"],"file":"GeneralTab.js"}