import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";

var _templateObject, _templateObject2;

import _regeneratorRuntime from "@babel/runtime/regenerator";
import React from "react";
import { css } from "emotion";
import { useRouter } from "@webiny/react-router";
import { useMutation } from "@apollo/react-hooks";
import { Form } from "@webiny/form";
import { Input } from "@webiny/ui/Input";
import { CREATE_FORM } from "../../graphql";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { CircularProgress } from "@webiny/ui/Progress";
import { i18n } from "@webiny/app/i18n";
var t = i18n.namespace("Forms.NewFormDialog");
import { Dialog, DialogTitle, DialogContent, DialogActions } from "@webiny/ui/Dialog";
import { ButtonDefault } from "@webiny/ui/Button";
import { addFormToListCache } from "../cache";
var narrowDialog = /*#__PURE__*/css({
  ".mdc-dialog__surface": {
    width: 400,
    minWidth: 400
  }
}, "label:narrowDialog;");

var NewFormDialog = function NewFormDialog(_ref) {
  var open = _ref.open,
      onClose = _ref.onClose;

  var _React$useState = React.useState(false),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      loading = _React$useState2[0],
      setLoading = _React$useState2[1];

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var _useRouter = useRouter(),
      history = _useRouter.history;

  var _useMutation = useMutation(CREATE_FORM),
      _useMutation2 = _slicedToArray(_useMutation, 1),
      create = _useMutation2[0];

  return /*#__PURE__*/React.createElement(Dialog, {
    open: open,
    onClose: onClose,
    className: narrowDialog,
    "data-testid": "fb-new-form-modal"
  }, /*#__PURE__*/React.createElement(Form, {
    onSubmit: /*#__PURE__*/function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                setLoading(true);
                _context.next = 3;
                return create({
                  variables: formData,
                  update: function update(cache, _ref3) {
                    var data = _ref3.data;
                    var _data$formBuilder$for = data.formBuilder.form,
                        revision = _data$formBuilder$for.data,
                        error = _data$formBuilder$for.error;

                    if (error) {
                      setLoading(false);
                      return showSnackbar(error.message);
                    }

                    addFormToListCache(cache, revision);
                    history.push("/form-builder/forms/".concat(encodeURIComponent(revision.id)));
                  }
                });

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }()
  }, function (_ref4) {
    var Bind = _ref4.Bind,
        submit = _ref4.submit;
    return /*#__PURE__*/React.createElement(React.Fragment, null, loading && /*#__PURE__*/React.createElement(CircularProgress, {
      label: "Creating form..."
    }), /*#__PURE__*/React.createElement(DialogTitle, null, t(_templateObject || (_templateObject = _taggedTemplateLiteral(["New form"])))), /*#__PURE__*/React.createElement(DialogContent, null, /*#__PURE__*/React.createElement(Bind, {
      name: "name"
    }, /*#__PURE__*/React.createElement(Input, {
      placeholder: "Enter a name for your new form"
    }))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(ButtonDefault, {
      onClick: submit
    }, "+ ", t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Create"]))))));
  }));
};

export default NewFormDialog;
//# sourceMappingURL=NewFormDialog.js.map