{"version":3,"sources":["../../../../src/admin/views/Forms/FormsDataList.tsx"],"names":["React","useRef","useCallback","useState","useMemo","TimeAgo","css","orderBy","upperFirst","useRouter","Typography","ConfirmationDialog","DeleteIcon","EditIcon","DELETE_FORM","CREATE_REVISION_FROM","useApolloClient","useSnackbar","DataList","List","ListItem","ListItemText","ListItemTextSecondary","ListItemMeta","ListActions","DataListModalOverlayAction","DataListModalOverlay","i18n","removeFormFromListCache","updateLatestRevisionInListCache","ButtonIcon","ButtonSecondary","SearchUI","deserializeSorters","serializeSorters","Cell","Grid","Select","usePermission","useForms","t","namespace","rightAlign","alignItems","listItemMinHeight","minHeight","SORTERS","label","sorters","savedOn","name","FormsDataList","props","editHandlers","filter","setFilter","sort","setSort","listQuery","canCreate","location","history","client","showSnackbar","canEdit","canDelete","deleteRecord","item","mutate","mutation","variables","id","update","cache","query","URLSearchParams","search","get","push","res","data","formBuilder","deleteForm","error","message","title","editRecord","form","handlerKey","status","current","published","revision","encodeURIComponent","filterData","toLowerCase","includes","sortData","list","Object","entries","key","value","formsDataListModalOverlay","map","listFormsData","loading","listForms","filteredData","forms","onCreateForm","set","toString","createdBy","firstName","user","time","version","showConfirmation"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useState, useMemo } from \"react\";\nimport TimeAgo from \"timeago-react\";\nimport { css } from \"emotion\";\nimport orderBy from \"lodash/orderBy\";\nimport upperFirst from \"lodash/upperFirst\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nimport { DeleteIcon, EditIcon } from \"@webiny/ui/List/DataList/icons\";\nimport { DELETE_FORM, CREATE_REVISION_FROM } from \"../../graphql\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport {\n    DataList,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemTextSecondary,\n    ListItemMeta,\n    ListActions,\n    DataListModalOverlayAction,\n    DataListModalOverlay\n} from \"@webiny/ui/List\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { removeFormFromListCache, updateLatestRevisionInListCache } from \"../cache\";\nimport { ButtonIcon, ButtonSecondary } from \"@webiny/ui/Button\";\nimport { ReactComponent as AddIcon } from \"@webiny/app-admin/assets/icons/add-18px.svg\";\nimport { ReactComponent as FilterIcon } from \"@webiny/app-admin/assets/icons/filter-24px.svg\";\nimport SearchUI from \"@webiny/app-admin/components/SearchUI\";\nimport { deserializeSorters, serializeSorters } from \"@webiny/app-page-builder/admin/views/utils\";\nimport { Cell, Grid } from \"@webiny/ui/Grid\";\nimport { Select } from \"@webiny/ui/Select\";\nimport usePermission from \"../../../hooks/usePermission\";\nimport { useForms } from \"./useForms\";\n\nconst t = i18n.namespace(\"FormsApp.FormsDataList\");\nconst rightAlign = css({\n    alignItems: \"flex-end !important\"\n});\n\nconst listItemMinHeight = css({\n    minHeight: \"66px !important\"\n});\n\nexport type FormsDataListProps = {\n    onCreateForm: () => void;\n};\n\nconst SORTERS = [\n    {\n        label: t`Newest to oldest`,\n        sorters: { savedOn: \"desc\" }\n    },\n    {\n        label: t`Oldest to newest`,\n        sorters: { savedOn: \"asc\" }\n    },\n    {\n        label: t`Name A-Z`,\n        sorters: { name: \"asc\" }\n    },\n    {\n        label: t`Name Z-A`,\n        sorters: { name: \"desc\" }\n    }\n];\n\nconst FormsDataList = (props: FormsDataListProps) => {\n    const editHandlers = useRef({});\n    const [filter, setFilter] = useState(\"\");\n    const [sort, setSort] = useState(serializeSorters({ savedOn: \"desc\" }));\n\n    const { listQuery, canCreate } = useForms();\n\n    const { location, history } = useRouter();\n    const client = useApolloClient();\n    const { showSnackbar } = useSnackbar();\n    const { canEdit, canDelete } = usePermission();\n\n    const deleteRecord = useCallback(\n        async item => {\n            const res = await client.mutate({\n                mutation: DELETE_FORM,\n                variables: { id: item.id },\n                update(cache) {\n                    removeFormFromListCache(cache, item);\n\n                    const query = new URLSearchParams(location.search);\n                    if (item.id === query.get(\"id\")) {\n                        return history.push(\"/form-builder/forms\");\n                    }\n                }\n            });\n            const { data, error } = res.data.formBuilder.deleteForm || {};\n\n            if (data) {\n                showSnackbar(t`Form {name} deleted.`({ name: item.name }));\n            } else {\n                showSnackbar(error.message, {\n                    title: t`Something unexpected happened.`\n                });\n            }\n        },\n        [location]\n    );\n\n    const editRecord = useCallback(form => {\n        // Note: form id is remains the same after publish.\n        const handlerKey = form.id + form.status;\n        if (!editHandlers.current[handlerKey]) {\n            editHandlers.current[handlerKey] = async () => {\n                if (form.published) {\n                    const { data: res } = await client.mutate({\n                        mutation: CREATE_REVISION_FROM,\n                        variables: { revision: form.id },\n                        update(cache, { data }) {\n                            updateLatestRevisionInListCache(cache, data.formBuilder.revision.data);\n                        }\n                    });\n\n                    const { data, error } = res.formBuilder.revision;\n\n                    if (error) {\n                        return showSnackbar(error.message);\n                    }\n\n                    history.push(`/form-builder/forms/${encodeURIComponent(data.id)}`);\n                } else {\n                    history.push(`/form-builder/forms/${encodeURIComponent(form.id)}`);\n                }\n            };\n        }\n\n        return editHandlers.current[handlerKey];\n    }, []);\n\n    const filterData = useCallback(\n        ({ name }) => {\n            return name.toLowerCase().includes(filter);\n        },\n        [filter]\n    );\n\n    const sortData = useCallback(\n        list => {\n            if (!sort) {\n                return list;\n            }\n            const [[key, value]] = Object.entries(deserializeSorters(sort));\n            return orderBy(list, [key], [value]);\n        },\n        [sort]\n    );\n\n    const formsDataListModalOverlay = useMemo(\n        () => (\n            <DataListModalOverlay>\n                <Grid>\n                    <Cell span={12}>\n                        <Select\n                            value={sort}\n                            onChange={setSort}\n                            label={t`Sort by`}\n                            description={\"Sort pages by\"}\n                        >\n                            {SORTERS.map(({ label, sorters }) => {\n                                return (\n                                    <option key={label} value={serializeSorters(sorters)}>\n                                        {label}\n                                    </option>\n                                );\n                            })}\n                        </Select>\n                    </Cell>\n                </Grid>\n            </DataListModalOverlay>\n        ),\n        [sort]\n    );\n\n    const query = new URLSearchParams(location.search);\n\n    const listFormsData = listQuery.loading ? [] : listQuery.data.formBuilder.listForms.data;\n\n    const filteredData = filter === \"\" ? listFormsData : listFormsData.filter(filterData);\n    const forms = sortData(filteredData);\n\n    return (\n        <DataList\n            title={t`Forms`}\n            data={forms}\n            loading={listQuery.loading}\n            actions={\n                canCreate ? (\n                    <ButtonSecondary data-testid=\"new-record-button\" onClick={props.onCreateForm}>\n                        <ButtonIcon icon={<AddIcon />} /> {t`New Form`}\n                    </ButtonSecondary>\n                ) : null\n            }\n            search={\n                <SearchUI value={filter} onChange={setFilter} inputPlaceholder={t`Search forms`} />\n            }\n            modalOverlay={formsDataListModalOverlay}\n            modalOverlayAction={<DataListModalOverlayAction icon={<FilterIcon />} />}\n        >\n            {({ data = [] }) => (\n                <List data-testid=\"default-data-list\">\n                    {data.map(form => (\n                        <ListItem key={form.id} className={listItemMinHeight}>\n                            <ListItemText\n                                onClick={() => {\n                                    query.set(\"id\", form.id);\n                                    history.push({ search: query.toString() });\n                                }}\n                            >\n                                {form.name}\n                                {form.createdBy && (\n                                    <ListItemTextSecondary>\n                                        {form.createdBy.firstName && (\n                                            <>\n                                                {t`Created by: {user}.`({\n                                                    user: form.createdBy.firstName\n                                                })}{\" \"}\n                                            </>\n                                        )}\n\n                                        {t`Last modified: {time}.`({\n                                            time: <TimeAgo datetime={form.savedOn} />\n                                        })}\n                                    </ListItemTextSecondary>\n                                )}\n                            </ListItemText>\n                            <ListItemMeta className={rightAlign}>\n                                <Typography use={\"subtitle2\"}>\n                                    {upperFirst(form.status)} (v{form.version})\n                                </Typography>\n                                <ListActions>\n                                    {canEdit(form) && <EditIcon onClick={editRecord(form)} />}\n                                    {canDelete(form) && (\n                                        <ConfirmationDialog\n                                            title={\"Confirmation required!\"}\n                                            message={\n                                                \"This will delete the form and all of its revisions. Are you sure you want to continue?\"\n                                            }\n                                        >\n                                            {({ showConfirmation }) => (\n                                                <DeleteIcon\n                                                    onClick={() =>\n                                                        showConfirmation(async () =>\n                                                            deleteRecord(form)\n                                                        )\n                                                    }\n                                                />\n                                            )}\n                                        </ConfirmationDialog>\n                                    )}\n                                </ListActions>\n                            </ListItemMeta>\n                        </ListItem>\n                    ))}\n                </List>\n            )}\n        </DataList>\n    );\n};\n\nexport default FormsDataList;\n"],"file":"FormsDataList.js"}