{"version":3,"sources":["../../../../src/admin/views/Forms/FormDetails.tsx"],"names":["React","useQuery","renderPlugins","useRouter","styled","GET_FORM","GET_FORM_REVISIONS","useSnackbar","Tabs","CircularProgress","ButtonDefault","ButtonIcon","useSecurity","EmptyView","i18n","useForms","t","ns","DetailsContainer","height","overflow","position","nav","backgroundColor","EmptyFormDetails","canCreate","onCreateForm","message","FormDetails","location","history","showSnackbar","security","query","URLSearchParams","search","hash","formId","get","listQuery","refreshForms","refetch","getForm","variables","revision","skip","onCompleted","data","formBuilder","form","error","formData","delete","push","toString","getRevisions","id","split","loading","revisions","wrapper"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { renderPlugins } from \"@webiny/app/plugins\";\nimport { useRouter } from \"@webiny/react-router\";\nimport styled from \"@emotion/styled\";\nimport { GET_FORM, GET_FORM_REVISIONS } from \"../../graphql\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { Tabs } from \"@webiny/ui/Tabs\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { ButtonDefault, ButtonIcon } from \"@webiny/ui/Button\";\nimport { useSecurity } from \"@webiny/app-security\";\nimport EmptyView from \"@webiny/app-admin/components/EmptyView\";\nimport { ReactComponent as AddIcon } from \"@webiny/app-admin/assets/icons/add-18px.svg\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useForms } from \"./useForms\";\n\nconst t = i18n.ns(\"app-form-builder/admin/views/forms/form-details\");\n\nconst DetailsContainer = styled(\"div\")({\n    height: \"100%\",\n    overflow: \"hidden\",\n    position: \"relative\",\n    nav: {\n        backgroundColor: \"var(--mdc-theme-surface)\"\n    }\n});\n\ntype EmptyFormDetailsProps = {\n    onCreateForm: () => void;\n    canCreate: boolean;\n};\nconst EmptyFormDetails = ({ canCreate, onCreateForm }: EmptyFormDetailsProps) => {\n    return (\n        <EmptyView\n            title={t`Click on the left side list to display form details {message}`({\n                message: canCreate ? \" or create a...\" : \"\"\n            })}\n            action={\n                canCreate ? (\n                    <ButtonDefault data-testid=\"new-record-button\" onClick={onCreateForm}>\n                        <ButtonIcon icon={<AddIcon />} /> {t`New Form`}\n                    </ButtonDefault>\n                ) : null\n            }\n        />\n    );\n};\n\nexport type FormDetailsProps = {\n    onCreateForm: () => void;\n};\n\nconst FormDetails = ({ onCreateForm }: FormDetailsProps) => {\n    const { location, history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    const security = useSecurity();\n    const query = new URLSearchParams(location.search + location.hash);\n    const formId = query.get(\"id\");\n\n    const { listQuery, canCreate } = useForms();\n\n    const refreshForms = listQuery.refetch;\n\n    const getForm = useQuery(GET_FORM, {\n        variables: {\n            revision: formId\n        },\n        skip: !formId,\n        onCompleted: data => {\n            if (!data) {\n                return;\n            }\n\n            const { error, data: formData } = data.formBuilder.form;\n            if (error) {\n                query.delete(\"id\");\n                history.push({ search: query.toString() });\n                showSnackbar(error.message);\n            }\n            if (!formData) {\n                query.delete(\"id\");\n                history.push({ search: query.toString() });\n                showSnackbar(t`Could not load form with given ID.`);\n            }\n        }\n    });\n\n    const getRevisions = useQuery(GET_FORM_REVISIONS, {\n        variables: {\n            id: formId ? formId.split(\"#\")[0] : null\n        },\n        skip: !formId\n    });\n\n    if (!formId) {\n        return <EmptyFormDetails canCreate={canCreate} onCreateForm={onCreateForm} />;\n    }\n\n    const form = getForm.loading ? null : getForm.data.formBuilder.form.data;\n    const revisions = getRevisions.loading ? [] : getRevisions.data.formBuilder.revisions.data;\n\n    return (\n        <DetailsContainer>\n            {getForm.loading && <CircularProgress label={\"Loading details...\"} />}\n            {form && (\n                <Tabs>\n                    {renderPlugins(\n                        \"forms-form-details-revision-content\",\n                        { security, refreshForms, form, revisions, loading: getForm.loading },\n                        { wrapper: false }\n                    )}\n                </Tabs>\n            )}\n        </DetailsContainer>\n    );\n};\n\nexport default FormDetails;\n"],"file":"FormDetails.js"}