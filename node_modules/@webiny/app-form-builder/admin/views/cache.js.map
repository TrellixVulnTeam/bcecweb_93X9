{"version":3,"sources":["../../../src/admin/views/cache.ts"],"names":["dotProp","GET_FORM_REVISIONS","LIST_FORMS","updateLatestRevisionInListCache","cache","revision","gqlParams","query","id","split","uniqueId","readQuery","formBuilder","index","listForms","data","findIndex","item","startsWith","writeQuery","set","addFormToListCache","addRevisionToRevisionsCache","newRevision","variables","revisions","removeFormFromListCache","form","delete","removeRevisionFromFormCache"],"mappings":"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","sourcesContent":["import dotProp from \"dot-prop-immutable\";\nimport { GET_FORM_REVISIONS, LIST_FORMS } from \"../graphql\";\n\n// Replace existing \"latest\" revision with the new revision\nexport const updateLatestRevisionInListCache = (cache, revision) => {\n    const gqlParams = { query: LIST_FORMS };\n\n    const [uniqueId] = revision.id.split(\"#\");\n\n    const { formBuilder } = cache.readQuery(gqlParams);\n    const index = formBuilder.listForms.data.findIndex(item => item.id.startsWith(uniqueId));\n\n    cache.writeQuery({\n        ...gqlParams,\n        data: {\n            formBuilder: dotProp.set(formBuilder, `listForms.data.${index}`, revision)\n        }\n    });\n};\n\nexport const addFormToListCache = (cache, revision) => {\n    const gqlParams = { query: LIST_FORMS };\n\n    const { formBuilder } = cache.readQuery(gqlParams);\n\n    cache.writeQuery({\n        ...gqlParams,\n        data: {\n            formBuilder: dotProp.set(formBuilder, `listForms.data`, [\n                revision,\n                ...formBuilder.listForms.data\n            ])\n        }\n    });\n};\n\nexport const addRevisionToRevisionsCache = (cache, newRevision) => {\n    const gqlParams = {\n        query: GET_FORM_REVISIONS,\n        variables: { id: newRevision.id.split(\"#\")[0] }\n    };\n\n    const { formBuilder } = cache.readQuery(gqlParams);\n\n    cache.writeQuery({\n        ...gqlParams,\n        data: {\n            formBuilder: dotProp.set(formBuilder, `revisions.data`, [\n                newRevision,\n                ...formBuilder.revisions.data\n            ])\n        }\n    });\n};\n\nexport const removeFormFromListCache = (cache, form) => {\n    // Delete the form from list cache\n    const gqlParams = { query: LIST_FORMS };\n    const { formBuilder } = cache.readQuery(gqlParams);\n    const index = formBuilder.listForms.data.findIndex(item => item.id === form.id);\n\n    cache.writeQuery({\n        ...gqlParams,\n        data: {\n            formBuilder: dotProp.delete(formBuilder, `listForms.data.${index}`)\n        }\n    });\n};\n\nexport const removeRevisionFromFormCache = (cache, form, revision) => {\n    const gqlParams = {\n        query: GET_FORM_REVISIONS,\n        variables: { id: form.id.split(\"#\")[0] }\n    };\n\n    let { formBuilder } = cache.readQuery(gqlParams);\n    const index = formBuilder.revisions.data.findIndex(item => item.id === revision.id);\n\n    formBuilder = dotProp.delete(formBuilder, `revisions.data.${index}`);\n\n    cache.writeQuery({\n        ...gqlParams,\n        data: {\n            formBuilder\n        }\n    });\n\n    // Return new revisions\n    return formBuilder.revisions.data;\n};\n"],"file":"cache.js"}