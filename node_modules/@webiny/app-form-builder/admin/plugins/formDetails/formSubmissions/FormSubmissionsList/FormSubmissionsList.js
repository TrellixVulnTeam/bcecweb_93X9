import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";

var _templateObject, _templateObject2;

import React, { useState } from "react";
import TimeAgo from "timeago-react";
import { css } from "emotion";
import { i18n } from "@webiny/app/i18n";
import * as ListComponents from "@webiny/ui/List";
import { Tooltip } from "@webiny/ui/Tooltip";
import { IconButton } from "@webiny/ui/Button";
import { Typography } from "@webiny/ui/Typography";
import { Scrollbar } from "@webiny/ui/Scrollbar";
import FormSubmissionDialog from "./FormSubmissionDialog";
import { ReactComponent as ImportExport } from "@svgr/webpack!./icons/round-cloud_download-24px.svg";
import Block from "../Block";
import useSubmissions from "./useSubmissions";
var t = i18n.namespace("FormsApp.FormsDataList");
var TOP = 490;
var blockWrapper = /*#__PURE__*/css({
  "& .webiny-data-list__content": {
    height: "calc(100vh - ".concat(TOP, "px)")
  }
}, "label:blockWrapper;");
var rightAlign = /*#__PURE__*/css({
  alignItems: "flex-end !important"
}, "label:rightAlign;");

var FullName = function FullName(_ref) {
  var submission = _ref.submission;
  var _submission$data = submission.data,
      firstName = _submission$data.firstName,
      lastName = _submission$data.lastName,
      email = _submission$data.email;
  var output = [firstName, lastName, email && "<".concat(email, ">")].filter(Boolean).join(" ");
  return /*#__PURE__*/React.createElement("span", null, output || "N/A");
};

var FormVersion = function FormVersion(_ref2) {
  var submission = _ref2.submission;
  return /*#__PURE__*/React.createElement("span", null, "Form revision #", submission.form.version);
};

var DataList = ListComponents.DataList,
    ListItem = ListComponents.ListItem,
    ListItemMeta = ListComponents.ListItemMeta,
    ListItemText = ListComponents.ListItemText,
    ListTextOverline = ListComponents.ListTextOverline; // const sorters = [
//     {
//         label: t`Newest to oldest`,
//         sorters: { createdOn: -1 }
//     },
//     {
//         label: t`Oldest to newest`,
//         sorters: { createdOn: 1 }
//     }
// ];

export var FormSubmissionsList = function FormSubmissionsList(_ref3) {
  var form = _ref3.form;

  var _useSubmissions = useSubmissions(form),
      loading = _useSubmissions.loading,
      refresh = _useSubmissions.refresh,
      submissions = _useSubmissions.submissions,
      setSorter = _useSubmissions.setSorter,
      nextPage = _useSubmissions.nextPage,
      previousPage = _useSubmissions.previousPage,
      hasPreviousPage = _useSubmissions.hasPreviousPage,
      hasNextPage = _useSubmissions.hasNextPage,
      exportSubmissions = _useSubmissions.exportSubmissions,
      exportInProgress = _useSubmissions.exportInProgress;

  var _useState = useState(null),
      _useState2 = _slicedToArray(_useState, 2),
      selectedFormSubmission = _useState2[0],
      selectFormSubmission = _useState2[1];

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Block, {
    title: "Submissions",
    className: blockWrapper
  }, /*#__PURE__*/React.createElement(DataList, {
    loading: loading,
    refresh: refresh,
    data: submissions,
    setSorters: setSorter,
    pagination: {
      hasNextPage: hasNextPage,
      hasPreviousPage: hasPreviousPage,
      setNextPage: nextPage,
      setPreviousPage: previousPage
    },
    multiSelectAll: null,
    multiSelectActions: /*#__PURE__*/React.createElement(Tooltip, {
      content: t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Export all form submissions"]))),
      placement: "bottom"
    }, /*#__PURE__*/React.createElement(IconButton, {
      icon: /*#__PURE__*/React.createElement(ImportExport, null),
      onClick: exportSubmissions,
      disabled: exportInProgress
    })) // sorters={sorters}
    ,
    showOptions: {
      multiSelectAll: false,
      sorters: true,
      refresh: true,
      pagination: true
    }
  }, function (_ref4) {
    var _ref4$data = _ref4.data,
        data = _ref4$data === void 0 ? [] : _ref4$data;
    return /*#__PURE__*/React.createElement(Scrollbar, null, data.map(function (submission) {
      var submittedOn = submission.meta ? submission.meta.submittedOn : new Date();
      return /*#__PURE__*/React.createElement(ListItem, {
        key: submission.id
      }, /*#__PURE__*/React.createElement(ListItemText, {
        onClick: function onClick() {
          return selectFormSubmission(submission);
        }
      }, /*#__PURE__*/React.createElement(FullName, {
        submission: submission
      }), /*#__PURE__*/React.createElement(ListTextOverline, null, "Visitor IP:", " ", submission.meta && submission.meta.ip || "N/A")), /*#__PURE__*/React.createElement(ListItemMeta, {
        className: rightAlign
      }, /*#__PURE__*/React.createElement(Typography, {
        use: "subtitle2"
      }, t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Submitted: {time}."])))({
        time: /*#__PURE__*/React.createElement(TimeAgo, {
          datetime: submittedOn
        })
      }), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement(FormVersion, {
        submission: submission
      }))));
    }));
  })), /*#__PURE__*/React.createElement(FormSubmissionDialog, {
    onClose: function onClose() {
      selectFormSubmission(null);
    },
    formSubmission: selectedFormSubmission
  }));
};
//# sourceMappingURL=FormSubmissionsList.js.map