import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject, _templateObject2;

import React from "react";
import { css } from "emotion";
import { Typography } from "@webiny/ui/Typography";
import { Dialog, DialogContent, DialogTitle, DialogCancel, DialogActions } from "@webiny/ui/Dialog";
import { i18n } from "@webiny/app/i18n";
var t = i18n.namespace("FormEditor.FormSubmissionDialog");
var dialogBody = /*#__PURE__*/css({
  "&.webiny-ui-dialog__content": {
    marginTop: 0,
    padding: "25",
    div: {
      padding: "5px 0"
    }
  }
}, "label:dialogBody;");

var getFieldValueLabel = function getFieldValueLabel(field, value) {
  if (field.options.length > 0) {
    var selectedOption = field.options.find(function (option) {
      return option.value === value;
    });

    if (selectedOption) {
      return selectedOption.label;
    }
  }

  return value;
};

var renderFieldValueLabel = function renderFieldValueLabel(field, value) {
  if (Array.isArray(value)) {
    return value.map(function (v) {
      return getFieldValueLabel(field, v);
    }).join(", ");
  }

  return getFieldValueLabel(field, value);
};

var FormSubmissionDialog = function FormSubmissionDialog(_ref) {
  var formSubmission = _ref.formSubmission,
      onClose = _ref.onClose;
  return /*#__PURE__*/React.createElement(Dialog, {
    open: !!formSubmission,
    onClose: onClose
  }, formSubmission && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogTitle, null, t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Form Submission"])))), /*#__PURE__*/React.createElement(DialogContent, {
    className: dialogBody
  }, /*#__PURE__*/React.createElement("div", null, formSubmission.form.layout.map(function (row) {
    return row.map(function (id) {
      var field = formSubmission.form.fields.find(function (field) {
        return field._id === id;
      });
      return /*#__PURE__*/React.createElement("div", {
        key: id,
        style: {
          display: "inline-block",
          width: "calc(100% / ".concat(row.length, ")")
        }
      }, /*#__PURE__*/React.createElement(Typography, {
        use: "overline"
      }, field.label, ": "), /*#__PURE__*/React.createElement(Typography, {
        use: "body1"
      }, field.type === "textarea" ? /*#__PURE__*/React.createElement("pre", null, renderFieldValueLabel(field, formSubmission.data[field.fieldId])) : renderFieldValueLabel(field, formSubmission.data[field.fieldId])));
    });
  }))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(DialogCancel, {
    onClick: onClose
  }, t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Cancel"])))))));
};

export default FormSubmissionDialog;
//# sourceMappingURL=FormSubmissionDialog.js.map