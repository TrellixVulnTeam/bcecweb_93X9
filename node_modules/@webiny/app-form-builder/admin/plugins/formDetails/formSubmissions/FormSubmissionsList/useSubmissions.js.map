{"version":3,"sources":["../../../../../../src/admin/plugins/formDetails/formSubmissions/FormSubmissionsList/useSubmissions.ts"],"names":["useApolloClient","useMutation","useCallback","useEffect","useReducer","useSnackbar","GQL","form","prev","next","loading","page","cursors","exportInProgress","submissions","sort","createdOn","state","setState","client","showSnackbar","loadSubmissions","fetchPolicy","query","LIST_FORM_SUBMISSIONS","variables","id","after","res","data","formBuilder","listFormSubmissions","meta","hasMoreItems","cursor","undefined","EXPORT_FORM_SUBMISSIONS","exportFormSubmission","exportSubmissions","exportFormSubmissions","csvFile","error","message","window","open","src","hasPreviousPage","hasNextPage","refresh","setSorter","nextPage","previousPage"],"mappings":"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","sourcesContent":["import { useApolloClient, useMutation } from \"@apollo/react-hooks\";\nimport { useCallback, useEffect, useReducer } from \"react\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport * as GQL from \"../../../../graphql\";\nimport { FetchPolicy } from \"apollo-client\";\n\nexport default form => {\n    const [state, setState] = useReducer((prev, next) => ({ ...prev, ...next }), {\n        loading: false,\n        page: 0,\n        cursors: {\n            0: null\n        },\n        exportInProgress: false,\n        submissions: [],\n        sort: {\n            createdOn: -1\n        }\n    });\n\n    const client = useApolloClient();\n\n    const { showSnackbar } = useSnackbar();\n\n    const loadSubmissions = async (fetchPolicy: FetchPolicy = \"cache-first\") => {\n        setState({ loading: true });\n\n        const { data: res } = await client.query({\n            query: GQL.LIST_FORM_SUBMISSIONS,\n            variables: { form: form.id, sort: state.sort, after: state.cursors[state.page] },\n            fetchPolicy\n        });\n\n        const { data, meta } = res.formBuilder.listFormSubmissions;\n\n        setState({\n            loading: false,\n            submissions: data,\n            cursors: {\n                ...state.cursors,\n                // Store cursor to load next page\n                [state.page + 1]: meta.hasMoreItems ? meta.cursor : undefined\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadSubmissions();\n    }, [form.id, state.page, state.sort]);\n\n    const [exportFormSubmission] = useMutation(GQL.EXPORT_FORM_SUBMISSIONS);\n    const exportSubmissions = useCallback(async () => {\n        setState({ exportInProgress: true });\n        const { data } = await exportFormSubmission({\n            variables: {\n                form: form.id\n            }\n        });\n        setState({ exportInProgress: false });\n\n        const { data: csvFile, error } = data.formBuilder.exportFormSubmissions;\n        if (error) {\n            showSnackbar(error.message);\n            return;\n        }\n\n        window.open(csvFile.src, \"_blank\");\n    }, [form]);\n\n    const hasPreviousPage = state.page > 0;\n    const hasNextPage = typeof state.cursors[state.page + 1] === \"string\";\n\n    return {\n        loading: state.loading,\n        refresh: () => loadSubmissions(\"network-only\"),\n        submissions: state.submissions,\n        setSorter: (sort: any) => {\n            setState({ sort });\n        },\n        hasPreviousPage,\n        hasNextPage,\n        nextPage: () => {\n            if (!hasNextPage) {\n                return;\n            }\n            setState({ page: state.page + 1 });\n        },\n        previousPage: () => {\n            if (!hasPreviousPage) {\n                return;\n            }\n            setState({ page: state.page - 1 });\n        },\n        exportSubmissions,\n        exportInProgress: state.exportInProgress\n    };\n};\n"],"file":"useSubmissions.js"}