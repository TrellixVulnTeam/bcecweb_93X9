{"version":3,"sources":["../../../../../src/admin/plugins/formDetails/formRevisions/useRevision.tsx"],"names":["React","useRouter","useApolloClient","useHandlers","CREATE_REVISION_FROM","DELETE_REVISION","PUBLISH_REVISION","UNPUBLISH_REVISION","useSnackbar","removeRevisionFromFormCache","updateLatestRevisionInListCache","addRevisionToRevisionsCache","useRevision","revision","form","history","showSnackbar","client","createRevision","mutate","mutation","variables","id","update","cache","data","newRevision","formBuilder","res","error","message","push","encodeURIComponent","editRevision","deleteRevision","updated","deleteForm","revisions","publishRevision","version","unpublishRevision"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { useHandlers } from \"@webiny/app/hooks/useHandlers\";\nimport {\n    CREATE_REVISION_FROM,\n    DELETE_REVISION,\n    PUBLISH_REVISION,\n    UNPUBLISH_REVISION\n} from \"../../../graphql\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { FbFormModel } from \"../../../../types\";\nimport {\n    removeRevisionFromFormCache,\n    updateLatestRevisionInListCache,\n    addRevisionToRevisionsCache\n} from \"../../../views/cache\";\n\nexport type UseRevisionProps = {\n    revision: FbFormModel;\n    form: FbFormModel;\n};\n\nexport const useRevision = ({ revision, form }: UseRevisionProps) => {\n    const { history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    const client = useApolloClient();\n\n    const { createRevision, editRevision, deleteRevision, publishRevision, unpublishRevision } =\n        useHandlers(null, {\n            createRevision: () => async () => {\n                const { data: res } = await client.mutate({\n                    mutation: CREATE_REVISION_FROM,\n                    variables: { revision: revision.id },\n                    update(cache, { data }) {\n                        const newRevision = data.formBuilder.revision.data;\n                        updateLatestRevisionInListCache(cache, newRevision);\n                        addRevisionToRevisionsCache(cache, newRevision);\n                    }\n                });\n\n                const { data, error } = res.formBuilder.revision;\n\n                if (error) {\n                    return showSnackbar(error.message);\n                }\n\n                history.push(`/form-builder/forms/${encodeURIComponent(data.id)}`);\n            },\n            editRevision: () => () => {\n                history.push(`/form-builder/forms/${encodeURIComponent(revision.id)}`);\n            },\n            deleteRevision: () => async () => {\n                await client.mutate({\n                    mutation: DELETE_REVISION,\n                    variables: { revision: revision.id },\n                    update: (cache, updated) => {\n                        const { error } = updated.data.formBuilder.deleteForm; // `deleteForm` because we assigned an alias\n                        if (error) {\n                            return showSnackbar(error.message);\n                        }\n\n                        // We have other revisions, update form's cache\n                        const revisions = removeRevisionFromFormCache(cache, form, revision);\n\n                        if (revision.id === form.id) {\n                            updateLatestRevisionInListCache(cache, revisions[0]);\n                            // Redirect to the first revision in the list of all form revisions.\n                            return history.push(\n                                `/form-builder/forms?id=${encodeURIComponent(revisions[0].id)}`\n                            );\n                        }\n                    }\n                });\n            },\n            publishRevision: () => async () => {\n                const { data: res } = await client.mutate({\n                    mutation: PUBLISH_REVISION,\n                    variables: { revision: revision.id }\n                });\n\n                const { error } = res.formBuilder.publishRevision;\n                if (error) {\n                    return showSnackbar(error.message);\n                }\n\n                showSnackbar(\n                    <span>\n                        Successfully published revision <strong>#{revision.version}</strong>!\n                    </span>\n                );\n            },\n            unpublishRevision: () => async () => {\n                await client.mutate({\n                    mutation: UNPUBLISH_REVISION,\n                    variables: { revision: revision.id }\n                });\n            }\n        });\n\n    return { createRevision, editRevision, deleteRevision, publishRevision, unpublishRevision };\n};\n"],"file":"useRevision.js"}