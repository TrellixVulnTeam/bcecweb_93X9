import React from "react";
import { useRouter } from "@webiny/react-router";
import { IconButton } from "@webiny/ui/Button";
import { Tooltip } from "@webiny/ui/Tooltip";
import { ReactComponent as EditIcon } from "@svgr/webpack!../../../../icons/edit.svg";
import { useRevision } from "../../formRevisions/useRevision";
import usePermission from "../../../../../hooks/usePermission";

var EditRevision = function EditRevision(_ref) {
  var revision = _ref.revision,
      form = _ref.form;

  var _useRevision = useRevision({
    revision: revision,
    form: form
  }),
      createRevision = _useRevision.createRevision;

  var _useRouter = useRouter(),
      history = _useRouter.history;

  var _usePermission = usePermission(),
      canEdit = _usePermission.canEdit; // Render nothing is user doesn't have required permission.


  if (!canEdit(form)) {
    return null;
  }

  if (revision.status === "draft") {
    return /*#__PURE__*/React.createElement(Tooltip, {
      content: "Edit",
      placement: "top"
    }, /*#__PURE__*/React.createElement(IconButton, {
      "data-testid": "fb.form-preview.header.edit-revision",
      icon: /*#__PURE__*/React.createElement(EditIcon, null),
      onClick: function onClick() {
        return history.push("/form-builder/forms/".concat(encodeURIComponent(revision.id)));
      }
    }));
  }

  return /*#__PURE__*/React.createElement(Tooltip, {
    content: "New draft based on this version...",
    placement: "top"
  }, /*#__PURE__*/React.createElement(IconButton, {
    "data-testid": "fb.form-preview.header.create-revision",
    icon: /*#__PURE__*/React.createElement(EditIcon, null),
    onClick: createRevision
  }));
};

export default EditRevision;
//# sourceMappingURL=EditRevision.js.map