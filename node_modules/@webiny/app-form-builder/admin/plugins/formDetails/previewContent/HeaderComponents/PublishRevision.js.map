{"version":3,"sources":["../../../../../../src/admin/plugins/formDetails/previewContent/HeaderComponents/PublishRevision.tsx"],"names":["React","IconButton","Tooltip","PUBLISH_REVISION","UNPUBLISH_REVISION","ConfirmationDialog","useApolloClient","useSnackbar","usePermission","PublishRevision","revision","showSnackbar","client","canPublish","canUnpublish","status","showConfirmation","mutate","mutation","variables","id","res","data","error","formBuilder","publishRevision","message","version","unpublishRevision"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { ReactComponent as PublishIcon } from \"../../../../icons/publish.svg\";\nimport { ReactComponent as UnpublishIcon } from \"../../../../icons/unpublish.svg\";\nimport { PUBLISH_REVISION, UNPUBLISH_REVISION } from \"../../../../graphql\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { FbRevisionModel } from \"../../../../../types\";\nimport usePermission from \"../../../../../hooks/usePermission\";\n\ntype PublishRevisionProps = {\n    revision: FbRevisionModel;\n};\n\nconst PublishRevision = ({ revision }: PublishRevisionProps) => {\n    const { showSnackbar } = useSnackbar();\n    const client = useApolloClient();\n    const { canPublish, canUnpublish } = usePermission();\n\n    return (\n        <React.Fragment>\n            {revision.status !== \"published\" && canPublish() && (\n                <Tooltip content={\"Publish\"} placement={\"top\"}>\n                    <ConfirmationDialog\n                        title={\"Publish form\"}\n                        message={\n                            \"You are about to publish this form, are you sure want to continue?\"\n                        }\n                        data-testid={\"fb.form-preview.header.publish-dialog\"}\n                    >\n                        {({ showConfirmation }) => (\n                            <IconButton\n                                data-testid={\"fb.form-preview.header.publish\"}\n                                icon={<PublishIcon />}\n                                onClick={() =>\n                                    showConfirmation(async () => {\n                                        const { data: res } = await client.mutate({\n                                            mutation: PUBLISH_REVISION,\n                                            variables: { revision: revision.id }\n                                        });\n\n                                        const { error } = res.formBuilder.publishRevision;\n                                        if (error) {\n                                            return showSnackbar(error.message);\n                                        }\n\n                                        showSnackbar(\n                                            <span>\n                                                Successfully published revision{\" \"}\n                                                <strong>#{revision.version}</strong>!\n                                            </span>\n                                        );\n                                    })\n                                }\n                            />\n                        )}\n                    </ConfirmationDialog>\n                </Tooltip>\n            )}\n            {revision.status === \"published\" && canUnpublish() && (\n                <Tooltip content={\"Unpublish\"} placement={\"top\"}>\n                    <ConfirmationDialog\n                        title={\"Un-publish form\"}\n                        message={\n                            \"You are about to unpublish this form, are you sure want to continue?\"\n                        }\n                        data-testid={\"fb.form-preview.header.unpublish-dialog\"}\n                    >\n                        {({ showConfirmation }) => (\n                            <IconButton\n                                data-testid={\"fb.form-preview.header.unpublish\"}\n                                icon={<UnpublishIcon />}\n                                onClick={() =>\n                                    showConfirmation(async () => {\n                                        const { data: res } = await client.mutate({\n                                            mutation: UNPUBLISH_REVISION,\n                                            variables: { revision: revision.id }\n                                        });\n\n                                        const { error } = res.formBuilder.unpublishRevision;\n                                        if (error) {\n                                            return showSnackbar(error.message);\n                                        }\n\n                                        showSnackbar(\n                                            <span>\n                                                Successfully unpublished revision{\" \"}\n                                                <strong>#{revision.version}</strong>!\n                                            </span>\n                                        );\n                                    })\n                                }\n                            />\n                        )}\n                    </ConfirmationDialog>\n                </Tooltip>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default PublishRevision;\n"],"file":"PublishRevision.js"}