import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import React from "react";
import { Typography } from "@webiny/ui/Typography";
import { Tooltip } from "@webiny/ui/Tooltip";
import { css } from "emotion";
import { IconButton } from "@webiny/ui/Button";
import { Switch } from "@webiny/ui/Switch";
import { ReactComponent as EditIcon } from "@svgr/webpack!../../../../../icons/edit.svg";
import { ReactComponent as DeleteIcon } from "@svgr/webpack!../../../../../icons/delete.svg";
var optionsListItemLeft = /*#__PURE__*/css({
  display: "flex",
  justifyContent: "left",
  alignItems: "center",
  ">div": {
    display: "flex",
    flexDirection: "column",
    marginLeft: 10,
    color: "var(--mdc-theme-on-surface)",
    span: {
      lineHeight: "125%"
    }
  }
}, "label:optionsListItemLeft;");
var optionsListItemRight = /*#__PURE__*/css({
  display: "flex",
  justifyContent: "right",
  alignItems: "center"
}, "label:optionsListItemRight;");

var DefaultValueSwitch = function DefaultValueSwitch(_ref) {
  var multiple = _ref.multiple,
      option = _ref.option,
      currentDefaultValue = _ref.value,
      setDefaultValue = _ref.onChange;

  if (multiple) {
    var _selected = Array.isArray(currentDefaultValue) && currentDefaultValue.includes(option.value);

    return /*#__PURE__*/React.createElement(Switch, {
      value: _selected,
      onChange: function onChange() {
        if (_selected) {
          var value = Array.isArray(currentDefaultValue) ? _toConsumableArray(currentDefaultValue) : [];
          value.splice(value.indexOf(option.value), 1);
          setDefaultValue(value);
        } else {
          var _value = Array.isArray(currentDefaultValue) ? _toConsumableArray(currentDefaultValue) : [];

          _value.push(option.value);

          setDefaultValue(_value);
        }
      }
    });
  }

  var selected = currentDefaultValue === option.value;
  return /*#__PURE__*/React.createElement(Switch, {
    value: selected,
    onChange: function onChange() {
      var newValue = selected ? "" : option.value;
      setDefaultValue(newValue);
    }
  });
};

export default function OptionsListItem(props) {
  var option = props.option,
      multiple = props.multiple,
      dragHandle = props.dragHandle,
      Bind = props.Bind,
      deleteOption = props.deleteOption,
      editOption = props.editOption;
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: optionsListItemLeft
  }, /*#__PURE__*/React.createElement(Tooltip, {
    placement: "bottom",
    content: /*#__PURE__*/React.createElement("span", null, "Drag to rearrange the order")
  }, /*#__PURE__*/React.createElement("span", null, dragHandle)), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Typography, {
    use: "subtitle1"
  }, option.label), /*#__PURE__*/React.createElement(Typography, {
    use: "caption"
  }, option.value))), /*#__PURE__*/React.createElement("div", {
    className: optionsListItemRight
  }, /*#__PURE__*/React.createElement(IconButton, {
    icon: /*#__PURE__*/React.createElement(EditIcon, null),
    onClick: editOption
  }), /*#__PURE__*/React.createElement(IconButton, {
    icon: /*#__PURE__*/React.createElement(DeleteIcon, null),
    onClick: deleteOption
  }), /*#__PURE__*/React.createElement(Bind, {
    name: "settings.defaultValue"
  }, function (_ref2) {
    var onChange = _ref2.onChange,
        value = _ref2.value;
    return /*#__PURE__*/React.createElement(Tooltip, {
      placement: "bottom",
      content: /*#__PURE__*/React.createElement("span", null, "Set as default value")
    }, /*#__PURE__*/React.createElement(DefaultValueSwitch, {
      onChange: onChange,
      value: value,
      multiple: multiple,
      option: option
    }));
  })));
}
//# sourceMappingURL=OptionsListItem.js.map