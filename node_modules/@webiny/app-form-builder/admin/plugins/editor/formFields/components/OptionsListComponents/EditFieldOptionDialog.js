import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject, _templateObject2, _templateObject3, _templateObject4;

import React from "react";
import { css } from "emotion";
import { Form } from "@webiny/form";
import { Grid, Cell } from "@webiny/ui/Grid";
import { Input } from "@webiny/ui/Input";
import { i18n } from "@webiny/app/i18n";
import { Hotkeys } from "react-hotkeyz";
import { validation } from "@webiny/validation";
import { Dialog, DialogTitle, DialogContent, DialogActions, DialogButton } from "@webiny/ui/Dialog";
var t = i18n.namespace("Forms.FormEditor.EditFieldOptionDialog");
var narrowDialog = /*#__PURE__*/css({
  ".mdc-dialog__surface": {
    width: 600,
    minWidth: 600
  }
}, "label:narrowDialog;");

var EditFieldOptionDialog = function EditFieldOptionDialog(props) {
  var onClose = props.onClose,
      options = props.options,
      open = props.open,
      onSubmit = props.onSubmit,
      option = props.option,
      optionIndex = props.optionIndex;
  return /*#__PURE__*/React.createElement(Dialog, {
    open: open,
    onClose: onClose,
    className: narrowDialog
  }, option !== null && /*#__PURE__*/React.createElement(Hotkeys, {
    zIndex: 115,
    keys: {
      esc: function esc(e) {
        e.preventDefault();
        e.stopPropagation();
        onClose();
      }
    }
  }, /*#__PURE__*/React.createElement(Form, {
    data: option,
    onSubmit: onSubmit
  }, function (_ref) {
    var Bind = _ref.Bind,
        submit = _ref.submit;
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogTitle, null, t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Edit option"])))), /*#__PURE__*/React.createElement(DialogContent, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "label"
    }, /*#__PURE__*/React.createElement(Input, {
      label: t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Label"])))
    }))), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "value",
      validators: function validators(value) {
        validation.validateSync(value, "required");

        if (!Array.isArray(options)) {
          return true;
        }

        for (var i = 0; i < options.length; i++) {
          var current = options[i];

          if (current.value === value && i !== optionIndex) {
            throw new Error("Option with value \"".concat(value, "\" already exists."));
          }
        }
      }
    }, /*#__PURE__*/React.createElement(Input, {
      label: t(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["Value"])))
    }))))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(DialogButton, {
      onClick: submit
    }, t(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["Save"]))))));
  })));
};

export default EditFieldOptionDialog;
//# sourceMappingURL=EditFieldOptionDialog.js.map