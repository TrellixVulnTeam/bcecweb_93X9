{"version":3,"sources":["../../../../../src/admin/plugins/editor/defaultBar/Revisions.tsx"],"names":["React","css","useRouter","Menu","MenuItem","ButtonDefault","Icon","Typography","i18n","useQuery","GET_FORM_REVISIONS","useFormEditor","t","namespace","buttonStyle","color","menuList","flexDirection","justifyContent","alignItems","textAlign","Revisions","data","state","history","getRevisions","variables","id","split","revisions","loading","formBuilder","evt","push","encodeURIComponent","detail","index","map","rev","status","version","memo"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,UAAT,QAA2B,uBAA3B;;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,kBAAT;AACA,SAASC,aAAT;AACA,IAAMC,CAAC,GAAGJ,IAAI,CAACK,SAAL,CAAe,0BAAf,CAAV;AAEA,IAAMC,WAAW,gBAAGb,GAAG,CAAC;AACpB,kBAAgB;AACZc,IAAAA,KAAK,EAAE;AADK;AADI,CAAD,uBAAvB;AAMA,IAAMC,QAAQ,gBAAGf,GAAG,CAAC;AACjB,oBAAkB;AACdgB,IAAAA,aAAa,EAAE,QADD;AAEdC,IAAAA,cAAc,EAAE,QAFF;AAGdC,IAAAA,UAAU,EAAE,UAHE;AAIdC,IAAAA,SAAS,EAAE;AAJG;AADD,CAAD,oBAApB;;AASA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,uBAEIV,aAAa,EAFjB;AAAA,MACaW,IADb,kBACIC,KADJ,CACaD,IADb;;AAIA,mBAAoBpB,SAAS,EAA7B;AAAA,MAAQsB,OAAR,cAAQA,OAAR;;AAEA,MAAMC,YAAY,GAAGhB,QAAQ,CAACC,kBAAD,EAAqB;AAC9CgB,IAAAA,SAAS,EAAE;AACPC,MAAAA,EAAE,EAAEL,IAAI,CAACK,EAAL,CAAQC,KAAR,CAAc,GAAd,EAAmB,CAAnB;AADG;AADmC,GAArB,CAA7B;AAMA,MAAMC,SAAS,GAAGJ,YAAY,CAACK,OAAb,GAAuB,EAAvB,GAA4BL,YAAY,CAACH,IAAb,CAAkBS,WAAlB,CAA8BF,SAA9B,CAAwCP,IAAtF;AAEA,sBACI,oBAAC,IAAD;AACI,IAAA,SAAS,EAAEN,QADf;AAEI,IAAA,QAAQ,EAAE,kBAAAgB,GAAG,EAAI;AACbR,MAAAA,OAAO,CAACS,IAAR,+BAC2BC,kBAAkB,CAACL,SAAS,CAACG,GAAG,CAACG,MAAJ,CAAWC,KAAZ,CAAT,CAA4BT,EAA7B,CAD7C;AAGH,KANL;AAOI,IAAA,MAAM,eACF,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAEb;AAA1B,OACKF,CADL,kGACmB,oBAAC,IAAD;AAAM,MAAA,IAAI,eAAE,oBAAC,UAAD;AAAZ,MADnB;AARR,KAaKiB,SAAS,CAACQ,GAAV,CAAc,UAAAC,GAAG;AAAA,wBACd,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAG,CAACX,EAAnB;AAAuB,MAAA,QAAQ,EAAEW,GAAG,CAACC,MAAJ,KAAe;AAAhD,oBACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE;AAAjB,YAA4BD,GAAG,CAACE,OAAhC,CADJ,eAEI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE;AAAjB,YAA8BF,GAAG,CAACC,MAAlC,MAFJ,CADc;AAAA,GAAjB,CAbL,CADJ;AAsBH,CArCD;;AAuCA,4BAAevC,KAAK,CAACyC,IAAN,CAAWpB,SAAX,CAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { Menu, MenuItem } from \"@webiny/ui/Menu\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { ReactComponent as DownButton } from \"./icons/round-arrow_drop_down-24px.svg\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_FORM_REVISIONS } from \"../../../graphql\";\nimport { useFormEditor } from \"../../../components/FormEditor\";\nconst t = i18n.namespace(\"FormEditor.RevisionsMenu\");\n\nconst buttonStyle = css({\n    \"&.mdc-button\": {\n        color: \"var(--mdc-theme-text-primary-on-background) !important\"\n    }\n});\n\nconst menuList = css({\n    \".mdc-list-item\": {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"baseline\",\n        textAlign: \"left\"\n    }\n});\n\nconst Revisions = () => {\n    const {\n        state: { data }\n    } = useFormEditor();\n\n    const { history } = useRouter();\n\n    const getRevisions = useQuery(GET_FORM_REVISIONS, {\n        variables: {\n            id: data.id.split(\"#\")[0]\n        }\n    });\n\n    const revisions = getRevisions.loading ? [] : getRevisions.data.formBuilder.revisions.data;\n\n    return (\n        <Menu\n            className={menuList}\n            onSelect={evt => {\n                history.push(\n                    `/form-builder/forms/${encodeURIComponent(revisions[evt.detail.index].id)}`\n                );\n            }}\n            handle={\n                <ButtonDefault className={buttonStyle}>\n                    {t`Revisions`} <Icon icon={<DownButton />} />\n                </ButtonDefault>\n            }\n        >\n            {revisions.map(rev => (\n                <MenuItem key={rev.id} disabled={rev.status !== \"draft\"}>\n                    <Typography use={\"body2\"}>v{rev.version}</Typography>\n                    <Typography use={\"caption\"}>({rev.status})</Typography>\n                </MenuItem>\n            ))}\n        </Menu>\n    );\n};\n\nexport default React.memo(Revisions);\n"],"file":"Revisions.js"}