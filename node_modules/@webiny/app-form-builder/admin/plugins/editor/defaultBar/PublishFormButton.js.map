{"version":3,"sources":["../../../../../src/admin/plugins/editor/defaultBar/PublishFormButton.tsx"],"names":["React","useMutation","useRouter","ButtonPrimary","ConfirmationDialog","useSnackbar","i18n","useFormEditor","PUBLISH_REVISION","usePermission","t","namespace","PublishFormButton","data","state","showSnackbar","history","publish","canPublish","showConfirmation","variables","revision","id","update","cache","formBuilder","publishRevision","error","message","push","encodeURIComponent","setTimeout","version"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT;AACA,SAASC,gBAAT;AACA,OAAOC,aAAP;AAEA,IAAMC,CAAC,GAAGJ,IAAI,CAACK,SAAL,CAAe,8BAAf,CAAV;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,uBAEIL,aAAa,EAFjB;AAAA,MACaM,IADb,kBACIC,KADJ,CACaD,IADb;;AAIA,qBAAyBR,WAAW,EAApC;AAAA,MAAQU,YAAR,gBAAQA,YAAR;;AACA,mBAAoBb,SAAS,EAA7B;AAAA,MAAQc,OAAR,cAAQA,OAAR;;AAEA,qBAAkBf,WAAW,CAACO,gBAAD,CAA7B;AAAA;AAAA,MAAOS,OAAP;;AACA,uBAAuBR,aAAa,EAApC;AAAA,MAAQS,UAAR,kBAAQA,UAAR,CAT4B,CAW5B;;;AACA,MAAI,CAACA,UAAU,EAAf,EAAmB;AACf,WAAO,IAAP;AACH;;AAED,sBACI,oBAAC,kBAAD;AACI,IAAA,KAAK,EAAER,CAAF,iFADT;AAEI,IAAA,OAAO,EAAEA,CAAF,yIAFX;AAGI,mBAAa;AAHjB,KAKK;AAAA,QAAGS,gBAAH,QAAGA,gBAAH;AAAA,wBACG,oBAAC,aAAD;AACI,qBAAa,+BADjB;AAEI,MAAA,OAAO,wEAAE;AAAA;AAAA;AAAA;AAAA;AACLA,gBAAAA,gBAAgB,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACPF,OAAO,CAAC;AACVG,4BAAAA,SAAS,EAAE;AACPC,8BAAAA,QAAQ,EAAER,IAAI,CAACS;AADR,6BADD;AAIVC,4BAAAA,MAJU,kBAIHC,KAJG,SAIc;AAAA,kCAARX,IAAQ,SAARA,IAAQ;;AACpB,0CACIA,IAAI,CAACY,WAAL,CAAiBC,eAAjB,IAAoC,EADxC;AAAA,kCAAcL,QAAd,SAAQR,IAAR;AAAA,kCAAwBc,KAAxB,SAAwBA,KAAxB;;AAGA,kCAAIA,KAAJ,EAAW;AACP,uCAAOZ,YAAY,CAACY,KAAK,CAACC,OAAP,CAAnB;AACH;;AAEDZ,8BAAAA,OAAO,CAACa,IAAR,kCAC8BC,kBAAkB,CAACT,QAAQ,CAACC,EAAV,CADhD,GARoB,CAYpB;;AAAA;AACAS,8BAAAA,UAAU,CAAC,YAAM;AACbhB,gCAAAA,YAAY,CAACL,CAAD,6GAAZ;AACH,+BAFS,EAEP,GAFO,CAAV;AAGH;AApBS,2BAAD,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAD,GAAhB;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;AAFX,OA6BKG,IAAI,CAACmB,OAAL,GAAe,CAAf,GAAmBtB,CAAnB,yFAAwCA,CAAxC,8EA7BL,CADH;AAAA,GALL,CADJ;AAyCH,CAzDD;;AA2DA,eAAeE,iBAAf","sourcesContent":["import React from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useFormEditor } from \"../../../components/FormEditor/Context\";\nimport { PUBLISH_REVISION } from \"../../../graphql\";\nimport usePermission from \"../../../../hooks/usePermission\";\n\nconst t = i18n.namespace(\"FormEditor.PublishPageButton\");\n\nconst PublishFormButton = () => {\n    const {\n        state: { data }\n    } = useFormEditor();\n\n    const { showSnackbar } = useSnackbar();\n    const { history } = useRouter();\n\n    const [publish] = useMutation(PUBLISH_REVISION);\n    const { canPublish } = usePermission();\n\n    // Render nothing if required permission is missing.\n    if (!canPublish()) {\n        return null;\n    }\n\n    return (\n        <ConfirmationDialog\n            title={t`Publish form`}\n            message={t`You are about to publish this form, are you sure want to continue?`}\n            data-testid={\"fb.editor.default-bar.publish-dialog\"}\n        >\n            {({ showConfirmation }) => (\n                <ButtonPrimary\n                    data-testid={\"fb.editor.default-bar.publish\"}\n                    onClick={async () => {\n                        showConfirmation(async () => {\n                            await publish({\n                                variables: {\n                                    revision: data.id\n                                },\n                                update(cache, { data }) {\n                                    const { data: revision, error } =\n                                        data.formBuilder.publishRevision || {};\n\n                                    if (error) {\n                                        return showSnackbar(error.message);\n                                    }\n\n                                    history.push(\n                                        `/form-builder/forms?id=${encodeURIComponent(revision.id)}`\n                                    );\n\n                                    // Let's wait a bit, because we are also redirecting the user.\n                                    setTimeout(() => {\n                                        showSnackbar(t`Your form was published successfully!`);\n                                    }, 500);\n                                }\n                            });\n                        });\n                    }}\n                >\n                    {data.version > 1 ? t`Publish changes` : t`Publish`}\n                </ButtonPrimary>\n            )}\n        </ConfirmationDialog>\n    );\n};\n\nexport default PublishFormButton;\n"],"file":"PublishFormButton.js"}