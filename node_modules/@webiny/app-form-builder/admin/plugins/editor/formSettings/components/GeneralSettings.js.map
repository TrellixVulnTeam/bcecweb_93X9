{"version":3,"sources":["../../../../../../src/admin/plugins/editor/formSettings/components/GeneralSettings.tsx"],"names":["React","useMemo","Grid","Cell","Select","Input","plugins","RichTextEditor","createPropsFromConfig","GeneralSettings","Bind","theme","Object","assign","byType","map","pl","layouts","layout","reduce","acc","item","find","l","name","push","rteProps","config","value","label","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAGA,SAASC,cAAT,EAAyBC,qBAAzB,QAAsD,6CAAtD;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAClC,MAAMC,KAAK,GAAGV,OAAO,CACjB;AAAA,WAAMW,MAAM,CAACC,MAAP,OAAAD,MAAM,GAAQ,EAAR,4BAAeN,OAAO,CAACQ,MAAR,CAAe,UAAf,EAA2BC,GAA3B,CAA+B,UAACC,EAAD;AAAA,aAAuBA,EAAE,CAACL,KAA1B;AAAA,KAA/B,CAAf,GAAZ;AAAA,GADiB,EAEjB,EAFiB,CAArB;AAKA,MAAMM,OAAO,GAAGhB,OAAO,CACnB;AAAA,WACI,6BACQ,KAAIU,KAAJ,EAAW,qBAAX,KAAqC,EAD7C,sBAEOL,OAAO,CAACQ,MAAR,CAAmC,aAAnC,EAAkDC,GAAlD,CAAsD,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACE,MAAP;AAAA,KAAxD,CAFP,GAGEC,MAHF,CAGS,UAACC,GAAD,EAAMC,IAAN,EAAe;AACpB,UAAI,CAACD,GAAG,CAACE,IAAJ,CAAS,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,KAAWH,IAAI,CAACG,IAApB;AAAA,OAAV,CAAL,EAA0C;AACtCJ,QAAAA,GAAG,CAACK,IAAJ,CAASJ,IAAT;AACH;;AACD,aAAOD,GAAP;AACH,KARD,EAQG,EARH,CADJ;AAAA,GADmB,EAWnB,EAXmB,CAAvB;AAcA,MAAMM,QAAQ,GAAGzB,OAAO,CAAC,YAAM;AAC3B,WAAOO,qBAAqB,CAACF,OAAO,CAACQ,MAAR,CAAe,eAAf,EAAgCC,GAAhC,CAAoC,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACW,MAAP;AAAA,KAAtC,CAAD,CAA5B;AACH,GAFuB,EAErB,EAFqB,CAAxB;AAIA,sBACI,oBAAC,KAAD,CAAO,QAAP,qBACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,cAAD,oBAAoBD,QAApB;AAA8B,IAAA,KAAK,EAAE;AAArC,KADJ,CADJ,CADJ,eAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAd,IADJ,CADJ,CANJ,eAWI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAE,QADX;AAEI,IAAA,OAAO,EAAET,OAAO,CAACF,GAAR,CAAY,UAAAM,IAAI,EAAI;AACzB,aAAO;AAAEO,QAAAA,KAAK,EAAEP,IAAI,CAACG,IAAd;AAAoBK,QAAAA,KAAK,EAAER,IAAI,CAACS;AAAhC,OAAP;AACH,KAFQ;AAFb,IADJ,CADJ,CAXJ,CADJ,CADJ;AA0BH,CAlDD;;AAoDA,eAAerB,eAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { get } from \"lodash\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { plugins } from \"@webiny/plugins\";\nimport { FbFormLayoutPlugin } from \"../../../../../types\";\nimport { PbThemePlugin } from \"@webiny/app-page-builder/types\";\nimport { RichTextEditor, createPropsFromConfig } from \"@webiny/app-admin/components/RichTextEditor\";\n\nconst GeneralSettings = ({ Bind }) => {\n    const theme = useMemo(\n        () => Object.assign({}, ...plugins.byType(\"pb-theme\").map((pl: PbThemePlugin) => pl.theme)),\n        []\n    );\n\n    const layouts = useMemo(\n        () =>\n            [\n                ...(get(theme, \"formBuilder.layouts\") || []),\n                ...plugins.byType<FbFormLayoutPlugin>(\"form-layout\").map(pl => pl.layout)\n            ].reduce((acc, item) => {\n                if (!acc.find(l => l.name === item.name)) {\n                    acc.push(item);\n                }\n                return acc;\n            }, []),\n        []\n    );\n\n    const rteProps = useMemo(() => {\n        return createPropsFromConfig(plugins.byType(\"fb-rte-config\").map(pl => pl.config));\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Grid>\n                <Cell span={12}>\n                    <Bind name={\"successMessage\"}>\n                        <RichTextEditor {...rteProps} label={\"Success message\"} />\n                    </Bind>\n                </Cell>\n                <Cell span={12}>\n                    <Bind name={\"submitButtonLabel\"}>\n                        <Input label={\"Submit button label\"} />\n                    </Bind>\n                </Cell>\n                <Cell span={12}>\n                    <Bind name={\"layout.renderer\"}>\n                        <Select\n                            label={\"Layout\"}\n                            options={layouts.map(item => {\n                                return { value: item.name, label: item.title };\n                            })}\n                        />\n                    </Bind>\n                </Cell>\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default GeneralSettings;\n"],"file":"GeneralSettings.js"}