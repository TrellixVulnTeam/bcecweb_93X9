import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _get from "lodash/get";
import React, { useMemo } from "react";
import { Grid, Cell } from "@webiny/ui/Grid";
import { Select } from "@webiny/ui/Select";
import { Input } from "@webiny/ui/Input";
import { plugins } from "@webiny/plugins";
import { RichTextEditor, createPropsFromConfig } from "@webiny/app-admin/components/RichTextEditor";

var GeneralSettings = function GeneralSettings(_ref) {
  var Bind = _ref.Bind;
  var theme = useMemo(function () {
    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(plugins.byType("pb-theme").map(function (pl) {
      return pl.theme;
    }))));
  }, []);
  var layouts = useMemo(function () {
    return [].concat(_toConsumableArray(_get(theme, "formBuilder.layouts") || []), _toConsumableArray(plugins.byType("form-layout").map(function (pl) {
      return pl.layout;
    }))).reduce(function (acc, item) {
      if (!acc.find(function (l) {
        return l.name === item.name;
      })) {
        acc.push(item);
      }

      return acc;
    }, []);
  }, []);
  var rteProps = useMemo(function () {
    return createPropsFromConfig(plugins.byType("fb-rte-config").map(function (pl) {
      return pl.config;
    }));
  }, []);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
    span: 12
  }, /*#__PURE__*/React.createElement(Bind, {
    name: "successMessage"
  }, /*#__PURE__*/React.createElement(RichTextEditor, Object.assign({}, rteProps, {
    label: "Success message"
  })))), /*#__PURE__*/React.createElement(Cell, {
    span: 12
  }, /*#__PURE__*/React.createElement(Bind, {
    name: "submitButtonLabel"
  }, /*#__PURE__*/React.createElement(Input, {
    label: "Submit button label"
  }))), /*#__PURE__*/React.createElement(Cell, {
    span: 12
  }, /*#__PURE__*/React.createElement(Bind, {
    name: "layout.renderer"
  }, /*#__PURE__*/React.createElement(Select, {
    label: "Layout",
    options: layouts.map(function (item) {
      return {
        value: item.name,
        label: item.title
      };
    })
  })))));
};

export default GeneralSettings;
//# sourceMappingURL=GeneralSettings.js.map