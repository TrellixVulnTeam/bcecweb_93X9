{"version":3,"sources":["../../../../../../src/admin/plugins/editor/formSettings/components/ReCaptchaSettings.tsx"],"names":["React","useState","useCallback","Grid","Cell","Switch","useQuery","GET_RECAPTCHA_SETTINGS","ReCaptchaSettingsDialog","Alert","Input","ReCaptchaSettings","Bind","formData","dialogOpened","setDialogOpened","openDialog","closeDialog","settingsLoaded","setSettingsLoaded","onCompleted","data","refetch","settings","formBuilder","getSettings","reCaptcha","reCaptchaEnabledInSettings","enabled","siteKey","secretKey","reCaptchaEnabled","onChange","rest","value"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Switch } from \"@webiny/ui/Switch\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_RECAPTCHA_SETTINGS } from \"./graphql\";\nimport ReCaptchaSettingsDialog from \"./ReCaptchaSettingsDialog\";\nimport { Alert } from \"@webiny/ui/Alert\";\nimport { Input } from \"@webiny/ui/Input\";\n\nconst ReCaptchaSettings = ({ Bind, formData }) => {\n    const [dialogOpened, setDialogOpened] = useState(false);\n    const openDialog = useCallback(() => setDialogOpened(true), []);\n    const closeDialog = useCallback(() => setDialogOpened(false), []);\n\n    const [settingsLoaded, setSettingsLoaded] = useState(false);\n\n    const { data, refetch } = useQuery(GET_RECAPTCHA_SETTINGS, {\n        onCompleted: () => setSettingsLoaded(true)\n    });\n\n    const settings = data?.formBuilder?.getSettings?.data?.reCaptcha || {};\n    const reCaptchaEnabledInSettings = settings.enabled && settings.siteKey && settings.secretKey;\n    const reCaptchaEnabled = formData?.reCaptcha?.enabled;\n\n    return (\n        <Bind name={\"reCaptcha.enabled\"}>\n            {({ onChange, ...rest }) => (\n                <Grid>\n                    <Cell span={12}>\n                        <Switch\n                            onChange={value => {\n                                if (value && !reCaptchaEnabledInSettings) {\n                                    openDialog();\n                                    return;\n                                }\n\n                                onChange(value);\n                            }}\n                            {...rest}\n                            label={\"Enabled\"}\n                            description={`Will require users to \"confirm they are human\" by clicking on a special checkbox.`}\n                        />\n                    </Cell>\n                    <Cell span={12}>\n                        <Bind name={\"reCaptcha.errorMessage\"}>\n                            <Input disabled={!reCaptchaEnabled} label={\"Error message\"} />\n                        </Bind>\n                    </Cell>\n\n                    {settingsLoaded && !reCaptchaEnabledInSettings && (\n                        <Cell span={12}>\n                            <Alert type=\"danger\" title=\"Google reCAPTCHA not enabled.\">\n                                Click{\" \"}\n                                <a href=\"#\" onClick={openDialog}>\n                                    here\n                                </a>{\" \"}\n                                to update your Google reCAPTCHA settings.\n                            </Alert>\n                        </Cell>\n                    )}\n                    <ReCaptchaSettingsDialog\n                        reCaptchaSettings={settings}\n                        open={dialogOpened}\n                        onClose={closeDialog}\n                        onSubmit={() => {\n                            refetch();\n                            onChange(true);\n                            closeDialog();\n                        }}\n                    />\n                </Grid>\n            )}\n        </Bind>\n    );\n};\n\nexport default ReCaptchaSettings;\n"],"file":"ReCaptchaSettings.js"}