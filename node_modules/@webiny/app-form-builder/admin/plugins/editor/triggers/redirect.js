import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _get from "lodash/get";

var _templateObject, _templateObject2, _templateObject3;

import React from "react";
import { Grid, Cell } from "@webiny/ui/Grid";
import { Input } from "@webiny/ui/Input";
import { ReactComponent as LinkIcon } from "@svgr/webpack!./icons/round-link-24px.svg";
import { ButtonPrimary } from "@webiny/ui/Button";
import { i18n } from "@webiny/app/i18n";
import { Alert } from "@webiny/ui/Alert";
var t = i18n.namespace("FormsApp.Editor.RedirectTriggerSettings");
export default {
  type: "form-editor-trigger",
  name: "form-editor-trigger-redirect",
  trigger: {
    id: "redirect",
    title: "Redirect",
    description: "Send a user to a specific URL.",
    icon: /*#__PURE__*/React.createElement(LinkIcon, null),
    renderSettings: function renderSettings(_ref) {
      var Bind = _ref.Bind,
          submit = _ref.submit,
          form = _ref.form;
      var hasSuccessMessage = _get(form, "settings.successMessage.values.length") > 0;
      return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
        span: 12
      }, hasSuccessMessage && /*#__PURE__*/React.createElement(Alert, {
        type: "warning",
        title: "Success message set"
      }, t(_templateObject || (_templateObject = _taggedTemplateLiteral(["This form has a success message set. Note that it will not be\n                                visible if a redirect is set."])))), /*#__PURE__*/React.createElement(Bind, {
        name: "url"
      }, /*#__PURE__*/React.createElement(Input, {
        label: t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Redirect URL"])))
      }))), /*#__PURE__*/React.createElement(Cell, null, /*#__PURE__*/React.createElement(ButtonPrimary, {
        onClick: submit
      }, t(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["Save"]))))));
    }
  }
};
//# sourceMappingURL=redirect.js.map