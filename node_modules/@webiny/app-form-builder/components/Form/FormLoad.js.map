{"version":3,"sources":["../../../src/components/Form/FormLoad.tsx"],"names":["React","GET_PUBLISHED_FORM","useQuery","FormRender","FormLoad","props","variables","parentId","revisionId","data","loading","error","message","stack","formBuilder","getPublishedForm","formData","formError"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,UAAP;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAuC;AACpD,MAAMC,SAAS,GAAG,EAAlB;;AAEA,MAAID,KAAK,CAACE,QAAV,EAAoB;AAChBD,IAAAA,SAAS,CAAC,QAAD,CAAT,GAAsBD,KAAK,CAACE,QAA5B;AACH,GAFD,MAEO;AACHD,IAAAA,SAAS,CAAC,UAAD,CAAT,GAAwBD,KAAK,CAACG,UAA9B;AACH;;AAED,kBAAiCN,QAAQ,CAACD,kBAAD,EAAqB;AAC1DK,IAAAA,SAAS,EAATA;AAD0D,GAArB,CAAzC;AAAA,MAAQG,IAAR,aAAQA,IAAR;AAAA,MAAcC,OAAd,aAAcA,OAAd;AAAA,MAAuBC,KAAvB,aAAuBA,KAAvB;;AAIA,MAAIA,KAAJ,EAAW;AACP,wBACI,oBAAC,KAAD,CAAO,QAAP,qBACI,kDACI,qCAAUA,KAAK,CAACC,OAAN,IAAiB,uBAA3B,CADJ,EAEKD,KAAK,CAACE,KAFX,CADJ,CADJ;AAQH;;AAED,MAAIH,OAAJ,EAAa;AACT,wBAAO,+CAAP;AACH;;AAED,8BAA6CD,IAAI,CAACK,WAAL,CAAiBC,gBAA9D;AAAA,MAAcC,QAAd,yBAAQP,IAAR;AAAA,MAA+BQ,SAA/B,yBAAwBN,KAAxB;;AAEA,MAAI,CAACK,QAAL,EAAe;AACX;AACA,wBAAO,kCAAO,CAAAC,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEL,OAAX,KAAsB,iBAA7B,CAAP;AACH;;AACD,sBAAO,oBAAC,UAAD,oBAAgBP,KAAhB;AAAuB,IAAA,IAAI,EAAEW;AAA7B,KAAP;AACH,CAnCD;;AAqCA,eAAeZ,QAAf","sourcesContent":["import React from \"react\";\nimport { GET_PUBLISHED_FORM } from \"./graphql\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport FormRender from \"./FormRender\";\nimport { FormLoadComponentPropsType } from \"../../types\";\n\nconst FormLoad = (props: FormLoadComponentPropsType) => {\n    const variables = {};\n\n    if (props.parentId) {\n        variables[\"parent\"] = props.parentId;\n    } else {\n        variables[\"revision\"] = props.revisionId;\n    }\n\n    const { data, loading, error } = useQuery(GET_PUBLISHED_FORM, {\n        variables\n    });\n\n    if (error) {\n        return (\n            <React.Fragment>\n                <details>\n                    <summary>{error.message || \"Something went wrong!\"}</summary>\n                    {error.stack}\n                </details>\n            </React.Fragment>\n        );\n    }\n\n    if (loading) {\n        return <span>Loading...</span>;\n    }\n\n    const { data: formData, error: formError } = data.formBuilder.getPublishedForm;\n\n    if (!formData) {\n        // TODO: handle cannot load form\n        return <span>{formError?.message || \"Form not found.\"}</span>;\n    }\n    return <FormRender {...props} data={formData} />;\n};\n\nexport default FormLoad;\n"],"file":"FormLoad.js"}