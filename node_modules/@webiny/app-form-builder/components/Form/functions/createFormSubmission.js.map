{"version":3,"sources":["../../../../src/components/Form/functions/createFormSubmission.ts"],"names":["CREATE_FORM_SUBMISSION","getClientIp","client","props","form","data","preview","rawData","reCaptchaResponseToken","error","message","code","fields","forEach","field","fieldId","id","ip","revision","meta","mutation","variables","mutate","response","formBuilder","createFormSubmission"],"mappings":";;AAEA,SAASA,sBAAT;AACA,OAAOC,WAAP;AAUA;AAAA,uEAAe;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACXC,YAAAA,MADW,QACXA,MADW,oBAEXC,KAFW,EAEIC,IAFJ,cAEFC,IAFE,EAEUC,OAFV,cAEUA,OAFV,EAGLC,OAHK,QAGXF,IAHW,EAIXG,sBAJW,QAIXA,sBAJW;;AAAA,iBAMPF,OANO;AAAA;AAAA;AAAA;;AAAA,6CAOA;AAAEA,cAAAA,OAAO,EAAE,IAAX;AAAiBG,cAAAA,KAAK,EAAE,IAAxB;AAA8BJ,cAAAA,IAAI,EAAE;AAApC,aAPA;;AAAA;AAULA,YAAAA,IAVK,GAUE,EAVF;;AAAA,gBAWND,IAXM;AAAA;AAAA;AAAA;;AAAA,6CAYA;AACHK,cAAAA,KAAK,EAAE;AAAEC,gBAAAA,OAAO,EAAE,uBAAX;AAAoCC,gBAAAA,IAAI,EAAE;AAA1C,eADJ;AAEHN,cAAAA,IAAI,EAAE,IAFH;AAGHC,cAAAA,OAAO,EAAE;AAHN,aAZA;;AAAA;AAmBXF,YAAAA,IAAI,CAACQ,MAAL,CAAYC,OAAZ,CAAoB,UAAAC,KAAK,EAAI;AACzB,kBAAIA,KAAK,CAACC,OAAN,IAAiBR,OAArB,EAA8B;AAC1BF,gBAAAA,IAAI,CAACS,KAAK,CAACC,OAAP,CAAJ,GAAsBR,OAAO,CAACO,KAAK,CAACC,OAAP,CAA7B;AACH;AACJ,aAJD;AAnBW,0BAyBeb,MAzBf;AAAA,0BA0BGF,sBA1BH;AAAA,0BA4BOI,IAAI,CAACY,EA5BZ;AAAA,0BA6BHR,sBA7BG;AAAA,0BA8BHH,IA9BG;AAAA;AAAA,mBAgCWJ,WAAW,EAhCtB;;AAAA;AAAA;AAAA;AAgCCgB,cAAAA,EAhCD;AAAA;AAAA;AA4BHC,cAAAA,QA5BG;AA6BHV,cAAAA,sBA7BG;AA8BHH,cAAAA,IA9BG;AA+BHc,cAAAA,IA/BG;AAAA;AAAA;AA0BPC,cAAAA,QA1BO;AA2BPC,cAAAA,SA3BO;AAAA;AAAA;AAAA,+BAyBsBC,MAzBtB;;AAAA;AAyBPC,YAAAA,QAzBO;AAqCXA,YAAAA,QAAQ,gBAAGA,QAAH,gEAAG,UAAUlB,IAAb,4EAAG,eAAgBmB,WAAnB,0DAAG,sBAA6BC,oBAAxC;AArCW,6CAuCJ;AACHnB,cAAAA,OAAO,EAAE,KADN;AAEHD,cAAAA,IAAI,EAAE,IAFH;AAGHI,cAAAA,KAAK,gBAAEc,QAAF,+CAAE,WAAUd;AAHd,aAvCI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { FbFormRenderComponentProps, FormSubmitResponseType } from \"../../../types\";\n\nimport { CREATE_FORM_SUBMISSION } from \"./graphql\";\nimport getClientIp from \"./getClientIp\";\nimport { ApolloClient } from \"apollo-client\";\n\ntype Args = {\n    client: ApolloClient<any>;\n    props: FbFormRenderComponentProps;\n    data: any;\n    reCaptchaResponseToken: string;\n};\n\nexport default async ({\n    client,\n    props: { data: form, preview },\n    data: rawData,\n    reCaptchaResponseToken\n}: Args): Promise<FormSubmitResponseType> => {\n    if (preview) {\n        return { preview: true, error: null, data: null };\n    }\n\n    const data = {};\n    if (!form) {\n        return {\n            error: { message: \"Form data is missing.\", code: \"FORM_DATA_MISSING\" },\n            data: null,\n            preview: false\n        };\n    }\n\n    form.fields.forEach(field => {\n        if (field.fieldId in rawData) {\n            data[field.fieldId] = rawData[field.fieldId];\n        }\n    });\n\n    let response: any = await client.mutate({\n        mutation: CREATE_FORM_SUBMISSION,\n        variables: {\n            revision: form.id,\n            reCaptchaResponseToken,\n            data,\n            meta: {\n                ip: await getClientIp()\n            }\n        }\n    });\n\n    response = response?.data?.formBuilder?.createFormSubmission;\n\n    return {\n        preview: false,\n        data: null,\n        error: response?.error\n    };\n};\n"],"file":"createFormSubmission.js"}