import React from "react";
import { GET_PUBLISHED_FORM } from "./graphql";
import { useQuery } from "@apollo/react-hooks";
import FormRender from "./FormRender";

var FormLoad = function FormLoad(props) {
  var variables = {};

  if (props.parentId) {
    variables["parent"] = props.parentId;
  } else {
    variables["revision"] = props.revisionId;
  }

  var _useQuery = useQuery(GET_PUBLISHED_FORM, {
    variables: variables
  }),
      data = _useQuery.data,
      loading = _useQuery.loading,
      error = _useQuery.error;

  if (error) {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("details", null, /*#__PURE__*/React.createElement("summary", null, error.message || "Something went wrong!"), error.stack));
  }

  if (loading) {
    return /*#__PURE__*/React.createElement("span", null, "Loading...");
  }

  var _data$formBuilder$get = data.formBuilder.getPublishedForm,
      formData = _data$formBuilder$get.data,
      formError = _data$formBuilder$get.error;

  if (!formData) {
    // TODO: handle cannot load form
    return /*#__PURE__*/React.createElement("span", null, (formError === null || formError === void 0 ? void 0 : formError.message) || "Form not found.");
  }

  return /*#__PURE__*/React.createElement(FormRender, Object.assign({}, props, {
    data: formData
  }));
};

export default FormLoad;
//# sourceMappingURL=FormLoad.js.map