"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _boolean = require("boolean");

const DEFAULT_HEADERS = {
  "Cache-Control": "no-store",
  "Content-Type": "application/json",
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers": "*",
  "Access-Control-Allow-Methods": "OPTIONS,POST"
};

var _default = (options = {}) => [{
  type: "context",

  apply(context) {
    var _invocationArgs$path;

    const {
      invocationArgs
    } = context;

    if (!invocationArgs || !invocationArgs.method) {
      return;
    }

    const path = (_invocationArgs$path = invocationArgs.path) !== null && _invocationArgs$path !== void 0 ? _invocationArgs$path : {};
    const request = {
      method: invocationArgs.method,
      body: invocationArgs.body,
      headers: invocationArgs.headers,
      cookies: invocationArgs.cookies,
      path: {
        base: path.base,
        parameters: path.parameters,
        query: path.query
      }
    };
    context.http = {
      request,

      response({
        statusCode = 200,
        body = "",
        headers = {}
      }) {
        return {
          statusCode,
          body,
          headers
        };
      }

    };
  }

}, {
  type: "handler-error",
  handle: (context, error) => {
    if (!context.http || typeof context.http.response !== "function") {
      return error;
    }

    const debug = (0, _boolean.boolean)(options.debug);

    if (debug) {
      return context.http.response({
        statusCode: 500,
        body: JSON.stringify({
          error: {
            name: error.constructor.name,
            message: error.message,
            stack: error.stack
          }
        }),
        headers: DEFAULT_HEADERS
      });
    }

    return context.http.response({
      statusCode: 500,
      body: JSON.stringify({
        error: {
          name: "Error",
          message: "Internal Server Error"
        }
      }),
      headers: DEFAULT_HEADERS
    });
  }
}];

exports.default = _default;
//# sourceMappingURL=index.js.map