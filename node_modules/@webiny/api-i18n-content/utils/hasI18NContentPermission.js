"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _default = async context => {
  var _context$i18nContent, _context$i18nContent$;

  // If `content.i18n` permission is not present, immediately throw.
  const contentPermission = await context.security.getPermission("content.i18n");

  if (!contentPermission) {
    return false;
  } // Otherwise, let's check if the identity has access to current content locale.
  // If `contentPermission.locales` array is present, that means identity's access is restricted
  // to the locales listed in it. If it's not present, that means there are no restrictions, or
  // in other words - identity can access all locales.


  return !Array.isArray(contentPermission.locales) || contentPermission.locales.includes(context === null || context === void 0 ? void 0 : (_context$i18nContent = context.i18nContent) === null || _context$i18nContent === void 0 ? void 0 : (_context$i18nContent$ = _context$i18nContent.locale) === null || _context$i18nContent$ === void 0 ? void 0 : _context$i18nContent$.code);
};

exports.default = _default;
//# sourceMappingURL=hasI18NContentPermission.js.map