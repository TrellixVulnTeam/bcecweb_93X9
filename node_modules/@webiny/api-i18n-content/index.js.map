{"version":3,"sources":["../src/index.ts"],"names":["hasI18NContentPermission","resolver","parent","args","context","info","NotAuthorizedResponse"],"mappings":";;;;;;;;;AACA;;AAEA;;AAEO,MAAMA,wBAAwB,GAAG,MAAM;AAC1C,SAAQC,QAAD,IAAoC;AACvC,WAAO,OAAOC,MAAP,EAAeC,IAAf,EAAqBC,OAArB,EAAkDC,IAAlD,KAA2D;AAC9D,UAAI,MAAM,uCAAcD,OAAd,CAAV,EAAkC;AAC9B,eAAOH,QAAQ,CAACC,MAAD,EAASC,IAAT,EAAeC,OAAf,EAAwBC,IAAxB,CAAf;AACH;;AACD,aAAO,IAAIC,kCAAJ,EAAP;AACH,KALD;AAMH,GAPD;AAQH,CATM","sourcesContent":["import { GraphQLFieldResolver } from \"@webiny/handler-graphql/types\";\nimport { NotAuthorizedResponse } from \"@webiny/api-security\";\nimport { I18NContentContext } from \"./types\";\nimport hasPermission from \"./utils/hasI18NContentPermission\";\n\nexport const hasI18NContentPermission = () => {\n    return (resolver: GraphQLFieldResolver) => {\n        return async (parent, args, context: I18NContentContext, info) => {\n            if (await hasPermission(context)) {\n                return resolver(parent, args, context, info);\n            }\n            return new NotAuthorizedResponse();\n        };\n    };\n};\n"],"file":"index.js"}