{"version":3,"sources":["../../src/admin/contentLocaleSelector.tsx"],"names":["React","useMemo","useI18N","Menu","MenuItem","ButtonPrimary","ButtonIcon","css","useSecurity","UIViewPlugin","AdminView","GenericElement","menuList","width","right","left","buttonStyles","marginRight","LocaleSelector","setCurrentLocale","getCurrentLocale","getLocales","identity","contentI18NPermission","getPermission","locales","localeList","filter","locale","Array","isArray","includes","code","length","currentLocale","map","window","location","reload","minWidth","color","view","localeSelector","moveToTheBeginningOf","getHeaderElement","getRightSection"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport { useI18N } from \"@webiny/app-i18n/hooks/useI18N\";\nimport { Menu, MenuItem } from \"@webiny/ui/Menu\";\nimport { ButtonPrimary, ButtonIcon } from \"@webiny/ui/Button\";\nimport { css } from \"emotion\";\nimport { useSecurity } from \"@webiny/app-security\";\nimport { UIViewPlugin } from \"@webiny/app-admin/ui/UIView\";\nimport { AdminView } from \"@webiny/app-admin/ui/views/AdminView\";\nimport { GenericElement } from \"@webiny/app-admin/ui/elements/GenericElement\";\nimport { ReactComponent as DoneIcon } from \"./assets/done-24px.svg\";\nimport { ReactComponent as TranslateIcon } from \"./assets/round-translate-24px.svg\";\n\nconst menuList = css({\n    width: 160,\n    right: -220,\n    left: \"auto !important\"\n});\n\nconst buttonStyles = css({\n    marginRight: 10\n});\n\n// !GOOD FIRST ISSUE!\n// Convert this component into a proper LocaleSelectorElement class and implement a renderer via UIElementRenderer class.\n\nconst LocaleSelector = () => {\n    const { setCurrentLocale, getCurrentLocale, getLocales } = useI18N();\n    const { identity } = useSecurity();\n\n    const contentI18NPermission = useMemo(() => identity.getPermission(\"content.i18n\"), []);\n\n    const locales = getLocales();\n    const localeList = locales.filter(locale => {\n        if (!contentI18NPermission || !Array.isArray(contentI18NPermission.locales)) {\n            return true;\n        }\n        return contentI18NPermission.locales.includes(locale.code);\n    });\n\n    if (localeList.length === 1) {\n        return null;\n    }\n\n    const currentLocale = getCurrentLocale(\"content\");\n    return (\n        <Menu\n            className={menuList}\n            handle={\n                <ButtonPrimary className={buttonStyles} flat>\n                    <ButtonIcon icon={<TranslateIcon />} />\n                    Locale: {currentLocale}\n                </ButtonPrimary>\n            }\n            data-testid={\"app-i18n-content.menu\"}\n        >\n            {localeList.map(locale => (\n                <MenuItem\n                    key={locale.code}\n                    onClick={() => {\n                        setCurrentLocale(locale.code, \"content\");\n                        window.location.reload();\n                    }}\n                    data-testid={`app-i18n-content.menu-item.${locale.code}`}\n                >\n                    <span style={{ minWidth: 35 }}>\n                        {currentLocale === locale.code && (\n                            <ButtonIcon\n                                icon={<DoneIcon style={{ color: \"var(--mdc-theme-primary)\" }} />}\n                            />\n                        )}\n                    </span>\n\n                    {locale.code}\n                </MenuItem>\n            ))}\n        </Menu>\n    );\n};\n\nexport default new UIViewPlugin<AdminView>(AdminView, view => {\n    const localeSelector = new GenericElement(\"localeSelector\", () => <LocaleSelector />);\n    localeSelector.moveToTheBeginningOf(view.getHeaderElement().getRightSection());\n});\n"],"file":"contentLocaleSelector.js"}