import React, { useMemo } from "react";
import { useI18N } from "@webiny/app-i18n/hooks/useI18N";
import { Menu, MenuItem } from "@webiny/ui/Menu";
import { ButtonPrimary, ButtonIcon } from "@webiny/ui/Button";
import { css } from "emotion";
import { useSecurity } from "@webiny/app-security";
import { UIViewPlugin } from "@webiny/app-admin/ui/UIView";
import { AdminView } from "@webiny/app-admin/ui/views/AdminView";
import { GenericElement } from "@webiny/app-admin/ui/elements/GenericElement";
import { ReactComponent as DoneIcon } from "@svgr/webpack!./assets/done-24px.svg";
import { ReactComponent as TranslateIcon } from "@svgr/webpack!./assets/round-translate-24px.svg";
var menuList = /*#__PURE__*/css({
  width: 160,
  right: -220,
  left: "auto !important"
}, "label:menuList;");
var buttonStyles = /*#__PURE__*/css({
  marginRight: 10
}, "label:buttonStyles;"); // !GOOD FIRST ISSUE!
// Convert this component into a proper LocaleSelectorElement class and implement a renderer via UIElementRenderer class.

var LocaleSelector = function LocaleSelector() {
  var _useI18N = useI18N(),
      setCurrentLocale = _useI18N.setCurrentLocale,
      getCurrentLocale = _useI18N.getCurrentLocale,
      getLocales = _useI18N.getLocales;

  var _useSecurity = useSecurity(),
      identity = _useSecurity.identity;

  var contentI18NPermission = useMemo(function () {
    return identity.getPermission("content.i18n");
  }, []);
  var locales = getLocales();
  var localeList = locales.filter(function (locale) {
    if (!contentI18NPermission || !Array.isArray(contentI18NPermission.locales)) {
      return true;
    }

    return contentI18NPermission.locales.includes(locale.code);
  });

  if (localeList.length === 1) {
    return null;
  }

  var currentLocale = getCurrentLocale("content");
  return /*#__PURE__*/React.createElement(Menu, {
    className: menuList,
    handle: /*#__PURE__*/React.createElement(ButtonPrimary, {
      className: buttonStyles,
      flat: true
    }, /*#__PURE__*/React.createElement(ButtonIcon, {
      icon: /*#__PURE__*/React.createElement(TranslateIcon, null)
    }), "Locale: ", currentLocale),
    "data-testid": "app-i18n-content.menu"
  }, localeList.map(function (locale) {
    return /*#__PURE__*/React.createElement(MenuItem, {
      key: locale.code,
      onClick: function onClick() {
        setCurrentLocale(locale.code, "content");
        window.location.reload();
      },
      "data-testid": "app-i18n-content.menu-item.".concat(locale.code)
    }, /*#__PURE__*/React.createElement("span", {
      style: {
        minWidth: 35
      }
    }, currentLocale === locale.code && /*#__PURE__*/React.createElement(ButtonIcon, {
      icon: /*#__PURE__*/React.createElement(DoneIcon, {
        style: {
          color: "var(--mdc-theme-primary)"
        }
      })
    })), locale.code);
  }));
};

export default new UIViewPlugin(AdminView, function (view) {
  var localeSelector = new GenericElement("localeSelector", function () {
    return /*#__PURE__*/React.createElement(LocaleSelector, null);
  });
  localeSelector.moveToTheBeginningOf(view.getHeaderElement().getRightSection());
});
//# sourceMappingURL=contentLocaleSelector.js.map