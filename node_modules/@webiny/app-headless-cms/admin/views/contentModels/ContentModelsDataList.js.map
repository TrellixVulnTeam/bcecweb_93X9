{"version":3,"sources":["../../../../src/admin/views/contentModels/ContentModelsDataList.tsx"],"names":["React","useCallback","useMemo","useState","TimeAgo","css","get","useRouter","DeleteIcon","EditIcon","useApolloClient","useQuery","useSnackbar","UIL","ButtonIcon","ButtonSecondary","IconButton","Tooltip","i18n","useConfirmationDialog","removeModelFromGroupCache","removeModelFromListCache","GQL","SearchUI","deserializeSorters","serializeSorters","orderBy","Cell","Grid","Select","usePermission","t","namespace","SORTERS","label","sorters","savedOn","name","rightAlign","alignItems","justifyContent","listItemMinHeight","minHeight","ContentModelsDataList","canCreate","onCreate","filter","setFilter","sort","setSort","history","client","showSnackbar","dataTestId","showConfirmation","LIST_CONTENT_MODELS","data","loading","canDelete","canEdit","filterData","toLowerCase","includes","sortData","list","Object","entries","key","value","models","deleteRecord","item","mutate","mutation","DELETE_CONTENT_MODEL","variables","modelId","update","cache","error","deleteContentModel","message","title","editRecord","contentModel","push","viewContentEntries","undefined","contentModelsDataListModalOverlay","map","filteredData","contentModels","disableViewContent","fields","length","time","plugin"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\";\nimport TimeAgo from \"timeago-react\";\nimport { css } from \"emotion\";\nimport get from \"lodash/get\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { DeleteIcon, EditIcon } from \"@webiny/ui/List/DataList/icons\";\nimport { ReactComponent as ViewListIcon } from \"../../icons/view_list.svg\";\nimport { useApolloClient, useQuery } from \"../../hooks\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport * as UIL from \"@webiny/ui/List\";\nimport { ButtonIcon, ButtonSecondary, IconButton } from \"@webiny/ui/Button\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport { removeModelFromGroupCache, removeModelFromListCache } from \"./cache\";\nimport * as GQL from \"../../viewsGraphql\";\nimport { ReactComponent as AddIcon } from \"@webiny/app-admin/assets/icons/add-18px.svg\";\nimport SearchUI from \"@webiny/app-admin/components/SearchUI\";\nimport { deserializeSorters, serializeSorters } from \"../utils\";\nimport orderBy from \"lodash/orderBy\";\nimport { Cell, Grid } from \"@webiny/ui/Grid\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { ReactComponent as FilterIcon } from \"@webiny/app-admin/assets/icons/filter-24px.svg\";\nimport usePermission from \"../../hooks/usePermission\";\n\nconst t = i18n.namespace(\"FormsApp.ContentModelsDataList\");\n\nconst SORTERS = [\n    {\n        label: t`Newest to oldest`,\n        sorters: { savedOn: \"desc\" }\n    },\n    {\n        label: t`Oldest to newest`,\n        sorters: { savedOn: \"asc\" }\n    },\n    {\n        label: t`Name A-Z`,\n        sorters: { name: \"asc\" }\n    },\n    {\n        label: t`Name Z-A`,\n        sorters: { name: \"desc\" }\n    }\n];\n\nconst rightAlign = css({\n    alignItems: \"flex-end !important\",\n    justifyContent: \"center !important\"\n});\n\nconst listItemMinHeight = css({\n    minHeight: \"66px !important\"\n});\n\ntype ContentModelsDataListProps = {\n    canCreate: boolean;\n    onCreate: () => void;\n};\nconst ContentModelsDataList = ({ canCreate, onCreate }: ContentModelsDataListProps) => {\n    const [filter, setFilter] = useState(\"\");\n    const [sort, setSort] = useState(serializeSorters(SORTERS[0].sorters));\n    const { history } = useRouter();\n    const client = useApolloClient();\n    const { showSnackbar } = useSnackbar();\n    const { showConfirmation } = useConfirmationDialog({\n        dataTestId: \"cms-delete-content-model-dialog\"\n    });\n    const { data, loading } = useQuery(GQL.LIST_CONTENT_MODELS);\n    const { canDelete, canEdit } = usePermission();\n\n    const filterData = useCallback(\n        ({ name }) => {\n            return name.toLowerCase().includes(filter);\n        },\n        [filter]\n    );\n\n    const sortData = useCallback(\n        list => {\n            if (!sort) {\n                return list;\n            }\n            const [[key, value]] = Object.entries(deserializeSorters(sort));\n            return orderBy(list, [key], [value]);\n        },\n        [sort]\n    );\n\n    const models = loading ? [] : get(data, \"listContentModels.data\", []);\n\n    const deleteRecord = async item => {\n        showConfirmation(async () => {\n            await client.mutate({\n                mutation: GQL.DELETE_CONTENT_MODEL,\n                variables: { modelId: item.modelId },\n                update(cache, { data }) {\n                    const { error } = data.deleteContentModel;\n\n                    if (error) {\n                        return showSnackbar(error.message, {\n                            title: t`Something unexpected happened.`\n                        });\n                    }\n\n                    removeModelFromListCache(cache, item);\n                    removeModelFromGroupCache(cache, item);\n\n                    showSnackbar(\n                        t`Content model {name} deleted successfully!.`({ name: item.name })\n                    );\n                }\n            });\n        });\n    };\n\n    const editRecord = contentModel => {\n        history.push(\"/cms/content-models/\" + contentModel.modelId);\n    };\n\n    const viewContentEntries = useCallback(contentModel => {\n        return () => history.push(\"/cms/content-entries/\" + contentModel.modelId);\n    }, undefined);\n\n    const contentModelsDataListModalOverlay = useMemo(\n        () => (\n            <UIL.DataListModalOverlay>\n                <Grid>\n                    <Cell span={12}>\n                        <Select\n                            value={sort}\n                            onChange={setSort}\n                            label={t`Sort by`}\n                            description={\"Sort content models by\"}\n                        >\n                            {SORTERS.map(({ label, sorters }) => {\n                                return (\n                                    <option key={label} value={serializeSorters(sorters)}>\n                                        {label}\n                                    </option>\n                                );\n                            })}\n                        </Select>\n                    </Cell>\n                </Grid>\n            </UIL.DataListModalOverlay>\n        ),\n        [sort]\n    );\n\n    const filteredData = filter === \"\" ? models : models.filter(filterData);\n    const contentModels = sortData(filteredData);\n\n    return (\n        <UIL.DataList\n            loading={loading}\n            data={contentModels}\n            title={t`Content Models`}\n            actions={\n                canCreate ? (\n                    <ButtonSecondary data-testid=\"new-record-button\" onClick={onCreate}>\n                        <ButtonIcon icon={<AddIcon />} /> {t`New Model`}\n                    </ButtonSecondary>\n                ) : null\n            }\n            search={\n                <SearchUI\n                    value={filter}\n                    onChange={setFilter}\n                    inputPlaceholder={t`Search content models`}\n                />\n            }\n            modalOverlay={contentModelsDataListModalOverlay}\n            modalOverlayAction={\n                <UIL.DataListModalOverlayAction\n                    icon={<FilterIcon />}\n                    data-testid={\"default-data-list.filter\"}\n                />\n            }\n        >\n            {({ data = [] }) => (\n                <UIL.List data-testid=\"default-data-list\">\n                    {data.map(contentModel => {\n                        const disableViewContent = contentModel.fields.length === 0;\n                        const message = disableViewContent\n                            ? \"To view the content, you first need to add a field and save the model\"\n                            : \"View content\";\n                        return (\n                            <UIL.ListItem key={contentModel.modelId} className={listItemMinHeight}>\n                                <UIL.ListItemText>\n                                    {contentModel.name}\n                                    <UIL.ListItemTextSecondary>\n                                        {t`Last modified: {time}.`({\n                                            time: <TimeAgo datetime={contentModel.savedOn} />\n                                        })}\n                                    </UIL.ListItemTextSecondary>\n                                </UIL.ListItemText>\n                                <UIL.ListItemMeta className={rightAlign}>\n                                    <UIL.ListActions>\n                                        {canEdit(contentModel, \"cms.contentModel\") && (\n                                            <>\n                                                <Tooltip\n                                                    content={t`{message}`({ message })}\n                                                    placement={\"top\"}\n                                                >\n                                                    <IconButton\n                                                        data-testid={\n                                                            \"cms-view-content-model-button\"\n                                                        }\n                                                        icon={<ViewListIcon />}\n                                                        label={t`View entries`}\n                                                        onClick={viewContentEntries(contentModel)}\n                                                        disabled={disableViewContent}\n                                                    />\n                                                </Tooltip>\n                                                {contentModel.plugin ? (\n                                                    <Tooltip\n                                                        content={t`Content model is registered via a plugin.`}\n                                                        placement={\"top\"}\n                                                    >\n                                                        <EditIcon\n                                                            disabled\n                                                            data-testid={\n                                                                \"cms-edit-content-model-button\"\n                                                            }\n                                                        />\n                                                    </Tooltip>\n                                                ) : (\n                                                    <Tooltip\n                                                        content={t`Edit content model`}\n                                                        placement={\"top\"}\n                                                    >\n                                                        <EditIcon\n                                                            onClick={() => editRecord(contentModel)}\n                                                            data-testid={\n                                                                \"cms-edit-content-model-button\"\n                                                            }\n                                                        />\n                                                    </Tooltip>\n                                                )}\n                                            </>\n                                        )}\n\n                                        {canDelete(contentModel, \"cms.contentModel\") &&\n                                        contentModel.plugin ? (\n                                            <Tooltip\n                                                content={t`Content model is registered via a plugin.`}\n                                                placement={\"top\"}\n                                            >\n                                                <DeleteIcon\n                                                    disabled\n                                                    data-testid={\"cms-delete-content-model-button\"}\n                                                />\n                                            </Tooltip>\n                                        ) : (\n                                            <Tooltip\n                                                content={t`Delete content model`}\n                                                placement={\"top\"}\n                                            >\n                                                <DeleteIcon\n                                                    onClick={() => deleteRecord(contentModel)}\n                                                    data-testid={\"cms-delete-content-model-button\"}\n                                                />\n                                            </Tooltip>\n                                        )}\n                                    </UIL.ListActions>\n                                </UIL.ListItemMeta>\n                            </UIL.ListItem>\n                        );\n                    })}\n                </UIL.List>\n            )}\n        </UIL.DataList>\n    );\n};\n\nexport default ContentModelsDataList;\n"],"file":"ContentModelsDataList.js"}