{"version":3,"sources":["../../../../src/admin/views/contentModelGroups/ContentModelGroupsDataList.tsx"],"names":["React","useCallback","useMemo","useState","get","orderBy","dotProp","i18n","DeleteIcon","DataList","List","ListItem","ListItemText","ListItemTextSecondary","ListItemMeta","ListActions","DataListModalOverlay","DataListModalOverlayAction","useRouter","useSnackbar","useQuery","useApolloClient","useConfirmationDialog","GQL","ButtonIcon","ButtonSecondary","Cell","Grid","Select","SearchUI","serializeSorters","deserializeSorters","usePermission","Tooltip","t","ns","SORTERS","label","sorters","createdOn","name","ContentModelGroupsDataList","canCreate","filter","setFilter","sort","setSort","history","showSnackbar","client","listQuery","LIST_CONTENT_MODEL_GROUPS","dataTestId","showConfirmation","canDelete","filterData","toLowerCase","includes","sortData","list","Object","entries","key","value","data","loading","groupId","URLSearchParams","location","search","deleteItem","group","mutate","mutation","DELETE_CONTENT_MODEL_GROUP","variables","id","update","cache","error","deleteContentModelGroup","gqlParams","query","readQuery","listContentModelGroups","index","findIndex","item","writeQuery","delete","response","message","push","contentModelGroupsDataListModalOverlay","map","filteredData","contentModelGroups","contentModels","length","plugin"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\";\nimport get from \"lodash/get\";\nimport orderBy from \"lodash/orderBy\";\nimport dotProp from \"dot-prop-immutable\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { DeleteIcon } from \"@webiny/ui/List/DataList/icons\";\nimport {\n    DataList,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemTextSecondary,\n    ListItemMeta,\n    ListActions,\n    DataListModalOverlay,\n    DataListModalOverlayAction\n} from \"@webiny/ui/List\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useQuery, useApolloClient } from \"../../hooks\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport * as GQL from \"./graphql\";\nimport { ButtonIcon, ButtonSecondary } from \"@webiny/ui/Button\";\nimport { Cell, Grid } from \"@webiny/ui/Grid\";\nimport { Select } from \"@webiny/ui/Select\";\nimport SearchUI from \"@webiny/app-admin/components/SearchUI\";\nimport { ReactComponent as AddIcon } from \"@webiny/app-admin/assets/icons/add-18px.svg\";\nimport { ReactComponent as FilterIcon } from \"@webiny/app-admin/assets/icons/filter-24px.svg\";\nimport { serializeSorters, deserializeSorters } from \"../utils\";\nimport usePermission from \"../../hooks/usePermission\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\n\nconst t = i18n.ns(\"app-headless-cms/admin/content-model-groups/data-list\");\n\nconst SORTERS = [\n    {\n        label: t`Newest to oldest`,\n        sorters: { createdOn: \"desc\" }\n    },\n    {\n        label: t`Oldest to newest`,\n        sorters: { createdOn: \"asc\" }\n    },\n    {\n        label: t`Name A-Z`,\n        sorters: { name: \"asc\" }\n    },\n    {\n        label: t`Name Z-A`,\n        sorters: { name: \"desc\" }\n    }\n];\n\ntype ContentModelGroupsDataListProps = {\n    canCreate: boolean;\n};\nconst ContentModelGroupsDataList = ({ canCreate }: ContentModelGroupsDataListProps) => {\n    const [filter, setFilter] = useState(\"\");\n    const [sort, setSort] = useState(serializeSorters(SORTERS[0].sorters));\n    const { history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    const client = useApolloClient();\n    const listQuery = useQuery(GQL.LIST_CONTENT_MODEL_GROUPS);\n\n    const { showConfirmation } = useConfirmationDialog({\n        dataTestId: \"cms.contentModelGroup.list-item.delete-dialog\"\n    });\n    const { canDelete } = usePermission();\n\n    const filterData = useCallback(\n        ({ name }) => {\n            return name.toLowerCase().includes(filter);\n        },\n        [filter]\n    );\n\n    const sortData = useCallback(\n        list => {\n            if (!sort) {\n                return list;\n            }\n            const [[key, value]] = Object.entries(deserializeSorters(sort));\n            return orderBy(list, [key], [value]);\n        },\n        [sort]\n    );\n\n    const data = listQuery.loading ? [] : get(listQuery, \"data.listContentModelGroups.data\", []);\n    const groupId = new URLSearchParams(location.search).get(\"id\");\n\n    const deleteItem = useCallback(\n        group => {\n            showConfirmation(async () => {\n                const response = await client.mutate({\n                    mutation: GQL.DELETE_CONTENT_MODEL_GROUP,\n                    variables: { id: group.id },\n                    update(cache, { data }) {\n                        const { error } = data.deleteContentModelGroup;\n                        if (error) {\n                            return;\n                        }\n\n                        // Delete the item from list cache\n                        const gqlParams = { query: GQL.LIST_CONTENT_MODEL_GROUPS };\n                        const { listContentModelGroups } = cache.readQuery(gqlParams);\n                        const index = listContentModelGroups.data.findIndex(\n                            item => item.id === group.id\n                        );\n\n                        cache.writeQuery({\n                            ...gqlParams,\n                            data: {\n                                listContentModelGroups: dotProp.delete(\n                                    listContentModelGroups,\n                                    `data.${index}`\n                                )\n                            }\n                        });\n                    }\n                });\n\n                const { error } = response.data.deleteContentModelGroup;\n                if (error) {\n                    return showSnackbar(error.message);\n                }\n\n                showSnackbar(t`Content model group \"{name}\" deleted.`({ name: group.name }));\n\n                if (groupId === group.id) {\n                    history.push(`/cms/content-model-groups`);\n                }\n            });\n        },\n        [groupId]\n    );\n\n    const contentModelGroupsDataListModalOverlay = useMemo(\n        () => (\n            <DataListModalOverlay>\n                <Grid>\n                    <Cell span={12}>\n                        <Select\n                            value={sort}\n                            onChange={setSort}\n                            label={t`Sort by`}\n                            description={\"Sort pages by\"}\n                        >\n                            {SORTERS.map(({ label, sorters }) => {\n                                return (\n                                    <option key={label} value={serializeSorters(sorters)}>\n                                        {label}\n                                    </option>\n                                );\n                            })}\n                        </Select>\n                    </Cell>\n                </Grid>\n            </DataListModalOverlay>\n        ),\n        [sort]\n    );\n\n    const filteredData = filter === \"\" ? data : data.filter(filterData);\n    const contentModelGroups = sortData(filteredData);\n\n    return (\n        <DataList\n            loading={listQuery.loading}\n            data={contentModelGroups}\n            title={t`Content Model Groups`}\n            actions={\n                canCreate ? (\n                    <ButtonSecondary\n                        data-testid=\"new-record-button\"\n                        onClick={() => history.push(\"/cms/content-model-groups?new=true\")}\n                    >\n                        <ButtonIcon icon={<AddIcon />} /> {t`New Group`}\n                    </ButtonSecondary>\n                ) : null\n            }\n            search={\n                <SearchUI\n                    value={filter}\n                    onChange={setFilter}\n                    inputPlaceholder={t`Search content model group`}\n                />\n            }\n            modalOverlay={contentModelGroupsDataListModalOverlay}\n            modalOverlayAction={\n                <DataListModalOverlayAction\n                    icon={<FilterIcon />}\n                    data-testid={\"default-data-list.filter\"}\n                />\n            }\n        >\n            {({ data }) => (\n                <List data-testid=\"default-data-list\">\n                    {data.map(item => (\n                        <ListItem key={item.id} selected={item.id === groupId}>\n                            <ListItemText\n                                onClick={() =>\n                                    history.push(`/cms/content-model-groups?id=${item.id}`)\n                                }\n                            >\n                                {item.name}\n                                <ListItemTextSecondary>\n                                    {item.contentModels.length\n                                        ? t`{contentModels|count:1:content model:default:content models}`(\n                                              {\n                                                  contentModels: item.contentModels.length\n                                              }\n                                          )\n                                        : t`No content models`}\n                                </ListItemTextSecondary>\n                            </ListItemText>\n                            {canDelete(item, \"cms.contentModelGroup\") && (\n                                <ListItemMeta>\n                                    <ListActions>\n                                        {item.plugin ? (\n                                            <Tooltip\n                                                content={\n                                                    \"Content model group is registered via a plugin.\"\n                                                }\n                                                placement={\"bottom\"}\n                                            >\n                                                <DeleteIcon\n                                                    disabled\n                                                    data-testid={\n                                                        \"cms.contentModelGroup.list-item.delete\"\n                                                    }\n                                                />\n                                            </Tooltip>\n                                        ) : (\n                                            <DeleteIcon\n                                                onClick={() => deleteItem(item)}\n                                                data-testid={\n                                                    \"cms.contentModelGroup.list-item.delete\"\n                                                }\n                                            />\n                                        )}\n                                    </ListActions>\n                                </ListItemMeta>\n                            )}\n                        </ListItem>\n                    ))}\n                </List>\n            )}\n        </DataList>\n    );\n};\n\nexport default ContentModelGroupsDataList;\n"],"file":"ContentModelGroupsDataList.js"}