{"version":3,"sources":["../../../../../src/admin/views/contentEntries/ContentEntry/prepareFormData.ts"],"names":["plugins","getAvailableTransformerPlugins","byType","reduce","transformers","pl","fieldTypes","Array","isArray","fieldType","console","warn","createTransformers","fields","transformerPlugins","field","type","fieldId","value","transform","prepareFormData","data","model","Object","keys","acc","key"],"mappings":";AACA,SAASA,OAAT,QAAwB,iBAAxB;;AAUA,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,GAAkC;AACrE,SAAOD,OAAO,CACTE,MADE,CAC+B,6BAD/B,EAEFC,MAFE,CAEK,UAACC,YAAD,EAAeC,EAAf,EAAsB;AAC1B,QAAMC,UAAU,GAAGC,KAAK,CAACC,OAAN,CAAcH,EAAE,CAACI,SAAjB,IAA8BJ,EAAE,CAACI,SAAjC,GAA6C,CAACJ,EAAE,CAACI,SAAJ,CAAhE;;AAD0B,+CAEFH,UAFE;AAAA;;AAAA;AAE1B,0DAAoC;AAAA,YAAzBG,UAAyB;;AAChC,YAAIL,YAAY,CAACK,UAAD,CAAhB,EAA6B;AACzBC,UAAAA,OAAO,CAACC,IAAR,wCACmCF,UADnC;AAGA;AACH;;AACDL,QAAAA,YAAY,CAACK,UAAD,CAAZ,GAA0BJ,EAA1B;AACH;AAVyB;AAAA;AAAA;AAAA;AAAA;;AAW1B,WAAOD,YAAP;AACH,GAdE,EAcA,EAdA,CAAP;AAeH,CAhBD;;AAkBA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,MAAD,EAAiD;AACxE,MAAMC,kBAAkB,GAAGb,8BAA8B,EAAzD;AACA,MAAMG,YAAY,GAAG,EAArB;;AAFwE,8CAGpDS,MAHoD;AAAA;;AAAA;AAAA;AAAA,UAG7DE,KAH6D;;AAIpE,UAAI,CAACD,kBAAkB,CAACC,KAAK,CAACC,IAAP,CAAvB,EAAqC;AACjC;AACH;;AACDZ,MAAAA,YAAY,CAACW,KAAK,CAACE,OAAP,CAAZ,GAA8B,UAACC,KAAD,EAAgB;AAC1C,eAAOJ,kBAAkB,CAACC,KAAK,CAACC,IAAP,CAAlB,CAA+BG,SAA/B,CAAyCD,KAAzC,EAAgDH,KAAhD,CAAP;AACH,OAFD;AAPoE;;AAGxE,2DAA4B;AAAA;;AAAA,+BAEpB;AAKP;AAVuE;AAAA;AAAA;AAAA;AAAA;;AAWxE,SAAOX,YAAP;AACH,CAZD;;AAcA,OAAO,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAC3BC,IAD2B,EAE3BC,KAF2B,EAGL;AACtB,MAAMlB,YAAY,GAAGQ,kBAAkB,CAACU,KAAK,CAACT,MAAP,CAAvC;AAEA,SAAOU,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBlB,MAAlB,CAAyB,UAACsB,GAAD,EAAMC,GAAN,EAAc;AAC1C,QAAMR,KAAK,GAAGG,IAAI,CAACK,GAAD,CAAlB;;AACA,QAAI,CAACtB,YAAY,CAACsB,GAAD,CAAjB,EAAwB;AACpBD,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWR,KAAX;AACA,aAAOO,GAAP;AACH;;AACDA,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWtB,YAAY,CAACsB,GAAD,CAAZ,CAAkBR,KAAlB,CAAX;AACA,WAAOO,GAAP;AACH,GARM,EAQJ,EARI,CAAP;AASH,CAfM","sourcesContent":["import { CmsEditorContentModel, CmsEditorField, CmsFieldValueTransformer } from \"~/types\";\nimport { plugins } from \"@webiny/plugins\";\n\ninterface AvailableFieldTransformers {\n    [fieldType: string]: CmsFieldValueTransformer;\n}\n\ninterface FieldTransformers {\n    [fieldId: string]: (value: any) => any;\n}\n\nconst getAvailableTransformerPlugins = (): AvailableFieldTransformers => {\n    return plugins\n        .byType<CmsFieldValueTransformer>(\"cms-field-value-transformer\")\n        .reduce((transformers, pl) => {\n            const fieldTypes = Array.isArray(pl.fieldType) ? pl.fieldType : [pl.fieldType];\n            for (const fieldType of fieldTypes) {\n                if (transformers[fieldType]) {\n                    console.warn(\n                        `Transformer for field type \"${fieldType}\" is already defined. There cannot be more than one transformer.`\n                    );\n                    continue;\n                }\n                transformers[fieldType] = pl;\n            }\n            return transformers;\n        }, {});\n};\n\nconst createTransformers = (fields: CmsEditorField[]): FieldTransformers => {\n    const transformerPlugins = getAvailableTransformerPlugins();\n    const transformers = {};\n    for (const field of fields) {\n        if (!transformerPlugins[field.type]) {\n            continue;\n        }\n        transformers[field.fieldId] = (value: any) => {\n            return transformerPlugins[field.type].transform(value, field);\n        };\n    }\n    return transformers;\n};\n\nexport const prepareFormData = (\n    data: Record<string, any>,\n    model: CmsEditorContentModel\n): Record<string, any> => {\n    const transformers = createTransformers(model.fields);\n\n    return Object.keys(data).reduce((acc, key) => {\n        const value = data[key];\n        if (!transformers[key]) {\n            acc[key] = value;\n            return acc;\n        }\n        acc[key] = transformers[key](value);\n        return acc;\n    }, {});\n};\n"],"file":"prepareFormData.js"}