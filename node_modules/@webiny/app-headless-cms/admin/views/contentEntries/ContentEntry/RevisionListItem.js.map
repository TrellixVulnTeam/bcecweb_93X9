{"version":3,"sources":["../../../../../src/admin/views/contentEntries/ContentEntry/RevisionListItem.tsx"],"names":["React","css","TimeAgo","ListItem","ListItemText","ListItemTextPrimary","ListItemTextSecondary","ListItemGraphic","ListItemMeta","IconButton","Icon","MenuItem","Menu","MenuDivider","ConfirmationDialog","Tooltip","i18n","useRevision","usePermission","useContentEntry","t","ns","primaryColor","color","revisionsMenu","width","right","left","getIcon","rev","meta","locked","status","icon","text","RevisionListItem","revision","createRevision","deleteRevision","publishRevision","unpublishRevision","editRevision","entry","tabs","canEdit","canDelete","canPublish","canUnpublish","tooltipText","version","showConfirmation","title","time","savedOn","current","switchTab","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport TimeAgo from \"timeago-react\";\nimport {\n    ListItem,\n    ListItemText,\n    ListItemTextPrimary,\n    ListItemTextSecondary,\n    ListItemGraphic,\n    ListItemMeta\n} from \"@webiny/ui/List\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { MenuItem, Menu, MenuDivider } from \"@webiny/ui/Menu\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { ReactComponent as MoreVerticalIcon } from \"~/admin/icons/more_vert.svg\";\nimport { ReactComponent as LockIcon } from \"~/admin/icons/lock.svg\";\nimport { ReactComponent as BeenHereIcon } from \"~/admin/icons/beenhere.svg\";\nimport { ReactComponent as GestureIcon } from \"~/admin/icons/gesture.svg\";\nimport { ReactComponent as AddIcon } from \"~/admin/icons/add.svg\";\nimport { ReactComponent as EditIcon } from \"~/admin/icons/edit.svg\";\nimport { ReactComponent as PublishIcon } from \"~/admin/icons/publish.svg\";\nimport { ReactComponent as UnpublishIcon } from \"~/admin/icons/unpublish.svg\";\nimport { ReactComponent as DeleteIcon } from \"~/admin/icons/delete.svg\";\nimport { CmsEditorContentEntry } from \"~/types\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useRevision } from \"./useRevision\";\nimport usePermission from \"~/admin/hooks/usePermission\";\nimport { useContentEntry } from \"~/admin/views/contentEntries/hooks/useContentEntry\";\n\nconst t = i18n.ns(\"app-headless-cms/admin/plugins/content-details/content-revisions\");\n\nconst primaryColor = css({ color: \"var(--mdc-theme-primary)\" });\n\nconst revisionsMenu = css({\n    width: 250,\n    right: -105,\n    left: \"auto !important\"\n});\n\nconst getIcon = (rev: CmsEditorContentEntry) => {\n    switch (true) {\n        case rev.meta.locked && rev.meta.status !== \"published\":\n            return {\n                icon: <Icon icon={<LockIcon />} data-testid={\"cms.revision.status.locked\"} />,\n                text: \"This revision is locked (it has already been published)\"\n            };\n        case rev.meta.status === \"published\":\n            return {\n                icon: (\n                    <Icon\n                        icon={<BeenHereIcon />}\n                        className={primaryColor}\n                        data-testid={\"cms.revision.status.published\"}\n                    />\n                ),\n                text: \"This revision is currently published!\"\n            };\n        default:\n            return {\n                icon: <Icon icon={<GestureIcon />} data-testid={\"cms.revision.status.draft\"} />,\n                text: \"This is a draft\"\n            };\n    }\n};\n\ntype Props = {\n    revision: CmsEditorContentEntry;\n};\n\nconst RevisionListItem = ({ revision }: Props) => {\n    const { createRevision, deleteRevision, publishRevision, unpublishRevision, editRevision } =\n        useRevision({\n            revision\n        });\n\n    const { entry, tabs } = useContentEntry();\n    const { canEdit, canDelete, canPublish, canUnpublish } = usePermission();\n    const { icon, text: tooltipText } = getIcon(revision);\n\n    return (\n        <ConfirmationDialog\n            title={t`Confirmation required!`}\n            message={\n                <span>\n                    {t`You are about to delete revision {revision}. Are you sure you want to continue?`(\n                        {\n                            revision: <strong>#{revision.meta.version}</strong>\n                        }\n                    )}\n                </span>\n            }\n        >\n            {({ showConfirmation }) => (\n                <ListItem>\n                    <ListItemGraphic>\n                        <Tooltip content={tooltipText} placement={\"bottom\"}>\n                            {icon}\n                        </Tooltip>\n                    </ListItemGraphic>\n                    <ListItemText>\n                        <ListItemTextPrimary>{revision.meta.title || t`N/A`}</ListItemTextPrimary>\n                        <ListItemTextSecondary>\n                            {t`Last modified {time} (#{version})`({\n                                time: <TimeAgo datetime={revision.savedOn} />,\n                                version: revision.meta.version\n                            })}\n                        </ListItemTextSecondary>\n                    </ListItemText>\n                    <ListItemMeta>\n                        <Menu\n                            handle={<IconButton icon={<MoreVerticalIcon />} />}\n                            className={revisionsMenu}\n                            data-testid={\"cms.content-form.revisions.more-options\"}\n                        >\n                            {canEdit(entry, \"cms.contentEntry\") && (\n                                <MenuItem\n                                    onClick={createRevision}\n                                    data-testid={\"cms.revision.create-revision\"}\n                                >\n                                    <ListItemGraphic>\n                                        <Icon icon={<AddIcon />} />\n                                    </ListItemGraphic>\n                                    {t`New from current`}\n                                </MenuItem>\n                            )}\n\n                            {!revision.meta.locked && canEdit(entry, \"cms.contentEntry\") && (\n                                <MenuItem\n                                    onClick={() => {\n                                        editRevision();\n                                        if (tabs.current) {\n                                            tabs.current.switchTab(0);\n                                        }\n                                    }}\n                                >\n                                    <ListItemGraphic>\n                                        <Icon icon={<EditIcon />} />\n                                    </ListItemGraphic>\n                                    {t` Edit`}\n                                </MenuItem>\n                            )}\n\n                            {revision.meta.status !== \"published\" &&\n                                canPublish(\"cms.contentEntry\") && (\n                                    <MenuItem onClick={() => publishRevision(revision.id)}>\n                                        <ListItemGraphic>\n                                            <Icon icon={<PublishIcon />} />\n                                        </ListItemGraphic>\n                                        {t`Publish`}\n                                    </MenuItem>\n                                )}\n\n                            {revision.meta.status === \"published\" &&\n                                canUnpublish(\"cms.contentEntry\") && (\n                                    <MenuItem\n                                        onClick={unpublishRevision}\n                                        data-testid={\"cms.revision.unpublish\"}\n                                    >\n                                        <ListItemGraphic>\n                                            <Icon icon={<UnpublishIcon />} />\n                                        </ListItemGraphic>\n                                        {t`Unpublish`}\n                                    </MenuItem>\n                                )}\n\n                            {!revision.meta.locked && canDelete(entry, \"cms.contentEntry\") && (\n                                <div>\n                                    <MenuDivider />\n                                    <MenuItem onClick={() => showConfirmation(deleteRevision)}>\n                                        <ListItemGraphic>\n                                            <Icon icon={<DeleteIcon />} />\n                                        </ListItemGraphic>\n                                        {t` Delete`}\n                                    </MenuItem>\n                                </div>\n                            )}\n                        </Menu>\n                    </ListItemMeta>\n                </ListItem>\n            )}\n        </ConfirmationDialog>\n    );\n};\n\nexport default RevisionListItem;\n"],"file":"RevisionListItem.js"}