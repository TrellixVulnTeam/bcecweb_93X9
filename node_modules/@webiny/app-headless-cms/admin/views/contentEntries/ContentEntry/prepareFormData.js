import _createForOfIteratorHelper from "@babel/runtime/helpers/createForOfIteratorHelper";
import { plugins } from "@webiny/plugins";

var getAvailableTransformerPlugins = function getAvailableTransformerPlugins() {
  return plugins.byType("cms-field-value-transformer").reduce(function (transformers, pl) {
    var fieldTypes = Array.isArray(pl.fieldType) ? pl.fieldType : [pl.fieldType];

    var _iterator = _createForOfIteratorHelper(fieldTypes),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _fieldType = _step.value;

        if (transformers[_fieldType]) {
          console.warn("Transformer for field type \"".concat(_fieldType, "\" is already defined. There cannot be more than one transformer."));
          continue;
        }

        transformers[_fieldType] = pl;
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return transformers;
  }, {});
};

var createTransformers = function createTransformers(fields) {
  var transformerPlugins = getAvailableTransformerPlugins();
  var transformers = {};

  var _iterator2 = _createForOfIteratorHelper(fields),
      _step2;

  try {
    var _loop = function _loop() {
      var field = _step2.value;

      if (!transformerPlugins[field.type]) {
        return "continue";
      }

      transformers[field.fieldId] = function (value) {
        return transformerPlugins[field.type].transform(value, field);
      };
    };

    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var _ret = _loop();

      if (_ret === "continue") continue;
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }

  return transformers;
};

export var prepareFormData = function prepareFormData(data, model) {
  var transformers = createTransformers(model.fields);
  return Object.keys(data).reduce(function (acc, key) {
    var value = data[key];

    if (!transformers[key]) {
      acc[key] = value;
      return acc;
    }

    acc[key] = transformers[key](value);
    return acc;
  }, {});
};
//# sourceMappingURL=prepareFormData.js.map