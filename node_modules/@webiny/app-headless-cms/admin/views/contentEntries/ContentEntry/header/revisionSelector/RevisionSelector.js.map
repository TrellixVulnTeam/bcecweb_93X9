{"version":3,"sources":["../../../../../../../src/admin/views/contentEntries/ContentEntry/header/revisionSelector/RevisionSelector.tsx"],"names":["React","css","useRouter","ButtonDefault","Icon","Typography","Menu","MenuItem","useContentEntry","statusLabels","buttonStyle","color","menuStyles","width","right","flexDirection","justifyContent","alignItems","textAlign","RevisionSelector","entry","revisions","loading","location","history","query","URLSearchParams","search","currentRevision","version","status","allRevisions","length","id","meta","map","revision","set","encodeURIComponent","push","toString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport { get } from \"lodash\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Menu, MenuItem } from \"@webiny/ui/Menu\";\nimport { ReactComponent as DownButton } from \"~/admin/icons/round-arrow_drop_down-24px.svg\";\nimport { useContentEntry } from \"~/admin/views/contentEntries/hooks/useContentEntry\";\nimport statusLabels from \"~/admin/constants/statusLabels\";\nimport { CmsContentEntryRevision } from \"~/types\";\n\nconst buttonStyle = css({\n    \"&.mdc-button\": {\n        color: \"var(--mdc-theme-text-primary-on-background) !important\"\n    }\n});\n\nconst menuStyles = css({\n    width: 150,\n    right: 0,\n    \".mdc-list-item\": {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"baseline\",\n        textAlign: \"left\"\n    }\n});\n\nconst RevisionSelector = () => {\n    const { entry, revisions, loading } = useContentEntry();\n    const { location, history } = useRouter();\n    const query = new URLSearchParams(location.search);\n\n    const currentRevision = {\n        version: get(entry, \"meta.version\", 1),\n        status: get(entry, \"meta.status\", \"draft\")\n    };\n\n    const allRevisions: Partial<CmsContentEntryRevision>[] = revisions.length\n        ? revisions\n        : ([{ id: \"new\", meta: { version: 1, status: \"draft\" } }] as any);\n\n    return (\n        <Menu\n            className={menuStyles}\n            handle={\n                <ButtonDefault className={buttonStyle} disabled={loading}>\n                    v{currentRevision.version} ({statusLabels[currentRevision.status]}){\" \"}\n                    <Icon icon={<DownButton />} />\n                </ButtonDefault>\n            }\n        >\n            {allRevisions.map(revision => (\n                <MenuItem\n                    key={revision.id}\n                    onClick={() => {\n                        query.set(\"id\", encodeURIComponent(revision.id));\n                        history.push({ search: query.toString() });\n                    }}\n                >\n                    <Typography use={\"body2\"}>v{revision.meta.version}</Typography>\n                    <Typography use={\"caption\"}>({statusLabels[revision.meta.status]})</Typography>\n                </MenuItem>\n            ))}\n        </Menu>\n    );\n};\n\nexport default RevisionSelector;\n"],"file":"RevisionSelector.js"}