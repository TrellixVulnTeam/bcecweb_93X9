{"version":3,"sources":["../../../../../../../src/admin/views/contentEntries/ContentEntry/header/contentFormOptionsMenu/ContentFormOptionsMenu.tsx"],"names":["React","useCallback","useMemo","css","get","IconButton","Menu","MenuItem","ListItemGraphic","Icon","useRouter","useSnackbar","useDialog","useConfirmationDialog","i18n","createDeleteMutation","usePermission","removeEntryFromListCache","useMutation","useContentEntry","t","ns","menuStyles","width","right","left","opacity","pointerEvents","ContentFormOptionsMenu","contentModel","entry","loading","setLoading","listQueryVariables","showSnackbar","history","showDialog","canDelete","DELETE_CONTENT","modelId","deleteContentMutation","title","message","dataTestId","showConfirmation","confirmDelete","id","split","uniqueId","variables","revision","update","cache","data","error","content","push"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from \"react\";\nimport { css } from \"emotion\";\nimport get from \"lodash/get\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Menu, MenuItem } from \"@webiny/ui/Menu\";\nimport { ListItemGraphic } from \"@webiny/ui/List\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useDialog } from \"@webiny/app-admin/hooks/useDialog\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { createDeleteMutation } from \"~/admin/graphql/contentEntries\";\nimport usePermission from \"~/admin/hooks/usePermission\";\nimport { ReactComponent as MoreVerticalIcon } from \"~/admin/icons/more_vert.svg\";\nimport { ReactComponent as DeleteIcon } from \"~/admin/icons/delete.svg\";\nimport { removeEntryFromListCache } from \"../../cache\";\nimport { useMutation } from \"~/admin/hooks\";\nimport { useContentEntry } from \"~/admin/views/contentEntries/hooks/useContentEntry\";\n\nconst t = i18n.ns(\n    \"app-headless-cms/admin/plugins/content-details/header/content-form-options-menu\"\n);\n\nconst menuStyles = css({\n    width: 250,\n    right: -105,\n    left: \"auto !important\",\n    \".disabled\": {\n        opacity: 0.5,\n        pointerEvents: \"none\"\n    }\n});\n\nconst ContentFormOptionsMenu = () => {\n    const { contentModel, entry, loading, setLoading, listQueryVariables } = useContentEntry();\n    const { showSnackbar } = useSnackbar();\n    const { history } = useRouter();\n    const { showDialog } = useDialog();\n    const { canDelete } = usePermission();\n\n    const DELETE_CONTENT = useMemo(() => {\n        return createDeleteMutation(contentModel);\n    }, [contentModel.modelId]);\n\n    const [deleteContentMutation] = useMutation(DELETE_CONTENT);\n\n    const title = get(entry, \"meta.title\");\n\n    const { showConfirmation } = useConfirmationDialog({\n        title: t`Delete content entry`,\n        message: (\n            <p>\n                {t`You are about to delete this content entry and all of its revisions!`}\n                <br />\n                {t`Are you sure you want to permanently delete {title}?`({\n                    title: <strong>{title}</strong>\n                })}\n            </p>\n        ),\n        dataTestId: \"cms.content-form.header.delete-dialog\"\n    });\n\n    const confirmDelete = useCallback(() => {\n        showConfirmation(async () => {\n            setLoading(true);\n            const [uniqueId] = entry.id.split(\"#\");\n            await deleteContentMutation({\n                variables: { revision: uniqueId },\n                update(cache, { data }) {\n                    const { error } = data.content;\n                    if (error) {\n                        return showDialog(error.message, { title: t`Could not delete content` });\n                    }\n\n                    removeEntryFromListCache(contentModel, cache, entry, listQueryVariables);\n\n                    showSnackbar(\n                        t`{title} was deleted successfully!`({ title: <strong>{title}</strong> })\n                    );\n                    history.push(`/cms/content-entries/${contentModel.modelId}`);\n                }\n            });\n\n            setLoading(false);\n        });\n    }, null);\n\n    if (!canDelete(entry, \"cms.contentEntry\")) {\n        return null;\n    }\n\n    return (\n        <Menu\n            className={menuStyles}\n            handle={\n                <IconButton\n                    icon={<MoreVerticalIcon />}\n                    data-testid={\"cms.content-form.header.more-options\"}\n                />\n            }\n        >\n            <MenuItem\n                onClick={confirmDelete}\n                disabled={!entry.id || loading}\n                data-testid={\"cms.content-form.header.delete\"}\n            >\n                <ListItemGraphic>\n                    <Icon icon={<DeleteIcon />} />\n                </ListItemGraphic>\n                Delete\n            </MenuItem>\n        </Menu>\n    );\n};\n\nexport default ContentFormOptionsMenu;\n"],"file":"ContentFormOptionsMenu.js"}