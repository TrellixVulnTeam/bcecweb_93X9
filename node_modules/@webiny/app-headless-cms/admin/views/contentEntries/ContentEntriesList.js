import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _objectSpread from "@babel/runtime/helpers/objectSpread2";

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12;

import React, { useMemo } from "react";
import debounce from "lodash/debounce";
import { css } from "emotion";
import TimeAgo from "timeago-react";
import pluralize from "pluralize";
import styled from "@emotion/styled";
import { i18n } from "@webiny/app/i18n";
import { Form } from "@webiny/form";
import { Typography } from "@webiny/ui/Typography";
import * as UIList from "@webiny/ui/List";
import { ButtonIcon, ButtonSecondary } from "@webiny/ui/Button";
import { Cell, Grid } from "@webiny/ui/Grid";
import { Select } from "@webiny/ui/Select";
import { Scrollbar } from "@webiny/ui/Scrollbar";
import { ReactComponent as AddIcon } from "@svgr/webpack!@webiny/app-admin/assets/icons/add-18px.svg";
import { ReactComponent as FilterIcon } from "@svgr/webpack!@webiny/app-admin/assets/icons/filter-24px.svg";
import SearchUI from "@webiny/app-admin/components/SearchUI";
import statusLabels from "../../constants/statusLabels";
import { useCallback } from "react";
import { useContentEntriesList } from "./hooks/useContentEntriesList";
var t = i18n.ns("app-headless-cms/admin/contents/data-list");
var rightAlign = /*#__PURE__*/css({
  alignItems: "flex-end !important",
  justifyContent: "center !important"
}, "label:rightAlign;");
var ModelId = /*#__PURE__*/styled("span", {
  target: "e1yw2ynr0",
  label: "ModelId"
})({
  color: "var(--mdc-theme-text-secondary-on-background)"
});
var InlineLoaderWrapper = /*#__PURE__*/styled("div", {
  target: "e1yw2ynr1",
  label: "InlineLoaderWrapper"
})({
  position: "absolute",
  bottom: 0,
  left: 0,
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  width: "100%",
  height: 40,
  backgroundColor: "var(--mdc-theme-surface)"
});
var listItemMinHeight = /*#__PURE__*/css({
  minHeight: "66px !important"
}, "label:listItemMinHeight;");

var ContentEntriesList = function ContentEntriesList() {
  var _useContentEntriesLis = useContentEntriesList(),
      contentModel = _useContentEntriesLis.contentModel,
      entryId = _useContentEntriesLis.entryId,
      loading = _useContentEntriesLis.loading,
      canCreate = _useContentEntriesLis.canCreate,
      onCreate = _useContentEntriesLis.onCreate,
      data = _useContentEntriesLis.data,
      editEntry = _useContentEntriesLis.editEntry,
      loadMore = _useContentEntriesLis.loadMore,
      loadMoreLoading = _useContentEntriesLis.loadMoreLoading,
      listQueryVariables = _useContentEntriesLis.listQueryVariables,
      setListQueryVariables = _useContentEntriesLis.setListQueryVariables,
      sorters = _useContentEntriesLis.sorters,
      filter = _useContentEntriesLis.filter,
      setFilter = _useContentEntriesLis.setFilter;

  var loadMoreOnScroll = useCallback(debounce(function (scrollFrame) {
    if (scrollFrame.top > 0.9) {
      loadMore();
    }
  }, 500), [data]);
  var entriesDataListModalOverlay = useMemo(function () {
    return /*#__PURE__*/React.createElement(UIList.DataListModalOverlay, null, /*#__PURE__*/React.createElement(Form, {
      data: listQueryVariables,
      onChange: function onChange(_ref) {
        var status = _ref.status,
            sort = _ref.sort;
        setListQueryVariables(function (prevState) {
          return _objectSpread(_objectSpread({}, prevState), {}, {
            sort: sort,
            status: status
          });
        });
      }
    }, function (_ref2) {
      var Bind = _ref2.Bind;
      return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
        span: 12
      }, /*#__PURE__*/React.createElement(Bind, {
        name: "sort"
      }, /*#__PURE__*/React.createElement(Select, {
        label: t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Sort by"])))
      }, sorters.map(function (_ref3) {
        var label = _ref3.label,
            value = _ref3.value;
        return /*#__PURE__*/React.createElement("option", {
          key: label,
          value: value
        }, label);
      })))), /*#__PURE__*/React.createElement(Cell, {
        span: 12
      }, /*#__PURE__*/React.createElement(Bind, {
        name: "status"
      }, /*#__PURE__*/React.createElement(Select, {
        label: t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Filter by status"]))),
        description: "Filter by a specific page status."
      }, /*#__PURE__*/React.createElement("option", {
        value: "all"
      }, t(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["All"])))), /*#__PURE__*/React.createElement("option", {
        value: "draft"
      }, t(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["Draft"])))), /*#__PURE__*/React.createElement("option", {
        value: "published"
      }, t(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["Published"])))), /*#__PURE__*/React.createElement("option", {
        value: "unpublished"
      }, t(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["Unpublished"])))), /*#__PURE__*/React.createElement("option", {
        value: "reviewRequested"
      }, t(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["Review requested"])))), /*#__PURE__*/React.createElement("option", {
        value: "changesRequested"
      }, t(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["Changes requested"]))))))));
    }));
  }, [listQueryVariables]);
  return /*#__PURE__*/React.createElement(UIList.DataList, {
    loading: loading,
    data: data,
    title: /*#__PURE__*/React.createElement("span", null, pluralize(contentModel.name), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement(Typography, {
      use: "subtitle1"
    }, /*#__PURE__*/React.createElement(ModelId, null, "Model ID: ", contentModel.modelId))),
    actions: canCreate ? /*#__PURE__*/React.createElement(ButtonSecondary, {
      "data-testid": "new-record-button",
      onClick: onCreate
    }, /*#__PURE__*/React.createElement(ButtonIcon, {
      icon: /*#__PURE__*/React.createElement(AddIcon, null)
    }), " ", t(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["New Entry"])))) : null,
    search: /*#__PURE__*/React.createElement(SearchUI, {
      value: filter,
      onChange: setFilter,
      inputPlaceholder: t(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["Search {title}"])))({
        title: pluralize(contentModel.name)
      })
    }),
    modalOverlay: entriesDataListModalOverlay,
    modalOverlayAction: /*#__PURE__*/React.createElement(UIList.DataListModalOverlayAction, {
      icon: /*#__PURE__*/React.createElement(FilterIcon, null),
      "data-testid": "default-data-list.filter"
    })
  }, function (_ref4) {
    var data = _ref4.data;
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Scrollbar, {
      "data-testid": "default-data-list",
      onScrollFrame: function onScrollFrame(scrollFrame) {
        return loadMoreOnScroll(scrollFrame);
      }
    }, data.map(function (item) {
      return /*#__PURE__*/React.createElement(UIList.ListItem, {
        key: item.id,
        className: listItemMinHeight,
        selected: item.id === entryId
      }, /*#__PURE__*/React.createElement(UIList.ListItemText, {
        onClick: editEntry(item)
      }, item.meta.title || "Untitled", /*#__PURE__*/React.createElement(UIList.ListItemTextSecondary, null, t(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["Last modified: {time}."])))({
        time: /*#__PURE__*/React.createElement(TimeAgo, {
          datetime: item.savedOn
        })
      }))), /*#__PURE__*/React.createElement(UIList.ListItemMeta, {
        className: rightAlign
      }, /*#__PURE__*/React.createElement(Typography, {
        use: "subtitle2"
      }, statusLabels[item.meta.status], " (v", item.meta.version, ")")));
    })), loadMoreLoading && /*#__PURE__*/React.createElement(InlineLoaderWrapper, null, /*#__PURE__*/React.createElement(Typography, {
      use: "overline"
    }, t(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral(["Loading more entries..."]))))));
  });
};

export default ContentEntriesList;
//# sourceMappingURL=ContentEntriesList.js.map