{"version":3,"sources":["../../../../src/admin/views/contentEntries/ContentEntries.tsx"],"names":["React","useState","get","useRouter","useSnackbar","i18n","CircularProgress","LeftPanel","RightPanel","SplitView","Provider","ContentEntriesProvider","GET_CONTENT_MODEL","useQuery","ContentEntriesList","ContentEntry","ContentEntryProvider","t","ns","ContentEntries","match","contentModel","setContentModel","history","modelId","showSnackbar","skip","variables","onCompleted","data","push"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,SAAhC,QAAiD,wCAAjD;AACA,SAASC,QAAQ,IAAIC,sBAArB;AACA,SAASC,iBAAT;AACA,SAASC,QAAT;AACA,OAAOC,kBAAP;AACA,OAAOC,YAAP;AACA,SAASL,QAAQ,IAAIM,oBAArB;AAEA,IAAMC,CAAC,GAAGZ,IAAI,CAACa,EAAL,CAAQ,wCAAR,CAAV;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,mBAAkBhB,SAAS,EAA3B;AAAA,MAAQiB,KAAR,cAAQA,KAAR;;AACA,kBAAwCnB,QAAQ,EAAhD;AAAA;AAAA,MAAOoB,YAAP;AAAA,MAAqBC,eAArB;;AACA,oBAAoBnB,SAAS,EAA7B;AAAA,MAAQoB,OAAR,eAAQA,OAAR;;AACA,MAAMC,OAAO,GAAGtB,GAAG,CAACkB,KAAD,EAAQ,gBAAR,CAAnB;;AACA,qBAAyBhB,WAAW,EAApC;AAAA,MAAQqB,YAAR,gBAAQA,YAAR;;AAEAZ,EAAAA,QAAQ,CAACD,iBAAD,EAAoB;AACxBc,IAAAA,IAAI,EAAE,CAACF,OADiB;AAExBG,IAAAA,SAAS,EAAE;AAAEH,MAAAA,OAAO,EAAPA;AAAF,KAFa;AAGxBI,IAAAA,WAAW,EAAE,qBAAAC,IAAI,EAAI;AACjB,UAAMR,YAAY,GAAGnB,GAAG,CAAC2B,IAAD,EAAO,sBAAP,CAAxB;;AACA,UAAIR,YAAJ,EAAkB;AACd,eAAOC,eAAe,CAACD,YAAD,CAAtB;AACH;;AAEDE,MAAAA,OAAO,CAACO,IAAR,CAAa,qBAAb;AACAL,MAAAA,YAAY,CACRR,CAAC,mIAAD,CAAgE;AAC5DO,QAAAA,OAAO,EAAPA;AAD4D,OAAhE,CADQ,CAAZ;AAKH;AAfuB,GAApB,CAAR;;AAkBA,MAAI,CAACH,YAAL,EAAmB;AACf,wBAAO,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEJ,CAAF;AAAvB,MAAP;AACH;;AAED,sBACI,oBAAC,sBAAD;AAAwB,IAAA,YAAY,EAAEI,YAAtC;AAAoD,IAAA,GAAG,EAAEA,YAAY,CAACG;AAAtE,kBACI,oBAAC,SAAD,qBACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE;AAAjB,kBACI,oBAAC,kBAAD,OADJ,CADJ,eAII,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE;AAAlB,kBACI,oBAAC,oBAAD,qBACI,oBAAC,YAAD,OADJ,CADJ,CAJJ,CADJ,CADJ;AAcH,CA3CD;;AA6CA,eAAeL,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { LeftPanel, RightPanel, SplitView } from \"@webiny/app-admin/components/SplitView\";\nimport { Provider as ContentEntriesProvider } from \"~/admin/views/contentEntries/ContentEntriesContext\";\nimport { GET_CONTENT_MODEL } from \"~/admin/graphql/contentModels\";\nimport { useQuery } from \"../../hooks\";\nimport ContentEntriesList from \"~/admin/views/contentEntries/ContentEntriesList\";\nimport ContentEntry from \"~/admin/views/contentEntries/ContentEntry\";\nimport { Provider as ContentEntryProvider } from \"./ContentEntry/ContentEntryContext\";\n\nconst t = i18n.ns(\"app-headless-cms/admin/content-entries\");\n\nconst ContentEntries = () => {\n    const { match } = useRouter();\n    const [contentModel, setContentModel] = useState<any>();\n    const { history } = useRouter();\n    const modelId = get(match, \"params.modelId\");\n    const { showSnackbar } = useSnackbar();\n\n    useQuery(GET_CONTENT_MODEL, {\n        skip: !modelId,\n        variables: { modelId },\n        onCompleted: data => {\n            const contentModel = get(data, \"getContentModel.data\");\n            if (contentModel) {\n                return setContentModel(contentModel);\n            }\n\n            history.push(\"/cms/content-models\");\n            showSnackbar(\n                t`Could not load content for model \"{modelId}\". Redirecting...`({\n                    modelId\n                })\n            );\n        }\n    });\n\n    if (!contentModel) {\n        return <CircularProgress label={t`Loading content model...`} />;\n    }\n\n    return (\n        <ContentEntriesProvider contentModel={contentModel} key={contentModel.modelId}>\n            <SplitView>\n                <LeftPanel span={4}>\n                    <ContentEntriesList />\n                </LeftPanel>\n                <RightPanel span={8}>\n                    <ContentEntryProvider>\n                        <ContentEntry />\n                    </ContentEntryProvider>\n                </RightPanel>\n            </SplitView>\n        </ContentEntriesProvider>\n    );\n};\n\nexport default ContentEntries;\n"],"file":"ContentEntries.js"}