{"version":3,"sources":["../../../../src/admin/views/contentEntries/ContentEntriesContext.tsx"],"names":["React","useState","useMemo","useSecurity","i18n","t","ns","SORTERS","label","value","Context","createContext","Provider","contentModel","children","identity","sort","listQueryVariables","setListQueryVariables","canCreate","permission","getPermission","rwd","includes","sorters","titleField","fields","find","field","fieldId","titleFieldId","titleFieldLabel","modelId","displayName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAmE,OAAnE;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAGA,IAAMC,CAAC,GAAGD,IAAI,CAACE,EAAL,CAAQ,yCAAR,CAAV;AAEA,IAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAEH,CAAF,qFADT;AAEII,EAAAA,KAAK,EAAE;AAFX,CADY,EAKZ;AACID,EAAAA,KAAK,EAAEH,CAAF,uFADT;AAEII,EAAAA,KAAK,EAAE;AAFX,CALY,CAAhB;AAwBA,OAAO,IAAMC,OAAO,gBAAGV,KAAK,CAACW,aAAN,CAA2C,IAA3C,CAAhB;AAEP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAgC;AAAA,MAA7BC,YAA6B,QAA7BA,YAA6B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACpD,qBAAqBX,WAAW,EAAhC;AAAA,MAAQY,QAAR,gBAAQA,QAAR;;AAEA,kBAAoDd,QAAQ,CAAC;AACzDe,IAAAA,IAAI,EAAET,OAAO,CAAC,CAAD,CAAP,CAAWE;AADwC,GAAD,CAA5D;AAAA;AAAA,MAAOQ,kBAAP;AAAA,MAA2BC,qBAA3B;;AAIA,MAAMC,SAAS,GAAGjB,OAAO,CAAC,YAAM;AAC5B,QAAMkB,UAAU,GAAGL,QAAQ,CAACM,aAAT,CAAuB,kBAAvB,CAAnB;;AACA,QAAI,CAACD,UAAL,EAAiB;AACb,aAAO,KAAP;AACH;;AAED,QAAI,OAAOA,UAAU,CAACE,GAAlB,KAA0B,QAA9B,EAAwC;AACpC,aAAO,IAAP;AACH;;AAED,WAAOF,UAAU,CAACE,GAAX,CAAeC,QAAf,CAAwB,GAAxB,CAAP;AACH,GAXwB,EAWtB,EAXsB,CAAzB;AAaA,MAAMC,OAAO,GAAGtB,OAAO,CAAC,YAAM;AAC1B,QAAMuB,UAAU,GAAGZ,YAAY,CAACa,MAAb,CAAoBC,IAApB,CACf,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,OAAN,KAAkBhB,YAAY,CAACiB,YAAnC;AAAA,KADU,CAAnB;AAGA,QAAMC,eAAe,GAAGN,UAAU,GAAGA,UAAU,CAACjB,KAAd,GAAsB,IAAxD;;AACA,QAAI,CAACuB,eAAL,EAAsB;AAClB,aAAOxB,OAAP;AACH;;AAED,qBACOA,OADP,GAEI;AACIC,MAAAA,KAAK,EAAEH,CAAC,4FAAD,CAAyB;AAAE0B,QAAAA,eAAe,EAAfA;AAAF,OAAzB,CADX;AAEItB,MAAAA,KAAK,YAAKI,YAAY,CAACiB,YAAlB;AAFT,KAFJ,EAMI;AACItB,MAAAA,KAAK,EAAEH,CAAC,4FAAD,CAAyB;AAAE0B,QAAAA,eAAe,EAAfA;AAAF,OAAzB,CADX;AAEItB,MAAAA,KAAK,YAAKI,YAAY,CAACiB,YAAlB;AAFT,KANJ;AAWH,GApBsB,EAoBpB,CAACjB,YAAY,CAACmB,OAAd,CApBoB,CAAvB;AAsBA,MAAMvB,KAAK,GAAG;AACVI,IAAAA,YAAY,EAAZA,YADU;AAEVW,IAAAA,OAAO,EAAPA,OAFU;AAGVL,IAAAA,SAAS,EAATA,SAHU;AAIVF,IAAAA,kBAAkB,EAAlBA,kBAJU;AAKVC,IAAAA,qBAAqB,EAArBA;AALU,GAAd;AAQA,sBAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAET;AAAzB,KAAiCK,QAAjC,CAAP;AACH,CAnDM;AAqDPF,QAAQ,CAACqB,WAAT,GAAuB,wBAAvB","sourcesContent":["import React, { useState, useMemo, Dispatch, SetStateAction } from \"react\";\nimport { useSecurity } from \"@webiny/app-security\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { CmsEditorContentModel } from \"~/types\";\n\nconst t = i18n.ns(\"app-headless-cms/admin/contents/entries\");\n\nconst SORTERS = [\n    {\n        label: t`Newest to oldest`,\n        value: \"savedOn_DESC\"\n    },\n    {\n        label: t`Oldest to newest`,\n        value: \"savedOn_ASC\"\n    }\n];\n\nexport interface ListQueryVariables {\n    sort?: string;\n    status?: string;\n}\n\nexport interface ContentEntriesContext {\n    contentModel: CmsEditorContentModel;\n    sorters: Array<{ label: string; value: string }>;\n    canCreate: boolean;\n    listQueryVariables: ListQueryVariables;\n    setListQueryVariables: Dispatch<SetStateAction<ListQueryVariables>>;\n}\n\nexport const Context = React.createContext<ContentEntriesContext>(null);\n\nexport const Provider = ({ contentModel, children }) => {\n    const { identity } = useSecurity();\n\n    const [listQueryVariables, setListQueryVariables] = useState({\n        sort: SORTERS[0].value\n    });\n\n    const canCreate = useMemo(() => {\n        const permission = identity.getPermission(\"cms.contentEntry\");\n        if (!permission) {\n            return false;\n        }\n\n        if (typeof permission.rwd !== \"string\") {\n            return true;\n        }\n\n        return permission.rwd.includes(\"w\");\n    }, []);\n\n    const sorters = useMemo(() => {\n        const titleField = contentModel.fields.find(\n            field => field.fieldId === contentModel.titleFieldId\n        );\n        const titleFieldLabel = titleField ? titleField.label : null;\n        if (!titleFieldLabel) {\n            return SORTERS;\n        }\n\n        return [\n            ...SORTERS,\n            {\n                label: t`{titleFieldLabel} A-Z`({ titleFieldLabel }),\n                value: `${contentModel.titleFieldId}_ASC`\n            },\n            {\n                label: t`{titleFieldLabel} Z-A`({ titleFieldLabel }),\n                value: `${contentModel.titleFieldId}_DESC`\n            }\n        ];\n    }, [contentModel.modelId]);\n\n    const value = {\n        contentModel,\n        sorters,\n        canCreate,\n        listQueryVariables,\n        setListQueryVariables\n    };\n\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n};\n\nProvider.displayName = \"ContentEntriesProvider\";\n"],"file":"ContentEntriesContext.js"}