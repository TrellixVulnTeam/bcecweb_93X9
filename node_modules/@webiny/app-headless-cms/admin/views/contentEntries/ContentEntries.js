import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";

var _templateObject, _templateObject2;

import React, { useState } from "react";
import get from "lodash/get";
import { useRouter } from "@webiny/react-router";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { i18n } from "@webiny/app/i18n";
import { CircularProgress } from "@webiny/ui/Progress";
import { LeftPanel, RightPanel, SplitView } from "@webiny/app-admin/components/SplitView";
import { Provider as ContentEntriesProvider } from "./ContentEntriesContext";
import { GET_CONTENT_MODEL } from "../../graphql/contentModels";
import { useQuery } from "../../hooks";
import ContentEntriesList from "./ContentEntriesList";
import ContentEntry from "./ContentEntry";
import { Provider as ContentEntryProvider } from "./ContentEntry/ContentEntryContext";
var t = i18n.ns("app-headless-cms/admin/content-entries");

var ContentEntries = function ContentEntries() {
  var _useRouter = useRouter(),
      match = _useRouter.match;

  var _useState = useState(),
      _useState2 = _slicedToArray(_useState, 2),
      contentModel = _useState2[0],
      setContentModel = _useState2[1];

  var _useRouter2 = useRouter(),
      history = _useRouter2.history;

  var modelId = get(match, "params.modelId");

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  useQuery(GET_CONTENT_MODEL, {
    skip: !modelId,
    variables: {
      modelId: modelId
    },
    onCompleted: function onCompleted(data) {
      var contentModel = get(data, "getContentModel.data");

      if (contentModel) {
        return setContentModel(contentModel);
      }

      history.push("/cms/content-models");
      showSnackbar(t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Could not load content for model \"{modelId}\". Redirecting..."])))({
        modelId: modelId
      }));
    }
  });

  if (!contentModel) {
    return /*#__PURE__*/React.createElement(CircularProgress, {
      label: t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Loading content model..."])))
    });
  }

  return /*#__PURE__*/React.createElement(ContentEntriesProvider, {
    contentModel: contentModel,
    key: contentModel.modelId
  }, /*#__PURE__*/React.createElement(SplitView, null, /*#__PURE__*/React.createElement(LeftPanel, {
    span: 4
  }, /*#__PURE__*/React.createElement(ContentEntriesList, null)), /*#__PURE__*/React.createElement(RightPanel, {
    span: 8
  }, /*#__PURE__*/React.createElement(ContentEntryProvider, null, /*#__PURE__*/React.createElement(ContentEntry, null)))));
};

export default ContentEntries;
//# sourceMappingURL=ContentEntries.js.map