{"version":3,"sources":["../../../src/admin/graphql/contentEntries.ts"],"names":["upperFirst","gql","pluralize","createFieldsList","ERROR_FIELD","CONTENT_META_FIELDS","createReadQuery","model","ucFirstModelId","modelId","fields","createRevisionsQuery","getModelTitleFieldId","titleFieldId","createListQuery","ucFirstPluralizedModelId","createDeleteMutation","createCreateMutation","createCreateFromMutation","createUpdateMutation","createPublishMutation","createUnpublishMutation","createRequestReviewMutation","createRequestChangesMutation"],"mappings":"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","sourcesContent":["import upperFirst from \"lodash/upperFirst\";\nimport gql from \"graphql-tag\";\nimport pluralize from \"pluralize\";\nimport { CmsEditorContentModel } from \"~/types\";\nimport { createFieldsList } from \"./createFieldsList\";\n\nconst ERROR_FIELD = /* GraphQL */ `\n    {\n        message\n        code\n        data\n    }\n`;\n\nconst CONTENT_META_FIELDS = /* GraphQL */ `\n    title\n    publishedOn\n    version\n    locked\n    status\n`;\n\nexport const createReadQuery = model => {\n    const ucFirstModelId = upperFirst(model.modelId);\n\n    return gql`\n        query CmsEntriesGet${ucFirstModelId}($revision: ID!) {\n            content: get${ucFirstModelId}(revision: $revision) {\n                data {\n                    id\n                    createdBy {\n                        id\n                    }\n                    ${createFieldsList(model.fields)}\n                    savedOn\n                    meta {\n                        ${CONTENT_META_FIELDS}\n                    }\n                }\n                error ${ERROR_FIELD}\n            }\n        }\n    `;\n};\n\nexport const createRevisionsQuery = model => {\n    const ucFirstModelId = upperFirst(model.modelId);\n\n    return gql`\n        query CmsEntriesGet${ucFirstModelId}Revisions($id: ID!) {\n            revisions: get${ucFirstModelId}Revisions(id: $id) {\n                data {\n                    id\n                    savedOn\n                    meta {\n                        ${CONTENT_META_FIELDS}\n                    }\n                }\n                error ${ERROR_FIELD}\n            }\n        }\n    `;\n};\n\nconst getModelTitleFieldId = (model: CmsEditorContentModel): string => {\n    if (!model.titleFieldId || model.titleFieldId === \"id\") {\n        return \"\";\n    }\n    return model.titleFieldId;\n};\nexport const createListQuery = (model: CmsEditorContentModel) => {\n    const ucFirstPluralizedModelId = upperFirst(pluralize(model.modelId));\n    const ucFirstModelId = upperFirst(model.modelId);\n\n    return gql`\n        query CmsEntriesList${ucFirstPluralizedModelId}($where: ${ucFirstModelId}ListWhereInput, $sort: [${ucFirstModelId}ListSorter], $limit: Int, $after: String) {\n            content: list${ucFirstPluralizedModelId}(\n                where: $where\n                sort: $sort\n                limit: $limit\n                after: $after\n            ) {\n                data {\n                    id\n                    savedOn\n                    meta {\n                        ${CONTENT_META_FIELDS}\n                    }\n                    ${getModelTitleFieldId(model)}\n                }\n                meta {\n                    cursor\n                    hasMoreItems\n                    totalCount\n                }            \n                error ${ERROR_FIELD}\n            }\n        }\n    `;\n};\n\nexport const createDeleteMutation = model => {\n    const ucFirstModelId = upperFirst(model.modelId);\n\n    return gql`\n        mutation CmsEntriesDelete${ucFirstModelId}($revision: ID!) {\n            content: delete${ucFirstModelId}(revision: $revision) {\n                data\n                error ${ERROR_FIELD}\n            }\n        }\n    `;\n};\n\nexport const createCreateMutation = model => {\n    const ucFirstModelId = upperFirst(model.modelId);\n\n    return gql`\n        mutation CmsEntriesCreate${ucFirstModelId}($data: ${ucFirstModelId}Input!) {\n            content: create${ucFirstModelId}(data: $data) {\n                data {\n                    id\n                    savedOn\n                    ${createFieldsList(model.fields)}\n                    meta {\n                        ${CONTENT_META_FIELDS}\n                    }\n                }\n                error ${ERROR_FIELD}\n            }\n        }\n    `;\n};\n\nexport const createCreateFromMutation = model => {\n    const ucFirstModelId = upperFirst(model.modelId);\n\n    return gql`\n        mutation CmsCreate${ucFirstModelId}From($revision: ID!, $data: ${ucFirstModelId}Input) {\n            content: create${ucFirstModelId}From(revision: $revision, data: $data) {\n                data {\n                    id\n                    savedOn\n                    ${createFieldsList(model.fields)}\n                    meta {\n                        ${CONTENT_META_FIELDS}\n                    }\n                }\n                error ${ERROR_FIELD}\n            }\n        }`;\n};\n\nexport const createUpdateMutation = model => {\n    const ucFirstModelId = upperFirst(model.modelId);\n\n    return gql`\n        mutation CmsUpdate${ucFirstModelId}($revision: ID!, $data: ${ucFirstModelId}Input!) {\n            content: update${ucFirstModelId}(revision: $revision, data: $data) {\n                data {\n                    id\n                    ${createFieldsList(model.fields)}\n                    savedOn\n                    meta { \n                        ${CONTENT_META_FIELDS} \n                    }\n                }\n                error ${ERROR_FIELD}\n            }\n        }\n    `;\n};\n\nexport const createPublishMutation = model => {\n    const ucFirstModelId = upperFirst(model.modelId);\n\n    return gql`\n        mutation CmsPublish${ucFirstModelId}($revision: ID!) {\n            content: publish${ucFirstModelId}(revision: $revision) {\n                data {\n                    id\n                    meta {\n                        ${CONTENT_META_FIELDS}\n                    }\n                }\n                error ${ERROR_FIELD}\n            }\n        }`;\n};\n\nexport const createUnpublishMutation = model => {\n    const ucFirstModelId = upperFirst(model.modelId);\n\n    return gql`\n        mutation CmsUnpublish${ucFirstModelId}($revision: ID!) {\n            content: unpublish${ucFirstModelId}(revision: $revision) {\n                data {\n                    id\n                    meta {\n                        ${CONTENT_META_FIELDS}\n                    }\n                }\n                error ${ERROR_FIELD}\n            }\n        }`;\n};\n\nexport const createRequestReviewMutation = model => {\n    const ucFirstModelId = upperFirst(model.modelId);\n\n    return gql`\n        mutation CmsRequest${ucFirstModelId}Review($revision: ID!) {\n            content: request${ucFirstModelId}Review(revision: $revision) {\n                data {\n                    id\n                    meta {\n                        ${CONTENT_META_FIELDS}\n                    }\n                }\n                error ${ERROR_FIELD}\n            }\n        }`;\n};\n\nexport const createRequestChangesMutation = model => {\n    const ucFirstModelId = upperFirst(model.modelId);\n\n    return gql`\n        mutation CmsRequest${ucFirstModelId}Changes($revision: ID!) {\n            content: request${ucFirstModelId}Changes(revision: $revision) {\n                data {\n                    id\n                    meta {\n                        ${CONTENT_META_FIELDS}\n                    }\n                }\n                error ${ERROR_FIELD}\n            }\n        }`;\n};\n"],"file":"contentEntries.js"}