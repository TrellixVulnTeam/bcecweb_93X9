import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11;

import upperFirst from "lodash/upperFirst";
import gql from "graphql-tag";
import pluralize from "pluralize";
import { createFieldsList } from "./createFieldsList";
var ERROR_FIELD =
/* GraphQL */
"\n    {\n        message\n        code\n        data\n    }\n";
var CONTENT_META_FIELDS =
/* GraphQL */
"\n    title\n    publishedOn\n    version\n    locked\n    status\n";
export var createReadQuery = function createReadQuery(model) {
  var ucFirstModelId = upperFirst(model.modelId);
  return gql(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n        query CmsEntriesGet", "($revision: ID!) {\n            content: get", "(revision: $revision) {\n                data {\n                    id\n                    createdBy {\n                        id\n                    }\n                    ", "\n                    savedOn\n                    meta {\n                        ", "\n                    }\n                }\n                error ", "\n            }\n        }\n    "])), ucFirstModelId, ucFirstModelId, createFieldsList(model.fields), CONTENT_META_FIELDS, ERROR_FIELD);
};
export var createRevisionsQuery = function createRevisionsQuery(model) {
  var ucFirstModelId = upperFirst(model.modelId);
  return gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n        query CmsEntriesGet", "Revisions($id: ID!) {\n            revisions: get", "Revisions(id: $id) {\n                data {\n                    id\n                    savedOn\n                    meta {\n                        ", "\n                    }\n                }\n                error ", "\n            }\n        }\n    "])), ucFirstModelId, ucFirstModelId, CONTENT_META_FIELDS, ERROR_FIELD);
};

var getModelTitleFieldId = function getModelTitleFieldId(model) {
  if (!model.titleFieldId || model.titleFieldId === "id") {
    return "";
  }

  return model.titleFieldId;
};

export var createListQuery = function createListQuery(model) {
  var ucFirstPluralizedModelId = upperFirst(pluralize(model.modelId));
  var ucFirstModelId = upperFirst(model.modelId);
  return gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n        query CmsEntriesList", "($where: ", "ListWhereInput, $sort: [", "ListSorter], $limit: Int, $after: String) {\n            content: list", "(\n                where: $where\n                sort: $sort\n                limit: $limit\n                after: $after\n            ) {\n                data {\n                    id\n                    savedOn\n                    meta {\n                        ", "\n                    }\n                    ", "\n                }\n                meta {\n                    cursor\n                    hasMoreItems\n                    totalCount\n                }            \n                error ", "\n            }\n        }\n    "])), ucFirstPluralizedModelId, ucFirstModelId, ucFirstModelId, ucFirstPluralizedModelId, CONTENT_META_FIELDS, getModelTitleFieldId(model), ERROR_FIELD);
};
export var createDeleteMutation = function createDeleteMutation(model) {
  var ucFirstModelId = upperFirst(model.modelId);
  return gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n        mutation CmsEntriesDelete", "($revision: ID!) {\n            content: delete", "(revision: $revision) {\n                data\n                error ", "\n            }\n        }\n    "])), ucFirstModelId, ucFirstModelId, ERROR_FIELD);
};
export var createCreateMutation = function createCreateMutation(model) {
  var ucFirstModelId = upperFirst(model.modelId);
  return gql(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n        mutation CmsEntriesCreate", "($data: ", "Input!) {\n            content: create", "(data: $data) {\n                data {\n                    id\n                    savedOn\n                    ", "\n                    meta {\n                        ", "\n                    }\n                }\n                error ", "\n            }\n        }\n    "])), ucFirstModelId, ucFirstModelId, ucFirstModelId, createFieldsList(model.fields), CONTENT_META_FIELDS, ERROR_FIELD);
};
export var createCreateFromMutation = function createCreateFromMutation(model) {
  var ucFirstModelId = upperFirst(model.modelId);
  return gql(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n        mutation CmsCreate", "From($revision: ID!, $data: ", "Input) {\n            content: create", "From(revision: $revision, data: $data) {\n                data {\n                    id\n                    savedOn\n                    ", "\n                    meta {\n                        ", "\n                    }\n                }\n                error ", "\n            }\n        }"])), ucFirstModelId, ucFirstModelId, ucFirstModelId, createFieldsList(model.fields), CONTENT_META_FIELDS, ERROR_FIELD);
};
export var createUpdateMutation = function createUpdateMutation(model) {
  var ucFirstModelId = upperFirst(model.modelId);
  return gql(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n        mutation CmsUpdate", "($revision: ID!, $data: ", "Input!) {\n            content: update", "(revision: $revision, data: $data) {\n                data {\n                    id\n                    ", "\n                    savedOn\n                    meta { \n                        ", " \n                    }\n                }\n                error ", "\n            }\n        }\n    "])), ucFirstModelId, ucFirstModelId, ucFirstModelId, createFieldsList(model.fields), CONTENT_META_FIELDS, ERROR_FIELD);
};
export var createPublishMutation = function createPublishMutation(model) {
  var ucFirstModelId = upperFirst(model.modelId);
  return gql(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n        mutation CmsPublish", "($revision: ID!) {\n            content: publish", "(revision: $revision) {\n                data {\n                    id\n                    meta {\n                        ", "\n                    }\n                }\n                error ", "\n            }\n        }"])), ucFirstModelId, ucFirstModelId, CONTENT_META_FIELDS, ERROR_FIELD);
};
export var createUnpublishMutation = function createUnpublishMutation(model) {
  var ucFirstModelId = upperFirst(model.modelId);
  return gql(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["\n        mutation CmsUnpublish", "($revision: ID!) {\n            content: unpublish", "(revision: $revision) {\n                data {\n                    id\n                    meta {\n                        ", "\n                    }\n                }\n                error ", "\n            }\n        }"])), ucFirstModelId, ucFirstModelId, CONTENT_META_FIELDS, ERROR_FIELD);
};
export var createRequestReviewMutation = function createRequestReviewMutation(model) {
  var ucFirstModelId = upperFirst(model.modelId);
  return gql(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["\n        mutation CmsRequest", "Review($revision: ID!) {\n            content: request", "Review(revision: $revision) {\n                data {\n                    id\n                    meta {\n                        ", "\n                    }\n                }\n                error ", "\n            }\n        }"])), ucFirstModelId, ucFirstModelId, CONTENT_META_FIELDS, ERROR_FIELD);
};
export var createRequestChangesMutation = function createRequestChangesMutation(model) {
  var ucFirstModelId = upperFirst(model.modelId);
  return gql(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["\n        mutation CmsRequest", "Changes($revision: ID!) {\n            content: request", "Changes(revision: $revision) {\n                data {\n                    id\n                    meta {\n                        ", "\n                    }\n                }\n                error ", "\n            }\n        }"])), ucFirstModelId, ucFirstModelId, CONTENT_META_FIELDS, ERROR_FIELD);
};
//# sourceMappingURL=contentEntries.js.map