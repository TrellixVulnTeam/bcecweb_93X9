{"version":3,"sources":["../../../src/admin/hooks/usePermission.ts"],"names":["useCallback","useMemo","useSecurity","get","useI18N","usePermission","identity","getCurrentLocale","currentLocale","hasFullAccess","getPermission","canRead","permissionName","permission","rwd","includes","canReadEntries","contentModelGroup","contentModel","contentModelPermission","contentModelGroupPermission","models","Array","isArray","modelId","groups","id","canEdit","item","own","createdBy","login","canCreate","canDelete","canPublish","pw","canUnpublish","canRequestReview","canRequestChange","canReadContentModels","canReadContentModelGroups","canCreateContentModels","canCreateContentModelGroups","canAccessManageEndpoint","undefined"],"mappings":"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","sourcesContent":["import { useCallback, useMemo } from \"react\";\nimport { useSecurity } from \"@webiny/app-security\";\nimport get from \"lodash/get\";\nimport { useI18N } from \"@webiny/app-i18n/hooks/useI18N\";\n\ntype ContentModelGroup = { id: string; [key: string]: any };\ntype ContentModel = { modelId: string; [key: string]: any };\n\nconst usePermission = () => {\n    const { identity } = useSecurity();\n    const { getCurrentLocale } = useI18N();\n\n    const currentLocale = getCurrentLocale(\"content\");\n\n    const hasFullAccess = useMemo(() => identity.getPermission(\"cms.*\"), []);\n\n    const canRead = useCallback((permissionName: string) => {\n        const permission = identity.getPermission(permissionName);\n        if (!permission) {\n            return false;\n        }\n\n        if (typeof permission.rwd !== \"string\") {\n            return true;\n        }\n\n        return permission.rwd.includes(\"r\");\n    }, []);\n\n    const canReadEntries = useCallback(\n        ({\n            contentModelGroup,\n            contentModel\n        }: {\n            contentModelGroup: ContentModelGroup;\n            contentModel: ContentModel;\n        }) => {\n            if (hasFullAccess) {\n                return true;\n            }\n\n            const permission = identity.getPermission(\"cms.contentEntry\");\n            const contentModelPermission = identity.getPermission(\"cms.contentModel\");\n            const contentModelGroupPermission = identity.getPermission(\"cms.contentModelGroup\");\n\n            if (!permission) {\n                return false;\n            }\n\n            // Check \"contentModel\" list.\n            const models = get(contentModelPermission, `models.${currentLocale}`);\n            if (Array.isArray(models)) {\n                return models.includes(contentModel.modelId);\n            }\n            // Check \"contentModelGroup\" list.\n            const groups = get(contentModelGroupPermission, `groups.${currentLocale}`);\n            if (Array.isArray(groups)) {\n                return groups.includes(contentModelGroup.id);\n            }\n\n            if (typeof permission.rwd === \"string\") {\n                return permission.rwd.includes(\"r\");\n            }\n\n            return true;\n        },\n        [identity, hasFullAccess, currentLocale]\n    );\n\n    const canEdit = useCallback(\n        (item, permissionName) => {\n            const permission = identity.getPermission(permissionName);\n\n            if (!permission) {\n                return false;\n            }\n            if (permission.own) {\n                /**\n                 * There will be no \"createdBy\" field for a new entry therefore we enable the access.\n                 */\n                if (!item.createdBy) {\n                    return true;\n                }\n                return get(item, \"createdBy.id\") === identity.login;\n            }\n            if (typeof permission.rwd === \"string\") {\n                return permission.rwd.includes(\"w\");\n            }\n            return true;\n        },\n        [identity]\n    );\n\n    /**\n     * @description This checks whether the user has the \"write\" access for given permission;\n     * without talking the \"own\" property in account.\n     * @param {string} permissionName\n     * */\n    const canCreate = useCallback(permissionName => {\n        const permission = identity.getPermission(permissionName);\n        if (!permission) {\n            return false;\n        }\n\n        if (typeof permission.rwd !== \"string\") {\n            return true;\n        }\n\n        return permission.rwd.includes(\"w\");\n    }, []);\n\n    const canDelete = useCallback(\n        (item, permissionName) => {\n            const permission = identity.getPermission(permissionName);\n\n            if (!permission) {\n                return false;\n            }\n            if (permission.own) {\n                return get(item, \"createdBy.id\") === identity.login;\n            }\n            if (typeof permission.rwd === \"string\") {\n                return permission.rwd.includes(\"d\");\n            }\n            return true;\n        },\n        [identity]\n    );\n\n    const canPublish = useCallback(\n        permissionName => {\n            if (hasFullAccess) {\n                return true;\n            }\n            const permission = identity.getPermission(permissionName);\n\n            if (!permission) {\n                return false;\n            }\n            if (typeof permission.pw === \"string\") {\n                return permission.pw.includes(\"p\");\n            }\n\n            return false;\n        },\n        [identity, hasFullAccess]\n    );\n\n    const canUnpublish = useCallback(\n        permissionName => {\n            if (hasFullAccess) {\n                return true;\n            }\n            const permission = identity.getPermission(permissionName);\n\n            if (!permission) {\n                return false;\n            }\n            if (typeof permission.pw === \"string\") {\n                return permission.pw.includes(\"u\");\n            }\n\n            return false;\n        },\n        [identity, hasFullAccess]\n    );\n\n    const canRequestReview = useCallback(\n        permissionName => {\n            if (hasFullAccess) {\n                return true;\n            }\n            const permission = identity.getPermission(permissionName);\n\n            if (!permission) {\n                return false;\n            }\n            if (typeof permission.pw === \"string\") {\n                return permission.pw.includes(\"r\");\n            }\n\n            return false;\n        },\n        [identity, hasFullAccess]\n    );\n\n    const canRequestChange = useCallback(\n        permissionName => {\n            if (hasFullAccess) {\n                return true;\n            }\n            const permission = identity.getPermission(permissionName);\n\n            if (!permission) {\n                return false;\n            }\n            if (typeof permission.pw === \"string\") {\n                return permission.pw.includes(\"c\");\n            }\n\n            return false;\n        },\n        [identity, hasFullAccess]\n    );\n\n    const canReadContentModels = canRead(\"cms.contentModel\");\n    const canReadContentModelGroups = canRead(\"cms.contentModelGroup\");\n    const canCreateContentModels = canCreate(\"cms.contentModel\");\n    const canCreateContentModelGroups = canCreate(\"cms.contentModelGroup\");\n    const canAccessManageEndpoint = useMemo(() => {\n        return identity.getPermission(\"cms.endpoint.manage\") !== undefined;\n    }, [identity]);\n\n    return {\n        canReadEntries,\n        canEdit,\n        canCreate,\n        canDelete,\n        canPublish,\n        canUnpublish,\n        canRequestReview,\n        canRequestChange,\n        canReadContentModels,\n        canReadContentModelGroups,\n        canCreateContentModels,\n        canCreateContentModelGroups,\n        canAccessManageEndpoint\n    };\n};\n\nexport default usePermission;\n"],"file":"usePermission.js"}