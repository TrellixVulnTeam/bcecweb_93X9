{"version":3,"sources":["../../../../src/admin/components/DropZone/Center.tsx"],"names":["React","styled","Droppable","Container","isOver","backgroundColor","boxSizing","height","minHeight","position","userSelect","width","border","opacity","Add","top","left","transform","margin","color","Center","onDrop","children","style","drop"],"mappings":";AAAA,OAAOA,KAAP,MAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP;AAGA;AACA,IAAMC,SAAS,gBAAGF,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAAA,MAAGG,MAAH,QAAGA,MAAH;AAAA,SAAsC;AAClEC,IAAAA,eAAe,EAAE,aADiD;AAElEC,IAAAA,SAAS,EAAE,YAFuD;AAGlEC,IAAAA,MAAM,EAAE,MAH0D;AAIlEC,IAAAA,SAAS,EAAE,GAJuD;AAKlEC,IAAAA,QAAQ,EAAE,UALwD;AAMlEC,IAAAA,UAAU,EAAE,MANsD;AAOlEC,IAAAA,KAAK,EAAE,MAP2D;AAQlEC,IAAAA,MAAM,EAAER,MAAM,GACR,qCADQ,GAER,uCAV4D;AAWlES,IAAAA,OAAO,EAAE;AAXyD,GAAtC;AAAA,CAAjB,CAAf,C,CAcA;;AACA,IAAMC,GAAG,gBAAGb,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAAA,MAAGG,MAAH,SAAGA,MAAH;AAAA,SAAsC;AAC5DK,IAAAA,QAAQ,EAAE,UADkD;AAE5DM,IAAAA,GAAG,EAAE,KAFuD;AAG5DC,IAAAA,IAAI,EAAE,KAHsD;AAI5DC,IAAAA,SAAS,EAAE,sBAJiD;AAK5DC,IAAAA,MAAM,EAAE,CALoD;AAM5DC,IAAAA,KAAK,EAAEf,MAAM,GAAG,0BAAH,GAAgC;AANe,GAAtC;AAAA,CAAjB,CAAT;AAkBA,eAAe,SAASgB,MAAT,QAAoD;AAAA,MAAlCC,MAAkC,SAAlCA,MAAkC;AAAA,MAA1BC,QAA0B,SAA1BA,QAA0B;AAAA,MAAhBC,KAAgB,SAAhBA,KAAgB;AAC/D,sBACI,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEF;AAAnB,KACK;AAAA,QAAGjB,MAAH,SAAGA,MAAH;AAAA,QAAWoB,IAAX,SAAWA,IAAX;AAAA,wBACG;AACI,MAAA,GAAG,EAAEA,IADT;AAEI,MAAA,KAAK;AAAIb,QAAAA,KAAK,EAAE,MAAX;AAAmBJ,QAAAA,MAAM,EAAE;AAA3B,SAAsCgB,KAAtC,CAFT;AAGI,qBAAa;AAHjB,oBAKI,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAEnB;AAAnB,oBACI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAEA;AAAb,OAAsBkB,QAAtB,CADJ,CALJ,CADH;AAAA,GADL,CADJ;AAeH","sourcesContent":["import React, { CSSProperties } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Droppable from \"./../Droppable\";\nimport { DragSource } from \"~/admin/components/FieldEditor/FieldEditorContext\";\n\n// @ts-ignore\nconst Container = styled(\"div\")(({ isOver }: { isOver: boolean }) => ({\n    backgroundColor: \"transparent\",\n    boxSizing: \"border-box\",\n    height: \"100%\",\n    minHeight: 100,\n    position: \"relative\",\n    userSelect: \"none\",\n    width: \"100%\",\n    border: isOver\n        ? \"2px dashed var(--mdc-theme-primary)\"\n        : \"2px dashed var(--mdc-theme-secondary)\",\n    opacity: 1\n}));\n\n// @ts-ignore\nconst Add = styled(\"div\")(({ isOver }: { isOver: boolean }) => ({\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%,-50%)\",\n    margin: 0,\n    color: isOver ? \"var(--mdc-theme-primary)\" : \"var(--mdc-theme-secondary)\"\n}));\n\ntype Props = {\n    type?: string;\n    onDrop(item: DragSource): void;\n    children: React.ReactNode;\n    active?: boolean;\n    highlight?: boolean;\n    style?: CSSProperties;\n};\n\nexport default function Center({ onDrop, children, style }: Props) {\n    return (\n        <Droppable onDrop={onDrop}>\n            {({ isOver, drop }) => (\n                <div\n                    ref={drop}\n                    style={{ width: \"100%\", height: \"100%\", ...style }}\n                    data-testid={\"cms-editor-first-field-area\"}\n                >\n                    <Container isOver={isOver}>\n                        <Add isOver={isOver}>{children}</Add>\n                    </Container>\n                </div>\n            )}\n        </Droppable>\n    );\n}\n"],"file":"Center.js"}