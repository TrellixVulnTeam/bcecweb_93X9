{"version":3,"sources":["../../../../src/admin/components/ContentEntryForm/ContentEntryForm.tsx"],"names":["React","useCallback","useEffect","useRef","styled","Form","plugins","CircularProgress","RenderFieldElement","useContentEntryForm","Fields","FormWrapper","height","overflow","ContentEntryForm","onForm","props","contentModel","loading","data","onChange","onSubmit","invalidFields","ref","current","formRenderer","byType","find","pl","modelId","renderCustomLayout","formRenderProps","fields","reduce","acc","field","fieldId","Bind","render","formProps","layout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,MAAxC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,IAAT,QAA2C,cAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,kBAAP;AAEA,SAASC,mBAAT;AACA,SAASC,MAAT;AAEA,IAAMC,WAAW,gBAAGP,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAC9BQ,EAAAA,MAAM,EAAE,qBADsB;AAE9BC,EAAAA,QAAQ,EAAE;AAFoB,CAAjB,CAAjB;AASA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAiD;AAAA,MAA9CC,MAA8C,QAA9CA,MAA8C;AAAA,MAAnCC,KAAmC;;AAC7E,MAAQC,YAAR,GAAyBD,KAAzB,CAAQC,YAAR;;AACA,6BAA6DR,mBAAmB,CAACO,KAAD,CAAhF;AAAA,MAAQE,OAAR,wBAAQA,OAAR;AAAA,MAAiBC,IAAjB,wBAAiBA,IAAjB;AAAA,MAAuBC,QAAvB,wBAAuBA,QAAvB;AAAA,MAAiCC,QAAjC,wBAAiCA,QAAjC;AAAA,MAA2CC,aAA3C,wBAA2CA,aAA3C;;AAEA,MAAMC,GAAG,GAAGpB,MAAM,CAAC,IAAD,CAAlB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACZ,WAAOa,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACQ,GAAG,CAACC,OAAL,CAAtC;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAMC,YAAY,GAAGnB,OAAO,CACvBoB,MADgB,CACqB,2BADrB,EAEhBC,IAFgB,CAEX,UAAAC,EAAE;AAAA,WAAIA,EAAE,CAACC,OAAH,KAAeZ,YAAY,CAACY,OAAhC;AAAA,GAFS,CAArB;AAIA,MAAMC,kBAAkB,GAAG7B,WAAW,CAClC,UAAC8B,eAAD,EAA2C;AACvC,QAAMC,MAAM,GAAGf,YAAY,CAACe,MAAb,CAAoBC,MAApB,CAA2B,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACtDD,MAAAA,GAAG,CAACC,KAAK,CAACC,OAAP,CAAH,gBACI,oBAAC,kBAAD;AACI,QAAA,KAAK,EAAED,KADX;AAEI,QAAA,IAAI,EAAEJ,eAAe,CAACM,IAF1B;AAGI,QAAA,YAAY,EAAEpB;AAHlB,QADJ;AAQA,aAAOiB,GAAP;AACH,KAVc,EAUZ,EAVY,CAAf;AAWA,WAAOT,YAAY,CAACa,MAAb,iCAAyBP,eAAzB;AAA0Cd,MAAAA,YAAY,EAAZA,YAA1C;AAAwDe,MAAAA,MAAM,EAANA;AAAxD,OAAP;AACH,GAdiC,EAelC,CAACP,YAAD,CAfkC,CAAtC;AAkBA,sBACI,oBAAC,IAAD;AACI,IAAA,QAAQ,EAAEL,QADd;AAEI,IAAA,QAAQ,EAAEC,QAFd;AAGI,IAAA,IAAI,EAAEF,IAHV;AAII,IAAA,GAAG,EAAEI,GAJT;AAKI,IAAA,aAAa,EAAED;AALnB,KAOK,UAAAiB,SAAS;AAAA,wBACN,oBAAC,WAAD;AAAa,qBAAa;AAA1B,OACKrB,OAAO,iBAAI,oBAAC,gBAAD,OADhB,EAEKO,YAAY,GACTK,kBAAkB,CAACS,SAAD,CADT,gBAGT,oBAAC,MAAD;AACI,MAAA,YAAY,EAAEtB,YADlB;AAEI,MAAA,MAAM,EAAEA,YAAY,CAACe,MAFzB;AAGI,MAAA,MAAM,EAAEf,YAAY,CAACuB;AAHzB,OAIQD,SAJR,EALR,CADM;AAAA,GAPd,CADJ;AAyBH,CAzDM","sourcesContent":["import React, { useCallback, useEffect, useRef } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Form, FormRenderPropParams } from \"@webiny/form\";\nimport { plugins } from \"@webiny/plugins\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport RenderFieldElement from \"./RenderFieldElement\";\nimport { CmsContentFormRendererPlugin } from \"~/types\";\nimport { useContentEntryForm, UseContentEntryFormParams } from \"./useContentEntryForm\";\nimport { Fields } from \"./Fields\";\n\nconst FormWrapper = styled(\"div\")({\n    height: \"calc(100vh - 260px)\",\n    overflow: \"auto\"\n});\n\ninterface ContentEntryFormProps extends UseContentEntryFormParams {\n    onForm?: (form: Form) => void;\n}\n\nexport const ContentEntryForm = ({ onForm, ...props }: ContentEntryFormProps) => {\n    const { contentModel } = props;\n    const { loading, data, onChange, onSubmit, invalidFields } = useContentEntryForm(props);\n\n    const ref = useRef(null);\n\n    useEffect(() => {\n        typeof onForm === \"function\" && onForm(ref.current);\n    }, []);\n\n    const formRenderer = plugins\n        .byType<CmsContentFormRendererPlugin>(\"cms-content-form-renderer\")\n        .find(pl => pl.modelId === contentModel.modelId);\n\n    const renderCustomLayout = useCallback(\n        (formRenderProps: FormRenderPropParams) => {\n            const fields = contentModel.fields.reduce((acc, field) => {\n                acc[field.fieldId] = (\n                    <RenderFieldElement\n                        field={field}\n                        Bind={formRenderProps.Bind}\n                        contentModel={contentModel}\n                    />\n                );\n\n                return acc;\n            }, {});\n            return formRenderer.render({ ...formRenderProps, contentModel, fields });\n        },\n        [formRenderer]\n    );\n\n    return (\n        <Form\n            onChange={onChange}\n            onSubmit={onSubmit}\n            data={data}\n            ref={ref}\n            invalidFields={invalidFields}\n        >\n            {formProps => (\n                <FormWrapper data-testid={\"cms-content-form\"}>\n                    {loading && <CircularProgress />}\n                    {formRenderer ? (\n                        renderCustomLayout(formProps)\n                    ) : (\n                        <Fields\n                            contentModel={contentModel}\n                            fields={contentModel.fields}\n                            layout={contentModel.layout}\n                            {...formProps}\n                        />\n                    )}\n                </FormWrapper>\n            )}\n        </Form>\n    );\n};\n"],"file":"ContentEntryForm.js"}