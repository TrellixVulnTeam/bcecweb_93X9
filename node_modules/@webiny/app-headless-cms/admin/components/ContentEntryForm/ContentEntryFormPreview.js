import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import React, { useCallback } from "react";
import styled from "@emotion/styled";
import { Form } from "@webiny/form";
import { plugins } from "@webiny/plugins";
import RenderFieldElement from "./RenderFieldElement";
import { Fields } from "./Fields";
var FormWrapper = /*#__PURE__*/styled("div", {
  target: "eh1hbib0",
  label: "FormWrapper"
})({
  height: "calc(100vh - 260px)",
  overflow: "auto"
});
export var ContentEntryFormPreview = function ContentEntryFormPreview(props) {
  var contentModel = props.contentModel;
  var formRenderer = plugins.byType("cms-content-form-renderer").find(function (pl) {
    return pl.modelId === contentModel.modelId;
  });
  var renderCustomLayout = useCallback(function (formRenderProps) {
    var fields = contentModel.fields.reduce(function (acc, field) {
      acc[field.fieldId] = /*#__PURE__*/React.createElement(RenderFieldElement, {
        field: field,
        Bind: formRenderProps.Bind,
        contentModel: contentModel
      });
      return acc;
    }, {});
    return formRenderer.render(_objectSpread(_objectSpread({}, formRenderProps), {}, {
      contentModel: contentModel,
      fields: fields
    }));
  }, [formRenderer, contentModel.fields]);
  return /*#__PURE__*/React.createElement(Form, null, function (formProps) {
    return /*#__PURE__*/React.createElement(FormWrapper, {
      "data-testid": "cms-content-form"
    }, formRenderer ? renderCustomLayout(formProps) : /*#__PURE__*/React.createElement(Fields, Object.assign({
      contentModel: contentModel,
      fields: contentModel.fields,
      layout: contentModel.layout
    }, formProps)));
  });
};
//# sourceMappingURL=ContentEntryFormPreview.js.map