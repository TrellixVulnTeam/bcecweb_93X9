{"version":3,"sources":["../../../../../src/admin/components/FieldEditor/EditFieldDialog/GeneralTab.tsx"],"names":["React","useEffect","useCallback","useRef","useMemo","Input","Switch","Grid","Cell","validation","useFieldEditor","useContentModelEditor","GeneralTab","field","form","fieldPlugin","Bind","setValue","inputRef","data","getField","setTimeout","current","focus","afterChangeLabel","value","beforeChangeFieldId","baseOnChange","newValue","trim","fieldIdValidator","fieldId","toLowerCase","Error","undefined","uniqueFieldIdValidator","existingField","id","additionalSettings","renderSettings","contentModel","predefinedValuesEnabled","allowPredefinedValues","renderPredefinedValues","create","multipleValuesLabel","allowMultipleValues"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useRef, useMemo } from \"react\";\nimport { camelCase } from \"lodash\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Switch } from \"@webiny/ui/Switch\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { validation } from \"@webiny/validation\";\nimport { CmsEditorField, CmsEditorFieldTypePlugin } from \"~/types\";\nimport { FormRenderPropParams } from \"@webiny/form/Form\";\n\nimport { useFieldEditor } from \"~/admin/components/FieldEditor\";\nimport { useContentModelEditor } from \"~/admin/components/ContentModelEditor/useContentModelEditor\";\n\ntype GeneralTabProps = {\n    field: CmsEditorField;\n    form: FormRenderPropParams;\n    fieldPlugin: CmsEditorFieldTypePlugin;\n};\n\nconst GeneralTab = ({ field, form, fieldPlugin }: GeneralTabProps) => {\n    const { Bind, setValue } = form;\n    const inputRef = useRef(null);\n    const { data } = useContentModelEditor();\n    const { getField } = useFieldEditor();\n\n    // Had problems with auto-focusing the \"label\" field. A couple of comments on this.\n    // 1. It's probably caused by the Tabs component which wraps this component.\n    // 2. It seems that the \"autoFocus\" prop on the Input doesn't work. I can't see it attached in the actual DOM.\n    // 3. This works, but it's not 100%. Visually, the cursor is frozen, and that's probably caused by a bug / design\n    //    in the RMWC / Material library. If you were to click somewhere on screen, and then apply focus, then\n    //    it seems it's behaving correctly. ¯\\_(ツ)_/¯\n    useEffect(() => {\n        setTimeout(() => {\n            inputRef.current && inputRef.current.focus();\n        }, 200);\n    }, []);\n\n    const afterChangeLabel = useCallback(value => {\n        setValue(\"fieldId\", camelCase(value));\n    }, []);\n\n    const beforeChangeFieldId = useCallback((value, baseOnChange) => {\n        const newValue = value.trim();\n\n        baseOnChange(newValue);\n    }, []);\n\n    const fieldIdValidator = useCallback(fieldId => {\n        if (fieldId.trim().toLowerCase() !== \"id\") {\n            return true;\n        }\n\n        throw new Error(`Cannot use \"id\" as Field ID.`);\n    }, undefined);\n\n    const uniqueFieldIdValidator = useCallback(fieldId => {\n        const existingField = getField({ fieldId });\n        if (!existingField) {\n            return;\n        }\n\n        if (existingField.id === field.id) {\n            return true;\n        }\n        throw new Error(\"Please enter a unique Field ID.\");\n    }, undefined);\n\n    let additionalSettings = null;\n    if (typeof fieldPlugin.field.renderSettings === \"function\") {\n        additionalSettings = fieldPlugin.field.renderSettings({\n            form,\n            afterChangeLabel,\n            uniqueFieldIdValidator,\n            contentModel: data\n        });\n    }\n\n    const predefinedValuesEnabled = useMemo(\n        () =>\n            fieldPlugin.field.allowPredefinedValues &&\n            typeof fieldPlugin.field.renderPredefinedValues === \"function\",\n        [field.fieldId]\n    );\n\n    return (\n        <>\n            <Grid>\n                <Cell span={6}>\n                    <Bind\n                        name={\"label\"}\n                        validators={validation.create(\"required\")}\n                        afterChange={!field.id && afterChangeLabel}\n                    >\n                        <Input label={\"Label\"} inputRef={inputRef} />\n                    </Bind>\n                </Cell>\n                <Cell span={6}>\n                    <Bind\n                        name={\"fieldId\"}\n                        validators={[\n                            validation.create(\"required\"),\n                            uniqueFieldIdValidator,\n                            fieldIdValidator\n                        ]}\n                        beforeChange={beforeChangeFieldId}\n                    >\n                        <Input label={\"Field ID\"} disabled={!!field.id} />\n                    </Bind>\n                </Cell>\n\n                <Cell span={6}>\n                    <Bind name={\"multipleValues\"}>\n                        <Switch\n                            label={fieldPlugin.field.multipleValuesLabel}\n                            disabled={!fieldPlugin.field.allowMultipleValues}\n                        />\n                    </Bind>\n                </Cell>\n                <Cell span={6}>\n                    <Bind name={\"predefinedValues.enabled\"}>\n                        <Switch\n                            label={\"Use predefined values\"}\n                            disabled={!predefinedValuesEnabled}\n                        />\n                    </Bind>\n                </Cell>\n\n                <Cell span={12}>\n                    <Bind name={\"helpText\"}>\n                        <Input label={\"Help text\"} description={\"Help text (optional)\"} />\n                    </Bind>\n                </Cell>\n            </Grid>\n            {additionalSettings}\n        </>\n    );\n};\n\nexport default GeneralTab;\n"],"file":"GeneralTab.js"}