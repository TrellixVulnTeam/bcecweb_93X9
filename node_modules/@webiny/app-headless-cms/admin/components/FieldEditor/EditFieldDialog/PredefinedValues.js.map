{"version":3,"sources":["../../../../../src/admin/components/FieldEditor/EditFieldDialog/PredefinedValues.tsx"],"names":["React","useCallback","useRef","cloneElement","getValue","setValue","PredefinedValues","field","fieldPlugin","form","memoizedBindComponents","BaseFormBind","Bind","getBind","index","memoKey","current","children","name","bind","props","value","onChange","renderPredefinedValues"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,YAArC,QAAyD,OAAzD;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,gBAAT,OAAwD;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,WAAqB,QAArBA,WAAqB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACnE,MAAMC,sBAAsB,GAAGR,MAAM,CAAC,EAAD,CAArC;AACA,MAAcS,YAAd,GAA+BF,IAA/B,CAAQG,IAAR;AAEA,MAAMC,OAAO,GAAGZ,WAAW,CAAC,YAAgB;AAAA,QAAfa,KAAe,uEAAP,CAAC,CAAM;AACxC,QAAMC,OAAO,GAAGD,KAAhB;;AACA,QAAIJ,sBAAsB,CAACM,OAAvB,CAA+BD,OAA/B,CAAJ,EAA6C;AACzC,aAAOL,sBAAsB,CAACM,OAAvB,CAA+BD,OAA/B,CAAP;AACH;;AAEDL,IAAAA,sBAAsB,CAACM,OAAvB,CAA+BD,OAA/B,IAA0C,SAASH,IAAT,QAAkC;AAAA,UAAlBK,QAAkB,SAAlBA,QAAkB;AAAA,UAARC,IAAQ,SAARA,IAAQ;AACxE,0BACI,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAE;AAApB,SACK,UAAAC,IAAI,EAAI;AACL,YAAMC,KAAK,mCACJD,IADI;AAEPE,UAAAA,KAAK,EAAEjB,QAAQ,CAAC;AAAEe,YAAAA,IAAI,EAAJA,IAAF;AAAQL,YAAAA,KAAK,EAALA,KAAR;AAAeI,YAAAA,IAAI,EAAJA;AAAf,WAAD,CAFR;AAGPI,UAAAA,QAAQ,EAAE,kBAAAD,KAAK,EAAI;AACfhB,YAAAA,QAAQ,CAAC;AAAEgB,cAAAA,KAAK,EAALA,KAAF;AAASF,cAAAA,IAAI,EAAJA,IAAT;AAAeL,cAAAA,KAAK,EAALA,KAAf;AAAsBI,cAAAA,IAAI,EAAJA;AAAtB,aAAD,CAAR;AACH;AALM,UAAX;;AAQA,YAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAChC,iBAAOA,QAAQ,CAACG,KAAD,CAAf;AACH;;AAED,4BAAOjB,YAAY,CAACc,QAAD,EAAWG,KAAX,CAAnB;AACH,OAfL,CADJ;AAmBH,KApBD;;AAsBA,WAAOV,sBAAsB,CAACM,OAAvB,CAA+BD,OAA/B,CAAP;AACH,GA7B0B,EA6BxB,EA7BwB,CAA3B;AA+BA,SAAOP,WAAW,CAACD,KAAZ,CAAkBgB,sBAAlB,CAAyC;AAAEhB,IAAAA,KAAK,EAALA,KAAF;AAASM,IAAAA,OAAO,EAAPA;AAAT,GAAzC,CAAP;AACH","sourcesContent":["import React, { useCallback, useRef, cloneElement } from \"react\";\nimport getValue from \"./functions/getValue\";\nimport setValue from \"./functions/setValue\";\n\nexport default function PredefinedValues({ field, fieldPlugin, form }) {\n    const memoizedBindComponents = useRef({});\n    const { Bind: BaseFormBind } = form;\n\n    const getBind = useCallback((index = -1) => {\n        const memoKey = index;\n        if (memoizedBindComponents.current[memoKey]) {\n            return memoizedBindComponents.current[memoKey];\n        }\n\n        memoizedBindComponents.current[memoKey] = function Bind({ children, name }) {\n            return (\n                <BaseFormBind name={\"predefinedValues.values\"}>\n                    {bind => {\n                        const props = {\n                            ...bind,\n                            value: getValue({ bind, index, name }),\n                            onChange: value => {\n                                setValue({ value, bind, index, name });\n                            }\n                        };\n\n                        if (typeof children === \"function\") {\n                            return children(props);\n                        }\n\n                        return cloneElement(children, props);\n                    }}\n                </BaseFormBind>\n            );\n        };\n\n        return memoizedBindComponents.current[memoKey];\n    }, []);\n\n    return fieldPlugin.field.renderPredefinedValues({ field, getBind });\n}\n"],"file":"PredefinedValues.js"}