import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;

import _regeneratorRuntime from "@babel/runtime/regenerator";
import React, { Fragment, useCallback } from "react";
import { css } from "emotion";
import styled from "@emotion/styled";
import { IconButton } from "@webiny/ui/Button";
import { Typography } from "@webiny/ui/Typography";
import { ReactComponent as EditIcon } from "@svgr/webpack!../../icons/edit.svg";
import { ReactComponent as DeleteIcon } from "@svgr/webpack!../../icons/delete.svg";
import { ReactComponent as TitleIcon } from "@svgr/webpack!../../icons/title-24px.svg";
import { ReactComponent as MoreVerticalIcon } from "@svgr/webpack!../../icons/more_vert.svg";
import { Menu, MenuItem } from "@webiny/ui/Menu";
import { plugins } from "@webiny/plugins";
import { ListItemGraphic } from "@webiny/ui/List";
import { Icon } from "@webiny/ui/Icon";
import { i18n } from "@webiny/app/i18n";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { useContentModelEditor } from "../ContentModelEditor/useContentModelEditor";
import { useFieldEditor } from "./useFieldEditor";
var t = i18n.ns("app-headless-cms/admin/components/editor/field");
var FieldContainer = /*#__PURE__*/styled("div", {
  target: "erv8xml0",
  label: "FieldContainer"
})({
  display: "flex",
  flexDirection: "row",
  justifyContent: "space-between",
  alignItems: "center"
});
var Info = /*#__PURE__*/styled("div", {
  target: "erv8xml1",
  label: "Info"
})({
  display: "flex",
  flexDirection: "column",
  "> *": {
    flex: "1 100%",
    lineHeight: "150%"
  }
});
var Actions = /*#__PURE__*/styled("div", {
  target: "erv8xml2",
  label: "Actions"
})({
  display: "flex",
  flexDirection: "row",
  alignItems: "right",
  "> *": {
    flex: "1 100%"
  }
});
var menuStyles = /*#__PURE__*/css({
  width: 220,
  right: -105,
  left: "auto !important",
  ".disabled": {
    opacity: 0.5,
    pointerEvents: "none"
  }
}, "label:menuStyles;");
var allowedTitleFieldTypes = ["text", "number"];

var isFieldAllowedToBeTitle = function isFieldAllowedToBeTitle(field, parent) {
  if (field.multipleValues || parent) {
    return false;
  } else if (allowedTitleFieldTypes.includes(field.type) === false) {
    return false;
  }

  return true;
};

var Field = function Field(props) {
  var field = props.field,
      onEdit = props.onEdit,
      parent = props.parent;

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var _useContentModelEdito = useContentModelEditor(),
      setData = _useContentModelEdito.setData,
      data = _useContentModelEdito.data;

  var _useFieldEditor = useFieldEditor(),
      getFieldPlugin = _useFieldEditor.getFieldPlugin;

  var onDelete = useCallback(function () {
    props.onDelete(field);
  }, [field.fieldId]);
  var setAsTitle = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
    var response;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return setData(function (data) {
              return _objectSpread(_objectSpread({}, data), {}, {
                titleFieldId: field.fieldId
              });
            });

          case 2:
            response = _context.sent;

            if (!response.error) {
              _context.next = 5;
              break;
            }

            return _context.abrupt("return", showSnackbar(response.error.message));

          case 5:
            showSnackbar(t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Title field set successfully."]))));

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })), [field.fieldId]);
  var fieldPlugin = getFieldPlugin(field.type);
  var editorFieldOptionPlugins = plugins.byType("cms-editor-field-option");

  if (!fieldPlugin) {
    return null;
  }

  var lockedFields = data.lockedFields || [];
  return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(FieldContainer, null, /*#__PURE__*/React.createElement(Info, null, /*#__PURE__*/React.createElement(Typography, {
    use: "subtitle1"
  }, field.label), /*#__PURE__*/React.createElement(Typography, {
    use: "caption"
  }, fieldPlugin.field.label, " ", field.multipleValues && /*#__PURE__*/React.createElement(React.Fragment, null, "(", t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["multiple values"]))), ")"), field.fieldId === data.titleFieldId && /*#__PURE__*/React.createElement(React.Fragment, null, "(", t(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["entry title"]))), ")"))), /*#__PURE__*/React.createElement(Actions, null, /*#__PURE__*/React.createElement(IconButton, {
    "data-testid": "cms.editor.edit-field",
    icon: /*#__PURE__*/React.createElement(EditIcon, null),
    onClick: function onClick() {
      return onEdit(field);
    }
  }), /*#__PURE__*/React.createElement(Menu, {
    className: menuStyles,
    handle: /*#__PURE__*/React.createElement(IconButton, {
      icon: /*#__PURE__*/React.createElement(MoreVerticalIcon, null)
    })
  }, editorFieldOptionPlugins.map(function (pl) {
    return /*#__PURE__*/React.cloneElement(pl.render(), {
      key: pl.name
    });
  }), /*#__PURE__*/React.createElement(MenuItem, {
    disabled: !isFieldAllowedToBeTitle(field, parent),
    onClick: setAsTitle
  }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
    icon: /*#__PURE__*/React.createElement(TitleIcon, null)
  })), t(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["Use as title"])))), /*#__PURE__*/React.createElement(MenuItem, {
    disabled: lockedFields.some(function (lockedField) {
      return lockedField.fieldId === field.fieldId;
    }),
    onClick: onDelete
  }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
    icon: /*#__PURE__*/React.createElement(DeleteIcon, null)
  })), lockedFields.find(function (lockedField) {
    return lockedField.fieldId === field.fieldId;
  }) ? t(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["Cannot delete"]))) : t(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["Delete"]))))))), /*#__PURE__*/React.createElement("div", {
    className: "field-extra"
  }, fieldPlugin.field.render && fieldPlugin.field.render({
    field: field,
    data: data,
    setData: setData
  })));
};

export default /*#__PURE__*/React.memo(Field);
//# sourceMappingURL=Field.js.map