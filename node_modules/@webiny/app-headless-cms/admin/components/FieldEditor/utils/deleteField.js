import dot from "dot-prop-immutable";
export default (function (_ref) {
  var field = _ref.field,
      data = _ref.data;
  // Remove the field from fields list...
  var fieldIndex = data.fields.findIndex(function (item) {
    return item.id === field.id;
  });
  data = dot.delete(data, "fields.".concat(fieldIndex)); // ...and rebuild the layout object.

  return dot.set(data, "layout", function (layout) {
    var newLayout = [];
    var currentRowIndex = 0;
    layout.forEach(function (row) {
      row.forEach(function (fieldId) {
        var field = data.fields.find(function (item) {
          return item.id === fieldId;
        });

        if (!field) {
          return true;
        }

        if (!Array.isArray(newLayout[currentRowIndex])) {
          newLayout[currentRowIndex] = [];
        }

        newLayout[currentRowIndex].push(fieldId);
      });
      newLayout[currentRowIndex] && newLayout[currentRowIndex].length && currentRowIndex++;
    });
    return newLayout;
  });
});
//# sourceMappingURL=deleteField.js.map