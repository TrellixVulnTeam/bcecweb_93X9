{"version":3,"sources":["../../../../../src/admin/components/FieldEditor/utils/deleteField.ts"],"names":["dot","field","data","fieldIndex","fields","findIndex","item","id","delete","set","layout","newLayout","currentRowIndex","forEach","row","fieldId","find","Array","isArray","push","length"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,oBAAhB;AAQA,gBAAe,gBAA4D;AAAA,MAAzDC,KAAyD,QAAzDA,KAAyD;AAAA,MAAlDC,IAAkD,QAAlDA,IAAkD;AACvE;AACA,MAAMC,UAAU,GAAGD,IAAI,CAACE,MAAL,CAAYC,SAAZ,CAAsB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,EAAL,KAAYN,KAAK,CAACM,EAAtB;AAAA,GAA1B,CAAnB;AACAL,EAAAA,IAAI,GAAGF,GAAG,CAACQ,MAAJ,CAAWN,IAAX,mBAA2BC,UAA3B,EAAP,CAHuE,CAKvE;;AACA,SAAOH,GAAG,CAACS,GAAJ,CAAQP,IAAR,EAAc,QAAd,EAAwB,UAAAQ,MAAM,EAAI;AACrC,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAIC,eAAe,GAAG,CAAtB;AACAF,IAAAA,MAAM,CAACG,OAAP,CAAe,UAAAC,GAAG,EAAI;AAClBA,MAAAA,GAAG,CAACD,OAAJ,CAAY,UAAAE,OAAO,EAAI;AACnB,YAAMd,KAAK,GAAGC,IAAI,CAACE,MAAL,CAAYY,IAAZ,CAAiB,UAAAV,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAL,KAAYQ,OAAhB;AAAA,SAArB,CAAd;;AACA,YAAI,CAACd,KAAL,EAAY;AACR,iBAAO,IAAP;AACH;;AACD,YAAI,CAACgB,KAAK,CAACC,OAAN,CAAcP,SAAS,CAACC,eAAD,CAAvB,CAAL,EAAgD;AAC5CD,UAAAA,SAAS,CAACC,eAAD,CAAT,GAA6B,EAA7B;AACH;;AAEDD,QAAAA,SAAS,CAACC,eAAD,CAAT,CAA2BO,IAA3B,CAAgCJ,OAAhC;AACH,OAVD;AAWAJ,MAAAA,SAAS,CAACC,eAAD,CAAT,IAA8BD,SAAS,CAACC,eAAD,CAAT,CAA2BQ,MAAzD,IAAmER,eAAe,EAAlF;AACH,KAbD;AAeA,WAAOD,SAAP;AACH,GAnBM,CAAP;AAoBH,CA1BD","sourcesContent":["import dot from \"dot-prop-immutable\";\nimport { CmsEditorField, CmsEditorFieldsLayout } from \"~/types\";\n\ninterface Data {\n    fields: CmsEditorField[];\n    layout: CmsEditorFieldsLayout;\n}\n\nexport default ({ field, data }: { field: CmsEditorField; data: Data }) => {\n    // Remove the field from fields list...\n    const fieldIndex = data.fields.findIndex(item => item.id === field.id);\n    data = dot.delete(data, `fields.${fieldIndex}`) as Data;\n\n    // ...and rebuild the layout object.\n    return dot.set(data, \"layout\", layout => {\n        const newLayout = [];\n        let currentRowIndex = 0;\n        layout.forEach(row => {\n            row.forEach(fieldId => {\n                const field = data.fields.find(item => item.id === fieldId);\n                if (!field) {\n                    return true;\n                }\n                if (!Array.isArray(newLayout[currentRowIndex])) {\n                    newLayout[currentRowIndex] = [];\n                }\n\n                newLayout[currentRowIndex].push(fieldId);\n            });\n            newLayout[currentRowIndex] && newLayout[currentRowIndex].length && currentRowIndex++;\n        });\n\n        return newLayout;\n    });\n};\n"],"file":"deleteField.js"}