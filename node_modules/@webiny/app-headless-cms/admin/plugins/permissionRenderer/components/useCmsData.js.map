{"version":3,"sources":["../../../../../src/admin/plugins/permissionRenderer/components/useCmsData.ts"],"names":["useEffect","useReducer","gql","useCms","LIST_DATA","useCmsData","locales","getApolloClient","prev","next","state","setState","loadData","i","code","client","query","then","data","models","listContentModels","groups","listContentModelGroups","length","sort","join","reduce","acc"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,MAAT;AAEA,IAAMC,SAAS,GAAGF,GAAH,6dAAf;AAqBA,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAuB;AAC7C,gBAA4BH,MAAM,EAAlC;AAAA,MAAQI,eAAR,WAAQA,eAAR;;AACA,oBAA0BN,UAAU,CAAC,UAACO,IAAD,EAAOC,IAAP;AAAA,2CAAsBD,IAAtB,GAA+BC,IAA/B;AAAA,GAAD,EAAyC,EAAzC,CAApC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,QAAQ;AAAA,wEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qCACJC,CADI;AAET,oBAAMC,IAAI,GAAGR,OAAO,CAACO,CAAD,CAApB;AAEA,oBAAME,MAAM,GAAGR,eAAe,CAACO,IAAD,CAA9B;;AAEA,oBAAI,CAACJ,KAAK,CAACI,IAAD,CAAV,EAAkB;AACdC,kBAAAA,MAAM,CAACC,KAAP,CAAa;AAAEA,oBAAAA,KAAK,EAAEZ;AAAT,mBAAb,EAAmCa,IAAnC,CAAwC,iBAAc;AAAA,wBAAXC,IAAW,SAAXA,IAAW;AAClD,wBAAMC,MAAM,GAAGD,IAAI,CAACE,iBAAL,CAAuBF,IAAtC;AACA,wBAAMG,MAAM,GAAGH,IAAI,CAACI,sBAAL,CAA4BJ,IAA3C;AACAP,oBAAAA,QAAQ,iCAAMD,KAAN,2BAAcI,IAAd,EAAqB;AAAEK,sBAAAA,MAAM,EAANA,MAAF;AAAUE,sBAAAA,MAAM,EAANA;AAAV,qBAArB,GAAR;AACH,mBAJD;AAKH;AAZQ;;AACb,mBAASR,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGP,OAAO,CAACiB,MAA5B,EAAoCV,CAAC,EAArC,EAAyC;AAAA,sBAAhCA,CAAgC;AAYxC;;AAbY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARD,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAgBAZ,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACN,OAAO,CAACkB,IAAR,GAAeC,IAAf,CAAoB,GAApB,CAAD,CAFM,CAAT;AAIA,SAAOnB,OAAO,CAACoB,MAAR,CAAe,UAACC,GAAD,EAAMb,IAAN,EAAe;AACjCa,IAAAA,GAAG,CAACb,IAAD,CAAH,GAAYJ,KAAK,CAACI,IAAD,CAAL,IAAe;AAAEK,MAAAA,MAAM,EAAE,EAAV;AAAcE,MAAAA,MAAM,EAAE;AAAtB,KAA3B;AACA,WAAOM,GAAP;AACH,GAHM,EAGJ,EAHI,CAAP;AAIH,CA5BM","sourcesContent":["import { useEffect, useReducer } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useCms } from \"../../../hooks\";\n\nconst LIST_DATA = gql`\n    query CmsLoadPermissionsData {\n        listContentModels {\n            data {\n                id: modelId\n                label: name\n                group {\n                    id\n                    label: name\n                }\n            }\n        }\n        listContentModelGroups {\n            data {\n                id\n                label: name\n            }\n        }\n    }\n`;\n\nexport const useCmsData = (locales: string[]) => {\n    const { getApolloClient } = useCms();\n    const [state, setState] = useReducer((prev, next) => ({ ...prev, ...next }), {});\n\n    const loadData = async () => {\n        for (let i = 0; i < locales.length; i++) {\n            const code = locales[i];\n\n            const client = getApolloClient(code);\n\n            if (!state[code]) {\n                client.query({ query: LIST_DATA }).then(({ data }) => {\n                    const models = data.listContentModels.data;\n                    const groups = data.listContentModelGroups.data;\n                    setState({ ...state, [code]: { models, groups } });\n                });\n            }\n        }\n    };\n\n    useEffect(() => {\n        loadData();\n    }, [locales.sort().join(\":\")]);\n\n    return locales.reduce((acc, code) => {\n        acc[code] = state[code] || { models: [], groups: [] };\n        return acc;\n    }, {});\n};\n"],"file":"useCmsData.js"}