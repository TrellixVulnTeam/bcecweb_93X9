{"version":3,"sources":["../../../../../src/admin/plugins/permissionRenderer/components/PermissionSelector.tsx"],"names":["React","Fragment","i18n","Checkbox","CheckboxGroup","Cell","FormElementMessage","t","ns","DefaultRenderItems","items","getValue","onChange","map","id","label","PermissionSelector","Bind","entity","locales","selectorKey","getItems","RenderItems","description","code","length","PermissionSelectorWrapper","children"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,qBAAxC;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,SAASC,kBAAT,QAAmC,+BAAnC;AAEA,IAAMC,CAAC,GAAGL,IAAI,CAACM,EAAL,CAAQ,mDAAR,CAAV;;AAkCA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAqD;AAAA,MAAlDC,KAAkD,QAAlDA,KAAkD;AAAA,MAA3CC,QAA2C,QAA3CA,QAA2C;AAAA,MAAjCC,QAAiC,QAAjCA,QAAiC;AAC5E,sBACI,oBAAC,KAAD,CAAO,QAAP,QACKF,KAAK,CAACG,GAAN,CAAU;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,KAAP,SAAOA,KAAP;AAAA,wBACP;AAAK,MAAA,GAAG,EAAED;AAAV,oBACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,EAAf;AAAmB,MAAA,KAAK,EAAEC,KAA1B;AAAiC,MAAA,KAAK,EAAEJ,QAAQ,CAACG,EAAD,CAAhD;AAAsD,MAAA,QAAQ,EAAEF,QAAQ,CAACE,EAAD;AAAxE,MADJ,CADO;AAAA,GAAV,CADL,CADJ;AASH,CAVD;;AAYA,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,QAOH;AAAA,MAN3BC,IAM2B,SAN3BA,IAM2B;AAAA,MAL3BC,MAK2B,SAL3BA,MAK2B;AAAA,MAJ3BC,OAI2B,SAJ3BA,OAI2B;AAAA,MAH3BC,WAG2B,SAH3BA,WAG2B;AAAA,MAF3BC,QAE2B,SAF3BA,QAE2B;AAAA,gCAD3BC,WAC2B;AAAA,MAD3BA,WAC2B,kCADbb,kBACa;AAC3B,MAAMc,WAAW,GAAGhB,CAAC,6HAAD,CAA4D;AAC5Ea,IAAAA,WAAW,EAAXA;AAD4E,GAA5D,CAApB;AAIA,sBACI,oBAAC,QAAD,QACKD,OAAO,CAACN,GAAR,CAAY,UAAAW,IAAI,EAAI;AACjB,QAAMd,KAAK,GAAGW,QAAQ,CAACG,IAAD,CAAtB;AAEA,wBACI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAX;AAAiB,MAAA,IAAI,YAAKN,MAAL,mBAAoBE,WAApB,cAAmCI,IAAnC;AAArB,OACKd,KAAK,CAACe,MAAN,iBACG,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAED;AAAtB,OACK;AAAA,UAAGZ,QAAH,SAAGA,QAAH;AAAA,UAAaD,QAAb,SAAaA,QAAb;AAAA,0BACG,oBAAC,WAAD;AACI,QAAA,KAAK,EAAED,KADX;AAEI,QAAA,QAAQ,EAAEE,QAFd;AAGI,QAAA,QAAQ,EAAED;AAHd,QADH;AAAA,KADL,CAFR,CADJ;AAeH,GAlBA,CADL,eAoBI,oBAAC,kBAAD,QAAqBY,WAArB,CApBJ,CADJ;AAwBH,CApCM;AAsCP,OAAO,IAAMG,yBAAyB,GAAG,SAA5BA,yBAA4B;AAAA,MAAGC,QAAH,SAAGA,QAAH;AAAA,sBACrC,oBAAC,QAAD,qBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,KAAiBA,QAAjB,CAFJ,CADqC;AAAA,CAAlC","sourcesContent":["import React, { Fragment } from \"react\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { Checkbox, CheckboxGroup } from \"@webiny/ui/Checkbox\";\nimport { Cell } from \"@webiny/ui/Grid\";\nimport { BindComponent } from \"@webiny/form\";\nimport { FormElementMessage } from \"@webiny/ui/FormElementMessage\";\n\nconst t = i18n.ns(\"app-headless-cms/admin/plugins/permissionRenderer\");\n\nexport type PermissionSelectorCheckList = {\n    id: string;\n    name: string;\n};\n\ntype Model = {\n    id: string;\n    label: string;\n    [key: string]: any;\n};\n\ntype Group = {\n    id: string;\n    label: string;\n    [key: string]: any;\n};\n\ntype RenderItemsProps = {\n    onChange: Function;\n    getValue: Function;\n    items: Model[] | Group[];\n};\n\nexport type PermissionSelectorProps = {\n    Bind: BindComponent;\n    selectorKey: string;\n    locales: string[];\n    entity: string;\n    getItems: (code: string) => Model[] | Group[];\n    RenderItems?: React.FunctionComponent<RenderItemsProps>;\n};\n\nconst DefaultRenderItems = ({ items, getValue, onChange }: RenderItemsProps) => {\n    return (\n        <React.Fragment>\n            {items.map(({ id, label }) => (\n                <div key={id}>\n                    <Checkbox key={id} label={label} value={getValue(id)} onChange={onChange(id)} />\n                </div>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport const PermissionSelector = ({\n    Bind,\n    entity,\n    locales,\n    selectorKey,\n    getItems,\n    RenderItems = DefaultRenderItems\n}: PermissionSelectorProps) => {\n    const description = t`Select the {selectorKey} user will be allowed to access.`({\n        selectorKey\n    });\n\n    return (\n        <Fragment>\n            {locales.map(code => {\n                const items = getItems(code);\n\n                return (\n                    <Bind key={code} name={`${entity}Props.${selectorKey}.${code}`}>\n                        {items.length && (\n                            <CheckboxGroup label={code}>\n                                {({ onChange, getValue }) => (\n                                    <RenderItems\n                                        items={items}\n                                        onChange={onChange}\n                                        getValue={getValue}\n                                    />\n                                )}\n                            </CheckboxGroup>\n                        )}\n                    </Bind>\n                );\n            })}\n            <FormElementMessage>{description}</FormElementMessage>\n        </Fragment>\n    );\n};\n\nexport const PermissionSelectorWrapper = ({ children }) => (\n    <Fragment>\n        <Cell span={1} />\n        <Cell span={11}>{children}</Cell>\n    </Fragment>\n);\n"],"file":"PermissionSelector.js"}