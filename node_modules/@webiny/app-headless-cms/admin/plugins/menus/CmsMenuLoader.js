import React, { useEffect } from "react";
import { NavigationMenuElement } from "@webiny/app-admin/ui/elements/NavigationMenuElement";
import { ReactComponent as HeadlessCmsIcon } from "@svgr/webpack!../../icons/devices_other-black-24px.svg";
import GlobalSearchPlugins from "./GlobalSearchPlugins";
import usePermission from "../../hooks/usePermission";
import { ContentGroupsMenuItems } from "./ContentGroupsMenuItems";
import { ContentGroupMenuElement } from "../../elements/ContentGroupMenuElement";
export var CmsMenuLoader = /*#__PURE__*/React.memo(function (_ref) {
  var view = _ref.view;

  var _usePermission = usePermission(),
      canAccessManageEndpoint = _usePermission.canAccessManageEndpoint,
      canReadContentModels = _usePermission.canReadContentModels,
      canReadContentModelGroups = _usePermission.canReadContentModelGroups,
      canCreateContentModels = _usePermission.canCreateContentModels,
      canCreateContentModelGroups = _usePermission.canCreateContentModelGroups;

  var hasAccess = canAccessManageEndpoint && (canReadContentModels || canReadContentModelGroups);
  useEffect(function () {
    if (!hasAccess) {
      return;
    }
    /**
     * Create the main "Headless CMS" menu group.
     */


    var mainMenu = view.addAppMenuElement(new NavigationMenuElement("headlessCms.mainMenu", {
      label: "Headless CMS",
      icon: /*#__PURE__*/React.createElement(HeadlessCmsIcon, null)
    }));
    mainMenu.addSorter(function (a, b) {
      if (a instanceof ContentGroupMenuElement && b instanceof NavigationMenuElement) {
        return 1;
      }

      if (a instanceof NavigationMenuElement && b instanceof ContentGroupMenuElement) {
        return -1;
      }

      return 0;
    });
    /**
     * Add "Content Models" section if the user can create either models or groups.
     */

    if (canCreateContentModels || canCreateContentModelGroups) {
      var contentModelsMenu = mainMenu.addElement(new NavigationMenuElement("headlessCms.contentModels", {
        label: "Content Models"
      }));

      if (canCreateContentModels) {
        contentModelsMenu.addElement(new NavigationMenuElement("headlessCms.contentModels.models", {
          label: "Models",
          path: "/cms/content-models"
        }));
      }

      if (canCreateContentModelGroups) {
        contentModelsMenu.addElement(new NavigationMenuElement("headlessCms.contentModels.groups", {
          label: "Groups",
          path: "/cms/content-model-groups"
        }));
      }
    }
  }, []);

  if (!hasAccess) {
    return null;
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalSearchPlugins, null), /*#__PURE__*/React.createElement(ContentGroupsMenuItems, {
    view: view
  }));
});
CmsMenuLoader.displayName = "CmsMenuLoader";
//# sourceMappingURL=CmsMenuLoader.js.map