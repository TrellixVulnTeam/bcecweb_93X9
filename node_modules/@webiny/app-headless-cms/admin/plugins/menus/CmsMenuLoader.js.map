{"version":3,"sources":["../../../../src/admin/plugins/menus/CmsMenuLoader.tsx"],"names":["React","useEffect","NavigationMenuElement","GlobalSearchPlugins","usePermission","ContentGroupsMenuItems","ContentGroupMenuElement","CmsMenuLoader","memo","view","canAccessManageEndpoint","canReadContentModels","canReadContentModelGroups","canCreateContentModels","canCreateContentModelGroups","hasAccess","mainMenu","addAppMenuElement","label","icon","addSorter","a","b","contentModelsMenu","addElement","path","displayName"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,qBAAT,QAAsC,qDAAtC;;AAEA,OAAOC,mBAAP;AACA,OAAOC,aAAP;AACA,SAASC,sBAAT;AACA,SAASC,uBAAT;AAMA,OAAO,IAAMC,aAAa,gBAAGP,KAAK,CAACQ,IAAN,CAAW,gBAAqB;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;;AACzD,uBAMIL,aAAa,EANjB;AAAA,MACIM,uBADJ,kBACIA,uBADJ;AAAA,MAEIC,oBAFJ,kBAEIA,oBAFJ;AAAA,MAGIC,yBAHJ,kBAGIA,yBAHJ;AAAA,MAIIC,sBAJJ,kBAIIA,sBAJJ;AAAA,MAKIC,2BALJ,kBAKIA,2BALJ;;AAQA,MAAMC,SAAS,GACXL,uBAAuB,KAAKC,oBAAoB,IAAIC,yBAA7B,CAD3B;AAGAX,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACc,SAAL,EAAgB;AACZ;AACH;AAED;AACR;AACA;;;AACQ,QAAMC,QAAQ,GAAGP,IAAI,CAACQ,iBAAL,CACb,IAAIf,qBAAJ,CAA0B,sBAA1B,EAAkD;AAC9CgB,MAAAA,KAAK,EAAE,cADuC;AAE9CC,MAAAA,IAAI,eAAE,oBAAC,eAAD;AAFwC,KAAlD,CADa,CAAjB;AAOAH,IAAAA,QAAQ,CAACI,SAAT,CAAmB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACzB,UAAID,CAAC,YAAYf,uBAAb,IAAwCgB,CAAC,YAAYpB,qBAAzD,EAAgF;AAC5E,eAAO,CAAP;AACH;;AAED,UAAImB,CAAC,YAAYnB,qBAAb,IAAsCoB,CAAC,YAAYhB,uBAAvD,EAAgF;AAC5E,eAAO,CAAC,CAAR;AACH;;AAED,aAAO,CAAP;AACH,KAVD;AAYA;AACR;AACA;;AACQ,QAAIO,sBAAsB,IAAIC,2BAA9B,EAA2D;AACvD,UAAMS,iBAAiB,GAAGP,QAAQ,CAACQ,UAAT,CACtB,IAAItB,qBAAJ,CAA0B,2BAA1B,EAAuD;AACnDgB,QAAAA,KAAK,EAAE;AAD4C,OAAvD,CADsB,CAA1B;;AAMA,UAAIL,sBAAJ,EAA4B;AACxBU,QAAAA,iBAAiB,CAACC,UAAlB,CACI,IAAItB,qBAAJ,CAA0B,kCAA1B,EAA8D;AAC1DgB,UAAAA,KAAK,EAAE,QADmD;AAE1DO,UAAAA,IAAI,EAAE;AAFoD,SAA9D,CADJ;AAMH;;AAED,UAAIX,2BAAJ,EAAiC;AAC7BS,QAAAA,iBAAiB,CAACC,UAAlB,CACI,IAAItB,qBAAJ,CAA0B,kCAA1B,EAA8D;AAC1DgB,UAAAA,KAAK,EAAE,QADmD;AAE1DO,UAAAA,IAAI,EAAE;AAFoD,SAA9D,CADJ;AAMH;AACJ;AACJ,GAvDQ,EAuDN,EAvDM,CAAT;;AAyDA,MAAI,CAACV,SAAL,EAAgB;AACZ,WAAO,IAAP;AACH;;AAED,sBACI,uDACI,oBAAC,mBAAD,OADJ,eAEI,oBAAC,sBAAD;AAAwB,IAAA,IAAI,EAAEN;AAA9B,IAFJ,CADJ;AAMH,CA/E4B,CAAtB;AAiFPF,aAAa,CAACmB,WAAd,GAA4B,eAA5B","sourcesContent":["import React, { useEffect } from \"react\";\nimport { NavigationView } from \"@webiny/app-admin/ui/views/NavigationView\";\nimport { NavigationMenuElement } from \"@webiny/app-admin/ui/elements/NavigationMenuElement\";\nimport { ReactComponent as HeadlessCmsIcon } from \"~/admin/icons/devices_other-black-24px.svg\";\nimport GlobalSearchPlugins from \"./GlobalSearchPlugins\";\nimport usePermission from \"~/admin/hooks/usePermission\";\nimport { ContentGroupsMenuItems } from \"./ContentGroupsMenuItems\";\nimport { ContentGroupMenuElement } from \"~/admin/elements/ContentGroupMenuElement\";\n\ninterface Props {\n    view: NavigationView;\n}\n\nexport const CmsMenuLoader = React.memo(({ view }: Props) => {\n    const {\n        canAccessManageEndpoint,\n        canReadContentModels,\n        canReadContentModelGroups,\n        canCreateContentModels,\n        canCreateContentModelGroups\n    } = usePermission();\n\n    const hasAccess =\n        canAccessManageEndpoint && (canReadContentModels || canReadContentModelGroups);\n\n    useEffect(() => {\n        if (!hasAccess) {\n            return;\n        }\n\n        /**\n         * Create the main \"Headless CMS\" menu group.\n         */\n        const mainMenu = view.addAppMenuElement(\n            new NavigationMenuElement(\"headlessCms.mainMenu\", {\n                label: \"Headless CMS\",\n                icon: <HeadlessCmsIcon />\n            })\n        );\n\n        mainMenu.addSorter((a, b) => {\n            if (a instanceof ContentGroupMenuElement && b instanceof NavigationMenuElement) {\n                return 1;\n            }\n\n            if (a instanceof NavigationMenuElement && b instanceof ContentGroupMenuElement) {\n                return -1;\n            }\n\n            return 0;\n        });\n\n        /**\n         * Add \"Content Models\" section if the user can create either models or groups.\n         */\n        if (canCreateContentModels || canCreateContentModelGroups) {\n            const contentModelsMenu = mainMenu.addElement<NavigationMenuElement>(\n                new NavigationMenuElement(\"headlessCms.contentModels\", {\n                    label: \"Content Models\"\n                })\n            );\n\n            if (canCreateContentModels) {\n                contentModelsMenu.addElement<NavigationMenuElement>(\n                    new NavigationMenuElement(\"headlessCms.contentModels.models\", {\n                        label: \"Models\",\n                        path: \"/cms/content-models\"\n                    })\n                );\n            }\n\n            if (canCreateContentModelGroups) {\n                contentModelsMenu.addElement<NavigationMenuElement>(\n                    new NavigationMenuElement(\"headlessCms.contentModels.groups\", {\n                        label: \"Groups\",\n                        path: \"/cms/content-model-groups\"\n                    })\n                );\n            }\n        }\n    }, []);\n\n    if (!hasAccess) {\n        return null;\n    }\n\n    return (\n        <>\n            <GlobalSearchPlugins />\n            <ContentGroupsMenuItems view={view} />\n        </>\n    );\n});\n\nCmsMenuLoader.displayName = \"CmsMenuLoader\";\n"],"file":"CmsMenuLoader.js"}