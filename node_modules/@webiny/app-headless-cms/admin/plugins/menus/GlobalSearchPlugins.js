import { useEffect } from "react";
import get from "lodash/get";
import { useI18N } from "@webiny/app-i18n/hooks/useI18N";
import { plugins } from "@webiny/plugins";
import { useQuery } from "../../hooks";
import { LIST_MENU_CONTENT_GROUPS_MODELS } from "../../viewsGraphql";
/**
 * DISCLAIMER!
 * This file is OLD and needs refactoring into something that makes more sense in the context of the new UI Composer.
 * Even if we keep a dedicated `AdminGlobalSearchPlugin`, it needs to be converted to a proper class.
 * This can be a "good first issue" for community to solve.
 */

var GlobalSearchPlugins = function GlobalSearchPlugins() {
  var _useI18N = useI18N(),
      getCurrentLocale = _useI18N.getCurrentLocale;

  var response = useQuery(LIST_MENU_CONTENT_GROUPS_MODELS);
  var locale = getCurrentLocale("content");
  var contentModelGroups = get(response, "data.listContentModelGroups.data", []) || [];
  var cmgHash = contentModelGroups.reduce(function (returnValue, currentValue) {
    return returnValue + currentValue.contentModels.reduce(function (returnValue, currentValue) {
      return returnValue + currentValue.modelId;
    }, "");
  }, ""); // Generate "admin-global-search" plugins - enables the user to search content via the global search bar.

  useEffect(function () {
    // 1. Unregister all previously registered plugins.
    plugins.byType("admin-global-search").filter(function (item) {
      return item.name.startsWith("admin-global-search-headless-cms");
    }).forEach(function (item) {
      return plugins.unregister(item.name);
    }); // 2. Register a new set of plugins via the latest list of content models.

    contentModelGroups.forEach(function (group) {
      group.contentModels.forEach(function (contentModel) {
        var pluginName = "admin-global-search-headless-cms-" + contentModel.modelId;

        if (!plugins.byName(pluginName)) {
          plugins.register({
            type: "admin-global-search",
            name: "admin-global-search-headless-cms-" + contentModel.modelId,
            route: "/cms/content-entries/" + contentModel.modelId,
            label: contentModel.name
          });
        }
      });
    });
  }, [locale, cmgHash]);
  return null;
};

export default GlobalSearchPlugins;
//# sourceMappingURL=GlobalSearchPlugins.js.map