import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["value"];
import React, { useMemo } from "react";
import { Select } from "@webiny/ui/Select";
import { LIST_MENU_CONTENT_GROUPS_MODELS } from "../../../../viewsGraphql";
import { useQuery } from "../../../../hooks";
export default function GroupSelect(_ref) {
  var value = _ref.value,
      props = _objectWithoutProperties(_ref, _excluded);

  var _useQuery = useQuery(LIST_MENU_CONTENT_GROUPS_MODELS),
      data = _useQuery.data,
      loading = _useQuery.loading;

  var groups = loading && !data ? [] : data.listContentModelGroups.data;
  var options = useMemo(function () {
    return groups.map(function (item) {
      return {
        value: item.id,
        label: item.name
      };
    });
  }, [groups]);
  var selectValue = typeof value === "string" ? value : value.id;
  return /*#__PURE__*/React.createElement(Select, Object.assign({}, props, {
    value: loading ? "" : selectValue,
    label: "Content model group",
    options: options
  }));
}
//# sourceMappingURL=GroupSelect.js.map