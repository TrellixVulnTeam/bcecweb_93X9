import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";

var _templateObject;

import React, { useCallback, useState } from "react";
import { Input } from "@webiny/ui/Input";
import { Tooltip } from "@webiny/ui/Tooltip";
import { useHotkeys } from "react-hotkeyz";
import { FormName, formNameWrapper, NameInputWrapper, NameWrapper } from "./NameStyled";
import { i18n } from "@webiny/app/i18n";
import { useContentModelEditor } from "../../../../components/ContentModelEditor/useContentModelEditor";
var t = i18n.namespace("ContentModelEditor.Name");
export var Name = function Name() {
  var _useContentModelEdito = useContentModelEditor(),
      data = _useContentModelEdito.data,
      setData = _useContentModelEdito.setData;

  var _useState = useState(null),
      _useState2 = _slicedToArray(_useState, 2),
      localName = _useState2[0],
      setLocalName = _useState2[1];

  var _useState3 = useState(false),
      _useState4 = _slicedToArray(_useState3, 2),
      editingEnabled = _useState4[0],
      setEditing = _useState4[1];

  var cancelChanges = function cancelChanges() {
    setEditing(false);
  };

  var startEditing = function startEditing() {
    setLocalName(data.name);
    setEditing(true);
  };

  var saveName = useCallback(function (e) {
    e.preventDefault();
    setData(function (data) {
      data.name = localName;
      return data;
    });
    setEditing(false);
  }, [localName]);
  useHotkeys({
    zIndex: 100,
    keys: {
      "alt+cmd+enter": startEditing
    }
  });
  useHotkeys({
    zIndex: 101,
    disabled: !editingEnabled,
    keys: {
      esc: function esc(e) {
        e.preventDefault();
        cancelChanges();
      },
      enter: saveName
    }
  }); // Disable autoFocus because for some reason, blur event would automatically be triggered when clicking
  // on the page title when doing Cypress testing. Not sure if this is RMWC or Cypress related issue.

  var autoFocus = !window.Cypress;
  return editingEnabled ? /*#__PURE__*/React.createElement(NameInputWrapper, null, /*#__PURE__*/React.createElement(Input, {
    autoFocus: autoFocus,
    fullwidth: true,
    value: localName,
    onChange: setLocalName,
    onBlur: saveName
  })) : /*#__PURE__*/React.createElement(NameWrapper, null, /*#__PURE__*/React.createElement(Tooltip, {
    className: formNameWrapper,
    placement: "bottom",
    content: /*#__PURE__*/React.createElement("span", null, t(_templateObject || (_templateObject = _taggedTemplateLiteral(["rename"]))))
  }, /*#__PURE__*/React.createElement(FormName, {
    "data-testid": "cms-editor-model-title",
    onClick: startEditing
  }, data.name)));
};
//# sourceMappingURL=Name.js.map