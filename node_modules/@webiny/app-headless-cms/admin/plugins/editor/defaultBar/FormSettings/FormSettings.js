import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";

var _templateObject, _templateObject2;

import React, { useState } from "react";
import { plugins } from "@webiny/plugins";
import { OverlayLayout } from "@webiny/app-admin/components/OverlayLayout";
import { SplitView, LeftPanel, RightPanel } from "@webiny/app-admin/components/SplitView";
import { Typography } from "@webiny/ui/Typography";
import { Form } from "@webiny/form";
import { Icon } from "@webiny/ui/Icon";
import { ButtonPrimary } from "@webiny/ui/Button";
import { List, ListItem, ListItemGraphic } from "@webiny/ui/List";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { i18n } from "@webiny/app/i18n";
import * as SF from "@webiny/app-admin/components/SimpleForm";
import { Title, listItem, ListItemTitle, listStyle, TitleContent } from "./FormSettingsStyled";
import { useContentModelEditor } from "../../../../components/ContentModelEditor/useContentModelEditor";
var t = i18n.namespace("FormsApp.Editor.FormSettings");

var FormSettings = function FormSettings(_ref) {
  var onExited = _ref.onExited;
  var cmsEditorFormSettingsPlugins = plugins.byType("cms-editor-form-settings");

  var _useContentModelEdito = useContentModelEditor(),
      data = _useContentModelEdito.data,
      setData = _useContentModelEdito.setData;

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var _useState = useState(cmsEditorFormSettingsPlugins[0]),
      _useState2 = _slicedToArray(_useState, 2),
      activePlugin = _useState2[0],
      setActivePlugin = _useState2[1];

  return /*#__PURE__*/React.createElement(OverlayLayout, {
    barMiddle: Title,
    onExited: onExited
  }, /*#__PURE__*/React.createElement(SplitView, null, /*#__PURE__*/React.createElement(LeftPanel, {
    span: 5
  }, /*#__PURE__*/React.createElement(List, {
    twoLine: true,
    className: listStyle
  }, cmsEditorFormSettingsPlugins.map(function (pl) {
    return /*#__PURE__*/React.createElement(ListItem, {
      key: pl.name,
      className: listItem,
      onClick: function onClick() {
        return setActivePlugin(pl);
      }
    }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
      icon: pl.icon
    })), /*#__PURE__*/React.createElement(TitleContent, null, /*#__PURE__*/React.createElement(ListItemTitle, null, pl.title), /*#__PURE__*/React.createElement(Typography, {
      use: "subtitle2"
    }, pl.description)));
  }))), /*#__PURE__*/React.createElement(RightPanel, {
    span: 7
  }, /*#__PURE__*/React.createElement(Form, {
    data: data,
    onSubmit: function onSubmit(data) {
      setData(function () {
        return data;
      });
      onExited();
      showSnackbar(t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Content model settings updated successfully."]))));
    }
  }, function (_ref2) {
    var Bind = _ref2.Bind,
        submit = _ref2.submit,
        form = _ref2.form,
        formData = _ref2.data;
    return /*#__PURE__*/React.createElement(SF.SimpleForm, null, /*#__PURE__*/React.createElement(SF.SimpleFormHeader, {
      title: activePlugin.title
    }, typeof activePlugin.renderHeaderActions === "function" && activePlugin.renderHeaderActions({
      Bind: Bind,
      form: form,
      formData: formData
    })), /*#__PURE__*/React.createElement(SF.SimpleFormContent, null, activePlugin ? activePlugin.render({
      Bind: Bind,
      form: form,
      formData: formData
    }) : null), /*#__PURE__*/React.createElement(SF.SimpleFormFooter, null, /*#__PURE__*/React.createElement(ButtonPrimary, {
      onClick: submit
    }, t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Save settings"]))))));
  }))));
};

export default FormSettings;
//# sourceMappingURL=FormSettings.js.map