{"version":3,"sources":["../../../../../../src/admin/plugins/editor/defaultBar/FormSettings/FormSettings.tsx"],"names":["React","useState","plugins","OverlayLayout","SplitView","LeftPanel","RightPanel","Typography","Form","Icon","ButtonPrimary","List","ListItem","ListItemGraphic","useSnackbar","i18n","SF","Title","listItem","ListItemTitle","listStyle","TitleContent","useContentModelEditor","t","namespace","FormSettings","onExited","cmsEditorFormSettingsPlugins","byType","data","setData","showSnackbar","activePlugin","setActivePlugin","map","pl","name","icon","title","description","Bind","submit","form","formData","renderHeaderActions","render"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { plugins } from \"@webiny/plugins\";\nimport { OverlayLayout } from \"@webiny/app-admin/components/OverlayLayout\";\nimport { SplitView, LeftPanel, RightPanel } from \"@webiny/app-admin/components/SplitView\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Form } from \"@webiny/form\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { List, ListItem, ListItemGraphic } from \"@webiny/ui/List\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport * as SF from \"@webiny/app-admin/components/SimpleForm\";\nimport { CmsEditorFormSettingsPlugin } from \"~/types\";\nimport { Title, listItem, ListItemTitle, listStyle, TitleContent } from \"./FormSettingsStyled\";\nimport { useContentModelEditor } from \"~/admin/components/ContentModelEditor/useContentModelEditor\";\n\nconst t = i18n.namespace(\"FormsApp.Editor.FormSettings\");\n\ntype FormSettingsProps = {\n    onExited: () => void;\n};\n\nconst FormSettings = ({ onExited }: FormSettingsProps) => {\n    const cmsEditorFormSettingsPlugins = plugins.byType<CmsEditorFormSettingsPlugin>(\n        \"cms-editor-form-settings\"\n    );\n    const { data, setData } = useContentModelEditor();\n    const { showSnackbar } = useSnackbar();\n\n    const [activePlugin, setActivePlugin] = useState(cmsEditorFormSettingsPlugins[0]);\n\n    return (\n        <OverlayLayout barMiddle={Title} onExited={onExited}>\n            <SplitView>\n                <LeftPanel span={5}>\n                    <List twoLine className={listStyle}>\n                        {cmsEditorFormSettingsPlugins.map(pl => (\n                            <ListItem\n                                key={pl.name}\n                                className={listItem}\n                                onClick={() => setActivePlugin(pl)}\n                            >\n                                <ListItemGraphic>\n                                    <Icon icon={pl.icon} />\n                                </ListItemGraphic>\n                                <TitleContent>\n                                    <ListItemTitle>{pl.title}</ListItemTitle>\n                                    <Typography use={\"subtitle2\"}>{pl.description}</Typography>\n                                </TitleContent>\n                            </ListItem>\n                        ))}\n                    </List>\n                </LeftPanel>\n                <RightPanel span={7}>\n                    <Form\n                        data={data}\n                        onSubmit={data => {\n                            setData(() => data);\n                            onExited();\n                            showSnackbar(t`Content model settings updated successfully.`);\n                        }}\n                    >\n                        {({ Bind, submit, form, data: formData }) => (\n                            <SF.SimpleForm>\n                                <SF.SimpleFormHeader title={activePlugin.title}>\n                                    {typeof activePlugin.renderHeaderActions === \"function\" &&\n                                        activePlugin.renderHeaderActions({ Bind, form, formData })}\n                                </SF.SimpleFormHeader>\n                                <SF.SimpleFormContent>\n                                    {activePlugin\n                                        ? activePlugin.render({ Bind, form, formData })\n                                        : null}\n                                </SF.SimpleFormContent>\n                                <SF.SimpleFormFooter>\n                                    <ButtonPrimary\n                                        onClick={submit}\n                                    >{t`Save settings`}</ButtonPrimary>\n                                </SF.SimpleFormFooter>\n                            </SF.SimpleForm>\n                        )}\n                    </Form>\n                </RightPanel>\n            </SplitView>\n        </OverlayLayout>\n    );\n};\n\nexport default FormSettings;\n"],"file":"FormSettings.js"}