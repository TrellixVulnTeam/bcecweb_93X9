{"version":3,"sources":["../../../../../src/admin/plugins/fieldRenderers/text/textInput.tsx"],"names":["React","i18n","Input","get","t","ns","plugin","type","name","renderer","rendererName","description","canUse","field","multipleValues","render","getBind","Bind","bind","label","placeholderText","helpText"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,IAAMC,CAAC,GAAGH,IAAI,CAACI,EAAL,CAAQ,oCAAR,CAAV;AAEA,IAAMC,MAAoC,GAAG;AACzCC,EAAAA,IAAI,EAAE,2BADmC;AAEzCC,EAAAA,IAAI,EAAE,gCAFmC;AAGzCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAE,YADR;AAENF,IAAAA,IAAI,EAAEJ,CAAF,+EAFE;AAGNO,IAAAA,WAAW,EAAEP,CAAF,4HAHL;AAINQ,IAAAA,MAJM,wBAIY;AAAA,UAATC,KAAS,QAATA,KAAS;AACd,aACIA,KAAK,CAACN,IAAN,KAAe,MAAf,IACA,CAACM,KAAK,CAACC,cADP,IAEA,CAACX,GAAG,CAACU,KAAD,EAAQ,0BAAR,CAHR;AAKH,KAVK;AAWNE,IAAAA,MAXM,yBAWqB;AAAA,UAAlBF,KAAkB,SAAlBA,KAAkB;AAAA,UAAXG,OAAW,SAAXA,OAAW;AACvB,UAAMC,IAAI,GAAGD,OAAO,EAApB;AAEA,0BACI,oBAAC,IAAD,QACK,UAAAE,IAAI;AAAA,4BACD,oBAAC,KAAD,oBACQA,IADR;AAEI,UAAA,KAAK,EAAEL,KAAK,CAACM,KAFjB;AAGI,UAAA,WAAW,EAAEN,KAAK,CAACO,eAHvB;AAII,UAAA,WAAW,EAAEP,KAAK,CAACQ;AAJvB,WADC;AAAA,OADT,CADJ;AAYH;AA1BK;AAH+B,CAA7C;AAiCA,eAAef,MAAf","sourcesContent":["import React from \"react\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { CmsEditorFieldRendererPlugin } from \"~/types\";\nimport { Input } from \"@webiny/ui/Input\";\nimport get from \"lodash/get\";\n\nconst t = i18n.ns(\"app-headless-cms/admin/fields/text\");\n\nconst plugin: CmsEditorFieldRendererPlugin = {\n    type: \"cms-editor-field-renderer\",\n    name: \"cms-editor-field-renderer-text\",\n    renderer: {\n        rendererName: \"text-input\",\n        name: t`Text Input`,\n        description: t`Renders a simple input with its type set to \"text\".`,\n        canUse({ field }) {\n            return (\n                field.type === \"text\" &&\n                !field.multipleValues &&\n                !get(field, \"predefinedValues.enabled\")\n            );\n        },\n        render({ field, getBind }) {\n            const Bind = getBind();\n\n            return (\n                <Bind>\n                    {bind => (\n                        <Input\n                            {...bind}\n                            label={field.label}\n                            placeholder={field.placeholderText}\n                            description={field.helpText}\n                        />\n                    )}\n                </Bind>\n            );\n        }\n    }\n};\n\nexport default plugin;\n"],"file":"textInput.js"}