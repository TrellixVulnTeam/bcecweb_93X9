{"version":3,"sources":["../../../../src/admin/plugins/fieldRenderers/Accordion.tsx"],"names":["React","useCallback","useState","css","classNames","Typography","classes","accordionWrapper","position","width","borderBottom","accordionHeader","color","cursor","padding","minHeight","display","alignItems","justifyContent","span","marginLeft","fill","height","top","left","content","borderTop","borderLeft","transform","accordionItem","overflow","transition","maxHeight","Accordion","title","children","action","icon","defaultValue","isOpen","setOpen","toggleOpen","open","collapsed","memo"],"mappings":"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","sourcesContent":["import React, { ReactElement, useCallback, useState } from \"react\";\nimport { css } from \"emotion\";\nimport classNames from \"classnames\";\nimport { Typography } from \"@webiny/ui/Typography\";\n\nconst classes = {\n    accordionWrapper: css({\n        /**\n         * We're using position: \"relative\" here for \"Popping Out of Hidden Overflow\" https://css-tricks.com/popping-hidden-overflow/\n         * so that, we can use absolute positioned element inside without \"overflow: hidden\" being a problem\n         */\n        position: \"relative\",\n        width: \"100%\",\n        borderBottom: `1px solid var(--mdc-theme-on-secondary)`\n    }),\n    accordionHeader: css({\n        position: \"relative\",\n        color: \"var(--mdc-theme-text-secondary-on-background)\",\n        cursor: \"pointer\",\n        padding: \"0px\",\n        minHeight: 48, // To have same height as the remove value action button.\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n\n        \"& .accordion-header--left\": {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            \"& .accordion-title\": {\n                span: {\n                    marginLeft: 16\n                }\n            }\n        },\n        \"& .accordion-header--right\": {\n            display: \"flex\",\n            \"& .icon-container\": {\n                display: \"flex\",\n                alignItems: \"center\",\n\n                \"& span\": {\n                    display: \"flex\"\n                },\n                \"& svg\": {\n                    fill: \"currentColor\",\n                    width: 14,\n                    height: 14\n                }\n            }\n        },\n\n        \"&::before\": {\n            position: \"absolute\",\n            top: \"calc(50% - 5px)\",\n            left: 0,\n            content: '\"\"',\n            width: 0,\n            height: 0,\n\n            // Arrow right.\n            borderTop: \"5px solid transparent\",\n            borderBottom: \"5px solid transparent\",\n            borderLeft: \"5px solid currentColor\"\n        },\n\n        \"&.open\": {\n            \"&::before\": {\n                transform: \"translateY(3px) rotate(90deg)\"\n            }\n        }\n    }),\n    accordionItem: css({\n        overflow: \"hidden\",\n        transition: \"max-height 0.3s cubic-bezier(1, 0, 1, 0)\",\n        height: \"auto\",\n        maxHeight: \"9999px\",\n\n        \"&.collapsed\": {\n            maxHeight: 0,\n            transition: \"max-height 0.35s cubic-bezier(0, 1, 0, 1)\"\n        }\n    })\n};\n\ntype AccordionProps = {\n    title: string;\n    children: ReactElement;\n    action?: ReactElement;\n    icon?: ReactElement;\n    defaultValue?: boolean;\n};\n\nconst Accordion = ({ title, children, action, icon, defaultValue = false }: AccordionProps) => {\n    const [isOpen, setOpen] = useState(defaultValue);\n    const toggleOpen = useCallback(() => setOpen(!isOpen), [isOpen]);\n\n    return (\n        <div className={classes.accordionWrapper}>\n            <div\n                className={classNames(classes.accordionHeader, { open: isOpen })}\n                onClick={toggleOpen}\n            >\n                <div className=\"accordion-header--left\">\n                    <div className={\"accordion-title\"}>\n                        <Typography use={\"subtitle1\"}>{title}</Typography>\n                    </div>\n                </div>\n                <div className=\"accordion-header--right\">\n                    <div className={\"action-container\"}>{action}</div>\n                    <div className={\"icon-container\"}>{icon}</div>\n                </div>\n            </div>\n            <div className={classNames(classes.accordionItem, { collapsed: !isOpen })}>\n                <div className=\"accordion-content\">{children}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default React.memo(Accordion);\n"],"file":"Accordion.js"}