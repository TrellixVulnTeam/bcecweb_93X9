{"version":3,"sources":["../../../../../src/admin/plugins/fieldRenderers/dateTime/DateTimeWithoutTimezone.tsx"],"names":["React","useEffect","useState","Grid","Cell","DEFAULT_DATE","DEFAULT_TIME","RemoveFieldButton","Input","parseDateTime","value","includes","split","formattedDate","formattedTime","Error","DateTimeWithoutTimezone","field","bind","trailingIcon","date","time","state","setState","cellSize","onChange","prev","label"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { DEFAULT_DATE, DEFAULT_TIME, RemoveFieldButton } from \"./utils\";\nimport Input from \"./Input\";\n\ninterface DateTimeWithoutTimezoneProps {\n    bind: any;\n    trailingIcon?: any;\n    field: any;\n}\n\ninterface DateTimeWithoutTimezoneState {\n    date: string;\n    time: string;\n}\n\nconst parseDateTime = (value?: string) => {\n    if (!value) {\n        return {};\n    }\n    if (value.includes(\"T\")) {\n        const [formattedDate, formattedTime] = value.split(\".\")[0].split(\"T\");\n        return {\n            formattedDate,\n            formattedTime\n        };\n    }\n    const [formattedDate, formattedTime] = value.split(\" \");\n    if (!formattedDate || !formattedTime) {\n        throw new Error(`Could not extract date and time from \"${value}\".`);\n    }\n    return {\n        formattedDate,\n        formattedTime\n    };\n};\n\nconst DateTimeWithoutTimezone: React.FunctionComponent<DateTimeWithoutTimezoneProps> = ({\n    field,\n    bind,\n    trailingIcon\n}) => {\n    // \"2020-05-18 09:00:00\"\n    const { formattedDate, formattedTime } = parseDateTime(bind.value);\n    const [state, setState] = useState<DateTimeWithoutTimezoneState>({\n        date: formattedDate || DEFAULT_DATE,\n        time: formattedTime || DEFAULT_TIME\n    });\n    const { date, time } = state;\n    useEffect(() => {\n        if (!formattedDate || !formattedTime) {\n            return;\n        }\n        setState(() => ({\n            date: formattedDate,\n            time: formattedTime\n        }));\n    }, [formattedDate, formattedTime]);\n\n    const cellSize = trailingIcon ? 5 : 6;\n\n    return (\n        <Grid>\n            <Cell span={6}>\n                <Input\n                    bind={{\n                        ...bind,\n                        value: date,\n                        onChange: value => {\n                            setState(prev => ({\n                                ...prev,\n                                date: value\n                            }));\n                            return bind.onChange(`${value} ${time}`);\n                        }\n                    }}\n                    field={{\n                        ...field,\n                        label: `${field.label} date`\n                    }}\n                    type={\"date\"}\n                />\n            </Cell>\n            <Cell span={cellSize}>\n                <Input\n                    bind={{\n                        ...bind,\n                        value: time,\n                        onChange: value => {\n                            setState(prev => ({\n                                ...prev,\n                                time: value\n                            }));\n                            return bind.onChange(`${date} ${value}`);\n                        }\n                    }}\n                    field={{\n                        ...field,\n                        label: `${field.label} time`\n                    }}\n                    type={\"time\"}\n                    step={5}\n                />\n            </Cell>\n            <RemoveFieldButton trailingIcon={trailingIcon} />\n        </Grid>\n    );\n};\n\nexport default DateTimeWithoutTimezone;\n"],"file":"DateTimeWithoutTimezone.js"}