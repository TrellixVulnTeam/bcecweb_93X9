import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject, _templateObject2;

import React from "react";
import { i18n } from "@webiny/app/i18n";
import { Fields } from "../../../components/ContentEntryForm/Fields";
import { SimpleFormHeader } from "@webiny/app-admin/components/SimpleForm";
import { Grid, Cell } from "@webiny/ui/Grid";
import { FormElementMessage } from "@webiny/ui/FormElementMessage";
import { fieldsWrapperStyle } from "./StyledComponents";
var t = i18n.ns("app-headless-cms/admin/fields/text");
var plugin = {
  type: "cms-editor-field-renderer",
  name: "cms-editor-field-renderer-object",
  renderer: {
    rendererName: "object",
    name: t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Object"]))),
    description: t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Renders a set of fields."]))),
    canUse: function canUse(_ref) {
      var field = _ref.field;
      return field.type === "object" && !field.multipleValues;
    },
    render: function render(_ref2) {
      var field = _ref2.field,
          getBind = _ref2.getBind,
          contentModel = _ref2.contentModel;
      var Bind = getBind();
      return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
        span: 12
      }, /*#__PURE__*/React.createElement(SimpleFormHeader, {
        title: field.label
      }), field.helpText && /*#__PURE__*/React.createElement(FormElementMessage, null, field.helpText)), /*#__PURE__*/React.createElement(Cell, {
        span: 12,
        className: fieldsWrapperStyle
      }, /*#__PURE__*/React.createElement(Fields, {
        Bind: Bind,
        contentModel: contentModel,
        fields: field.settings.fields,
        layout: field.settings.layout
      })));
    }
  }
};
export default plugin;
//# sourceMappingURL=singleObject.js.map