{"version":3,"sources":["../../../../../src/admin/plugins/fieldRenderers/file/fileFields.tsx"],"names":["React","dotProp","i18n","Cell","GridInner","imageWrapperStyles","FileManager","styled","File","FormElementMessage","t","ns","FileUploadWrapper","position","opacity","pointerEvents","color","FieldRenderer","getBind","Label","field","Bind","value","onChange","validation","showFileManager","selectFiles","index","files","urls","map","f","src","slice","label","url","delete","isValid","message","defaultProps","styles","width","height","plugin","type","name","renderer","rendererName","description","canUse","multipleValues","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport dotProp from \"dot-prop-immutable\";\nimport { CmsEditorFieldRendererPlugin } from \"~/types\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { Cell, GridInner } from \"@webiny/ui/Grid\";\nimport { imageWrapperStyles } from \"./utils\";\nimport { FileManager } from \"@webiny/app-admin/components\";\nimport styled from \"@emotion/styled\";\nimport File from \"./File\";\nimport { FormElementMessage } from \"@webiny/ui/FormElementMessage\";\n\nconst t = i18n.ns(\"app-headless-cms/admin/fields/file\");\n\nconst FileUploadWrapper = styled(\"div\")({\n    position: \"relative\",\n    \".disabled\": {\n        opacity: 0.75,\n        pointerEvents: \"none\"\n    },\n    \".mdc-text-field-helper-text\": {\n        color: \"var(--mdc-theme-text-secondary-on-background)\"\n    }\n});\n\nfunction FieldRenderer({ getBind, Label, field }) {\n    const Bind = getBind();\n\n    return (\n        <Bind>\n            {({ value, onChange, validation }) => (\n                <FileUploadWrapper className={imageWrapperStyles}>\n                    <FileManager multiple={true}>\n                        {({ showFileManager }) => {\n                            const selectFiles = (index = -1) => {\n                                showFileManager(files => {\n                                    if (!files) {\n                                        return;\n                                    }\n\n                                    const urls = files.map(f => f.src);\n                                    if (index === -1) {\n                                        onChange([...(value || []), ...urls]);\n                                    } else {\n                                        onChange([\n                                            ...value.slice(0, index),\n                                            ...urls,\n                                            ...value.slice(index + 1)\n                                        ]);\n                                    }\n                                });\n                            };\n                            return (\n                                <GridInner>\n                                    <Cell span={12}>\n                                        <Label>{field.label}</Label>\n                                    </Cell>\n\n                                    {value.map((url, index) => (\n                                        <Cell span={3} key={url}>\n                                            <File\n                                                url={url}\n                                                showFileManager={() => selectFiles(index)}\n                                                onRemove={() =>\n                                                    onChange(dotProp.delete(value, index))\n                                                }\n                                                placeholder={t`Select a file\"`}\n                                            />\n                                        </Cell>\n                                    ))}\n\n                                    <Cell span={3}>\n                                        <File\n                                            showFileManager={() => selectFiles()}\n                                            placeholder={t`Select a file\"`}\n                                        />\n                                    </Cell>\n                                    {validation.isValid === false && (\n                                        <Cell span={12}>\n                                            <FormElementMessage error>\n                                                {validation.message}\n                                            </FormElementMessage>\n                                        </Cell>\n                                    )}\n                                </GridInner>\n                            );\n                        }}\n                    </FileManager>\n                </FileUploadWrapper>\n            )}\n        </Bind>\n    );\n}\n\nFieldRenderer.defaultProps = {\n    validation: { isValid: null },\n    styles: { width: \"100%\", height: \"auto\" }\n};\n\nconst plugin: CmsEditorFieldRendererPlugin = {\n    type: \"cms-editor-field-renderer\",\n    name: \"cms-editor-field-renderer-files\",\n    renderer: {\n        rendererName: \"file-inputs\",\n        name: t`File Inputs`,\n        description: t`Enables selecting multiple files via File Manager.`,\n        canUse({ field }) {\n            return field.type === \"file\" && field.multipleValues;\n        },\n        render({ field, getBind, Label }) {\n            return <FieldRenderer field={field} getBind={getBind} Label={Label} />;\n        }\n    }\n};\n\nexport default plugin;\n"],"file":"fileFields.js"}