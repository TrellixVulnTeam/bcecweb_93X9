import React, { useCallback } from "react";
import { Image } from "@webiny/app/components";
import * as Ui from "@webiny/ui/ImageUpload";
import { createRenderImagePreview, imageExtensions } from "./utils";
import fileIcon from "../../fields/icons/round_insert_drive_file-24px.svg";
var imagePreviewProps = {
  transform: {
    width: 300
  },
  style: {
    width: "100%",
    height: 232,
    objectFit: "cover"
  }
};

function File(props) {
  var url = props.url,
      onRemove = props.onRemove,
      placeholder = props.placeholder,
      styles = props.styles,
      showFileManager = props.showFileManager;
  var isImage = useCallback(function (url) {
    return imageExtensions.some(function (extension) {
      return url.includes(extension);
    });
  }, []);
  var getImageSrc = useCallback(function (url) {
    if (url && isImage(url)) {
      return url;
    }

    return fileIcon;
  }, []);

  var defaultRenderImagePreview = function defaultRenderImagePreview(renderImageProps) {
    return /*#__PURE__*/React.createElement(Image, Object.assign({}, renderImageProps, imagePreviewProps));
  };

  var renderImagePreview = function renderImagePreview(url) {
    if (url && !isImage(url)) {
      return createRenderImagePreview({
        value: url,
        imagePreviewProps: imagePreviewProps
      });
    }

    return defaultRenderImagePreview;
  };

  return /*#__PURE__*/React.createElement(Ui.Image, {
    renderImagePreview: renderImagePreview(url),
    style: styles,
    value: url ? {
      src: getImageSrc(url)
    } : null,
    uploadImage: showFileManager,
    removeImage: onRemove,
    placeholder: placeholder,
    containerStyle: {
      height: "auto"
    }
  });
}

File.defaultProps = {
  validation: {
    isValid: null
  },
  styles: {
    width: "100%",
    height: "auto"
  }
};
export default File;
//# sourceMappingURL=File.js.map