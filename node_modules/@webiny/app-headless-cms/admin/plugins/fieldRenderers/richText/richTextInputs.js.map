{"version":3,"sources":["../../../../../src/admin/plugins/fieldRenderers/richText/richTextInputs.tsx"],"names":["React","useMemo","get","i18n","DynamicSection","RichTextEditor","createPropsFromConfig","IconButton","plugins","styled","t","ns","getKey","field","bind","index","formId","form","state","data","id","fieldId","emptyValue","type","textAlign","className","text","EditorWrapper","position","top","right","plugin","name","renderer","rendererName","description","canUse","multipleValues","render","props","rteProps","byType","map","pl","config","removeValue","placeholderText","helpText"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport get from \"lodash/get\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { CmsEditorFieldRendererPlugin } from \"~/types\";\nimport { ReactComponent as DeleteIcon } from \"~/admin/icons/close.svg\";\nimport DynamicSection from \"../DynamicSection\";\nimport { RichTextEditor, createPropsFromConfig } from \"@webiny/app-admin/components/RichTextEditor\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { plugins } from \"@webiny/plugins\";\nimport styled from \"@emotion/styled\";\n\nconst t = i18n.ns(\"app-headless-cms/admin/fields/rich-text\");\n\nconst getKey = (field, bind, index) => {\n    const formId = bind.index.form.state.data.id || \"new\";\n    return `${formId}.${field.fieldId}.${index}`;\n};\n\nconst emptyValue = [{ type: \"paragraph\", data: { textAlign: \"left\", className: null, text: \"\" } }];\n\nconst EditorWrapper = styled(\"div\")({\n    position: \"relative\",\n    \"> button\": {\n        position: \"absolute\",\n        top: 5,\n        right: 5\n    }\n});\n\nconst plugin: CmsEditorFieldRendererPlugin = {\n    type: \"cms-editor-field-renderer\",\n    name: \"cms-editor-field-renderer-rich-text-inputs\",\n    renderer: {\n        rendererName: \"rich-text-inputs\",\n        name: t`Rich Text Inputs`,\n        description: t`Renders a simple list of rich text editors.`,\n        canUse({ field }) {\n            return (\n                field.type === \"rich-text\" &&\n                field.multipleValues &&\n                !get(field, \"predefinedValues.enabled\")\n            );\n        },\n        render(props) {\n            const { field } = props;\n\n            const rteProps = useMemo(() => {\n                return createPropsFromConfig(plugins.byType(\"cms-rte-config\").map(pl => pl.config));\n            }, []);\n\n            return (\n                <DynamicSection {...props} emptyValue={emptyValue}>\n                    {({ bind, index }) => (\n                        <EditorWrapper>\n                            {index > 0 && (\n                                <IconButton\n                                    icon={<DeleteIcon />}\n                                    onClick={() => bind.field.removeValue(index)}\n                                />\n                            )}\n                            <RichTextEditor\n                                key={getKey(field, bind, index)}\n                                {...rteProps}\n                                {...bind.index}\n                                label={`Value ${index + 1}`}\n                                placeholder={field.placeholderText}\n                                description={field.helpText}\n                            />\n                        </EditorWrapper>\n                    )}\n                </DynamicSection>\n            );\n        }\n    }\n};\n\nexport default plugin;\n"],"file":"richTextInputs.js"}