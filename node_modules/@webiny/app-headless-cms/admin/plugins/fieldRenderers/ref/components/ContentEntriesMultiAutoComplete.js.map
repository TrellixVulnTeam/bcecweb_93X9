{"version":3,"sources":["../../../../../../src/admin/plugins/fieldRenderers/ref/components/ContentEntriesMultiAutoComplete.tsx"],"names":["React","debounce","MultiAutoComplete","Link","i18n","useReferences","renderItem","t","ns","warn","ContentEntriesMultiAutocomplete","bind","field","options","setSearch","entries","loading","onChange","entryWarning","index","id","modelId","name","published","encodeURIComponent","warning","filter","item","length","map","label","helpText"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT;AACA,SAASC,UAAT;AAEA,IAAMC,CAAC,GAAGH,IAAI,CAACI,EAAL,CAAQ,mCAAR,CAAV;AAEA,IAAMC,IAAI,GAAGF,CAAH,gLAAV;;AAEA,SAASG,+BAAT,OAA0D;AAAA,MAAfC,IAAe,QAAfA,IAAe;AAAA,MAATC,KAAS,QAATA,KAAS;;AACtD,uBAA2DP,aAAa,CAAC;AAAEM,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,KAAK,EAALA;AAAR,GAAD,CAAxE;AAAA,MAAQC,OAAR,kBAAQA,OAAR;AAAA,MAAiBC,SAAjB,kBAAiBA,SAAjB;AAAA,MAA4BC,OAA5B,kBAA4BA,OAA5B;AAAA,MAAqCC,OAArC,kBAAqCA,OAArC;AAAA,MAA8CC,QAA9C,kBAA8CA,QAA9C;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,QAAmCC,KAAnC;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,OAAP,SAAOA,OAAP;AAAA,QAAgBC,IAAhB,SAAgBA,IAAhB;AAAA,QAAsBC,SAAtB,SAAsBA,SAAtB;AAAA,WACjB,CAACA,SAAD,iBACI,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEH;AAArB,OACKD,KAAK,GAAG,CAAR,IAAa,IADlB,eAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,iCAA0BE,OAA1B,iBAAwCG,kBAAkB,CAACJ,EAAD,CAA1D;AAAR,OACKE,IADL,CAFJ,CAFa;AAAA,GAArB;;AAUA,MAAIG,OAAO,GAAGV,OAAO,CAACW,MAAR,CAAe,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACJ,SAAL,KAAmB,KAAvB;AAAA,GAAnB,CAAd;;AACA,MAAIE,OAAO,CAACG,MAAZ,EAAoB;AAChBH,IAAAA,OAAO,GAAGhB,IAAI,CAAC;AACXM,MAAAA,OAAO,eAAE,0CAAGU,OAAO,CAACI,GAAR,CAAYX,YAAZ,CAAH;AADE,KAAD,CAAd;AAGH;;AAED,sBACI,oBAAC,iBAAD,oBACQP,IADR;AAEI,IAAA,UAAU,EAAEL,UAFhB;AAGI,IAAA,mBAAmB,EAAEA,UAHzB;AAII,IAAA,wBAAwB,MAJ5B;AAKI,IAAA,QAAQ,EAAEW,QALd;AAMI,IAAA,OAAO,EAAED,OANb;AAOI,IAAA,KAAK,EAAED,OAPX;AAQI,IAAA,OAAO,EAAEF,OARb;AASI,IAAA,KAAK,EAAED,KAAK,CAACkB,KATjB;AAUI,IAAA,OAAO,EAAE7B,QAAQ,CAACa,SAAD,EAAY,GAAZ,CAVrB;AAWI,IAAA,WAAW,eACP,0CACKF,KAAK,CAACmB,QADX,EAEKN,OAFL;AAZR,KADJ;AAoBH;;AAED,eAAef,+BAAf","sourcesContent":["import React from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { MultiAutoComplete } from \"@webiny/ui/AutoComplete\";\nimport { Link } from \"@webiny/react-router\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useReferences } from \"./useReferences\";\nimport { renderItem } from \"./renderItem\";\n\nconst t = i18n.ns(\"app-headless-cms/admin/fields/ref\");\n\nconst warn = t`Before publishing the main content entry, make sure you publish the following referenced entries: {entries}`;\n\nfunction ContentEntriesMultiAutocomplete({ bind, field }) {\n    const { options, setSearch, entries, loading, onChange } = useReferences({ bind, field });\n\n    const entryWarning = ({ id, modelId, name, published }, index) =>\n        !published && (\n            <React.Fragment key={id}>\n                {index > 0 && \", \"}\n                <Link to={`/cms/content-entries/${modelId}?id=${encodeURIComponent(id)}`}>\n                    {name}\n                </Link>\n            </React.Fragment>\n        );\n\n    let warning = entries.filter(item => item.published === false);\n    if (warning.length) {\n        warning = warn({\n            entries: <>{warning.map(entryWarning)}</>\n        });\n    }\n\n    return (\n        <MultiAutoComplete\n            {...bind}\n            renderItem={renderItem}\n            renderListItemLabel={renderItem}\n            useMultipleSelectionList\n            onChange={onChange}\n            loading={loading}\n            value={entries}\n            options={options}\n            label={field.label}\n            onInput={debounce(setSearch, 250)}\n            description={\n                <>\n                    {field.helpText}\n                    {warning}\n                </>\n            }\n        />\n    );\n}\n\nexport default ContentEntriesMultiAutocomplete;\n"],"file":"ContentEntriesMultiAutoComplete.js"}