import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject, _templateObject2;

import React from "react";
import { i18n } from "@webiny/app/i18n";
import ContentEntriesAutocomplete from "./components/ContentEntriesAutocomplete";
var t = i18n.ns("app-headless-cms/admin/fields/ref");
var plugin = {
  type: "cms-editor-field-renderer",
  name: "cms-editor-field-renderer-ref",
  renderer: {
    rendererName: "ref-input",
    name: t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Reference Input"]))),
    description: t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Renders an auto-complete input, allowing selection of a single value."]))),
    canUse: function canUse(_ref) {
      var field = _ref.field;
      return field.type === "ref" && !field.multipleValues;
    },
    render: function render(props) {
      var Bind = props.getBind();
      return /*#__PURE__*/React.createElement(Bind, null, function (bind) {
        return /*#__PURE__*/React.createElement(ContentEntriesAutocomplete, Object.assign({}, props, {
          bind: bind
        }));
      });
    }
  }
};
export default plugin;
//# sourceMappingURL=refInput.js.map