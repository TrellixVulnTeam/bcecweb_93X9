{"version":3,"sources":["../../../../src/admin/plugins/transformers/dateTransformer.ts"],"names":["WebinyError","transformDate","value","type","substr","excludeTypesTransformation","name","fieldType","transform","field","settings","console","log","fieldId","includes","replace","result","Date","toISOString","ex","message","code"],"mappings":"AACA,OAAOA,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAgBC,IAAhB,EAAuD;AACzE,MAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB,WAAOD,KAAK,CAACE,MAAN,CAAa,CAAb,EAAgB,EAAhB,CAAP;AACH;;AACD,SAAOF,KAAP;AACH,CALD;;AAOA,IAAMG,0BAA0B,GAAG,CAAC,MAAD,EAAS,sBAAT,CAAnC;AAEA,gBAAe;AAAA,SAAiC;AAC5CF,IAAAA,IAAI,EAAE,6BADsC;AAE5CG,IAAAA,IAAI,EAAE,kCAFsC;AAG5CC,IAAAA,SAAS,EAAE,UAHiC;AAI5CC,IAAAA,SAAS,EAAE,mBAACN,KAAD,EAAQO,KAAR,EAAkB;AACzB;AACA,UAAMN,IAAI,GAAGM,KAAK,CAACC,QAAN,CAAeP,IAA5B;;AACA,UAAI,CAACD,KAAL,EAAY;AACRS,QAAAA,OAAO,CAACC,GAAR,mBAAsBH,KAAK,CAACI,OAA5B;AACA,eAAO,IAAP;AACH,OAHD,MAGO,IAAIR,0BAA0B,CAACS,QAA3B,CAAoCX,IAApC,MAA8C,IAAlD,EAAwD;AAC3D,eAAOD,KAAP;AACH,OAFM,MAEA,IAAIC,IAAI,KAAK,yBAAT,IAAsCD,KAAK,CAACY,QAAN,CAAe,GAAf,CAA1C,EAA+D;AAClE;AACZ;AACA;AACYZ,QAAAA,KAAK,aAAMA,KAAK,CAACa,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAN,UAAL;AACH;;AACD,UAAI;AACA,YAAMC,MAAM,GAAG,IAAIC,IAAJ,CAASf,KAAT,EAAgBgB,WAAhB,EAAf;AACA,eAAOjB,aAAa,CAACe,MAAD,EAASb,IAAT,CAApB;AACH,OAHD,CAGE,OAAOgB,EAAP,EAAW;AACT,cAAM,IAAInB,WAAJ,iCAAwCE,KAAxC,oBAA6D,iBAA7D,EAAgF;AAClFkB,UAAAA,OAAO,EAAED,EAAE,CAACC,OADsE;AAElFC,UAAAA,IAAI,EAAEF,EAAE,CAACE;AAFyE,SAAhF,CAAN;AAIH;AACJ;AA3B2C,GAAjC;AAAA,CAAf","sourcesContent":["import { CmsFieldValueTransformer } from \"~/types\";\nimport WebinyError from \"@webiny/error\";\n\nconst transformDate = (value: string, type: \"date\" | \"datetime\" | \"time\") => {\n    if (type === \"date\") {\n        return value.substr(0, 10);\n    }\n    return value;\n};\n\nconst excludeTypesTransformation = [\"time\", \"dateTimeWithTimezone\"];\n\nexport default (): CmsFieldValueTransformer => ({\n    type: \"cms-field-value-transformer\",\n    name: \"cms-field-value-transformer-date\",\n    fieldType: \"datetime\",\n    transform: (value, field) => {\n        // check types in packages/app-headless-cms/src/admin/plugins/fieldRenderers/dateTime/dateTimeField.tsx\n        const type = field.settings.type;\n        if (!value) {\n            console.log(`Field \"${field.fieldId}\" has no value.`);\n            return null;\n        } else if (excludeTypesTransformation.includes(type) === true) {\n            return value;\n        } else if (type === \"dateTimeWithoutTimezone\" && value.includes(\" \")) {\n            /**\n             * Need to replace space and add .000Z to datetime value because it can look like: 2021-02-02 16:34:56\n             */\n            value = `${value.replace(\" \", \"T\")}.000Z`;\n        }\n        try {\n            const result = new Date(value).toISOString();\n            return transformDate(result, type);\n        } catch (ex) {\n            throw new WebinyError(`Could not transform \"${value}\" to a date.`, \"TRANSFORM_ERROR\", {\n                message: ex.message,\n                code: ex.code\n            });\n        }\n    }\n});\n"],"file":"dateTransformer.js"}