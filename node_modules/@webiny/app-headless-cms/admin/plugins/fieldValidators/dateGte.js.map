{"version":3,"sources":["../../../../src/admin/plugins/fieldValidators/dateGte.tsx"],"names":["React","Grid","Cell","validation","createInputField","getAvailableValidators","FormElementMessage","type","name","validator","label","description","defaultMessage","renderSettings","Bind","field","settings","availableValidators","join","bind","value","onChange","create"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,SAASC,gBAAT;AACA,SAASC,sBAAT;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AAEA,gBAAe;AAAA,SAAsC;AACjDC,IAAAA,IAAI,EAAE,4BAD2C;AAEjDC,IAAAA,IAAI,EAAE,qCAF2C;AAGjDC,IAAAA,SAAS,EAAE;AACPD,MAAAA,IAAI,EAAE,SADC;AAEPE,MAAAA,KAAK,EAAE,gBAFA;AAGPC,MAAAA,WAAW,EAAE,yEAHN;AAIPC,MAAAA,cAAc,+CAJP;AAKPC,MAAAA,cALO,gCAKyB;AAAA,YAAfC,IAAe,QAAfA,IAAe;AAAA,YAATC,KAAS,QAATA,KAAS;AAC5B,YAAMR,IAAI,GAAGQ,KAAK,CAACC,QAAN,CAAeT,IAA5B;AACA,YAAMU,mBAAmB,GAAGZ,sBAAsB,CAACE,IAAD,CAAtB,CAA6BW,IAA7B,CAAkC,GAAlC,CAA5B;AACA,4BACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAE;AAAZ,wBACI,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAE;AAAZ,WACK,UAAAC,IAAI,EAAI;AACL,cAAIA,IAAI,CAACC,KAAL,KAAeb,IAAnB,EAAyB;AACrBY,YAAAA,IAAI,CAACE,QAAL,CAAcd,IAAd;AACH;;AACD,8BAAO,yCAAP;AACH,SANL,CADJ,eASI,oBAAC,IAAD;AACI,UAAA,IAAI,EAAE,gBADV;AAEI,UAAA,UAAU,EAAEJ,UAAU,CAACmB,MAAX,CAAkBL,mBAAlB;AAFhB,WAIK,UAAAE,IAAI,EAAI;AACL,8BACI,0CACKf,gBAAgB,CAACW,KAAD,EAAQI,IAAR,CADrB,eAEI,oBAAC,kBAAD,+DAFJ,CADJ;AAQH,SAbL,CATJ,CADJ,CADJ;AA6BH;AArCM;AAHsC,GAAtC;AAAA,CAAf","sourcesContent":["import React from \"react\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { validation } from \"@webiny/validation\";\nimport { CmsEditorFieldValidatorPlugin } from \"~/types\";\nimport { createInputField } from \"./date/createDateInputField\";\nimport { getAvailableValidators } from \"./date/availableValidators\";\nimport { FormElementMessage } from \"@webiny/ui/FormElementMessage\";\n\nexport default (): CmsEditorFieldValidatorPlugin => ({\n    type: \"cms-editor-field-validator\",\n    name: \"cms-editor-field-validator-date-gte\",\n    validator: {\n        name: \"dateGte\",\n        label: \"Later or equal\",\n        description: \"Entered date/time must be equal or later compared to the provided date.\",\n        defaultMessage: `Date/time is earlier than the provided one.`,\n        renderSettings({ Bind, field }) {\n            const type = field.settings.type;\n            const availableValidators = getAvailableValidators(type).join(\",\");\n            return (\n                <Grid>\n                    <Cell span={12}>\n                        <Bind name={\"settings.type\"}>\n                            {bind => {\n                                if (bind.value !== type) {\n                                    bind.onChange(type);\n                                }\n                                return <></>;\n                            }}\n                        </Bind>\n                        <Bind\n                            name={\"settings.value\"}\n                            validators={validation.create(availableValidators)}\n                        >\n                            {bind => {\n                                return (\n                                    <>\n                                        {createInputField(field, bind)}\n                                        <FormElementMessage>\n                                            This is the earliest date/time that will be allowed.\n                                        </FormElementMessage>\n                                    </>\n                                );\n                            }}\n                        </Bind>\n                    </Cell>\n                </Grid>\n            );\n        }\n    }\n});\n"],"file":"dateGte.js"}