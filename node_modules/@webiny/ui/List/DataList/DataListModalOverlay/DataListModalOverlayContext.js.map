{"version":3,"sources":["../../../../src/List/DataList/DataListModalOverlay/DataListModalOverlayContext.tsx"],"names":["React","DataListModalOverlayContext","createContext","DataListModalOverlayProvider","children","useState","isOpen","setIsOpen"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,2BAA2B,gBAAGD,KAAK,CAACE,aAAN,CAAoB,IAApB,CAApC;AAMP,OAAO,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,OAAqD;AAAA,MAAlDC,QAAkD,QAAlDA,QAAkD;;AAC7F,wBAA4BJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAA5B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AAEA,sBACI,oBAAC,2BAAD,CAA6B,QAA7B;AAAsC,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,SAAS,EAATA;AAAV;AAA7C,KACKH,QADL,CADJ;AAKH,CARM","sourcesContent":["import React from \"react\";\n\nexport const DataListModalOverlayContext = React.createContext(null);\n\nexport type DataListModalOverlayProviderProps = {\n    children?: React.ReactChild | React.ReactChild[];\n};\n\nexport const DataListModalOverlayProvider = ({ children }: DataListModalOverlayProviderProps) => {\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    return (\n        <DataListModalOverlayContext.Provider value={{ isOpen, setIsOpen }}>\n            {children}\n        </DataListModalOverlayContext.Provider>\n    );\n};\n"],"file":"DataListModalOverlayContext.js"}