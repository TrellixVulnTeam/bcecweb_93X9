{"version":3,"sources":["../../../../src/List/DataList/DataListModalOverlay/DataListModalOverlay.tsx"],"names":["React","useContext","styled","DataListModalOverlayContext","SimpleOverlay","showOverlay","width","height","position","top","left","backgroundColor","transition","pointerEvents","zIndex","opacity","DataListModalWrapper","maxWidth","maxHeight","overflow","boxShadow","borderRadius","transform","paddingBottom","padding","display","justifyContent","color","border","DataListModalOverlay","onDismiss","children","isOpen","setIsOpen","e","stopPropagation"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { DataListModalOverlayContext } from \"./DataListModalOverlayContext\";\n\nexport type SimpleOverlayProps = { showOverlay: boolean };\nexport const SimpleOverlay = styled<\"div\", SimpleOverlayProps>(\"div\")(({ showOverlay }) => ({\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    backgroundColor: showOverlay ? \"rgba(0, 0, 0, 0.32)\" : \"transparent\",\n    transition: \"150ms all ease-in-out\",\n    pointerEvents: showOverlay ? \"auto\" : \"none\",\n    zIndex: showOverlay ? 5 : -1,\n    opacity: showOverlay ? 1 : 0\n}));\n\nexport type DataListModalWrapperProps = { showOverlay: boolean };\nexport const DataListModalWrapper = styled<\"div\", DataListModalWrapperProps>(\"div\")(\n    ({ showOverlay }) => ({\n        position: \"absolute\",\n        top: \"0px\",\n        left: \"50%\",\n        width: \"90%\",\n        height: \"auto\",\n        maxWidth: \"426px\",\n        maxHeight: \"520px\",\n        overflow: \"auto\",\n        backgroundColor: \"var(--mdc-theme-surface)\",\n        boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.12)\",\n        borderRadius: \"0px 0px 4px 4px\",\n        transition: \"150ms opacity ease-in-out\",\n        pointerEvents: showOverlay ? \"auto\" : \"none\",\n        zIndex: showOverlay ? 5 : -1,\n        opacity: showOverlay ? 1 : 0,\n        transform: showOverlay ? \"translateX(-50%)\" : \"translateX(-1000px)\",\n\n        \"& .input-wrapper\": {\n            paddingBottom: \"16px\"\n        },\n\n        \"& .datalist-modal__footer\": {\n            padding: \"24px\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            \"& .mdc-button\": {\n                borderRadius: 4,\n                padding: \"0px 32px\"\n            },\n            \"& .datalist-modal__footer__action--secondary\": {\n                color: \"var(--mdc-theme-text-primary-on-background)\",\n                border: \"1px solid var(--mdc-theme-on-background)\"\n            },\n            \"& .datalist-modal__footer__action--primary\": {\n                backgroundColor: \"var(--mdc-theme-secondary)\"\n            }\n        }\n    })\n);\n\nexport type DataListModalOverlayProps = {\n    /*\n     * This function is called after closing the modal overlay.\n     */\n    onDismiss?: (event?: React.SyntheticEvent) => void;\n    /*\n     * Accepts any renderable content.\n     */\n    children: React.ReactNode;\n};\n\nexport const DataListModalOverlay = ({ onDismiss, children }: DataListModalOverlayProps) => {\n    const { isOpen, setIsOpen } = useContext(DataListModalOverlayContext);\n    return (\n        <React.Fragment>\n            <SimpleOverlay\n                onClick={e => {\n                    e.stopPropagation();\n                    // Close the modal.\n                    setIsOpen(false);\n\n                    if (typeof onDismiss === \"function\") {\n                        onDismiss();\n                    }\n                }}\n                showOverlay={isOpen}\n            />\n            <DataListModalWrapper showOverlay={isOpen}>{children}</DataListModalWrapper>\n        </React.Fragment>\n    );\n};\n"],"file":"DataListModalOverlay.js"}