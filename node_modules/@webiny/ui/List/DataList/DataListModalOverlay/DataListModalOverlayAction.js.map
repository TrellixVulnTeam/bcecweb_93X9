{"version":3,"sources":["../../../../src/List/DataList/DataListModalOverlay/DataListModalOverlayAction.tsx"],"names":["React","useContext","IconButton","DataListModalOverlayContext","DataListModalOverlayAction","icon","rest","isOpen","setIsOpen"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT;AACA,SAASC,2BAAT;AAOA,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,OAAwD;AAAA,MAArDC,IAAqD,QAArDA,IAAqD;AAAA,MAA5CC,IAA4C;;AAC9F,oBAA8BL,UAAU,CAACE,2BAAD,CAAxC;AAAA,MAAQI,MAAR,eAAQA,MAAR;AAAA,MAAgBC,SAAhB,eAAgBA,SAAhB;;AAEA,sBACI,oBAAC,UAAD;AACI,mBAAaF,IAAI,CAAC,aAAD,CADrB;AAEI,IAAA,IAAI,EAAED,IAFV;AAGI,IAAA,OAAO,EAAE;AAAA,aAAMG,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA;AAHb,IADJ;AAOH,CAVM","sourcesContent":["import React, { useContext } from \"react\";\nimport { IconButton } from \"../../../Button\";\nimport { DataListModalOverlayContext } from \"./DataListModalOverlayContext\";\n\nexport type DataListModalOverlayActionProps = {\n    icon: React.ReactNode;\n    \"data-testid\"?: string;\n};\n\nexport const DataListModalOverlayAction = ({ icon, ...rest }: DataListModalOverlayActionProps) => {\n    const { isOpen, setIsOpen } = useContext(DataListModalOverlayContext);\n\n    return (\n        <IconButton\n            data-testid={rest[\"data-testid\"]}\n            icon={icon}\n            onClick={() => setIsOpen(!isOpen)}\n        />\n    );\n};\n"],"file":"DataListModalOverlayAction.js"}