import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["className", "width", "height", "src", "alt", "fallbackText", "renderImage"];
import * as React from "react";
import { css } from "emotion";
import classNames from "classnames";
var avatar = /*#__PURE__*/css({
  borderRadius: "50%",
  display: "block",
  //alignItems: "center",
  //justifyContent: "center",
  width: 38,
  height: 38,
  position: "relative",
  top: -7,
  right: 7,
  overflow: "hidden",
  background: "var(--mdc-theme-background)",
  color: "var(--mdc-theme-text-secondary-on-background)",
  div: {
    textAlign: "center",
    display: "flex",
    alignContent: "center",
    justifyContent: "center",
    flexDirection: "column",
    width: 38,
    height: 38,
    fontSize: "1rem",
    span: {
      paddingBottom: 2
    }
  },
  img: {
    width: "100% !important",
    height: "100% !important",
    objectFit: "cover"
  }
}, "label:avatar;");

/**
 * Use Avatar component to display user's avatar.
 */
export var Avatar = function Avatar(props) {
  var className = props.className,
      width = props.width,
      height = props.height,
      src = props.src,
      alt = props.alt,
      fallbackText = props.fallbackText,
      renderImage = props.renderImage,
      rest = _objectWithoutProperties(props, _excluded);

  var renderedImage;
  var imageProps = {
    src: src,
    alt: alt
  };

  if (typeof renderImage === "function") {
    renderedImage = renderImage(imageProps);
  } else {
    renderedImage = /*#__PURE__*/React.createElement("img", Object.assign({}, imageProps, {
      alt: alt
    }));
  }

  return /*#__PURE__*/React.createElement("div", Object.assign({}, rest, {
    className: classNames(avatar, className),
    style: _objectSpread(_objectSpread({}, props.style), {}, {
      width: width,
      height: height
    })
  }), props.src ? renderedImage : /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("span", null, fallbackText.split(" ").map(function (word) {
    return word.charAt(0);
  }).join("").toUpperCase())));
};
Avatar.defaultProps = {
  width: 38,
  height: 38
};
//# sourceMappingURL=Avatar.js.map