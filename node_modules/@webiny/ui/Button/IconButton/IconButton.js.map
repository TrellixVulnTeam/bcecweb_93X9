{"version":3,"sources":["../../../src/Button/IconButton/IconButton.tsx"],"names":["React","IconButton","RIconButton","props","id","icon","label","onClick","className","disabled","ripple"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACIC,UAAU,IAAIC,WADlB,QAGO,mBAHP;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMD,UAAU,GAAG,SAAbA,UAAa,CAACE,KAAD,EAA4B;AAC3C,MAAQC,EAAR,GAAyED,KAAzE,CAAQC,EAAR;AAAA,MAAYC,IAAZ,GAAyEF,KAAzE,CAAYE,IAAZ;AAAA,MAAkBC,KAAlB,GAAyEH,KAAzE,CAAkBG,KAAlB;AAAA,MAAyBC,OAAzB,GAAyEJ,KAAzE,CAAyBI,OAAzB;AAAA,MAAkCC,SAAlC,GAAyEL,KAAzE,CAAkCK,SAAlC;AAAA,MAA6CC,QAA7C,GAAyEN,KAAzE,CAA6CM,QAA7C;AAAA,sBAAyEN,KAAzE,CAAuDO,MAAvD;AAAA,MAAuDA,MAAvD,8BAAgE,IAAhE;AAEA,sBACI,oBAAC,WAAD;AACI,IAAA,EAAE,EAAEN,EADR;AAEI,mBAAaD,KAAK,CAAC,aAAD,CAFtB;AAGI,IAAA,OAAO,EAAEI,OAHb;AAII,IAAA,QAAQ,EAAEE,QAJd;AAKI,IAAA,SAAS,EAAED,SALf;AAMI,IAAA,KAAK,EAAEF,KANX;AAOI,IAAA,IAAI,EAAED,IAPV;AAQI,IAAA,MAAM,EAAEK;AARZ,IADJ;AAYH,CAfD;;AAiBA,SAAST,UAAT","sourcesContent":["import * as React from \"react\";\nimport {\n    IconButton as RIconButton,\n    IconButtonProps as RmwcIconButtonProps\n} from \"@rmwc/icon-button\";\n\nimport { FormComponentProps } from \"../../types\";\n\nexport type IconButtonProps = FormComponentProps &\n    RmwcIconButtonProps & {\n        id?: string;\n        /**\n         * Icon should be provided as an SvgComponent.\n         */\n        icon: React.ReactNode;\n\n        /**\n         * Button label\n         */\n        label?: string;\n\n        /**\n         * onClick handler\n         * @param event\n         */\n        onClick?: (event: React.MouseEvent) => void;\n\n        /**\n         * Custom CSS class\n         */\n        className?: string;\n        /**\n         * For testing purposes.\n         */\n\n        \"data-testid\"?: string;\n\n        /**\n         * Should icon be disabled?\n         */\n        disabled?: boolean;\n    };\n\n/**\n * Shows the icon button.\n * @param props\n * @returns {*}\n * @constructor\n */\nconst IconButton = (props: IconButtonProps) => {\n    const { id, icon, label, onClick, className, disabled, ripple = true } = props;\n\n    return (\n        <RIconButton\n            id={id}\n            data-testid={props[\"data-testid\"]}\n            onClick={onClick}\n            disabled={disabled}\n            className={className}\n            label={label}\n            icon={icon}\n            ripple={ripple}\n        />\n    );\n};\n\nexport { IconButton };\n"],"file":"IconButton.js"}