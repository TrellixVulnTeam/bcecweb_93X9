{"version":3,"sources":["../../src/Tabs/Tabs.tsx"],"names":["React","classNames","TabBar","Tab","disabledStyles","opacity","pointerEvents","Tabs","activeTabIndex","props","updateValue","setState","children","activeIndex","tabs","Children","toArray","filter","c","map","child","label","icon","disabled","style","tabBar","evt","detail","index","onActivate","item","Object","assign","content","i","length","current","push","display","className","value","undefined","state","switchTab","bind","renderChildren","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,GAAT;AAqCA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,OAAO,EAAE,GADU;AAEnBC,EAAAA,aAAa,EAAE;AAFI,CAAvB;AAKA;AACA;AACA;;AACA,WAAaC,IAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,4DACY;AACJC,MAAAA,cAAc,EAAE;AADZ,KADZ;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAKI,mBAAUA,cAAV,EAA0B;AACtB,UAAI,OAAO,KAAKC,KAAL,CAAWC,WAAlB,KAAkC,UAAtC,EAAkD;AAC9C,aAAKD,KAAL,CAAWC,WAAX,CAAuBF,cAAvB;AACH,OAFD,MAEO;AACH,aAAKG,QAAL,CAAc;AAAEH,UAAAA,cAAc,EAAdA;AAAF,SAAd;AACH;AACJ;AAXL;AAAA;AAAA,WAaI,wBAAeI,QAAf,EAAyBC,WAAzB,EAAsC;AAAA;;AAClC,UAAMC,IAAI,GAAGd,KAAK,CAACe,QAAN,CAAeC,OAAf,CAAuBJ,QAAvB,EACRK,MADQ,CACD,UAAAC,CAAC;AAAA,eAAIA,CAAC,KAAK,IAAV;AAAA,OADA,EAERC,GAFQ,CAEJ,UAACC,KAAD,EAAyC;AAC1C,eAAO;AACHC,UAAAA,KAAK,EAAED,KAAK,CAACX,KAAN,CAAYY,KADhB;AAEHT,UAAAA,QAAQ,EAAEQ,KAAK,CAACX,KAAN,CAAYG,QAFnB;AAGHU,UAAAA,IAAI,EAAEF,KAAK,CAACX,KAAN,CAAYa,IAHf;AAIHC,UAAAA,QAAQ,EAAEH,KAAK,CAACX,KAAN,CAAYc,QAJnB;AAKHC,UAAAA,KAAK,EAAEJ,KAAK,CAACX,KAAN,CAAYe,KALhB;AAMH,yBAAeJ,KAAK,CAACX,KAAN,CAAY,aAAZ;AANZ,SAAP;AAQH,OAXQ,CAAb;AAaA,UAAMgB,MAAM,gBACR,oBAAC,MAAD;AACI,QAAA,SAAS,EAAC,yBADd;AAEI,QAAA,cAAc,EAAEZ,WAFpB;AAGI,QAAA,UAAU,EAAE,oBAAAa,GAAG,EAAI;AACf,cAAI,OAAO,MAAI,CAACjB,KAAL,CAAWC,WAAlB,KAAkC,UAAtC,EAAkD;AAC9C,YAAA,MAAI,CAACD,KAAL,CAAWC,WAAX,CAAuBgB,GAAG,CAACC,MAAJ,CAAWC,KAAlC;AACH,WAFD,MAEO;AACH,YAAA,MAAI,CAACjB,QAAL,CAAc;AAAEH,cAAAA,cAAc,EAAEkB,GAAG,CAACC,MAAJ,CAAWC;AAA7B,aAAd;AACH;;AACD,UAAA,MAAI,CAACnB,KAAL,CAAWoB,UAAX,IAAyB,MAAI,CAACpB,KAAL,CAAWoB,UAAX,CAAsBH,GAAG,CAACC,MAAJ,CAAWC,KAAjC,CAAzB;AACH;AAVL,SAYKd,IAAI,CAACK,GAAL,CAAS,UAACW,IAAD,EAAiBF,KAAjB,EAA2B;AACjC,YAAMJ,KAAK,GAAGM,IAAI,CAACN,KAAL,IAAc,EAA5B;;AACA,YAAIM,IAAI,CAACP,QAAT,EAAmB;AACfQ,UAAAA,MAAM,CAACC,MAAP,CAAcR,KAAd,EAAqBpB,cAArB;AACH;;AAED,4BACI,oBAAC,GAAD;AACI,UAAA,GAAG,EAAE,KADT;AAEI,UAAA,KAAK,EAAEoB,KAFX;AAGI,UAAA,GAAG,EAAEM,IAAI,CAACT,KAAL,GAAa,GAAb,GAAmBO,KAH5B;AAII,yBAAaE,IAAI,CAAC,aAAD;AAJrB,WAKSA,IAAI,CAACR,IAAL,GAAY;AAAEA,UAAAA,IAAI,EAAEQ,IAAI,CAACR;AAAb,SAAZ,GAAkC,EAL3C,EAMSQ,IAAI,CAACT,KAAL,GAAa;AAAEA,UAAAA,KAAK,EAAES,IAAI,CAACT;AAAd,SAAb,GAAqC,EAN9C,EADJ;AAUH,OAhBA,CAZL,CADJ;AAiCA,UAAMY,OAAO,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,IAAI,CAACqB,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,YAAME,OAAO,GAAGtB,IAAI,CAACoB,CAAD,CAApB;;AACA,YAAIrB,WAAW,KAAKqB,CAApB,EAAuB;AACnBD,UAAAA,OAAO,CAACI,IAAR,eAAa;AAAK,YAAA,GAAG,EAAEH;AAAV,aAAcE,OAAO,CAACxB,QAAtB,CAAb;AACH,SAFD,MAEO;AACHqB,UAAAA,OAAO,CAACI,IAAR,eACI;AAAK,YAAA,GAAG,EAAEH,CAAV;AAAa,YAAA,KAAK,EAAE;AAAEI,cAAAA,OAAO,EAAE;AAAX;AAApB,aACKF,OAAO,CAACxB,QADb,CADJ;AAKH;AACJ;;AAED,0BACI;AAAK,QAAA,SAAS,EAAEX,UAAU,CAAC,gBAAD,EAAmB,KAAKQ,KAAL,CAAW8B,SAA9B;AAA1B,SACKd,MADL,eAEI;AAAK,QAAA,SAAS,EAAE;AAAhB,SAA4DQ,OAA5D,CAFJ,CADJ;AAMH;AAhFL;AAAA;AAAA,WAkFI,kBAAS;AACL,UAAMpB,WAAW,GACb,KAAKJ,KAAL,CAAW+B,KAAX,KAAqBC,SAArB,GAAiC,KAAKhC,KAAL,CAAW+B,KAA5C,GAAoD,KAAKE,KAAL,CAAWlC,cADnE;AAGA,UAAII,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAA1B;;AACA,UAAI,OAAO,KAAKH,KAAL,CAAWG,QAAlB,KAA+B,UAAnC,EAA+C;AAC3C;AACAA,QAAAA,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAAX,CAAoB;AAAE+B,UAAAA,SAAS,EAAE,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB;AAAb,SAApB,CAAX;AACH;;AAED,aAAO,KAAKC,cAAL,CAAoBjC,QAApB,EAA8BC,WAA9B,CAAP;AACH;AA7FL;;AAAA;AAAA,EAA0Bb,KAAK,CAAC8C,SAAhC","sourcesContent":["import React, { ReactNode } from \"react\";\nimport classNames from \"classnames\";\nimport { TabBar } from \"@rmwc/tabs\";\nimport { Tab, TabProps } from \"./Tab\";\n\nexport type TabsRenderProps = {\n    switchTab(tabIndex: number): void;\n};\n\nexport type TabsProps = {\n    /**\n     * A collection of tabs that needs to be rendered.\n     */\n    children: ((props: TabsRenderProps) => ReactNode) | ReactNode;\n\n    /**\n     * Append a class name.\n     */\n    className?: string;\n\n    /**\n     * Callback to execute when a tab is changed.\n     */\n    onActivate?: (index: number) => void;\n\n    /**\n     * Active tab index value.\n     */\n    value?: number;\n\n    /**\n     * Function to change active tab.\n     */\n    updateValue?: (index: number) => void;\n};\n\ntype State = {\n    activeTabIndex: number;\n};\n\nconst disabledStyles = {\n    opacity: 0.5,\n    pointerEvents: \"none\"\n};\n\n/**\n * Use Tabs component to display a list of choices, once the handler is triggered.\n */\nexport class Tabs extends React.Component<TabsProps, State> {\n    state = {\n        activeTabIndex: 0\n    };\n\n    switchTab(activeTabIndex) {\n        if (typeof this.props.updateValue === \"function\") {\n            this.props.updateValue(activeTabIndex);\n        } else {\n            this.setState({ activeTabIndex });\n        }\n    }\n\n    renderChildren(children, activeIndex) {\n        const tabs = React.Children.toArray(children)\n            .filter(c => c !== null)\n            .map((child: React.ReactElement<TabProps>) => {\n                return {\n                    label: child.props.label,\n                    children: child.props.children,\n                    icon: child.props.icon,\n                    disabled: child.props.disabled,\n                    style: child.props.style,\n                    \"data-testid\": child.props[\"data-testid\"]\n                };\n            });\n\n        const tabBar = (\n            <TabBar\n                className=\"webiny-ui-tabs__tab-bar\"\n                activeTabIndex={activeIndex}\n                onActivate={evt => {\n                    if (typeof this.props.updateValue === \"function\") {\n                        this.props.updateValue(evt.detail.index);\n                    } else {\n                        this.setState({ activeTabIndex: evt.detail.index });\n                    }\n                    this.props.onActivate && this.props.onActivate(evt.detail.index);\n                }}\n            >\n                {tabs.map((item: TabProps, index) => {\n                    const style = item.style || {};\n                    if (item.disabled) {\n                        Object.assign(style, disabledStyles);\n                    }\n\n                    return (\n                        <Tab\n                            tag={\"div\"}\n                            style={style}\n                            key={item.label + \"-\" + index}\n                            data-testid={item[\"data-testid\"]}\n                            {...(item.icon ? { icon: item.icon } : {})}\n                            {...(item.label ? { label: item.label } : {})}\n                        />\n                    );\n                })}\n            </TabBar>\n        );\n\n        const content = [];\n        for (let i = 0; i < tabs.length; i++) {\n            const current = tabs[i];\n            if (activeIndex === i) {\n                content.push(<div key={i}>{current.children}</div>);\n            } else {\n                content.push(\n                    <div key={i} style={{ display: \"none\" }}>\n                        {current.children}\n                    </div>\n                );\n            }\n        }\n\n        return (\n            <div className={classNames(\"webiny-ui-tabs\", this.props.className)}>\n                {tabBar}\n                <div className={\"webiny-ui-tabs__content mdc-tab-content\"}>{content}</div>\n            </div>\n        );\n    }\n\n    render() {\n        const activeIndex =\n            this.props.value !== undefined ? this.props.value : this.state.activeTabIndex;\n\n        let children = this.props.children;\n        if (typeof this.props.children === \"function\") {\n            // @ts-ignore\n            children = this.props.children({ switchTab: this.switchTab.bind(this) });\n        }\n\n        return this.renderChildren(children, activeIndex);\n    }\n}\n"],"file":"Tabs.js"}