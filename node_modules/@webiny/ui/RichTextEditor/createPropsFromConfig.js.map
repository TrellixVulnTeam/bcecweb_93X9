{"version":3,"sources":["../../src/RichTextEditor/createPropsFromConfig.ts"],"names":["createPropsFromConfig","config","configs","Array","isArray","onReady","editor","forEach","tools","reduce","Object","assign"],"mappings":"AAEA;AACA;AACA;AACA,OAAO,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,MAAD,EAA0C;AAC3E,MAAMC,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAcH,MAAd,IAAwBA,MAAxB,GAAiC,CAACA,MAAD,CAAjD;AAEA,SAAO;AACHI,IAAAA,OADG,mBACKC,MADL,EACa;AACZJ,MAAAA,OAAO,CAACK,OAAR,CAAgB,UAAAN,MAAM,EAAI;AACtB,YAAI,OAAOA,MAAM,CAACI,OAAd,KAA0B,UAA9B,EAA0C;AACtCJ,UAAAA,MAAM,CAACI,OAAP,CAAeC,MAAf;AACH;AACJ,OAJD;AAKH,KAPE;AAQHE,IAAAA,KAAK,EAAEN,OAAO,CAACO,MAAR,CAAe,UAACD,KAAD,EAAQP,MAAR,EAAmB;AACrC,aAAOS,MAAM,CAACC,MAAP,CAAcH,KAAd,EAAqBP,MAAM,CAACO,KAA5B,CAAP;AACH,KAFM,EAEJ,EAFI;AARJ,GAAP;AAYH,CAfM","sourcesContent":["import { RichTextEditorProps } from \"./RichTextEditor\";\n\n/**\n * Creates RichTextEditor props from the given config (or array of configs).\n */\nexport const createPropsFromConfig = (config): Partial<RichTextEditorProps> => {\n    const configs = Array.isArray(config) ? config : [config];\n\n    return {\n        onReady(editor) {\n            configs.forEach(config => {\n                if (typeof config.onReady === \"function\") {\n                    config.onReady(editor);\n                }\n            });\n        },\n        tools: configs.reduce((tools, config) => {\n            return Object.assign(tools, config.tools);\n        }, {})\n    };\n};\n"],"file":"createPropsFromConfig.js"}