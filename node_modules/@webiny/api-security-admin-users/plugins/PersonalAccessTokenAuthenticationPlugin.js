"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PersonalAccessTokenAuthenticationPlugin = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _apiSecurity = require("@webiny/api-security");

var _AuthenticationPlugin = require("@webiny/api-security/plugins/AuthenticationPlugin");

class PersonalAccessTokenAuthenticationPlugin extends _AuthenticationPlugin.AuthenticationPlugin {
  constructor(config) {
    super();
    (0, _defineProperty2.default)(this, "_config", void 0);
    this._config = config;
  }

  async authenticate(context) {
    const {
      headers
    } = context.http.request;
    const header = headers["Authorization"] || headers["authorization"];
    const token = header ? header.split(" ").pop() : null;

    if (!token || !token.startsWith("p")) {
      return;
    } // Try loading a User using the value from header


    const user = await context.security.users.getUserByPersonalAccessToken(token);

    if (user) {
      return new _apiSecurity.SecurityIdentity({
        id: user.login,
        type: this._config.identityType,
        displayName: `${user.firstName} ${user.lastName}`,
        firstName: user.firstName,
        lastName: user.lastName
      });
    }
  }

}

exports.PersonalAccessTokenAuthenticationPlugin = PersonalAccessTokenAuthenticationPlugin;
//# sourceMappingURL=PersonalAccessTokenAuthenticationPlugin.js.map