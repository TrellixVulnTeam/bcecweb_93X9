{"version":3,"sources":["../../src/plugins/UserPlugin.ts"],"names":["UserPlugin","Plugin","constructor","config","_config","beforeCreate","params","_execute","afterCreate","afterUpdate","beforeUpdate","beforeDelete","afterDelete","onLogin","callback"],"mappings":";;;;;;;;;;;AAAA;;AAgDO,MAAMA,UAAN,SAGGC,eAHH,CAGU;AAIbC,EAAAA,WAAW,CAACC,MAAD,EAAiC;AACxC;AADwC;AAExC,SAAKC,OAAL,GAAeD,MAAM,IAAI,EAAzB;AACH;;AAEDE,EAAAA,YAAY,CAACC,MAAD,EAAmD;AAC3D,WAAO,KAAKC,QAAL,CAAc,cAAd,EAA8BD,MAA9B,CAAP;AACH;;AAEDE,EAAAA,WAAW,CAACF,MAAD,EAAmD;AAC1D,WAAO,KAAKC,QAAL,CAAc,aAAd,EAA6BD,MAA7B,CAAP;AACH;;AAEDG,EAAAA,WAAW,CAACH,MAAD,EAAwD;AAC/D,WAAO,KAAKC,QAAL,CAAc,aAAd,EAA6BD,MAA7B,CAAP;AACH;;AAEDI,EAAAA,YAAY,CAACJ,MAAD,EAAyD;AACjE,WAAO,KAAKC,QAAL,CAAc,cAAd,EAA8BD,MAA9B,CAAP;AACH;;AAEDK,EAAAA,YAAY,CAACL,MAAD,EAAmD;AAC3D,WAAO,KAAKC,QAAL,CAAc,cAAd,EAA8BD,MAA9B,CAAP;AACH;;AAEDM,EAAAA,WAAW,CAACN,MAAD,EAAmD;AAC1D,WAAO,KAAKC,QAAL,CAAc,aAAd,EAA6BD,MAA7B,CAAP;AACH;;AAEDO,EAAAA,OAAO,CAACP,MAAD,EAAoD;AACvD,WAAO,KAAKC,QAAL,CAAc,SAAd,EAAyBD,MAAzB,CAAP;AACH;;AAEOC,EAAAA,QAAQ,CAACO,QAAD,EAAWR,MAAX,EAAmB;AAC/B,QAAI,OAAO,KAAKF,OAAL,CAAaU,QAAb,CAAP,KAAkC,UAAtC,EAAkD;AAC9C,aAAO,KAAKV,OAAL,CAAaU,QAAb,EAAuBR,MAAvB,CAAP;AACH;AACJ;;AAzCY;;;8BAHJN,U,UAIqB,e","sourcesContent":["import { Plugin } from \"@webiny/plugins\";\nimport { AdminUsersContext, User as BaseUser } from \"~/types\";\n\ntype PromiseVoid = void | Promise<void>;\n\nexport interface CreateParams<User, Context> {\n    context: Context;\n    user: User;\n    inputData: Record<string, any>;\n}\n\nexport interface BeforeUpdateParams<User, Context> {\n    context: Context;\n    user: User;\n    readonly inputData: Record<string, any>;\n    updateData: Partial<User>;\n}\n\nexport interface AfterUpdateParams<User, Context> {\n    context: Context;\n    user: User;\n    readonly inputData: Record<string, any>;\n}\n\nexport interface DeleteParams<User, Context> {\n    context: Context;\n    user: User;\n}\n\nexport interface OnLoginParams<User, Context> {\n    context: Context;\n    user: User;\n    firstLogin: boolean;\n}\n\ninterface Config<\n    User extends BaseUser = BaseUser,\n    Context extends AdminUsersContext = AdminUsersContext\n> {\n    beforeCreate?: (params: CreateParams<User, Context>) => PromiseVoid;\n    afterCreate?: (params: CreateParams<User, Context>) => PromiseVoid;\n    beforeUpdate?: (params: BeforeUpdateParams<User, Context>) => PromiseVoid;\n    afterUpdate?: (params: AfterUpdateParams<User, Context>) => PromiseVoid;\n    beforeDelete?: (params: DeleteParams<User, Context>) => PromiseVoid;\n    afterDelete?: (params: DeleteParams<User, Context>) => PromiseVoid;\n    onLogin?: (params: OnLoginParams<User, Context>) => PromiseVoid;\n}\n\nexport class UserPlugin<\n    User extends BaseUser = BaseUser,\n    Context extends AdminUsersContext = AdminUsersContext\n> extends Plugin {\n    public static readonly type = \"security.user\";\n    private readonly _config: Config<User, Context>;\n\n    constructor(config?: Config<User, Context>) {\n        super();\n        this._config = config || {};\n    }\n\n    beforeCreate(params: CreateParams<User, Context>): PromiseVoid {\n        return this._execute(\"beforeCreate\", params);\n    }\n\n    afterCreate(params: CreateParams<User, Context>): PromiseVoid {\n        return this._execute(\"afterCreate\", params);\n    }\n\n    afterUpdate(params: AfterUpdateParams<User, Context>): PromiseVoid {\n        return this._execute(\"afterUpdate\", params);\n    }\n\n    beforeUpdate(params: BeforeUpdateParams<User, Context>): PromiseVoid {\n        return this._execute(\"beforeUpdate\", params);\n    }\n\n    beforeDelete(params: DeleteParams<User, Context>): PromiseVoid {\n        return this._execute(\"beforeDelete\", params);\n    }\n\n    afterDelete(params: DeleteParams<User, Context>): PromiseVoid {\n        return this._execute(\"afterDelete\", params);\n    }\n\n    onLogin(params: OnLoginParams<User, Context>): PromiseVoid {\n        return this._execute(\"onLogin\", params);\n    }\n\n    private _execute(callback, params) {\n        if (typeof this._config[callback] === \"function\") {\n            return this._config[callback](params);\n        }\n    }\n}\n"],"file":"UserPlugin.js"}