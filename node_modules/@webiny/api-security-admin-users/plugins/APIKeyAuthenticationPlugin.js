"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.APIKeyAuthenticationPlugin = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _apiSecurity = require("@webiny/api-security");

var _AuthenticationPlugin = require("@webiny/api-security/plugins/AuthenticationPlugin");

class APIKeyAuthenticationPlugin extends _AuthenticationPlugin.AuthenticationPlugin {
  constructor(config) {
    super();
    (0, _defineProperty2.default)(this, "_config", void 0);
    this._config = config || {};
  }

  async authenticate(context) {
    const {
      headers
    } = context.http.request;
    const header = headers["Authorization"] || headers["authorization"];
    const token = header ? header.split(" ").pop() : null;

    if (!token || !token.startsWith("a")) {
      return;
    }

    const identityType = this._config.identityType || "api-key";
    const apiKey = await context.security.apiKeys.getApiKeyByToken(token);

    if (apiKey) {
      return new _apiSecurity.SecurityIdentity({
        id: apiKey.id,
        displayName: apiKey.name,
        type: identityType,
        // Add permissions directly to the identity so we don't have to load them
        // again when authorization kicks in.
        permissions: apiKey.permissions
      });
    }
  }

}

exports.APIKeyAuthenticationPlugin = APIKeyAuthenticationPlugin;
//# sourceMappingURL=APIKeyAuthenticationPlugin.js.map