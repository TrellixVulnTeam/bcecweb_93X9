"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getStorageOperations = void 0;

var _error = _interopRequireDefault(require("@webiny/error"));

const getStorageOperations = async (context, type) => {
  const providers = context.plugins.byType(type);
  /**
   * Always take the last given provider - although if everything is loaded as it must, there should not be more than one.
   * We do not check/verify for multiple providers.
   */

  const provider = providers.pop();

  if (!provider) {
    throw new _error.default(`Could not find a "${type}" plugin registered.`, "PROVIDER_PLUGIN_ERROR", {
      type
    });
  }

  return await provider.provide({
    context
  });
};

exports.getStorageOperations = getStorageOperations;
//# sourceMappingURL=storageOperations.js.map