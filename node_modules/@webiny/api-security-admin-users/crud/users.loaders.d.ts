import DataLoader from "dataloader";
import { Tenant } from "@webiny/api-tenancy/types";
import { AdminUsersContext, TenantAccess, User, UserStorageOperations } from "../types";
interface Params {
    context: AdminUsersContext;
    storageOperations: UserStorageOperations;
}
export declare class UserLoaders {
    private readonly loaders;
    private readonly context;
    private readonly storageOperations;
    constructor(params: Params);
    get getUser(): DataLoader<any, any, any>;
    get getUserAccess(): DataLoader<any, any, any>;
    private _getUserLoader;
    private _getUserAccess;
    clearLoadersCache(ids: string): void;
    updateDataLoaderUserCache(id: string, data: Partial<User>): Promise<void>;
    addDataLoaderAccessCache(id: string, data: TenantAccess): Promise<void>;
    clearDataLoaderAccessCache(id: string): void;
    deleteDataLoaderAccessCache(id: string, tenant: Tenant): Promise<void>;
}
export {};
