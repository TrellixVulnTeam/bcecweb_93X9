{"version":3,"sources":["../../src/crud/paginateBatch.ts"],"names":["paginateBatch","items","perPage","execute","pages","Math","ceil","length","i","slice"],"mappings":";;;;;;;AAEO,MAAMA,aAAa,GAAG,OACzBC,KADyB,EAEzBC,OAFyB,EAGzBC,OAHyB,KAIxB;AACD,QAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,CAACM,MAAN,GAAeL,OAAzB,CAAd;;AACA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAApB,EAA2BI,CAAC,EAA5B,EAAgC;AAC5B,UAAML,OAAO,CAACF,KAAK,CAACQ,KAAN,CAAYD,CAAC,GAAGN,OAAhB,EAAyBM,CAAC,GAAGN,OAAJ,GAAcA,OAAvC,CAAD,CAAb;AACH;AACJ,CATM","sourcesContent":["type TItem = Record<string, any>;\n\nexport const paginateBatch = async <T = TItem>(\n    items: T[],\n    perPage: number,\n    execute: (items: T[]) => Promise<any>\n) => {\n    const pages = Math.ceil(items.length / perPage);\n    for (let i = 0; i < pages; i++) {\n        await execute(items.slice(i * perPage, i * perPage + perPage));\n    }\n};\n"],"file":"paginateBatch.js"}