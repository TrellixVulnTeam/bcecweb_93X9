"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ContextPlugin = require("@webiny/handler/plugins/ContextPlugin");

var _users = _interopRequireDefault(require("./crud/users.crud"));

var _groups = _interopRequireDefault(require("./crud/groups.crud"));

var _apiKey = _interopRequireDefault(require("./crud/apiKey.crud"));

var _system = _interopRequireDefault(require("./crud/system.crud"));

var _default = () => {
  /**
   * We need the base context to initialize the security variable on the context
   * and to add deprecation warnings on old methods.
   */
  const baseContext = new _ContextPlugin.ContextPlugin(async context => {
    if (!context.security) {
      context.security = {};
    } // @ts-ignore


    context.security.getTenant = () => {
      console.log(`[DEPRECATION] "context.security.getTenant()" is now deprecated! Use "context.tenancy.getCurrentTenant()" instead.`);
      return context.tenancy.getCurrentTenant();
    }; // @ts-ignore


    context.security.setTenant = tenant => {
      console.log(`[DEPRECATION] "context.security.setTenant()" is now deprecated! Use "context.tenancy.setCurrentTenant()" instead.`);
      context.tenancy.setCurrentTenant(tenant);
    };
  });
  return [baseContext, _apiKey.default, _groups.default, _system.default, _users.default];
};

exports.default = _default;
//# sourceMappingURL=context.js.map