{"version":3,"sources":["../src/createGraphQLHandler.ts"],"names":["DEFAULT_HEADERS","options","schema","debug","type","name","handle","context","next","http","request","method","response","statusCode","headers","body","JSON","parse","result","stringify"],"mappings":";;;;;;;;;AAEA;;AAEA;;AAEA;;AACA;;AAEA,MAAMA,eAAe,GAAG;AACpB,kBAAgB,kBADI;AAEpB,iCAA+B,GAFX;AAGpB,kCAAgC,GAHZ;AAIpB,kCAAgC;AAJZ,CAAxB;;eAOe,CAACC,OAA8B,GAAG,EAAlC,KAA2D;AACtE,MAAIC,MAAJ;AAEA,QAAMC,KAAK,GAAG,sBAAQF,OAAO,CAACE,KAAhB,CAAd;AAEA,SAAO,CACH,IAAIA,KAAK,GAAG,4BAAH,GAAoB,EAA7B,CADG,EAEH;AACIC,IAAAA,IAAI,EAAE,SADV;AAEIC,IAAAA,IAAI,EAAE,iBAFV;;AAGI,UAAMC,MAAN,CAAaC,OAAb,EAA6CC,IAA7C,EAAmD;AAC/C,YAAM;AAAEC,QAAAA;AAAF,UAAWF,OAAjB;;AACA,UAAI,CAACE,IAAL,EAAW;AACP,eAAOD,IAAI,EAAX;AACH;;AAED,UAAIC,IAAI,CAACC,OAAL,CAAaC,MAAb,KAAwB,SAA5B,EAAuC;AACnC,eAAOF,IAAI,CAACG,QAAL,CAAc;AACjBC,UAAAA,UAAU,EAAE,GADK;AAEjBC,UAAAA,OAAO,EAAEd;AAFQ,SAAd,CAAP;AAIH;;AAED,UAAIS,IAAI,CAACC,OAAL,CAAaC,MAAb,KAAwB,MAA5B,EAAoC;AAChC,eAAOH,IAAI,EAAX;AACH;;AAED,UAAI,CAACN,MAAL,EAAa;AACTA,QAAAA,MAAM,GAAG,8CAAoBK,OAApB,CAAT;AACH;;AAED,YAAMQ,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,CAACC,OAAL,CAAaK,IAAxB,CAAb;AACA,YAAMG,MAAM,GAAG,MAAM,iCAAmBH,IAAnB,EAAyBb,MAAzB,EAAiCK,OAAjC,CAArB;AAEA,aAAOE,IAAI,CAACG,QAAL,CAAc;AACjBG,QAAAA,IAAI,EAAEC,IAAI,CAACG,SAAL,CAAeD,MAAf,CADW;AAEjBL,QAAAA,UAAU,EAAE,GAFK;AAGjBC,QAAAA,OAAO,EAAEd;AAHQ,OAAd,CAAP;AAKH;;AAhCL,GAFG,CAAP;AAqCH,C","sourcesContent":["import { HandlerPlugin, Context } from \"@webiny/handler/types\";\nimport { HttpContext } from \"@webiny/handler-http/types\";\nimport { boolean } from \"boolean\";\nimport { HandlerGraphQLOptions } from \"./types\";\nimport { createGraphQLSchema } from \"./createGraphQLSchema\";\nimport { PluginCollection } from \"@webiny/plugins/types\";\nimport debugPlugins from \"./debugPlugins\";\nimport processRequestBody from \"./processRequestBody\";\n\nconst DEFAULT_HEADERS = {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Headers\": \"*\",\n    \"Access-Control-Allow-Methods\": \"OPTIONS,POST\"\n};\n\nexport default (options: HandlerGraphQLOptions = {}): PluginCollection => {\n    let schema;\n\n    const debug = boolean(options.debug);\n\n    return [\n        ...(debug ? debugPlugins() : []),\n        {\n            type: \"handler\",\n            name: \"handler-graphql\",\n            async handle(context: Context & HttpContext, next) {\n                const { http } = context;\n                if (!http) {\n                    return next();\n                }\n\n                if (http.request.method === \"OPTIONS\") {\n                    return http.response({\n                        statusCode: 204,\n                        headers: DEFAULT_HEADERS\n                    });\n                }\n\n                if (http.request.method !== \"POST\") {\n                    return next();\n                }\n\n                if (!schema) {\n                    schema = createGraphQLSchema(context);\n                }\n\n                const body = JSON.parse(http.request.body);\n                const result = await processRequestBody(body, schema, context);\n\n                return http.response({\n                    body: JSON.stringify(result),\n                    statusCode: 200,\n                    headers: DEFAULT_HEADERS\n                });\n            }\n        } as HandlerPlugin\n    ];\n};\n"],"file":"createGraphQLHandler.js"}