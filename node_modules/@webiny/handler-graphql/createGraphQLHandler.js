"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _boolean = require("boolean");

var _createGraphQLSchema = require("./createGraphQLSchema");

var _debugPlugins = _interopRequireDefault(require("./debugPlugins"));

var _processRequestBody = _interopRequireDefault(require("./processRequestBody"));

const DEFAULT_HEADERS = {
  "Content-Type": "application/json",
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers": "*",
  "Access-Control-Allow-Methods": "OPTIONS,POST"
};

var _default = (options = {}) => {
  let schema;
  const debug = (0, _boolean.boolean)(options.debug);
  return [...(debug ? (0, _debugPlugins.default)() : []), {
    type: "handler",
    name: "handler-graphql",

    async handle(context, next) {
      const {
        http
      } = context;

      if (!http) {
        return next();
      }

      if (http.request.method === "OPTIONS") {
        return http.response({
          statusCode: 204,
          headers: DEFAULT_HEADERS
        });
      }

      if (http.request.method !== "POST") {
        return next();
      }

      if (!schema) {
        schema = (0, _createGraphQLSchema.createGraphQLSchema)(context);
      }

      const body = JSON.parse(http.request.body);
      const result = await (0, _processRequestBody.default)(body, schema, context);
      return http.response({
        body: JSON.stringify(result),
        statusCode: 200,
        headers: DEFAULT_HEADERS
      });
    }

  }];
};

exports.default = _default;
//# sourceMappingURL=createGraphQLHandler.js.map