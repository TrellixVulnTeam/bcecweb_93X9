{"version":3,"sources":["../../../src/plugins/userMenu/userImage.tsx"],"names":["React","Avatar","Image","useSecurity","GenericElement","UIViewPlugin","AdminView","UserImage","identity","fullName","avatar","gravatar","src","props","width","view","userMenu","getElement","setMenuHandleElement"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SAASC,WAAT,QAA4B,wCAA5B;AACA,SAASC,cAAT,QAA+B,8CAA/B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,SAAT,QAA0B,sCAA1B;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,qBAAqBJ,WAAW,EAAhC;AAAA,MAAQK,QAAR,gBAAQA,QAAR;;AAEA,MAAI,CAACA,QAAL,EAAe;AACX,WAAO,IAAP;AACH;;AAED,MAAQC,QAAR,GAAuCD,QAAvC,CAAQC,QAAR;AAAA,MAAkBC,MAAlB,GAAuCF,QAAvC,CAAkBE,MAAlB;AAAA,MAA0BC,QAA1B,GAAuCH,QAAvC,CAA0BG,QAA1B;AAEA,sBACI,oBAAC,MAAD;AACI,mBAAY,4BADhB;AAEI,IAAA,GAAG,EAAED,MAAM,GAAGA,MAAM,CAACE,GAAV,GAAgBD,QAF/B;AAGI,IAAA,GAAG,EAAEF,QAHT;AAII,IAAA,YAAY,EAAEA,QAJlB;AAKI,IAAA,WAAW,EAAE,qBAAAI,KAAK;AAAA,0BAAI,oBAAC,KAAD,oBAAWA,KAAX;AAAkB,QAAA,SAAS,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAA7B,SAAJ;AAAA;AALtB,IADJ;AASH,CAlBD;;AAoBA,gBAAe,YAAM;AACjB,SAAO,IAAIT,YAAJ,CAA4BC,SAA5B,EAAuC,UAAAS,IAAI,EAAI;AAClD,QAAMC,QAAQ,GAAGD,IAAI,CAACE,UAAL,CAAiC,UAAjC,CAAjB;;AAEA,QAAID,QAAJ,EAAc;AACVA,MAAAA,QAAQ,CAACE,oBAAT,CAA8B,IAAId,cAAJ,CAAmB,QAAnB,EAA6B;AAAA,4BAAM,oBAAC,SAAD,OAAN;AAAA,OAA7B,CAA9B;AACH;AACJ,GANM,CAAP;AAOH,CARD","sourcesContent":["import React from \"react\";\nimport { Avatar } from \"@webiny/ui/Avatar\";\nimport { Image } from \"@webiny/app/components\";\nimport { useSecurity } from \"@webiny/app-security/hooks/useSecurity\";\nimport { GenericElement } from \"@webiny/app-admin/ui/elements/GenericElement\";\nimport { UIViewPlugin } from \"@webiny/app-admin/ui/UIView\";\nimport { AdminView } from \"@webiny/app-admin/ui/views/AdminView\";\nimport { UserMenuElement } from \"@webiny/app-admin/plugins/userMenu/UserMenuElement\";\n\nconst UserImage = () => {\n    const { identity } = useSecurity();\n\n    if (!identity) {\n        return null;\n    }\n\n    const { fullName, avatar, gravatar } = identity;\n\n    return (\n        <Avatar\n            data-testid=\"logged-in-user-menu-avatar\"\n            src={avatar ? avatar.src : gravatar}\n            alt={fullName}\n            fallbackText={fullName}\n            renderImage={props => <Image {...props} transform={{ width: 100 }} />}\n        />\n    );\n};\n\nexport default () => {\n    return new UIViewPlugin<AdminView>(AdminView, view => {\n        const userMenu = view.getElement<UserMenuElement>(\"userMenu\");\n\n        if (userMenu) {\n            userMenu.setMenuHandleElement(new GenericElement(\"handle\", () => <UserImage />));\n        }\n    });\n};\n"],"file":"userImage.js"}