import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import { NavigationMenuElement, TAGS } from "@webiny/app-admin/ui/elements/NavigationMenuElement";
import { Permission } from "./constants";
import { UIViewPlugin } from "@webiny/app-admin/ui/UIView";
import { NavigationView } from "@webiny/app-admin/ui/views/NavigationView";
export default new UIViewPlugin(NavigationView, /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(view) {
    var _view$getSecurityHook, identity, groups, users, apiKeys, mainMenu;

    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return view.isRendered();

          case 2:
            _view$getSecurityHook = view.getSecurityHook(), identity = _view$getSecurityHook.identity;
            groups = identity.getPermission(Permission.Groups);
            users = identity.getPermission(Permission.Users);
            apiKeys = identity.getPermission(Permission.ApiKeys);

            if (!(!groups && !users && !apiKeys)) {
              _context.next = 8;
              break;
            }

            return _context.abrupt("return");

          case 8:
            mainMenu = view.getSettingsMenuElement().addElement(new NavigationMenuElement("security", {
              label: "Security",
              tags: [TAGS.UTILS]
            }));

            if (users) {
              mainMenu.addElement(new NavigationMenuElement("users", {
                label: "Users",
                path: "/security/users"
              }));
            }

            if (groups) {
              mainMenu.addElement(new NavigationMenuElement("groups", {
                label: "Groups",
                path: "/security/groups"
              }));
            }

            if (apiKeys) {
              mainMenu.addElement(new NavigationMenuElement("apiKeys", {
                label: "API Keys",
                path: "/security/api-keys"
              }));
            }

          case 12:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}());
//# sourceMappingURL=menus.js.map