{"version":3,"sources":["../../../src/plugins/permissionRenderer/SecurityPermissions.tsx"],"names":["React","Fragment","useCallback","useMemo","Grid","Cell","Select","i18n","PermissionInfo","gridNoPaddingClass","Form","Elevation","Typography","t","ns","SECURITY","SECURITY_FULL_ACCESS","SECURITY_GROUP_ACCESS","SECURITY_USER_ACCESS","SECURITY_API_KEY_ACCESS","FULL_ACCESS","NO_ACCESS","CUSTOM_ACCESS","SecurityPermissions","value","onChange","onFormChange","data","newValue","Array","isArray","filter","item","name","startsWith","permissions","accessLevel","push","userAccessScope","groupAccessScope","apiKeyAccessScope","index","findIndex","perm","splice","length","formData","hasFullAccess","find","hasGroupAccess","hasUserAccess","hasApiKeyAccess","Bind","disableUserAccessScope","marginTop","props"],"mappings":"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","sourcesContent":["import React, { Fragment, useCallback, useMemo } from \"react\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { PermissionInfo, gridNoPaddingClass } from \"@webiny/app-admin/components/Permissions\";\nimport { Form } from \"@webiny/form\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { Typography } from \"@webiny/ui/Typography\";\n\nconst t = i18n.ns(\"app-security-admin-users/plugins/permissionRenderer\");\n\nconst SECURITY = \"security\";\nconst SECURITY_FULL_ACCESS = `${SECURITY}.*`;\nconst SECURITY_GROUP_ACCESS = `${SECURITY}.group`;\nconst SECURITY_USER_ACCESS = `${SECURITY}.user`;\nconst SECURITY_API_KEY_ACCESS = `${SECURITY}.apiKey`;\nconst FULL_ACCESS = \"full\";\nconst NO_ACCESS = \"no\";\nconst CUSTOM_ACCESS = \"custom\";\n\nexport const SecurityPermissions = ({ value, onChange }) => {\n    const onFormChange = useCallback(\n        data => {\n            let newValue = [];\n            if (Array.isArray(value)) {\n                // Let's just filter out the `security*` permission objects, it's easier to build new ones from scratch.\n                newValue = value.filter(item => !item.name.startsWith(SECURITY));\n            }\n\n            const permissions = [];\n            if (data.accessLevel === FULL_ACCESS) {\n                permissions.push({ name: SECURITY_FULL_ACCESS });\n            } else if (data.accessLevel === CUSTOM_ACCESS) {\n                if (data.userAccessScope === FULL_ACCESS) {\n                    permissions.push({ name: SECURITY_USER_ACCESS });\n                }\n\n                if (data.groupAccessScope === FULL_ACCESS) {\n                    permissions.push({ name: SECURITY_GROUP_ACCESS });\n                }\n\n                if (data.apiKeyAccessScope === FULL_ACCESS) {\n                    permissions.push({ name: SECURITY_API_KEY_ACCESS });\n                }\n\n                /**\n                 * You can't create a user without a group assigned.\n                 * So in case \"security.group\" is \"NO_ACCESS\", we need to remove \"security.user\" from permission list.\n                 */\n                if (data.groupAccessScope === NO_ACCESS && data.userAccessScope === FULL_ACCESS) {\n                    const index = permissions.findIndex(perm => perm.name === SECURITY_USER_ACCESS);\n                    permissions.splice(index, 1);\n                }\n            }\n\n            if (permissions && permissions.length) {\n                newValue.push(...permissions);\n            }\n\n            onChange(newValue);\n        },\n        [value]\n    );\n\n    const formData = useMemo(() => {\n        if (!Array.isArray(value)) {\n            return { accessLevel: NO_ACCESS };\n        }\n\n        const hasFullAccess = value.find(\n            item => item.name === SECURITY_FULL_ACCESS || item.name === \"*\"\n        );\n\n        if (hasFullAccess) {\n            return { accessLevel: FULL_ACCESS };\n        }\n\n        const permissions = value.filter(item => item.name.startsWith(SECURITY));\n        if (permissions.length === 0) {\n            return { accessLevel: NO_ACCESS };\n        }\n\n        const data = {\n            accessLevel: CUSTOM_ACCESS,\n            groupAccessScope: NO_ACCESS,\n            userAccessScope: NO_ACCESS,\n            apiKeyAccessScope: NO_ACCESS\n        };\n\n        const hasGroupAccess = permissions.find(item => item.name === SECURITY_GROUP_ACCESS);\n        if (hasGroupAccess) {\n            data.groupAccessScope = FULL_ACCESS;\n        }\n\n        const hasUserAccess = permissions.find(item => item.name === SECURITY_USER_ACCESS);\n        // \"security.group\" is required for \"security.user\".\n        if (hasUserAccess && hasGroupAccess) {\n            data.userAccessScope = FULL_ACCESS;\n        }\n\n        const hasApiKeyAccess = permissions.find(item => item.name === SECURITY_API_KEY_ACCESS);\n        if (hasApiKeyAccess) {\n            data.apiKeyAccessScope = FULL_ACCESS;\n        }\n\n        return data;\n    }, []);\n\n    return (\n        <Form data={formData} onChange={onFormChange}>\n            {({ data, Bind }) => {\n                const disableUserAccessScope = data.groupAccessScope === NO_ACCESS;\n                return (\n                    <Fragment>\n                        <Grid className={gridNoPaddingClass}>\n                            <Cell span={6}>\n                                <PermissionInfo title={t`Access Level`} />\n                            </Cell>\n                            <Cell span={6}>\n                                <Bind name={\"accessLevel\"}>\n                                    <Select label={t`Access Level`}>\n                                        <option value={NO_ACCESS}>{t`No access`}</option>\n                                        <option value={FULL_ACCESS}>{t`Full access`}</option>\n                                        <option value={CUSTOM_ACCESS}>{t`Custom access`}</option>\n                                    </Select>\n                                </Bind>\n                            </Cell>\n                        </Grid>\n                        {data.accessLevel === CUSTOM_ACCESS && (\n                            <React.Fragment>\n                                <Elevation z={1} style={{ marginTop: 10 }}>\n                                    <Grid>\n                                        <Cell span={12}>\n                                            <Typography use={\"overline\"}>{t`API Keys`}</Typography>\n                                        </Cell>\n                                        <Cell span={12}>\n                                            <Bind name={\"apiKeyAccessScope\"}>\n                                                <Select label={t`Access Scope`}>\n                                                    <option\n                                                        value={NO_ACCESS}\n                                                    >{t`No access`}</option>\n                                                    <option\n                                                        value={FULL_ACCESS}\n                                                    >{t`Full access`}</option>\n                                                </Select>\n                                            </Bind>\n                                        </Cell>\n                                    </Grid>\n                                </Elevation>\n                                <Elevation z={1} style={{ marginTop: 10 }}>\n                                    <Grid>\n                                        <Cell span={12}>\n                                            <Typography use={\"overline\"}>{t`Groups`}</Typography>\n                                        </Cell>\n                                        <Cell span={12}>\n                                            <Bind name={\"groupAccessScope\"}>\n                                                <Select label={t`Access Scope`}>\n                                                    <option\n                                                        value={NO_ACCESS}\n                                                    >{t`No access`}</option>\n                                                    <option\n                                                        value={FULL_ACCESS}\n                                                    >{t`Full access`}</option>\n                                                </Select>\n                                            </Bind>\n                                        </Cell>\n                                    </Grid>\n                                </Elevation>\n                                <Elevation z={1} style={{ marginTop: 10 }}>\n                                    <Grid>\n                                        <Cell span={12}>\n                                            <Typography use={\"overline\"}>{t`Users`}</Typography>\n                                        </Cell>\n                                        <Cell span={12}>\n                                            <Bind name={\"userAccessScope\"}>\n                                                {({ value, ...props }) => (\n                                                    <Select\n                                                        {...props}\n                                                        label={t`Access Scope`}\n                                                        disabled={disableUserAccessScope}\n                                                        value={\n                                                            disableUserAccessScope\n                                                                ? NO_ACCESS\n                                                                : value\n                                                        }\n                                                    >\n                                                        <option\n                                                            value={NO_ACCESS}\n                                                        >{t`No access`}</option>\n                                                        <option\n                                                            value={FULL_ACCESS}\n                                                        >{t`Full access`}</option>\n                                                    </Select>\n                                                )}\n                                            </Bind>\n                                        </Cell>\n                                    </Grid>\n                                </Elevation>\n                            </React.Fragment>\n                        )}\n                    </Fragment>\n                );\n            }}\n        </Form>\n    );\n};\n"],"file":"SecurityPermissions.js"}