{"version":3,"sources":["../../../../src/ui/views/ApiKeys/ApiKeysDataList.tsx"],"names":["React","useCallback","useMemo","useState","orderBy","i18n","DataList","ScrollList","ListItem","ListItemText","ListItemTextSecondary","ListItemMeta","ListActions","DataListModalOverlayAction","DataListModalOverlay","ButtonIcon","ButtonSecondary","DeleteIcon","Cell","Grid","Select","useRouter","SearchUI","useSnackbar","useQuery","useMutation","useConfirmationDialog","GQL","serializeSorters","deserializeSorters","t","ns","SORTERS","label","sorters","createdOn","name","ApiKeysDataList","filter","setFilter","sort","setSort","history","location","showSnackbar","dataTestId","showConfirmation","filterAPIKey","description","toLowerCase","includes","sortKeys","list","Object","entries","key","value","LIST_API_KEYS","listResponse","data","listLoading","loading","DELETE_API_KEY","refetchQueries","query","deleteIt","deleteLoading","security","apiKeys","id","URLSearchParams","search","get","deleteItem","item","variables","error","deleteApiKey","message","push","groupsDataListModalOverlay","map","filteredData"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\";\nimport orderBy from \"lodash/orderBy\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport {\n    DataList,\n    ScrollList,\n    ListItem,\n    ListItemText,\n    ListItemTextSecondary,\n    ListItemMeta,\n    ListActions,\n    DataListModalOverlayAction,\n    DataListModalOverlay\n} from \"@webiny/ui/List\";\nimport { ButtonIcon, ButtonSecondary } from \"@webiny/ui/Button\";\nimport { DeleteIcon } from \"@webiny/ui/List/DataList/icons\";\nimport { Cell, Grid } from \"@webiny/ui/Grid\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { useRouter } from \"@webiny/react-router\";\nimport SearchUI from \"@webiny/app-admin/components/SearchUI\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport * as GQL from \"./graphql\";\nimport { ReactComponent as AddIcon } from \"@webiny/app-admin/assets/icons/add-18px.svg\";\nimport { ReactComponent as FilterIcon } from \"@webiny/app-admin/assets/icons/filter-24px.svg\";\nimport { serializeSorters, deserializeSorters } from \"../utils\";\n\nconst t = i18n.ns(\"app-security/admin/groups/data-list\");\n\nconst SORTERS = [\n    {\n        label: t`Newest to oldest`,\n        sorters: { createdOn: \"desc\" }\n    },\n    {\n        label: t`Oldest to newest`,\n        sorters: { createdOn: \"asc\" }\n    },\n    {\n        label: t`Name A-Z`,\n        sorters: { name: \"asc\" }\n    },\n    {\n        label: t`Name Z-A`,\n        sorters: { name: \"desc\" }\n    }\n];\n\nconst ApiKeysDataList = () => {\n    const [filter, setFilter] = useState(\"\");\n    const [sort, setSort] = useState(serializeSorters(SORTERS[0].sorters));\n    const { history, location } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    const { showConfirmation } = useConfirmationDialog({\n        dataTestId: \"default-data-list.delete-dialog\"\n    });\n\n    const filterAPIKey = useCallback(\n        ({ description, name }) => {\n            return (\n                (description && description.toLowerCase().includes(filter)) ||\n                name.toLowerCase().includes(filter)\n            );\n        },\n        [filter]\n    );\n\n    const sortKeys = useCallback(\n        list => {\n            if (!sort) {\n                return list;\n            }\n            const [[key, value]] = Object.entries(deserializeSorters(sort));\n            return orderBy(list, [key], [value]);\n        },\n        [sort]\n    );\n\n    const { data: listResponse, loading: listLoading } = useQuery(GQL.LIST_API_KEYS);\n\n    const [deleteIt, { loading: deleteLoading }] = useMutation(GQL.DELETE_API_KEY, {\n        refetchQueries: [{ query: GQL.LIST_API_KEYS }]\n    });\n\n    const data = listLoading && !listResponse ? [] : listResponse.security.apiKeys.data;\n    const id = new URLSearchParams(location.search).get(\"id\");\n\n    const deleteItem = useCallback(\n        item => {\n            showConfirmation(async () => {\n                const { data } = await deleteIt({\n                    variables: item\n                });\n\n                const { error } = data.security.deleteApiKey;\n                if (error) {\n                    return showSnackbar(error.message);\n                }\n\n                showSnackbar(t`Api key \"{id}\" deleted.`({ id: item.id }));\n\n                if (id === item.id) {\n                    history.push(`/security/api-keys`);\n                }\n            });\n        },\n        [id]\n    );\n\n    const groupsDataListModalOverlay = useMemo(\n        () => (\n            <DataListModalOverlay>\n                <Grid>\n                    <Cell span={12}>\n                        <Select value={sort} onChange={setSort} label={t`Sort by`}>\n                            {SORTERS.map(({ label, sorters }) => {\n                                return (\n                                    <option key={label} value={serializeSorters(sorters)}>\n                                        {label}\n                                    </option>\n                                );\n                            })}\n                        </Select>\n                    </Cell>\n                </Grid>\n            </DataListModalOverlay>\n        ),\n        [sort]\n    );\n\n    const filteredData = filter === \"\" ? data : data.filter(filterAPIKey);\n    const list = sortKeys(filteredData);\n\n    return (\n        <DataList\n            title={t`Security API keys`}\n            actions={\n                <ButtonSecondary\n                    data-testid=\"new-record-button\"\n                    onClick={() => history.push(\"/security/api-keys?new=true\")}\n                >\n                    <ButtonIcon icon={<AddIcon />} /> {t`New API Key`}\n                </ButtonSecondary>\n            }\n            data={list}\n            loading={listLoading || deleteLoading}\n            search={\n                <SearchUI\n                    value={filter}\n                    onChange={setFilter}\n                    inputPlaceholder={t`Search API keys`}\n                />\n            }\n            modalOverlay={groupsDataListModalOverlay}\n            modalOverlayAction={\n                <DataListModalOverlayAction\n                    icon={<FilterIcon />}\n                    data-testid={\"default-data-list.filter\"}\n                />\n            }\n        >\n            {({ data }) => (\n                <ScrollList data-testid=\"default-data-list\">\n                    {data.map(item => (\n                        <ListItem key={item.id} selected={item.id === id}>\n                            <ListItemText\n                                onClick={() => history.push(`/security/api-keys?id=${item.id}`)}\n                            >\n                                {item.name}\n                                <ListItemTextSecondary>{item.description}</ListItemTextSecondary>\n                            </ListItemText>\n\n                            <ListItemMeta>\n                                <ListActions>\n                                    <DeleteIcon\n                                        onClick={() => deleteItem(item)}\n                                        data-testid={\"default-data-list.delete\"}\n                                    />\n                                </ListActions>\n                            </ListItemMeta>\n                        </ListItem>\n                    ))}\n                </ScrollList>\n            )}\n        </DataList>\n    );\n};\n\nexport default ApiKeysDataList;\n"],"file":"ApiKeysDataList.js"}