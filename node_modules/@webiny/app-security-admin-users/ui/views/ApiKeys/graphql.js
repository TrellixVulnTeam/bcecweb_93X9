import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;

import gql from "graphql-tag";
var fields = "\n    id\n    name\n    description\n    token\n    permissions\n    createdOn\n";
export var LIST_API_KEYS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    query ListApiKeys {\n        security {\n            apiKeys: listApiKeys {\n                data {\n                   ", "\n                }\n            }\n        }\n    }\n"])), fields);
export var READ_API_KEY = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    query GetApiKey($id: ID!) {\n        security {\n            apiKey: getApiKey(id: $id){\n                data {\n                    ", "\n                }\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n"])), fields);
export var CREATE_API_KEY = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n    mutation CreateApiKey($data: SecurityApiKeyInput!){\n        security {\n            apiKey: createApiKey(data: $data) {\n                data {\n                    ", "\n                }\n                error {\n                    code\n                    message\n                    data\n                }\n            }\n        }\n    }\n"])), fields);
export var UPDATE_API_KEY = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n    mutation UpdateApiKey($id: ID!, $data: SecurityApiKeyInput!){\n        security {\n            apiKey: updateApiKey(id: $id, data: $data) {\n                data {\n                    ", "\n                }\n                error {\n                    code\n                    message\n                    data\n                }\n            }\n        }\n    }\n"])), fields);
export var DELETE_API_KEY = gql(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n    mutation DeleteApiKey($id: ID!) {\n        security {\n            deleteApiKey(id: $id) {\n                data\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n"])));
//# sourceMappingURL=graphql.js.map