import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9;

import _regeneratorRuntime from "@babel/runtime/regenerator";
import React, { useState, useCallback } from "react";
import { useApolloClient } from "@apollo/react-hooks";
import { set } from "dot-prop-immutable";
import styled from "@emotion/styled";
import { Dialog, DialogActions, DialogButton, DialogCancel, DialogContent, DialogTitle } from "@webiny/ui/Dialog";
import { validation } from "@webiny/validation";
import { Input } from "@webiny/ui/Input";
import { Form } from "@webiny/form";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { i18n } from "@webiny/app/i18n";
import { CircularProgress } from "@webiny/ui/Progress";
import { Alert } from "@webiny/ui/Alert";
import { Typography } from "@webiny/ui/Typography";
import { CopyButton } from "@webiny/ui/Button";
import { CREATE_PAT, GET_CURRENT_USER } from "./graphql";
var t = i18n.ns("app-security-admin-users/pats/create-token-dialog");
var PatContainer = /*#__PURE__*/styled("div", {
  target: "e117d7090",
  label: "PatContainer"
})({
  paddingLeft: "12px",
  paddingRight: "12px",
  background: "var(--mdc-theme-on-background)"
});
export var CreateTokenDialog = function CreateTokenDialog(_ref) {
  var open = _ref.open,
      onClose = _ref.onClose;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      loading = _useState2[0],
      setLoading = _useState2[1];

  var _useState3 = useState(null),
      _useState4 = _slicedToArray(_useState3, 2),
      newToken = _useState4[0],
      setNewToken = _useState4[1];

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var client = useApolloClient();
  var resetAndClose = useCallback(function () {
    onClose();
    setTimeout(function () {
      setNewToken(null);
    }, 1000);
  }, []);

  var onSubmit = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {
      var queryResponse, _queryResponse$data$s, data, error;

      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              setLoading(true);
              _context.next = 3;
              return client.mutate({
                mutation: CREATE_PAT,
                variables: {
                  data: formData
                },
                update: function update(cache, _ref3) {
                  var security = _ref3.data.security;
                  var data = cache.readQuery({
                    query: GET_CURRENT_USER
                  });
                  cache.writeQuery({
                    query: GET_CURRENT_USER,
                    data: set(data, "security.user.data.personalAccessTokens", function (tokens) {
                      return [].concat(_toConsumableArray(tokens), [security.createPAT.data.pat]);
                    })
                  });
                }
              });

            case 3:
              queryResponse = _context.sent;
              setLoading(false);
              _queryResponse$data$s = queryResponse.data.security.createPAT, data = _queryResponse$data$s.data, error = _queryResponse$data$s.error;

              if (!error) {
                _context.next = 8;
                break;
              }

              return _context.abrupt("return", showSnackbar(error.message, {
                action: t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Close"])))
              }));

            case 8:
              setNewToken(data.token);

            case 9:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onSubmit(_x) {
      return _ref2.apply(this, arguments);
    };
  }();

  var renderTokenCreated = function renderTokenCreated() {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogTitle, null, t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Your Personal Access Token"])))), /*#__PURE__*/React.createElement(DialogContent, null, /*#__PURE__*/React.createElement(Alert, {
      title: t(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["Copy your token"]))),
      type: "info"
    }, t(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["Make sure you copy your new personal access token. You won't be able to see it again!"])))), /*#__PURE__*/React.createElement("div", {
      style: {
        display: "flex",
        alignItems: "center"
      }
    }, /*#__PURE__*/React.createElement(PatContainer, null, /*#__PURE__*/React.createElement(Typography, {
      use: "overline"
    }, newToken)), /*#__PURE__*/React.createElement(CopyButton, {
      value: newToken
    }))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(DialogButton, {
      "data-testid": "accept-generate-token",
      onClick: resetAndClose
    }, t(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["I have copied the token!"]))))));
  };

  var renderCreateToken = function renderCreateToken(Bind, form) {
    return /*#__PURE__*/React.createElement(React.Fragment, null, loading && /*#__PURE__*/React.createElement(CircularProgress, {
      label: "Creating token..."
    }), /*#__PURE__*/React.createElement(DialogTitle, null, t(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["Create a Personal Access Token"])))), /*#__PURE__*/React.createElement(DialogContent, null, /*#__PURE__*/React.createElement(Bind, {
      name: "name",
      validators: validation.create("required,maxLength:100")
    }, /*#__PURE__*/React.createElement(Input, {
      label: t(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["Token name"])))
    }))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(DialogCancel, null, t(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["Cancel"])))), /*#__PURE__*/React.createElement(DialogButton, {
      "data-testid": "accept-generate-token",
      onClick: form.submit
    }, t(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["OK"]))))));
  };

  return /*#__PURE__*/React.createElement(Dialog, {
    open: open,
    "data-testid": "account-tokens-dialog",
    preventOutsideDismiss: true,
    onClose: resetAndClose
  }, /*#__PURE__*/React.createElement(Form, {
    onSubmit: onSubmit,
    submitOnEnter: true
  }, function (_ref4) {
    var Bind = _ref4.Bind,
        form = _ref4.form;
    return newToken ? renderTokenCreated() : renderCreateToken(Bind, form);
  }));
};
//# sourceMappingURL=CreateTokenDialog.js.map