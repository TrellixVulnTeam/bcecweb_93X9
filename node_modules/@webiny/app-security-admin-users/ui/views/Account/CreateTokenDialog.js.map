{"version":3,"sources":["../../../../src/ui/views/Account/CreateTokenDialog.tsx"],"names":["React","useState","useCallback","useApolloClient","set","styled","Dialog","DialogActions","DialogButton","DialogCancel","DialogContent","DialogTitle","validation","Input","Form","useSnackbar","i18n","CircularProgress","Alert","Typography","CopyButton","CREATE_PAT","GET_CURRENT_USER","t","ns","PatContainer","paddingLeft","paddingRight","background","CreateTokenDialog","open","onClose","loading","setLoading","newToken","setNewToken","showSnackbar","client","resetAndClose","setTimeout","onSubmit","formData","mutate","mutation","variables","data","update","cache","security","readQuery","query","writeQuery","tokens","createPAT","pat","queryResponse","error","message","action","token","renderTokenCreated","display","alignItems","renderCreateToken","Bind","form","create","submit"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { set } from \"dot-prop-immutable\";\nimport styled from \"@emotion/styled\";\nimport {\n    Dialog,\n    DialogActions,\n    DialogButton,\n    DialogCancel,\n    DialogContent,\n    DialogTitle\n} from \"@webiny/ui/Dialog\";\nimport { validation } from \"@webiny/validation\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Form } from \"@webiny/form\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { Alert } from \"@webiny/ui/Alert\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { CopyButton } from \"@webiny/ui/Button\";\nimport { CREATE_PAT, GET_CURRENT_USER } from \"./graphql\";\n\nconst t = i18n.ns(\"app-security-admin-users/pats/create-token-dialog\");\n\nconst PatContainer = styled(\"div\")({\n    paddingLeft: \"12px\",\n    paddingRight: \"12px\",\n    background: \"var(--mdc-theme-on-background)\"\n});\n\nexport const CreateTokenDialog = ({ open, onClose }) => {\n    const [loading, setLoading] = useState(false);\n    const [newToken, setNewToken] = useState(null);\n    const { showSnackbar } = useSnackbar();\n    const client = useApolloClient();\n\n    const resetAndClose = useCallback(() => {\n        onClose();\n        setTimeout(() => {\n            setNewToken(null);\n        }, 1000);\n    }, []);\n\n    const onSubmit = async formData => {\n        setLoading(true);\n        const queryResponse = await client.mutate({\n            mutation: CREATE_PAT,\n            variables: {\n                data: formData\n            },\n            update(cache, { data: { security } }) {\n                const data: any = cache.readQuery({ query: GET_CURRENT_USER });\n\n                cache.writeQuery({\n                    query: GET_CURRENT_USER,\n                    data: set(data, `security.user.data.personalAccessTokens`, tokens => [\n                        ...tokens,\n                        security.createPAT.data.pat\n                    ])\n                });\n            }\n        });\n        setLoading(false);\n\n        const { data, error } = queryResponse.data.security.createPAT;\n        if (error) {\n            return showSnackbar(error.message, {\n                action: t`Close`\n            });\n        }\n\n        setNewToken(data.token);\n    };\n\n    const renderTokenCreated = () => {\n        return (\n            <>\n                <DialogTitle>{t`Your Personal Access Token`}</DialogTitle>\n                <DialogContent>\n                    <Alert title={t`Copy your token`} type=\"info\">\n                        {t`Make sure you copy your new personal access token. You won't be able to see it again!`}\n                    </Alert>\n                    <div\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\"\n                        }}\n                    >\n                        <PatContainer>\n                            <Typography use=\"overline\">{newToken}</Typography>\n                        </PatContainer>\n                        <CopyButton value={newToken} />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <DialogButton data-testid={`accept-generate-token`} onClick={resetAndClose}>\n                        {t`I have copied the token!`}\n                    </DialogButton>\n                </DialogActions>\n            </>\n        );\n    };\n\n    const renderCreateToken = (Bind, form) => {\n        return (\n            <>\n                {loading && <CircularProgress label={\"Creating token...\"} />}\n                <DialogTitle>{t`Create a Personal Access Token`}</DialogTitle>\n                <DialogContent>\n                    <Bind name={\"name\"} validators={validation.create(\"required,maxLength:100\")}>\n                        <Input label={t`Token name`} />\n                    </Bind>\n                </DialogContent>\n                <DialogActions>\n                    <DialogCancel>{t`Cancel`}</DialogCancel>\n                    <DialogButton data-testid={`accept-generate-token`} onClick={form.submit}>\n                        {t`OK`}\n                    </DialogButton>\n                </DialogActions>\n            </>\n        );\n    };\n\n    return (\n        <Dialog\n            open={open}\n            data-testid=\"account-tokens-dialog\"\n            preventOutsideDismiss\n            onClose={resetAndClose}\n        >\n            <Form onSubmit={onSubmit} submitOnEnter={true}>\n                {({ Bind, form }) =>\n                    newToken ? renderTokenCreated() : renderCreateToken(Bind, form)\n                }\n            </Form>\n        </Dialog>\n    );\n};\n"],"file":"CreateTokenDialog.js"}