{"version":3,"sources":["../../../../src/ui/views/Account/AccountTokens.tsx"],"names":["React","useState","useCallback","useApolloClient","set","ButtonDefault","IconButton","Typography","styled","i18n","ListItemMeta","SimpleListItem","UpdateTokenDialog","DELETE_PAT","GET_CURRENT_USER","useSnackbar","CreateTokenDialog","useConfirmationDialog","t","ns","Header","display","justifyContent","marginBottom","TokensElement","tokens","createToken","setCreateToken","updateToken","setUpdateToken","showSnackbar","client","title","message","showConfirmation","onClose","deleteToken","token","mutate","mutation","variables","id","update","cache","data","readQuery","query","security","user","personalAccessTokens","filter","item","writeQuery","queryResponse","error","deletePAT","action","lineHeight","Boolean","Array","isArray","map","paddingLeft","name","length"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { set } from \"dot-prop-immutable\";\nimport { ButtonDefault, IconButton } from \"@webiny/ui/Button\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport styled from \"@emotion/styled\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { ListItemMeta, SimpleListItem } from \"@webiny/ui/List\";\nimport { ReactComponent as EditIcon } from \"../../../assets/icons/edit-24px.svg\";\nimport { UpdateTokenDialog } from \"./UpdateTokenDialog\";\nimport { ReactComponent as DeleteIcon } from \"../../../assets/icons/delete-24px.svg\";\nimport { DELETE_PAT, GET_CURRENT_USER } from \"./graphql\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { CreateTokenDialog } from \"./CreateTokenDialog\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\n\nconst t = i18n.ns(\"app-security/admin/personal-access-tokens\");\n\nconst Header = styled(\"div\")({\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: 15\n});\n\nconst TokensElement = ({ tokens }) => {\n    const [createToken, setCreateToken] = useState(false);\n    const [updateToken, setUpdateToken] = useState(false);\n    const { showSnackbar } = useSnackbar();\n    const client = useApolloClient();\n    const { showConfirmation } = useConfirmationDialog({\n        title: t`Delete token confirmation`,\n        message: t`Are you sure you want to delete this token?`\n    });\n\n    const onClose = useCallback(() => {\n        setCreateToken(false);\n    }, []);\n\n    const deleteToken = async token => {\n        showConfirmation(async () => {\n            const queryResponse = await client.mutate({\n                mutation: DELETE_PAT,\n                variables: {\n                    id: token.id\n                },\n                update(cache) {\n                    const data: any = cache.readQuery({ query: GET_CURRENT_USER });\n                    const tokens = data.security.user.data.personalAccessTokens.filter(item => {\n                        return item.id !== token.id;\n                    });\n\n                    cache.writeQuery({\n                        query: GET_CURRENT_USER,\n                        data: set(data, `security.user.data.personalAccessTokens`, tokens)\n                    });\n                }\n            });\n\n            const { error } = queryResponse.data.security.deletePAT;\n            if (error) {\n                return showSnackbar(error.message, {\n                    action: t`Close`\n                });\n            }\n\n            showSnackbar(t`Token deleted successfully!`);\n        });\n    };\n\n    return (\n        <>\n            <Header>\n                <Typography style={{ lineHeight: \"2.4rem\" }} use={\"overline\"}>\n                    {t`Tokens`}\n                </Typography>\n                <ButtonDefault\n                    onClick={() => setCreateToken(true)}\n                >{t`Create Token`}</ButtonDefault>\n            </Header>\n            <div data-testid={\"pat-tokens-list\"}>\n                <CreateTokenDialog open={createToken} onClose={onClose} />\n                <UpdateTokenDialog\n                    open={Boolean(updateToken)}\n                    token={updateToken}\n                    onClose={() => setUpdateToken(false)}\n                />\n                {Array.isArray(tokens)\n                    ? tokens.map(token => (\n                          <SimpleListItem\n                              data-testid=\"pat-tokens-list-item\"\n                              key={token.id}\n                              text={\n                                  <div style={{ paddingLeft: \"16px\" }}>\n                                      {token.name} (********{token.token})\n                                  </div>\n                              }\n                          >\n                              <ListItemMeta>\n                                  <IconButton\n                                      data-testid=\"update-personal-access-token\"\n                                      onClick={() => setUpdateToken(token)}\n                                      icon={<EditIcon />}\n                                  />\n                                  <IconButton\n                                      data-testid={`delete-personal-access-token`}\n                                      onClick={() => deleteToken(token)}\n                                      icon={<DeleteIcon />}\n                                  />\n                              </ListItemMeta>\n                          </SimpleListItem>\n                      ))\n                    : null}\n\n                {!Array.isArray(tokens) || tokens.length === 0 ? (\n                    <SimpleListItem text={t`You don't have any tokens yet.`} />\n                ) : null}\n            </div>\n        </>\n    );\n};\n\nexport default TokensElement;\n"],"file":"AccountTokens.js"}