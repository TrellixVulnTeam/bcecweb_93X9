import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;

import _regeneratorRuntime from "@babel/runtime/regenerator";
import React, { useState } from "react";
import { Dialog, DialogButton, DialogActions, DialogCancel, DialogContent, DialogTitle } from "@webiny/ui/Dialog";
import { UPDATE_PAT } from "./graphql";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { useApolloClient } from "@apollo/react-hooks";
import { i18n } from "@webiny/app/i18n";
import { Input } from "@webiny/ui/Input";
import { Form } from "@webiny/form";
import { CircularProgress } from "@webiny/ui/Progress";
var t = i18n.ns("app-security/admin/roles/data-list");
export var UpdateTokenDialog = function UpdateTokenDialog(_ref) {
  var open = _ref.open,
      onClose = _ref.onClose,
      token = _ref.token;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      loading = _useState2[0],
      setLoading = _useState2[1];

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var client = useApolloClient();

  var onSubmit = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {
      var queryResponse, error;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              setLoading(true);
              _context.next = 3;
              return client.mutate({
                mutation: UPDATE_PAT,
                variables: {
                  id: token.id,
                  data: {
                    name: data.name
                  }
                }
              });

            case 3:
              queryResponse = _context.sent;
              setLoading(false);
              error = queryResponse.data.security.updatePAT.error;

              if (!error) {
                _context.next = 8;
                break;
              }

              return _context.abrupt("return", showSnackbar(error.message, {
                action: t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Close"])))
              }));

            case 8:
              showSnackbar(t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Token updated successfully!"]))));
              onClose();

            case 10:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onSubmit(_x) {
      return _ref2.apply(this, arguments);
    };
  }();

  if (!open) {
    return null;
  }

  return /*#__PURE__*/React.createElement(Dialog, {
    open: open,
    onClose: onClose,
    "data-testid": "update-personal-account-token-dialog"
  }, /*#__PURE__*/React.createElement(Form, {
    data: token,
    onSubmit: onSubmit
  }, function (_ref3) {
    var Bind = _ref3.Bind,
        form = _ref3.form;
    return /*#__PURE__*/React.createElement(React.Fragment, null, loading && /*#__PURE__*/React.createElement(CircularProgress, {
      label: "Updating token..."
    }), /*#__PURE__*/React.createElement(DialogTitle, null, t(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["Update Token"])))), /*#__PURE__*/React.createElement(DialogContent, null, /*#__PURE__*/React.createElement(Bind, {
      name: "name"
    }, /*#__PURE__*/React.createElement(Input, {
      label: t(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["Token name"])))
    }))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(DialogCancel, null, "Cancel"), /*#__PURE__*/React.createElement(DialogButton, {
      "data-testid": "AcceptUpdateToken-".concat(token.id),
      onClick: form.submit
    }, t(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["OK"]))))));
  }));
};
//# sourceMappingURL=UpdateTokenDialog.js.map