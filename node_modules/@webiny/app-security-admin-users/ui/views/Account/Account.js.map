{"version":3,"sources":["../../../../src/ui/views/Account/Account.tsx"],"names":["React","useState","useQuery","useMutation","i18n","useSnackbar","Form","Input","ButtonPrimary","CircularProgress","SnackbarAction","Cell","Grid","Accordion","AccordionItem","validation","AccountTokens","AvatarImage","GET_CURRENT_USER","UPDATE_CURRENT_USER","SimpleForm","SimpleFormHeader","SimpleFormFooter","SimpleFormContent","useSecurity","SecurityIdentity","View","t","ns","UserAccountForm","loading","setLoading","showSnackbar","identity","setIdentity","currentUser","updateUser","onSubmit","formData","variables","data","response","error","security","updateCurrentUser","message","action","from","firstName","lastName","avatar","user","form","Bind","marginBottom","zIndex","create","login","personalAccessTokens","submit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { omit } from \"lodash\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { Form } from \"@webiny/form\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { SnackbarAction } from \"@webiny/ui/Snackbar\";\nimport { Cell, Grid } from \"@webiny/ui/Grid\";\nimport { Accordion, AccordionItem } from \"@webiny/ui/Accordion\";\nimport { validation } from \"@webiny/validation\";\nimport AccountTokens from \"./AccountTokens\";\nimport AvatarImage from \"../Components/AvatarImage\";\nimport { ReactComponent as SettingsIcon } from \"../../../assets/icons/settings-24px.svg\";\nimport { ReactComponent as SecurityIcon } from \"../../../assets/icons/security-24px.svg\";\nimport { GET_CURRENT_USER, UPDATE_CURRENT_USER } from \"./graphql\";\n\nimport {\n    SimpleForm,\n    SimpleFormHeader,\n    SimpleFormFooter,\n    SimpleFormContent\n} from \"@webiny/app-admin/components/SimpleForm\";\nimport { useSecurity } from \"@webiny/app-security\";\nimport { SecurityIdentity } from \"@webiny/app-security/SecurityIdentity\";\nimport { View } from \"@webiny/app/components/View\";\n\nconst t = i18n.ns(\"app-security-admin-users/account-form\");\n\nconst UserAccountForm = () => {\n    const [loading, setLoading] = useState(false);\n    const { showSnackbar } = useSnackbar();\n    const { identity, setIdentity } = useSecurity();\n\n    const currentUser = useQuery(GET_CURRENT_USER);\n    const [updateUser] = useMutation(UPDATE_CURRENT_USER);\n\n    const onSubmit = async formData => {\n        setLoading(true);\n        const { data: response } = await updateUser({\n            variables: { data: omit(formData, [\"login\", \"personalAccessTokens\"]) }\n        });\n        const { error } = response.security.updateCurrentUser;\n        setLoading(false);\n\n        if (error) {\n            return showSnackbar(error.message, {\n                action: <SnackbarAction label=\"Close\" onClick={() => showSnackbar(null)} />\n            });\n        }\n\n        setIdentity(\n            SecurityIdentity.from(identity, {\n                firstName: formData.firstName,\n                lastName: formData.lastName,\n                avatar: formData.avatar\n            })\n        );\n\n        showSnackbar(\"Account saved successfully!\");\n    };\n\n    const user = currentUser.loading ? {} : currentUser.data.security.user.data;\n\n    return (\n        <Grid>\n            <Cell span={3} />\n            <Cell span={6}>\n                <Form data={user} onSubmit={onSubmit}>\n                    {({ data, form, Bind }) => (\n                        <>\n                            <div style={{ marginBottom: \"32px\" }}>\n                                <Bind name=\"avatar\">\n                                    <AvatarImage round />\n                                </Bind>\n                            </div>\n                            <SimpleForm>\n                                {loading && <CircularProgress style={{ zIndex: 3 }} />}\n                                <SimpleFormHeader title={\"Account\"} />\n                                <SimpleFormContent>\n                                    <Accordion elevation={0}>\n                                        <AccordionItem\n                                            open\n                                            description=\"Account information\"\n                                            title=\"Bio\"\n                                            icon={<SettingsIcon />}\n                                        >\n                                            <Grid>\n                                                <Cell span={12}>\n                                                    <Bind\n                                                        name=\"firstName\"\n                                                        validators={validation.create(\"required\")}\n                                                    >\n                                                        <Input label={t`First Name`} />\n                                                    </Bind>\n                                                </Cell>\n                                                <Cell span={12}>\n                                                    <Bind\n                                                        name=\"lastName\"\n                                                        validators={validation.create(\"required\")}\n                                                    >\n                                                        <Input label={t`Last Name`} />\n                                                    </Bind>\n                                                </Cell>\n                                                <Cell span={12}>\n                                                    <Input\n                                                        value={data.login}\n                                                        label={t`Email`}\n                                                        description={\n                                                            \"Email is your unique identifier and cannot be changed!\"\n                                                        }\n                                                    />\n                                                </Cell>\n                                                <View\n                                                    name={\"adminUsers.account.form.fields\"}\n                                                    props={{ Bind, data }}\n                                                />\n                                            </Grid>\n                                        </AccordionItem>\n                                        <AccordionItem\n                                            title=\"Personal Access Tokens\"\n                                            description=\"Permanent authentication tokens\"\n                                            icon={<SecurityIcon />}\n                                        >\n                                            <AccountTokens tokens={user.personalAccessTokens} />\n                                        </AccordionItem>\n                                    </Accordion>\n                                </SimpleFormContent>\n                                <SimpleFormFooter>\n                                    <ButtonPrimary\n                                        onClick={form.submit}\n                                    >{t`Update account`}</ButtonPrimary>\n                                </SimpleFormFooter>\n                            </SimpleForm>\n                        </>\n                    )}\n                </Form>\n            </Cell>\n        </Grid>\n    );\n};\n\nexport default UserAccountForm;\n"],"file":"Account.js"}