import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _omit from "lodash/omit";

var _templateObject, _templateObject2, _templateObject3, _templateObject4;

import _regeneratorRuntime from "@babel/runtime/regenerator";
import React, { useState } from "react";
import { useQuery, useMutation } from "@apollo/react-hooks";
import { i18n } from "@webiny/app/i18n";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { Form } from "@webiny/form";
import { Input } from "@webiny/ui/Input";
import { ButtonPrimary } from "@webiny/ui/Button";
import { CircularProgress } from "@webiny/ui/Progress";
import { SnackbarAction } from "@webiny/ui/Snackbar";
import { Cell, Grid } from "@webiny/ui/Grid";
import { Accordion, AccordionItem } from "@webiny/ui/Accordion";
import { validation } from "@webiny/validation";
import AccountTokens from "./AccountTokens";
import AvatarImage from "../Components/AvatarImage";
import { ReactComponent as SettingsIcon } from "@svgr/webpack!../../../assets/icons/settings-24px.svg";
import { ReactComponent as SecurityIcon } from "@svgr/webpack!../../../assets/icons/security-24px.svg";
import { GET_CURRENT_USER, UPDATE_CURRENT_USER } from "./graphql";
import { SimpleForm, SimpleFormHeader, SimpleFormFooter, SimpleFormContent } from "@webiny/app-admin/components/SimpleForm";
import { useSecurity } from "@webiny/app-security";
import { SecurityIdentity } from "@webiny/app-security/SecurityIdentity";
import { View } from "@webiny/app/components/View";
var t = i18n.ns("app-security-admin-users/account-form");

var UserAccountForm = function UserAccountForm() {
  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      loading = _useState2[0],
      setLoading = _useState2[1];

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var _useSecurity = useSecurity(),
      identity = _useSecurity.identity,
      setIdentity = _useSecurity.setIdentity;

  var currentUser = useQuery(GET_CURRENT_USER);

  var _useMutation = useMutation(UPDATE_CURRENT_USER),
      _useMutation2 = _slicedToArray(_useMutation, 1),
      updateUser = _useMutation2[0];

  var onSubmit = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {
      var _yield$updateUser, response, error;

      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              setLoading(true);
              _context.next = 3;
              return updateUser({
                variables: {
                  data: _omit(formData, ["login", "personalAccessTokens"])
                }
              });

            case 3:
              _yield$updateUser = _context.sent;
              response = _yield$updateUser.data;
              error = response.security.updateCurrentUser.error;
              setLoading(false);

              if (!error) {
                _context.next = 9;
                break;
              }

              return _context.abrupt("return", showSnackbar(error.message, {
                action: /*#__PURE__*/React.createElement(SnackbarAction, {
                  label: "Close",
                  onClick: function onClick() {
                    return showSnackbar(null);
                  }
                })
              }));

            case 9:
              setIdentity(SecurityIdentity.from(identity, {
                firstName: formData.firstName,
                lastName: formData.lastName,
                avatar: formData.avatar
              }));
              showSnackbar("Account saved successfully!");

            case 11:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onSubmit(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  var user = currentUser.loading ? {} : currentUser.data.security.user.data;
  return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
    span: 3
  }), /*#__PURE__*/React.createElement(Cell, {
    span: 6
  }, /*#__PURE__*/React.createElement(Form, {
    data: user,
    onSubmit: onSubmit
  }, function (_ref2) {
    var data = _ref2.data,
        form = _ref2.form,
        Bind = _ref2.Bind;
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
      style: {
        marginBottom: "32px"
      }
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "avatar"
    }, /*#__PURE__*/React.createElement(AvatarImage, {
      round: true
    }))), /*#__PURE__*/React.createElement(SimpleForm, null, loading && /*#__PURE__*/React.createElement(CircularProgress, {
      style: {
        zIndex: 3
      }
    }), /*#__PURE__*/React.createElement(SimpleFormHeader, {
      title: "Account"
    }), /*#__PURE__*/React.createElement(SimpleFormContent, null, /*#__PURE__*/React.createElement(Accordion, {
      elevation: 0
    }, /*#__PURE__*/React.createElement(AccordionItem, {
      open: true,
      description: "Account information",
      title: "Bio",
      icon: /*#__PURE__*/React.createElement(SettingsIcon, null)
    }, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "firstName",
      validators: validation.create("required")
    }, /*#__PURE__*/React.createElement(Input, {
      label: t(_templateObject || (_templateObject = _taggedTemplateLiteral(["First Name"])))
    }))), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "lastName",
      validators: validation.create("required")
    }, /*#__PURE__*/React.createElement(Input, {
      label: t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Last Name"])))
    }))), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Input, {
      value: data.login,
      label: t(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["Email"]))),
      description: "Email is your unique identifier and cannot be changed!"
    })), /*#__PURE__*/React.createElement(View, {
      name: "adminUsers.account.form.fields",
      props: {
        Bind: Bind,
        data: data
      }
    }))), /*#__PURE__*/React.createElement(AccordionItem, {
      title: "Personal Access Tokens",
      description: "Permanent authentication tokens",
      icon: /*#__PURE__*/React.createElement(SecurityIcon, null)
    }, /*#__PURE__*/React.createElement(AccountTokens, {
      tokens: user.personalAccessTokens
    })))), /*#__PURE__*/React.createElement(SimpleFormFooter, null, /*#__PURE__*/React.createElement(ButtonPrimary, {
      onClick: form.submit
    }, t(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["Update account"])))))));
  })));
};

export default UserAccountForm;
//# sourceMappingURL=Account.js.map