{"version":3,"sources":["../../../../src/ui/views/Groups/GroupsForm.tsx"],"names":["React","useCallback","useMutation","useQuery","styled","pick","get","useRouter","i18n","Form","Grid","Cell","Input","Alert","ButtonDefault","ButtonIcon","ButtonPrimary","CircularProgress","validation","SimpleForm","SimpleFormFooter","SimpleFormContent","SimpleFormHeader","Typography","Permissions","useSnackbar","CREATE_GROUP","LIST_GROUPS","READ_GROUP","UPDATE_GROUP","SnackbarAction","isEmpty","EmptyView","t","ns","ButtonWrapper","display","justifyContent","GroupForm","location","history","showSnackbar","newGroup","URLSearchParams","search","slug","getQuery","variables","skip","onCompleted","data","error","security","group","push","message","refetchQueries","query","create","createMutation","update","updateMutation","loading","find","item","onSubmit","permissions","length","timeout","dismissesOnAction","action","isUpdate","createdOn","operation","args","response","systemGroup","showEmptyView","form","Bind","name","Boolean","bind","submit"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport styled from \"@emotion/styled\";\nimport pick from \"lodash/pick\";\nimport get from \"lodash/get\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { Form } from \"@webiny/form\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Alert } from \"@webiny/ui/Alert\";\nimport { ButtonDefault, ButtonIcon, ButtonPrimary } from \"@webiny/ui/Button\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { validation } from \"@webiny/validation\";\nimport {\n    SimpleForm,\n    SimpleFormFooter,\n    SimpleFormContent,\n    SimpleFormHeader\n} from \"@webiny/app-admin/components/SimpleForm\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Permissions } from \"@webiny/app-admin/components/Permissions\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { CREATE_GROUP, LIST_GROUPS, READ_GROUP, UPDATE_GROUP } from \"./graphql\";\nimport { SnackbarAction } from \"@webiny/ui/Snackbar\";\nimport isEmpty from \"lodash/isEmpty\";\nimport EmptyView from \"@webiny/app-admin/components/EmptyView\";\nimport { ReactComponent as AddIcon } from \"@webiny/app-admin/assets/icons/add-18px.svg\";\n\nconst t = i18n.ns(\"app-security/admin/groups/form\");\n\nconst ButtonWrapper = styled(\"div\")({\n    display: \"flex\",\n    justifyContent: \"space-between\"\n});\n\nconst GroupForm = () => {\n    const { location, history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    const newGroup = new URLSearchParams(location.search).get(\"new\") === \"true\";\n    const slug = new URLSearchParams(location.search).get(\"slug\");\n\n    const getQuery = useQuery(READ_GROUP, {\n        variables: { slug },\n        skip: !slug,\n        onCompleted: data => {\n            if (!data) {\n                return;\n            }\n\n            const { error } = data.security.group;\n            if (error) {\n                history.push(\"/security/groups\");\n                showSnackbar(error.message);\n            }\n        }\n    });\n\n    const [create, createMutation] = useMutation(CREATE_GROUP, {\n        refetchQueries: [{ query: LIST_GROUPS }]\n    });\n\n    const [update, updateMutation] = useMutation(UPDATE_GROUP, {\n        refetchQueries: [{ query: LIST_GROUPS }]\n    });\n\n    const loading = [getQuery, createMutation, updateMutation].find(item => item.loading);\n\n    const onSubmit = useCallback(\n        async data => {\n            if (!data.permissions || !data.permissions.length) {\n                showSnackbar(t`You must configure permissions before saving!`, {\n                    timeout: 60000,\n                    dismissesOnAction: true,\n                    action: <SnackbarAction label={\"OK\"} />\n                });\n                return;\n            }\n\n            const isUpdate = data.createdOn;\n            const [operation, args] = isUpdate\n                ? [\n                      update,\n                      {\n                          variables: {\n                              slug: data.slug,\n                              data: pick(data, [\"name\", \"description\", \"permissions\"])\n                          }\n                      }\n                  ]\n                : [\n                      create,\n                      {\n                          variables: {\n                              data: pick(data, [\"name\", \"slug\", \"description\", \"permissions\"])\n                          }\n                      }\n                  ];\n\n            const response = await operation(args);\n\n            const { data: group, error } = response.data.security.group;\n            if (error) {\n                return showSnackbar(error.message);\n            }\n\n            !isUpdate && history.push(`/security/groups?slug=${group.slug}`);\n            showSnackbar(t`Group saved successfully!`);\n        },\n        [slug]\n    );\n\n    const data = loading ? {} : get(getQuery, \"data.security.group.data\", {});\n\n    const systemGroup = data.slug === \"full-access\";\n\n    const showEmptyView = !newGroup && !loading && isEmpty(data);\n    // Render \"No content\" selected view.\n    if (showEmptyView) {\n        return (\n            <EmptyView\n                title={t`Click on the left side list to display group details or create a...`}\n                action={\n                    <ButtonDefault\n                        data-testid=\"new-record-button\"\n                        onClick={() => history.push(\"/security/groups?new=true\")}\n                    >\n                        <ButtonIcon icon={<AddIcon />} />\n                        {t`New Group`}\n                    </ButtonDefault>\n                }\n            />\n        );\n    }\n\n    return (\n        <Form data={data} onSubmit={onSubmit}>\n            {({ data, form, Bind }) => {\n                return (\n                    <SimpleForm>\n                        {loading && <CircularProgress />}\n                        <SimpleFormHeader title={data.name ? data.name : \"Untitled\"} />\n                        <SimpleFormContent>\n                            <Grid>\n                                <Cell span={6}>\n                                    <Bind\n                                        name=\"name\"\n                                        validators={validation.create(\"required,minLength:3\")}\n                                    >\n                                        <Input label={t`Name`} disabled={systemGroup} />\n                                    </Bind>\n                                </Cell>\n                                <Cell span={6}>\n                                    <Bind\n                                        name=\"slug\"\n                                        validators={validation.create(\"required,minLength:3\")}\n                                    >\n                                        <Input disabled={Boolean(slug)} label={t`Slug`} />\n                                    </Bind>\n                                </Cell>\n                            </Grid>\n                            <Grid>\n                                <Cell span={12}>\n                                    <Bind\n                                        name=\"description\"\n                                        validators={validation.create(\"maxLength:500\")}\n                                    >\n                                        <Input\n                                            label={t`Description`}\n                                            rows={3}\n                                            disabled={systemGroup}\n                                        />\n                                    </Bind>\n                                </Cell>\n                            </Grid>\n                            {systemGroup && (\n                                <Grid>\n                                    <Cell span={12}>\n                                        <Alert type={\"info\"} title={\"Permissions are locked\"}>\n                                            This is a protected system group and you can&apos;t\n                                            modify its permissions.\n                                        </Alert>\n                                    </Cell>\n                                </Grid>\n                            )}\n                            {!systemGroup && (\n                                <Grid>\n                                    <Cell span={12}>\n                                        <Typography use={\"subtitle1\"}>{t`Permissions`}</Typography>\n                                    </Cell>\n                                    <Cell span={12}>\n                                        <Bind name={\"permissions\"} defaultValue={[]}>\n                                            {bind => (\n                                                <Permissions id={data.slug || \"new\"} {...bind} />\n                                            )}\n                                        </Bind>\n                                    </Cell>\n                                </Grid>\n                            )}\n                        </SimpleFormContent>\n                        {systemGroup ? null : (\n                            <SimpleFormFooter>\n                                <ButtonWrapper>\n                                    <ButtonDefault\n                                        onClick={() => history.push(\"/security/groups\")}\n                                    >{t`Cancel`}</ButtonDefault>\n                                    <ButtonPrimary\n                                        onClick={form.submit}\n                                    >{t`Save group`}</ButtonPrimary>\n                                </ButtonWrapper>\n                            </SimpleFormFooter>\n                        )}\n                    </SimpleForm>\n                );\n            }}\n        </Form>\n    );\n};\n\nexport default GroupForm;\n"],"file":"GroupsForm.js"}