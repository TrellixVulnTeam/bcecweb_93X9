{"version":3,"sources":["../../../../src/ui/views/Groups/GroupsDataList.tsx"],"names":["React","useCallback","useMemo","useState","orderBy","i18n","DataList","ScrollList","ListItem","ListItemText","ListItemTextSecondary","ListItemMeta","ListActions","DataListModalOverlayAction","DataListModalOverlay","DeleteIcon","useRouter","useSnackbar","useQuery","useMutation","useConfirmationDialog","LIST_GROUPS","DELETE_GROUP","Tooltip","ButtonIcon","ButtonSecondary","Cell","Grid","Select","SearchUI","deserializeSorters","serializeSorters","t","ns","SORTERS","label","sorters","createdOn","name","GroupsDataList","filter","setFilter","sort","setSort","history","location","showSnackbar","dataTestId","showConfirmation","listResponse","data","listLoading","loading","refetchQueries","query","deleteIt","deleteLoading","security","groups","slug","URLSearchParams","search","get","filterGroup","description","toLowerCase","includes","sortGroups","Object","entries","key","value","deleteItem","item","variables","error","deleteGroup","message","push","groupsDataListModalOverlay","map","filteredData","groupList"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\";\nimport orderBy from \"lodash/orderBy\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport {\n    DataList,\n    ScrollList,\n    ListItem,\n    ListItemText,\n    ListItemTextSecondary,\n    ListItemMeta,\n    ListActions,\n    DataListModalOverlayAction,\n    DataListModalOverlay\n} from \"@webiny/ui/List\";\nimport { DeleteIcon } from \"@webiny/ui/List/DataList/icons\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport { LIST_GROUPS, DELETE_GROUP } from \"./graphql\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { ButtonIcon, ButtonSecondary } from \"@webiny/ui/Button\";\nimport { Cell, Grid } from \"@webiny/ui/Grid\";\nimport { Select } from \"@webiny/ui/Select\";\nimport SearchUI from \"@webiny/app-admin/components/SearchUI\";\nimport { ReactComponent as AddIcon } from \"@webiny/app-admin/assets/icons/add-18px.svg\";\nimport { ReactComponent as FilterIcon } from \"@webiny/app-admin/assets/icons/filter-24px.svg\";\nimport { deserializeSorters, serializeSorters } from \"../utils\";\n\nconst t = i18n.ns(\"app-security/admin/groups/data-list\");\n\nconst SORTERS = [\n    {\n        label: t`Newest to oldest`,\n        sorters: { createdOn: \"desc\" }\n    },\n    {\n        label: t`Oldest to newest`,\n        sorters: { createdOn: \"asc\" }\n    },\n    {\n        label: t`Name A-Z`,\n        sorters: { name: \"asc\" }\n    },\n    {\n        label: t`Name Z-A`,\n        sorters: { name: \"desc\" }\n    }\n];\n\nconst GroupsDataList = () => {\n    const [filter, setFilter] = useState(\"\");\n    const [sort, setSort] = useState(serializeSorters(SORTERS[0].sorters));\n    const { history, location } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    const { showConfirmation } = useConfirmationDialog({\n        dataTestId: \"default-data-list.delete-dialog\"\n    });\n\n    const { data: listResponse, loading: listLoading } = useQuery(LIST_GROUPS);\n\n    const [deleteIt, { loading: deleteLoading }] = useMutation(DELETE_GROUP, {\n        refetchQueries: [{ query: LIST_GROUPS }]\n    });\n\n    const data = listLoading && !listResponse ? [] : listResponse.security.groups.data;\n    const slug = new URLSearchParams(location.search).get(\"slug\");\n\n    const filterGroup = useCallback(\n        ({ name, slug, description }) => {\n            return (\n                name.toLowerCase().includes(filter) ||\n                slug.toLowerCase().includes(filter) ||\n                (description && description.toLowerCase().includes(filter))\n            );\n        },\n        [filter]\n    );\n\n    const sortGroups = useCallback(\n        groups => {\n            if (!sort) {\n                return groups;\n            }\n            const [[key, value]] = Object.entries(deserializeSorters(sort));\n            return orderBy(groups, [key], [value]);\n        },\n        [sort]\n    );\n\n    const deleteItem = useCallback(\n        item => {\n            showConfirmation(async () => {\n                const { data } = await deleteIt({\n                    variables: item\n                });\n\n                const { error } = data.security.deleteGroup;\n                if (error) {\n                    return showSnackbar(error.message);\n                }\n\n                showSnackbar(t`Group \"{slug}\" deleted.`({ slug: item.slug }));\n\n                if (slug === item.slug) {\n                    history.push(`/security/groups`);\n                }\n            });\n        },\n        [slug]\n    );\n\n    const groupsDataListModalOverlay = useMemo(\n        () => (\n            <DataListModalOverlay>\n                <Grid>\n                    <Cell span={12}>\n                        <Select value={sort} onChange={setSort} label={t`Sort by`}>\n                            {SORTERS.map(({ label, sorters }) => {\n                                return (\n                                    <option key={label} value={serializeSorters(sorters)}>\n                                        {label}\n                                    </option>\n                                );\n                            })}\n                        </Select>\n                    </Cell>\n                </Grid>\n            </DataListModalOverlay>\n        ),\n        [sort]\n    );\n\n    const filteredData = filter === \"\" ? data : data.filter(filterGroup);\n    const groupList = sortGroups(filteredData);\n\n    return (\n        <DataList\n            title={t`Security Groups`}\n            actions={\n                <ButtonSecondary\n                    data-testid=\"new-record-button\"\n                    onClick={() => history.push(\"/security/groups?new=true\")}\n                >\n                    <ButtonIcon icon={<AddIcon />} /> {t`New Group`}\n                </ButtonSecondary>\n            }\n            data={groupList}\n            loading={listLoading || deleteLoading}\n            search={\n                <SearchUI value={filter} onChange={setFilter} inputPlaceholder={t`Search Groups`} />\n            }\n            modalOverlay={groupsDataListModalOverlay}\n            modalOverlayAction={\n                <DataListModalOverlayAction\n                    icon={<FilterIcon />}\n                    data-testid={\"default-data-list.filter\"}\n                />\n            }\n        >\n            {({ data }) => (\n                <ScrollList data-testid=\"default-data-list\">\n                    {data.map(item => (\n                        <ListItem key={item.slug} selected={item.slug === slug}>\n                            <ListItemText\n                                onClick={() => history.push(`/security/groups?slug=${item.slug}`)}\n                            >\n                                {item.name}\n                                <ListItemTextSecondary>{item.description}</ListItemTextSecondary>\n                            </ListItemText>\n\n                            <ListItemMeta>\n                                <ListActions>\n                                    {item.slug !== \"full-access\" ? (\n                                        <DeleteIcon\n                                            onClick={() => deleteItem(item)}\n                                            data-testid={\"default-data-list.delete\"}\n                                        />\n                                    ) : (\n                                        <Tooltip\n                                            placement={\"bottom\"}\n                                            content={<span>{t`You can't delete this group.`}</span>}\n                                        >\n                                            <DeleteIcon disabled />\n                                        </Tooltip>\n                                    )}\n                                </ListActions>\n                            </ListItemMeta>\n                        </ListItem>\n                    ))}\n                </ScrollList>\n            )}\n        </DataList>\n    );\n};\n\nexport default GroupsDataList;\n"],"file":"GroupsDataList.js"}