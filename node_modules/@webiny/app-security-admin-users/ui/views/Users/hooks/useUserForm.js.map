{"version":3,"sources":["../../../../../src/ui/views/Users/hooks/useUserForm.ts"],"names":["useCallback","useMutation","useQuery","pick","isEmpty","useRouter","useSnackbar","CREATE_USER","LIST_USERS","READ_USER","UPDATE_USER","pickDataForCreateOperation","data","pickDataForUpdateOperation","useUserForm","location","history","showSnackbar","query","URLSearchParams","search","newUser","get","login","variables","skip","onCompleted","error","security","user","push","message","userLoading","loading","refetchQueries","create","createLoading","update","updateLoading","onSubmit","isUpdate","createdOn","operation","args","result","encodeURIComponent","showEmptyView","fullName","firstName","lastName","trim","createUser","cancelEditing"],"mappings":"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","sourcesContent":["import { useCallback } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport pick from \"lodash/pick\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { CREATE_USER, LIST_USERS, READ_USER, UPDATE_USER } from \"~/ui/views/Users/graphql\";\n\nconst pickDataForCreateOperation = data => {\n    return pick(data, [\"login\", \"password\", \"firstName\", \"lastName\", \"avatar\", \"group\"]);\n};\n\nconst pickDataForUpdateOperation = data => {\n    return pick(data, [\"password\", \"firstName\", \"lastName\", \"avatar\", \"group\"]);\n};\n\nexport type UseUserForm = ReturnType<typeof useUserForm>;\n\nexport function useUserForm() {\n    const { location, history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n\n    const query = new URLSearchParams(location.search);\n    const newUser = query.get(\"new\") === \"true\";\n    const login = query.get(\"login\");\n\n    const { data, loading: userLoading } = useQuery(READ_USER, {\n        variables: { login },\n        skip: !login,\n        onCompleted: data => {\n            if (!data) {\n                return;\n            }\n\n            const { error } = data.security.user;\n            if (error) {\n                history.push(\"/security/users\");\n                showSnackbar(error.message);\n            }\n        }\n    });\n\n    const [create, { loading: createLoading }] = useMutation(CREATE_USER, {\n        refetchQueries: [{ query: LIST_USERS }]\n    });\n\n    const [update, { loading: updateLoading }] = useMutation(UPDATE_USER, {\n        refetchQueries: [{ query: LIST_USERS }]\n    });\n\n    const loading = userLoading || createLoading || updateLoading;\n\n    const onSubmit = useCallback(\n        async data => {\n            const isUpdate = data.createdOn;\n            const [operation, args] = isUpdate\n                ? [\n                      update,\n                      {\n                          variables: {\n                              login: data.login,\n                              data: pickDataForUpdateOperation(data)\n                          }\n                      }\n                  ]\n                : [\n                      create,\n                      {\n                          variables: {\n                              data: pickDataForCreateOperation(data)\n                          }\n                      }\n                  ];\n\n            const result = await operation(args);\n\n            const { data: user, error } = result.data.security.user;\n\n            if (error) {\n                return showSnackbar(error.message);\n            }\n\n            !isUpdate && history.push(`/security/users?login=${encodeURIComponent(user.login)}`);\n            showSnackbar(\"User saved successfully.\");\n        },\n        [login]\n    );\n\n    const user = userLoading ? {} : data ? data.security.user.data : {};\n\n    const showEmptyView = !newUser && !userLoading && isEmpty(user);\n\n    return {\n        login,\n        loading,\n        user,\n        onSubmit,\n        fullName: `${user.firstName || \"\"} ${user.lastName || \"\"}`.trim(),\n        showEmptyView,\n        createUser() {\n            history.push(\"/security/users?new=true\");\n        },\n        cancelEditing() {\n            history.push(\"/security/users\");\n        }\n    };\n}\n"],"file":"useUserForm.js"}