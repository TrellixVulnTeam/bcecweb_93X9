{"version":3,"sources":["../../../../src/ui/views/Users/UsersDataList.tsx"],"names":["React","useCallback","useMemo","useState","useMutation","useQuery","orderBy","i18n","useSecurity","Tooltip","Image","DataList","ScrollList","ListItem","ListItemText","ListItemTextSecondary","ListItemMeta","ListActions","ListItemGraphic","DataListModalOverlayAction","DataListModalOverlay","ButtonIcon","ButtonSecondary","DeleteIcon","Avatar","Cell","Grid","Select","useRouter","useSnackbar","useConfirmationDialog","SearchUI","DELETE_USER","LIST_USERS","serializeSorters","deserializeSorters","t","ns","SORTERS","label","sorters","createdOn","login","UsersDataList","filter","setFilter","sort","setSort","identity","history","showSnackbar","dataTestId","showConfirmation","filterUsers","firstName","lastName","toLowerCase","includes","sortUsers","users","Object","entries","key","value","listUsers","data","usersLoading","loading","refetchQueries","query","deleteIt","deleteLoading","security","filteredData","userList","URLSearchParams","location","search","get","deleteItem","item","variables","response","error","deleteUser","message","push","usersDataListModalOverlay","map","props","width","avatar","src","gravatar","encodeURIComponent"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport orderBy from \"lodash/orderBy\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useSecurity } from \"@webiny/app-security\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { Image } from \"@webiny/app/components\";\nimport {\n    DataList,\n    ScrollList,\n    ListItem,\n    ListItemText,\n    ListItemTextSecondary,\n    ListItemMeta,\n    ListActions,\n    ListItemGraphic,\n    DataListModalOverlayAction,\n    DataListModalOverlay\n} from \"@webiny/ui/List\";\nimport { ButtonIcon, ButtonSecondary } from \"@webiny/ui/Button\";\nimport { DeleteIcon } from \"@webiny/ui/List/DataList/icons\";\nimport { Avatar } from \"@webiny/ui/Avatar\";\nimport { Cell, Grid } from \"@webiny/ui/Grid\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport SearchUI from \"@webiny/app-admin/components/SearchUI\";\nimport { ReactComponent as AddIcon } from \"@webiny/app-admin/assets/icons/add-18px.svg\";\nimport { ReactComponent as FilterIcon } from \"@webiny/app-admin/assets/icons/filter-24px.svg\";\nimport { DELETE_USER, LIST_USERS } from \"./graphql\";\nimport { serializeSorters, deserializeSorters } from \"../utils\";\n\nconst t = i18n.ns(\"app-identity/admin/users/data-list\");\n\nconst SORTERS = [\n    {\n        label: t`Newest to oldest`,\n        sorters: { createdOn: \"desc\" }\n    },\n    {\n        label: t`Oldest to newest`,\n        sorters: { createdOn: \"asc\" }\n    },\n    {\n        label: t`Login A-Z`,\n        sorters: { login: \"asc\" }\n    },\n    {\n        label: t`Login Z-A`,\n        sorters: { login: \"desc\" }\n    }\n];\n\nconst UsersDataList = () => {\n    const [filter, setFilter] = useState(\"\");\n    const [sort, setSort] = useState(serializeSorters(SORTERS[0].sorters));\n    const { identity } = useSecurity();\n    const { history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    const { showConfirmation } = useConfirmationDialog({\n        dataTestId: \"default-data-list.delete-dialog\"\n    });\n\n    const filterUsers = useCallback(\n        ({ login, firstName, lastName }) => {\n            return (\n                login.toLowerCase().includes(filter) ||\n                firstName.toLowerCase().includes(filter) ||\n                lastName.toLowerCase().includes(filter)\n            );\n        },\n        [filter]\n    );\n\n    const sortUsers = useCallback(\n        users => {\n            if (!sort) {\n                return users;\n            }\n            const [[key, value]] = Object.entries(deserializeSorters(sort));\n            return orderBy(users, [key], [value]);\n        },\n        [sort]\n    );\n\n    const { data: listUsers, loading: usersLoading } = useQuery(LIST_USERS);\n\n    const [deleteIt, { loading: deleteLoading }] = useMutation(DELETE_USER, {\n        refetchQueries: [{ query: LIST_USERS }]\n    });\n\n    const data = usersLoading && !listUsers ? [] : listUsers.security.users.data || [];\n    const filteredData = filter === \"\" ? data : data.filter(filterUsers);\n    const userList = sortUsers(filteredData);\n    const login = new URLSearchParams(location.search).get(\"login\");\n\n    const deleteItem = useCallback(\n        item => {\n            showConfirmation(async () => {\n                const response = await deleteIt({\n                    variables: item\n                });\n\n                const error = response?.data?.security?.deleteUser?.error;\n                if (error) {\n                    return showSnackbar(error.message);\n                }\n\n                showSnackbar(t`User \"{login}\" deleted.`({ login: item.login }));\n\n                if (login === item.login) {\n                    history.push(`/security/users`);\n                }\n            });\n        },\n        [login]\n    );\n\n    const usersDataListModalOverlay = useMemo(\n        () => (\n            <DataListModalOverlay>\n                <Grid>\n                    <Cell span={12}>\n                        <Select value={sort} onChange={setSort} label={t`Sort by`}>\n                            {SORTERS.map(({ label, sorters }) => {\n                                return (\n                                    <option key={label} value={serializeSorters(sorters)}>\n                                        {label}\n                                    </option>\n                                );\n                            })}\n                        </Select>\n                    </Cell>\n                </Grid>\n            </DataListModalOverlay>\n        ),\n        [sort]\n    );\n\n    const loading = usersLoading || deleteLoading;\n\n    return (\n        <DataList\n            title={t`Security Users`}\n            actions={\n                <ButtonSecondary\n                    data-testid=\"new-record-button\"\n                    onClick={() => history.push(\"/security/users?new=true\")}\n                >\n                    <ButtonIcon icon={<AddIcon />} /> {t`New User`}\n                </ButtonSecondary>\n            }\n            data={userList}\n            loading={loading}\n            search={\n                <SearchUI value={filter} onChange={setFilter} inputPlaceholder={t`Search users`} />\n            }\n            modalOverlay={usersDataListModalOverlay}\n            modalOverlayAction={\n                <DataListModalOverlayAction\n                    icon={<FilterIcon />}\n                    data-testid={\"default-data-list.filter\"}\n                />\n            }\n        >\n            {({ data }) => (\n                <ScrollList twoLine avatarList data-testid=\"default-data-list\">\n                    {data.map(item => (\n                        <ListItem key={item.login} selected={item.login === login}>\n                            <ListItemGraphic>\n                                <Avatar\n                                    renderImage={props => (\n                                        <Image {...props} transform={{ width: 100 }} />\n                                    )}\n                                    src={item.avatar ? item.avatar.src : item.gravatar}\n                                    fallbackText={item.firstName}\n                                    alt={t`User's avatar.`}\n                                />\n                            </ListItemGraphic>\n                            <ListItemText\n                                onClick={() =>\n                                    history.push(\n                                        `/security/users?login=${encodeURIComponent(item.login)}`\n                                    )\n                                }\n                            >\n                                {item.firstName} {item.lastName}\n                                <ListItemTextSecondary>{item.login}</ListItemTextSecondary>\n                            </ListItemText>\n\n                            <ListItemMeta>\n                                <ListActions>\n                                    {identity && identity.login !== item.login ? (\n                                        <DeleteIcon\n                                            onClick={() => deleteItem(item)}\n                                            data-testid={\"default-data-list.delete\"}\n                                        />\n                                    ) : (\n                                        <Tooltip\n                                            placement={\"bottom\"}\n                                            content={\n                                                <span>{t`You can't delete your own user account.`}</span>\n                                            }\n                                        >\n                                            <DeleteIcon disabled />\n                                        </Tooltip>\n                                    )}\n                                </ListActions>\n                            </ListItemMeta>\n                        </ListItem>\n                    ))}\n                </ScrollList>\n            )}\n        </DataList>\n    );\n};\n\nexport default UsersDataList;\n"],"file":"UsersDataList.js"}