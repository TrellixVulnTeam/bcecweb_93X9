import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import React, { Fragment } from "react";
import { plugins } from "@webiny/plugins";
import { ViewPlugin } from "../plugins/ViewPlugin";
export var View = function View(_ref) {
  var name = _ref.name,
      children = _ref.children,
      _ref$props = _ref.props,
      props = _ref$props === void 0 ? {} : _ref$props;
  var viewPlugins = plugins.byType(ViewPlugin.type).filter(function (pl) {
    return pl.key === name;
  });

  if (viewPlugins.length) {
    children = viewPlugins.reduce(function (el, pl) {
      return pl.render(_objectSpread({
        children: el
      }, props));
    }, children);
  }

  return /*#__PURE__*/React.createElement(Fragment, null, children || null);
};
//# sourceMappingURL=View.js.map