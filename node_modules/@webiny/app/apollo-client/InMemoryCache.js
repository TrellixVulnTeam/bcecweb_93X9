import _createForOfIteratorHelper from "@babel/runtime/helpers/createForOfIteratorHelper";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _get from "@babel/runtime/helpers/get";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { InMemoryCache as BaseInMemoryCache } from "apollo-cache-inmemory";
import { plugins } from "@webiny/plugins";
import { AddQuerySelectionPlugin } from "../plugins/AddQuerySelectionPlugin";
import { ApolloLinkPlugin } from "../plugins/ApolloLinkPlugin";
export var InMemoryCache = /*#__PURE__*/function (_BaseInMemoryCache) {
  _inherits(InMemoryCache, _BaseInMemoryCache);

  var _super = _createSuper(InMemoryCache);

  function InMemoryCache(config) {
    var _this;

    _classCallCheck(this, InMemoryCache);

    _this = _super.call(this, config);

    _defineProperty(_assertThisInitialized(_this), "transformPlugins", void 0);

    _this.transformPlugins = plugins.byType(ApolloLinkPlugin.type).filter(function (pl) {
      return pl instanceof AddQuerySelectionPlugin;
    });
    return _this;
  }

  _createClass(InMemoryCache, [{
    key: "transformDocument",
    value: function transformDocument(document) {
      // @ts-ignore
      var operationName = document.definitions[0].name.value;

      var _iterator = _createForOfIteratorHelper(this.transformPlugins),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var pl = _step.value;
          pl.addSelectionToQuery(operationName, document);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return _get(_getPrototypeOf(InMemoryCache.prototype), "transformDocument", this).call(this, document);
    }
  }]);

  return InMemoryCache;
}(BaseInMemoryCache);
//# sourceMappingURL=InMemoryCache.js.map