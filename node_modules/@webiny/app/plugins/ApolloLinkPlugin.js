import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { Plugin } from "@webiny/plugins";
export var ApolloLinkPlugin = /*#__PURE__*/function (_Plugin) {
  _inherits(ApolloLinkPlugin, _Plugin);

  var _super = _createSuper(ApolloLinkPlugin);

  function ApolloLinkPlugin(factory) {
    var _this;

    _classCallCheck(this, ApolloLinkPlugin);

    _this = _super.call(this);

    _defineProperty(_assertThisInitialized(_this), "factory", void 0);

    _this.factory = factory;
    return _this;
  }

  _createClass(ApolloLinkPlugin, [{
    key: "createLink",
    value: function createLink() {
      if (typeof this.factory === "function") {
        return this.factory();
      }

      throw Error("Missing ApolloLinkFactory in plugin \"".concat(this.name, "\"! Either pass a factory to ApolloLinkPlugin constructor or extend the class and override the \"createLink\" method."));
    }
  }]);

  return ApolloLinkPlugin;
}(Plugin);

_defineProperty(ApolloLinkPlugin, "type", "apollo-link");
//# sourceMappingURL=ApolloLinkPlugin.js.map