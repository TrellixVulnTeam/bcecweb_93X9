{"version":3,"sources":["../../../src/plugins/NetworkErrorLinkPlugin/ErrorOverlay.tsx"],"names":["React","useState","get","IconButton","Typography","i18n","OverlayWrapper","Pre","t","ns","ENVIRONMENT_VARIABLES_ARTICLE_LINK","ErrorOverlay","query","networkError","open","setOpen","console","error","stackTrace","message","link"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,IAAT;AACA,SAASC,cAAT,EAAyBC,GAAzB;;AAGA,IAAMC,CAAC,GAAGH,IAAI,CAACI,EAAL,CAAQ,2BAAR,CAAV;AAEA,IAAMC,kCAAkC,GACpC,iEADJ;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA6B;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAC9C,kBAAwBZ,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOa,IAAP;AAAA,MAAaC,OAAb,iBAD8C,CAE9C;;;AACAC,EAAAA,OAAO,CAACC,KAAR,CAAc;AAAEJ,IAAAA,YAAY,EAAZA;AAAF,GAAd;;AAEA,MAAI,CAACC,IAAL,EAAW;AACP,WAAO,IAAP;AACH;;AAED,MAAMI,UAAU,GAAGhB,GAAG,CAACW,YAAD,EAAe,oBAAf,CAAtB;AAEA,sBACI,oBAAC,cAAD,qBACI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAE;AAAjB,KAA+BA,YAAY,CAACM,OAA5C,CADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI,oBAAC,UAAD;AAAY,IAAA,IAAI,eAAE,oBAAC,SAAD,OAAlB;AAAiC,IAAA,OAAO,EAAE;AAAA,aAAMJ,OAAO,CAAC,KAAD,CAAb;AAAA;AAA1C,IADJ,CAJJ,CADJ,eASI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI,oBAAC,UAAD;AACI,IAAA,GAAG,EAAE;AADT,KAEEP,CAFF,+GADJ,eAII,oBAAC,GAAD,qBACI,kCAAOI,KAAP,CADJ,CAJJ,CADJ,EASKM,UAAU,iBACP;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAE;AAAjB,KAA+BV,CAA/B,6FADJ,eAEI,oBAAC,GAAD,qBACI,kCAAOU,UAAP,CADJ,CAFJ,CAVR,CATJ,eA2BI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAE;AAAjB,KACKV,CAAC,kOAAD,CAEmC;AAChCW,IAAAA,OAAO,eAAE;AAAM,MAAA,SAAS,EAAE;AAAjB,gCADuB;AAEhCC,IAAAA,IAAI,eACA;AACI,MAAA,IAAI,EAAEV,kCADV;AAEI,MAAA,MAAM,EAAE,QAFZ;AAGI,MAAA,GAAG,EAAE;AAHT;AAH4B,GAFnC,CADL,eAeI,+BAfJ,EAgBKF,CAhBL,4IADJ,CA3BJ,CADJ,CADJ;AAoDH,CA/DD;;AAiEA,eAAeG,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { i18n } from \"../../i18n\";\nimport { OverlayWrapper, Pre } from \"./StyledComponents\";\nimport { ReactComponent as CloseIcon } from \"./assets/close_24px.svg\";\n\nconst t = i18n.ns(\"app/graphql/error-overlay\");\n\nconst ENVIRONMENT_VARIABLES_ARTICLE_LINK =\n    \"https://www.webiny.com/docs/how-to-guides/environment-variables\";\n\nconst ErrorOverlay = ({ query, networkError }) => {\n    const [open, setOpen] = useState(true);\n    // Log error in browser's developer console for further inspection.\n    console.error({ networkError });\n\n    if (!open) {\n        return null;\n    }\n\n    const stackTrace = get(networkError, \"result.error.stack\");\n\n    return (\n        <OverlayWrapper>\n            <div className=\"inner\">\n                <div className=\"header\">\n                    <div className=\"header__title\">\n                        <Typography use={\"headline4\"}>{networkError.message}</Typography>\n                    </div>\n                    <div className=\"header__action\">\n                        <IconButton icon={<CloseIcon />} onClick={() => setOpen(false)} />\n                    </div>\n                </div>\n                <div className=\"body\">\n                    <div className=\"body__summary\">\n                        <Typography\n                            use={\"subtitle1\"}\n                        >{t`Error occurred while executing operation:`}</Typography>\n                        <Pre>\n                            <code>{query}</code>\n                        </Pre>\n                    </div>\n                    {stackTrace && (\n                        <div className=\"body__description\">\n                            <Typography use={\"subtitle1\"}>{t`Complete stack trace:`}</Typography>\n                            <Pre>\n                                <code>{stackTrace}</code>\n                            </Pre>\n                        </div>\n                    )}\n                </div>\n                <div className=\"footer\">\n                    <Typography use={\"body2\"}>\n                        {t`\n                        This screen is only visible if {message} environment variable is set.\n                        Read more about it in the {link}. `({\n                            message: <span className={\"highlight\"}>`REACT_APP_DEBUG=true`</span>,\n                            link: (\n                                <a\n                                    href={ENVIRONMENT_VARIABLES_ARTICLE_LINK}\n                                    target={\"_blank\"}\n                                    rel={\"noreferrer noopener\"}\n                                >\n                                    environment variables article\n                                </a>\n                            )\n                        })}\n                        <br />\n                        {t`Open your browser's developer console to further inspect this error.`}\n                    </Typography>\n                </div>\n            </div>\n        </OverlayWrapper>\n    );\n};\n\nexport default ErrorOverlay;\n"],"file":"ErrorOverlay.js"}