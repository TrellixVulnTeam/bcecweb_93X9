{"version":3,"sources":["../../src/plugins/AddQuerySelectionPlugin.ts"],"names":["ApolloLink","ApolloLinkPlugin","AddQuerySelectionPlugin","config","operation","forward","operationName","addSelectionToQuery","query","addSelection","selectionPath","tree","definitions","selectionSet","selections","fields","split","fieldLoop","field","selection","name","value","push"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AAEA,SAASC,gBAAT;AAQA,WAAaC,uBAAb;AAAA;;AAAA;;AAGI,mCAAYC,MAAZ,EAA4B;AAAA;;AAAA;;AACxB;;AADwB;;AAExB,UAAKA,MAAL,GAAcA,MAAd;AAFwB;AAG3B;;AANL;AAAA;AAAA,WAQI,sBAAa;AAAA;;AACT,aAAO,IAAIH,UAAJ,CAAe,UAACI,SAAD,EAAYC,OAAZ,EAAwB;AAC1C,YAAID,SAAS,CAACE,aAAV,KAA4B,MAAI,CAACH,MAAL,CAAYG,aAA5C,EAA2D;AACvD,iBAAOD,OAAO,CAACD,SAAD,CAAd;AACH;;AAED,QAAA,MAAI,CAACG,mBAAL,CAAyBH,SAAS,CAACE,aAAnC,EAAkDF,SAAS,CAACI,KAA5D;;AAEA,eAAOH,OAAO,CAACD,SAAD,CAAd;AACH,OARM,CAAP;AASH;AAlBL;AAAA;AAAA,WAoBI,6BAAoBE,aAApB,EAA2CE,KAA3C,EAAgE;AAAA;;AAC5D,UAAIF,aAAa,KAAK,KAAKH,MAAL,CAAYG,aAAlC,EAAiD;AAC7C;AACH;;AAED,yBAAwC,KAAKH,MAA7C;AAAA,UAAQM,YAAR,gBAAQA,YAAR;AAAA,UAAsBC,aAAtB,gBAAsBA,aAAtB,CAL4D,CAO5D;AAEA;;AACA,UAAIC,IAAI,GAAGH,KAAK,CAACI,WAAN,CAAkB,CAAlB,EAAqBC,YAArB,CAAkCC,UAA7C;AACA,UAAMC,MAAM,GAAGL,aAAa,CAACM,KAAd,CAAoB,GAApB,CAAf;;AAX4D,iDAa7BD,MAb6B;AAAA;;AAAA;AAa5DE,QAAAA,SAb4D,EAajD,oDAA4B;AAAA,cAAjBC,KAAiB;;AAAA,sDACXP,IADW;AAAA;;AAAA;AACnC,mEAA8B;AAAA,kBAAnBQ,SAAmB;;AAC1B,kBAAIA,SAAS,CAACC,IAAV,CAAeC,KAAf,KAAyBH,KAA7B,EAAoC;AAChCP,gBAAAA,IAAI,GAAGQ,SAAS,CAACN,YAAV,CAAuBC,UAA9B;AACA,yBAASG,SAAT;AACH;AACJ,aANkC,CAOnC;;AAPmC;AAAA;AAAA;AAAA;AAAA;;AAQnC;AACH;AAtB2D;AAAA;AAAA;AAAA;AAAA,QAwB5D;;;AACA,eAAAN,IAAI,EAACW,IAAL,iCAAab,YAAY,CAACG,WAAb,CAAyB,CAAzB,EAA4BC,YAA5B,CAAyCC,UAAtD;AACH;AA9CL;;AAAA;AAAA,EAA6Cb,gBAA7C","sourcesContent":["import { ApolloLink } from \"apollo-link\";\nimport { DocumentNode } from \"graphql\";\nimport { ApolloLinkPlugin } from \"./ApolloLinkPlugin\";\n\ninterface Config {\n    operationName: string;\n    selectionPath: string;\n    addSelection: DocumentNode;\n}\n\nexport class AddQuerySelectionPlugin extends ApolloLinkPlugin {\n    private config: Config;\n\n    constructor(config: Config) {\n        super();\n        this.config = config;\n    }\n\n    createLink() {\n        return new ApolloLink((operation, forward) => {\n            if (operation.operationName !== this.config.operationName) {\n                return forward(operation);\n            }\n\n            this.addSelectionToQuery(operation.operationName, operation.query);\n\n            return forward(operation);\n        });\n    }\n\n    addSelectionToQuery(operationName: string, query: DocumentNode) {\n        if (operationName !== this.config.operationName) {\n            return;\n        }\n\n        const { addSelection, selectionPath } = this.config;\n\n        // TODO: check if the selection is already in the query and don't add it again if not necessary.\n\n        // @ts-ignore\n        let tree = query.definitions[0].selectionSet.selections;\n        const fields = selectionPath.split(\".\");\n\n        fieldLoop: for (const field of fields) {\n            for (const selection of tree) {\n                if (selection.name.value === field) {\n                    tree = selection.selectionSet.selections;\n                    continue fieldLoop;\n                }\n            }\n            // If we get here, it means we didn't find the necessary selection\n            return;\n        }\n\n        // @ts-ignore\n        tree.push(...addSelection.definitions[0].selectionSet.selections);\n    }\n}\n"],"file":"AddQuerySelectionPlugin.js"}