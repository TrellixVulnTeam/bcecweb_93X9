{"version":3,"sources":["../../src/plugins/ApolloDynamicLink.ts"],"names":["ApolloLink","plugins","createLink","plugin","e","console","error","ApolloDynamicLink","Map","operation","forward","linkPlugins","byType","length","cacheKey","map","pl","name","join","cache","has","set","from","get","request"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAGA,SAASC,UAAT,CAAoBC,MAApB,EAA8C;AAC1C,MAAI;AACA,WAAOA,MAAM,CAACD,UAAP,EAAP;AACH,GAFD,CAEE,OAAOE,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,6DAAwEH,MAAxE;AACAE,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH;AACJ;;AAED,WAAaG,iBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,4DACoB,IAAIC,GAAJ,EADpB;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAGI,iBAAQC,SAAR,EAAmBC,OAAnB,EAA4B;AACxB,UAAMC,WAAW,GAAGV,OAAO,CAACW,MAAR,CAAiC,aAAjC,CAApB;;AAEA,UAAI,CAACD,WAAW,CAACE,MAAjB,EAAyB;AACrB,eAAOH,OAAO,CAACD,SAAD,CAAd;AACH;;AAED,UAAMK,QAAQ,GAAGH,WAAW,CAACI,GAAZ,CAAgB,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACC,IAAP;AAAA,OAAlB,EAA+BC,IAA/B,CAAoC,GAApC,CAAjB;;AAEA,UAAI,CAAC,KAAKC,KAAL,CAAWC,GAAX,CAAeN,QAAf,CAAL,EAA+B;AAC3B,aAAKK,KAAL,CAAWE,GAAX,CAAeP,QAAf,EAAyBd,UAAU,CAACsB,IAAX,CAAgBX,WAAW,CAACI,GAAZ,CAAgBb,UAAhB,CAAhB,CAAzB;AACH;;AAED,aAAO,KAAKiB,KAAL,CAAWI,GAAX,CAAeT,QAAf,EAAyBU,OAAzB,CAAiCf,SAAjC,EAA4CC,OAA5C,CAAP;AACH;AAjBL;;AAAA;AAAA,EAAuCV,UAAvC","sourcesContent":["import { ApolloLink } from \"apollo-link\";\nimport { plugins } from \"@webiny/plugins\";\nimport { ApolloLinkPlugin } from \"./ApolloLinkPlugin\";\n\nfunction createLink(plugin: ApolloLinkPlugin) {\n    try {\n        return plugin.createLink();\n    } catch (e) {\n        console.error(`Caught an error while executing \"createLink\" on plugin`, plugin);\n        console.error(e);\n    }\n}\n\nexport class ApolloDynamicLink extends ApolloLink {\n    private cache = new Map();\n\n    request(operation, forward) {\n        const linkPlugins = plugins.byType<ApolloLinkPlugin>(\"apollo-link\");\n\n        if (!linkPlugins.length) {\n            return forward(operation);\n        }\n\n        const cacheKey = linkPlugins.map(pl => pl.name).join(\",\");\n\n        if (!this.cache.has(cacheKey)) {\n            this.cache.set(cacheKey, ApolloLink.from(linkPlugins.map(createLink)));\n        }\n\n        return this.cache.get(cacheKey).request(operation, forward);\n    }\n}\n"],"file":"ApolloDynamicLink.js"}