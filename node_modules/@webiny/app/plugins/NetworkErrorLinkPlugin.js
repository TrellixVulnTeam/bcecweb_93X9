import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import { ApolloLinkPlugin } from "./ApolloLinkPlugin";
import { onError } from "apollo-link-error";
import { print } from "graphql/language";
import createErrorOverlay from "./NetworkErrorLinkPlugin/createErrorOverlay";
import { boolean } from "boolean";
/**
 * This plugin creates an ApolloLink that checks for `NetworkError` and shows an ErrorOverlay in the browser.
 */

export var NetworkErrorLinkPlugin = /*#__PURE__*/function (_ApolloLinkPlugin) {
  _inherits(NetworkErrorLinkPlugin, _ApolloLinkPlugin);

  var _super = _createSuper(NetworkErrorLinkPlugin);

  function NetworkErrorLinkPlugin() {
    _classCallCheck(this, NetworkErrorLinkPlugin);

    return _super.apply(this, arguments);
  }

  _createClass(NetworkErrorLinkPlugin, [{
    key: "createLink",
    value: function createLink() {
      return onError(function (_ref) {
        var networkError = _ref.networkError,
            operation = _ref.operation;
        var debug = boolean(process.env.REACT_APP_DEBUG);

        if (networkError && debug) {
          createErrorOverlay({
            query: print(operation.query),
            networkError: networkError
          });
        } // TODO: also print graphQLErrors

      });
    }
  }]);

  return NetworkErrorLinkPlugin;
}(ApolloLinkPlugin);
//# sourceMappingURL=NetworkErrorLinkPlugin.js.map