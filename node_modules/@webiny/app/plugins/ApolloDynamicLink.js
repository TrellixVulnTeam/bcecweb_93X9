import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { ApolloLink } from "apollo-link";
import { plugins } from "@webiny/plugins";

function createLink(plugin) {
  try {
    return plugin.createLink();
  } catch (e) {
    console.error("Caught an error while executing \"createLink\" on plugin", plugin);
    console.error(e);
  }
}

export var ApolloDynamicLink = /*#__PURE__*/function (_ApolloLink) {
  _inherits(ApolloDynamicLink, _ApolloLink);

  var _super = _createSuper(ApolloDynamicLink);

  function ApolloDynamicLink() {
    var _this;

    _classCallCheck(this, ApolloDynamicLink);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "cache", new Map());

    return _this;
  }

  _createClass(ApolloDynamicLink, [{
    key: "request",
    value: function request(operation, forward) {
      var linkPlugins = plugins.byType("apollo-link");

      if (!linkPlugins.length) {
        return forward(operation);
      }

      var cacheKey = linkPlugins.map(function (pl) {
        return pl.name;
      }).join(",");

      if (!this.cache.has(cacheKey)) {
        this.cache.set(cacheKey, ApolloLink.from(linkPlugins.map(createLink)));
      }

      return this.cache.get(cacheKey).request(operation, forward);
    }
  }]);

  return ApolloDynamicLink;
}(ApolloLink);
//# sourceMappingURL=ApolloDynamicLink.js.map