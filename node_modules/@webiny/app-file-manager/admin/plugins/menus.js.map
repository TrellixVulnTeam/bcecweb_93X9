{"version":3,"sources":["../../../src/admin/plugins/menus.tsx"],"names":["React","Route","AdminLayout","SecureRoute","NavigationMenuElement","NavigationView","RoutePlugin","UIViewPlugin","FileManagerSettings","PERMISSION_FM_SETTINGS","ProtectedMenuElement","id","config","permission","shouldRender","getView","getSecurityHook","identity","getPermission","undefined","route","view","isRendered","hasPermissions","fileManagerSettings","label","addElement","path","addSettingsMenuElement"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,WAAT,QAA4B,0CAA5B;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SACIC,qBADJ,QAGO,qDAHP;AAIA,SAASC,cAAT,QAA+B,2CAA/B;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,mBAAP;AAEA,IAAMC,sBAAsB,GAAG,aAA/B;;AAMA;AACA;AACA;AACA;IACMC,oB;;;;;AACF,gCAAYC,EAAZ,EAAgBC,MAAhB,EAAoD;AAAA;;AAAA;;AAChD,QAAIA,MAAM,CAACC,UAAX,EAAuB;AACnBD,MAAAA,MAAM,CAACE,YAAP,GAAsB,YAAM;AACxB,oCAAqB,MAAKC,OAAL,GAA+BC,eAA/B,EAArB;AAAA,YAAQC,QAAR,yBAAQA,QAAR;;AACA,eAAOA,QAAQ,CAACC,aAAT,CAAuBT,sBAAvB,MAAmDU,SAA1D;AACH,OAHD;AAIH;;AAN+C,qCAO1CR,EAP0C,EAOtCC,MAPsC;AAQnD;;;EAT8BR,qB;;AAYnC,eAAe,CACX,IAAIE,WAAJ,CAAgB;AACZc,EAAAA,KAAK,eACD,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,gCADT;AAEI,IAAA,MAAM,EAAE;AAAA,0BACJ,oBAAC,WAAD;AAAa,QAAA,UAAU,EAAEX;AAAzB,sBACI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAApB,sBACI,oBAAC,mBAAD,OADJ,CADJ,CADI;AAAA;AAFZ;AAFQ,CAAhB,CADW,EAeX,IAAIF,YAAJ,CAAiCF,cAAjC;AAAA,sEAAiD,iBAAMgB,IAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACvCA,IAAI,CAACC,UAAL,EADuC;;AAAA;AAAA,oCAGxBD,IAAI,CAACL,eAAL,EAHwB,EAGrCC,QAHqC,yBAGrCA,QAHqC;AAIvCM,YAAAA,cAJuC,GAItBN,QAAQ,CAACC,aAAT,CAAuBT,sBAAvB,MAAmDU,SAJ7B;;AAAA,gBAKxCI,cALwC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AASvCC,YAAAA,mBATuC,GASjB,IAAId,oBAAJ,CAAyB,2BAAzB,EAAsD;AAC9Ee,cAAAA,KAAK,EAAE,cADuE;AAE9EZ,cAAAA,UAAU,EAAEJ;AAFkE,aAAtD,CATiB;AAc7Ce,YAAAA,mBAAmB,CAACE,UAApB,CACI,IAAItB,qBAAJ,CAA0B,mCAA1B,EAA+D;AAC3DqB,cAAAA,KAAK,EAAE,SADoD;AAE3DE,cAAAA,IAAI,EAAE;AAFqD,aAA/D,CADJ;AAOAN,YAAAA,IAAI,CAACO,sBAAL,CAA4BJ,mBAA5B;;AArB6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjD;;AAAA;AAAA;AAAA;AAAA,IAfW,CAAf","sourcesContent":["import * as React from \"react\";\nimport { Route } from \"@webiny/react-router\";\nimport { AdminLayout } from \"@webiny/app-admin/components/AdminLayout\";\nimport { SecureRoute } from \"@webiny/app-security/components\";\nimport {\n    NavigationMenuElement,\n    NavigationMenuElementConfig\n} from \"@webiny/app-admin/ui/elements/NavigationMenuElement\";\nimport { NavigationView } from \"@webiny/app-admin/ui/views/NavigationView\";\nimport { RoutePlugin } from \"@webiny/app/plugins/RoutePlugin\";\nimport { UIViewPlugin } from \"@webiny/app-admin/ui/UIView\";\nimport FileManagerSettings from \"../views/FileManagerSettings\";\n\nconst PERMISSION_FM_SETTINGS = \"fm.settings\";\n\ninterface ProtectedMenuElementConfig extends NavigationMenuElementConfig {\n    permission: string;\n}\n\n/**\n * !EXAMPLE!\n * This demonstrates how you can create your sub-classes to expose a nicer public API.\n */\nclass ProtectedMenuElement extends NavigationMenuElement {\n    constructor(id, config: ProtectedMenuElementConfig) {\n        if (config.permission) {\n            config.shouldRender = () => {\n                const { identity } = this.getView<NavigationView>().getSecurityHook();\n                return identity.getPermission(PERMISSION_FM_SETTINGS) !== undefined;\n            };\n        }\n        super(id, config);\n    }\n}\n\nexport default [\n    new RoutePlugin({\n        route: (\n            <Route\n                path=\"/settings/file-manager/general\"\n                render={() => (\n                    <SecureRoute permission={PERMISSION_FM_SETTINGS}>\n                        <AdminLayout title={\"File Manager Settings - General\"}>\n                            <FileManagerSettings />\n                        </AdminLayout>\n                    </SecureRoute>\n                )}\n            />\n        )\n    }),\n    new UIViewPlugin<NavigationView>(NavigationView, async view => {\n        await view.isRendered();\n\n        const { identity } = view.getSecurityHook();\n        const hasPermissions = identity.getPermission(PERMISSION_FM_SETTINGS) !== undefined;\n        if (!hasPermissions) {\n            return;\n        }\n\n        const fileManagerSettings = new ProtectedMenuElement(\"menu.settings.fileManager\", {\n            label: \"File Manager\",\n            permission: PERMISSION_FM_SETTINGS\n        });\n\n        fileManagerSettings.addElement<NavigationMenuElement>(\n            new NavigationMenuElement(\"menu.settings.fileManager.general\", {\n                label: \"General\",\n                path: \"/settings/file-manager/general\"\n            })\n        );\n\n        view.addSettingsMenuElement(fileManagerSettings);\n    })\n];\n"],"file":"menus.js"}