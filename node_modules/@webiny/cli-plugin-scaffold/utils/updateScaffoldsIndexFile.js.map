{"version":3,"sources":["../../src/utils/updateScaffoldsIndexFile.ts"],"names":["scaffoldsIndexPath","importName","importPath","project","Project","addSourceFileAtPath","source","getSourceFileOrThrow","existingImportDeclaration","getImportDeclaration","Error","index","importDeclarations","getImportDeclarations","length","last","getChildIndex","insertImportDeclaration","defaultImport","moduleSpecifier","pluginsArray","getFirstDescendant","node","Node","isArrayLiteralExpression","addElement","save"],"mappings":";;;;;;;AAAA;;eAEe,OAAO;AAAEA,EAAAA,kBAAF;AAAsBC,EAAAA,UAAtB;AAAkCC,EAAAA;AAAlC,CAAP,KAA0D;AACrE,QAAMC,OAAO,GAAG,IAAIC,gBAAJ,EAAhB;AACAD,EAAAA,OAAO,CAACE,mBAAR,CAA4BL,kBAA5B;AAEA,QAAMM,MAAM,GAAGH,OAAO,CAACI,oBAAR,CAA6BP,kBAA7B,CAAf;AAEA,QAAMQ,yBAAyB,GAAGF,MAAM,CAACG,oBAAP,CAA4BP,UAA5B,CAAlC;;AACA,MAAIM,yBAAJ,EAA+B;AAC3B,UAAM,IAAIE,KAAJ,CAAU,iBAAV,CAAN;AACH;;AAED,MAAIC,KAAK,GAAG,CAAZ;AAEA,QAAMC,kBAAkB,GAAGN,MAAM,CAACO,qBAAP,EAA3B;;AACA,MAAID,kBAAkB,CAACE,MAAvB,EAA+B;AAC3B,UAAMC,IAAI,GAAGH,kBAAkB,CAACA,kBAAkB,CAACE,MAAnB,GAA4B,CAA7B,CAA/B;AACAH,IAAAA,KAAK,GAAGI,IAAI,CAACC,aAAL,KAAuB,CAA/B;AACH;;AAEDV,EAAAA,MAAM,CAACW,uBAAP,CAA+BN,KAA/B,EAAsC;AAClCO,IAAAA,aAAa,EAAEjB,UADmB;AAElCkB,IAAAA,eAAe,EAAEjB;AAFiB,GAAtC;AAKA,QAAMkB,YAAY,GAAGd,MAAM,CAACe,kBAAP,CAA0BC,IAAI,IAC/CC,cAAKC,wBAAL,CAA8BF,IAA9B,CADiB,CAArB;AAIAF,EAAAA,YAAY,CAACK,UAAb,CAAwBxB,UAAxB;AAEA,QAAMK,MAAM,CAACoB,IAAP,EAAN;AACH,C","sourcesContent":["import { Project, ArrayLiteralExpression, Node } from \"ts-morph\";\n\nexport default async ({ scaffoldsIndexPath, importName, importPath }) => {\n    const project = new Project();\n    project.addSourceFileAtPath(scaffoldsIndexPath);\n\n    const source = project.getSourceFileOrThrow(scaffoldsIndexPath);\n\n    const existingImportDeclaration = source.getImportDeclaration(importPath);\n    if (existingImportDeclaration) {\n        throw new Error(\"Already exists.\");\n    }\n\n    let index = 1;\n\n    const importDeclarations = source.getImportDeclarations();\n    if (importDeclarations.length) {\n        const last = importDeclarations[importDeclarations.length - 1];\n        index = last.getChildIndex() + 1;\n    }\n\n    source.insertImportDeclaration(index, {\n        defaultImport: importName,\n        moduleSpecifier: importPath\n    });\n\n    const pluginsArray = source.getFirstDescendant(node =>\n        Node.isArrayLiteralExpression(node)\n    ) as ArrayLiteralExpression;\n\n    pluginsArray.addElement(importName);\n\n    await source.save();\n};\n"],"file":"updateScaffoldsIndexFile.js"}