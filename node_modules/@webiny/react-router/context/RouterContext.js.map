{"version":3,"sources":["../../src/context/RouterContext.tsx"],"names":["React","useMemo","plugins","useApolloClient","RouterContext","createContext","RouterProvider","children","apolloClient","value","onLinkPlugins","byType","onLink","link","i","length","RouterConsumer","props","cloneElement"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAOA,OAAO,IAAMC,aAAa,gBAAGJ,KAAK,CAACK,aAAN,CAA6C,IAA7C,CAAtB;AAEP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC5C,MAAIC,YAAY,GAAG,IAAnB;;AACA,MAAI;AACAA,IAAAA,YAAY,GAAGL,eAAe,EAA9B;AACH,GAFD,CAEE,gBAAM,CACJ;AACH;;AAED,MAAMM,KAAK,GAAGR,OAAO,CAAC,YAAM;AACxB,QAAMS,aAAa,GAAGR,OAAO,CAACS,MAAR,CAAwC,sBAAxC,CAAtB;AACA,WAAO;AACHC,MAAAA,MADG,kBACIC,IADJ,EACU;AACT,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,aAAa,CAACK,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,cAAQF,OAAR,GAAmBF,aAAa,CAACI,CAAD,CAAhC,CAAQF,MAAR;;AACA,cAAI,OAAOA,OAAP,KAAkB,UAAtB,EAAkC;AAC9BA,YAAAA,OAAM,CAAC;AAAEC,cAAAA,IAAI,EAAJA,IAAF;AAAQL,cAAAA,YAAY,EAAZA;AAAR,aAAD,CAAN;AACH;AACJ;AACJ;AARE,KAAP;AAUH,GAZoB,EAYlB,EAZkB,CAArB;AAaA,sBAAO,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEC;AAA/B,KAAuCF,QAAvC,CAAP;AACH,CAtBM;AAwBP,OAAO,IAAMS,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGT,QAAH,SAAGA,QAAH;AAAA,sBAC1B,oBAAC,aAAD,CAAe,QAAf,QAAyB,UAAAU,KAAK;AAAA,wBAAIjB,KAAK,CAACkB,YAAN,CAAmBX,QAAnB,EAA6BU,KAA7B,CAAJ;AAAA,GAA9B,CAD0B;AAAA,CAAvB","sourcesContent":["import React, { useMemo } from \"react\";\nimport { plugins } from \"@webiny/plugins\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { ReactRouterOnLinkPlugin } from \"../types\";\n\nexport type ReactRouterContextValue = {\n    onLink(link: string): void;\n};\n\nexport const RouterContext = React.createContext<ReactRouterContextValue>(null);\n\nexport const RouterProvider = ({ children }) => {\n    let apolloClient = null;\n    try {\n        apolloClient = useApolloClient();\n    } catch {\n        // If there is no ApolloProvider, apolloClient will not exist.\n    }\n\n    const value = useMemo(() => {\n        const onLinkPlugins = plugins.byType<ReactRouterOnLinkPlugin>(\"react-router-on-link\");\n        return {\n            onLink(link) {\n                for (let i = 0; i < onLinkPlugins.length; i++) {\n                    const { onLink } = onLinkPlugins[i];\n                    if (typeof onLink === \"function\") {\n                        onLink({ link, apolloClient });\n                    }\n                }\n            }\n        };\n    }, []);\n    return <RouterContext.Provider value={value}>{children}</RouterContext.Provider>;\n};\n\nexport const RouterConsumer = ({ children }) => (\n    <RouterContext.Consumer>{props => React.cloneElement(children, props)}</RouterContext.Consumer>\n);\n"],"file":"RouterContext.js"}