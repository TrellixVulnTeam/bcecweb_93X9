{"version":3,"sources":["../../src/definitions/systemEntity.ts"],"names":["params","context","table","entityName","attributes","Entity","name","PK","partitionKey","SK","sortKey","version","type"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;;;eAEgBA,MAAD,IAAwE;AACnF,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBF,MAA3B;AACA,QAAMG,UAAU,GAAG,QAAnB;AACA,QAAMC,UAAU,GAAG,oCAAmBH,OAAnB,EAA4BE,UAA5B,CAAnB;AACA,SAAO,IAAIE,uBAAJ,CAAW;AACdC,IAAAA,IAAI,EAAEH,UADQ;AAEdD,IAAAA,KAFc;AAGdE,IAAAA,UAAU;AACNG,MAAAA,EAAE,EAAE;AACAC,QAAAA,YAAY,EAAE;AADd,OADE;AAINC,MAAAA,EAAE,EAAE;AACAC,QAAAA,OAAO,EAAE;AADT,OAJE;AAONC,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD;AAPH,OAUHR,UAVG;AAHI,GAAX,CAAP;AAgBH,C","sourcesContent":["import { Entity, Table } from \"dynamodb-toolbox\";\nimport { FileManagerContext } from \"@webiny/api-file-manager/types\";\nimport { getExtraAttributes } from \"@webiny/db-dynamodb/utils/attributes\";\n\nexport default (params: { context: FileManagerContext; table: Table }): Entity<any> => {\n    const { context, table } = params;\n    const entityName = \"System\";\n    const attributes = getExtraAttributes(context, entityName);\n    return new Entity({\n        name: entityName,\n        table,\n        attributes: {\n            PK: {\n                partitionKey: true\n            },\n            SK: {\n                sortKey: true\n            },\n            version: {\n                type: \"string\"\n            },\n            ...attributes\n        }\n    });\n};\n"],"file":"systemEntity.js"}