"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _dynamodbToolbox = require("dynamodb-toolbox");

var _attributes = require("@webiny/db-dynamodb/utils/attributes");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var _default = params => {
  const {
    context,
    table
  } = params;
  const entityName = "Files";
  const attributes = (0, _attributes.getExtraAttributes)(context, entityName);
  return new _dynamodbToolbox.Entity({
    name: entityName,
    table,
    attributes: _objectSpread({
      PK: {
        partitionKey: true
      },
      SK: {
        sortKey: true
      },
      TYPE: {
        type: "string"
      },
      id: {
        type: "string"
      },
      key: {
        type: "string"
      },
      size: {
        type: "number"
      },
      type: {
        type: "string"
      },
      name: {
        type: "string"
      },
      meta: {
        type: "map"
      },
      tags: {
        type: "list"
      },
      createdOn: {
        type: "string"
      },
      createdBy: {
        type: "map"
      },
      tenant: {
        type: "string"
      },
      locale: {
        type: "string"
      },
      webinyVersion: {
        type: "string"
      }
    }, attributes)
  });
};

exports.default = _default;
//# sourceMappingURL=filesEntity.js.map