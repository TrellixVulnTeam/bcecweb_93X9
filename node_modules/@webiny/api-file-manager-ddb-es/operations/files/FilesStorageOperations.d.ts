import { File, FileManagerContext, FileManagerFilesStorageOperations, FileManagerFilesStorageOperationsCreateParams, FileManagerFilesStorageOperationsListParams, FileManagerFilesStorageOperationsListResponse, FileManagerFilesStorageOperationsTagsParams, FileManagerFilesStorageOperationsTagsResponse, FileManagerFilesStorageOperationsUpdateParams } from "@webiny/api-file-manager/types";
interface ConstructorParams {
    context: FileManagerContext;
}
export declare class FilesStorageOperations implements FileManagerFilesStorageOperations {
    private readonly context;
    private readonly _table;
    private readonly _esTable;
    private readonly _entity;
    private readonly _esEntity;
    private _esIndex;
    private get esIndex();
    private get esClient();
    private get partitionKeyPrefix();
    constructor({ context }: ConstructorParams);
    get(id: string): Promise<File | null>;
    create(params: FileManagerFilesStorageOperationsCreateParams): Promise<File>;
    update({ file }: FileManagerFilesStorageOperationsUpdateParams): Promise<File>;
    delete(id: string): Promise<void>;
    createBatch({ files }: {
        files: any;
    }): Promise<File[]>;
    list(params: FileManagerFilesStorageOperationsListParams): Promise<FileManagerFilesStorageOperationsListResponse>;
    tags(params: FileManagerFilesStorageOperationsTagsParams): Promise<FileManagerFilesStorageOperationsTagsResponse>;
    /**
     * Create the partition key for the file.
     */
    private getPartitionKey;
    private getFileIndexTransformPlugins;
}
export {};
