import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
var _excluded = ["state"],
    _excluded2 = ["login"];
import _regeneratorRuntime from "@babel/runtime/regenerator";
import React, { useReducer, useEffect, useMemo } from "react";
import Auth from "@aws-amplify/auth";
import { useApolloClient } from "@apollo/react-hooks";
import { useSecurity } from "@webiny/app-security";
import { SecurityIdentity } from "@webiny/app-security/SecurityIdentity";
export var AuthenticatorContext = /*#__PURE__*/React.createContext({});
export var Authenticator = function Authenticator(props) {
  var _useSecurity = useSecurity(),
      setIdentity = _useSecurity.setIdentity;

  var client = useApolloClient();

  var _useReducer = useReducer(function (prev, next) {
    return _objectSpread(_objectSpread({}, prev), next);
  }, {
    authState: "signIn",
    authData: null,
    message: null,
    checkingUser: false
  }),
      _useReducer2 = _slicedToArray(_useReducer, 2),
      state = _useReducer2[0],
      setState = _useReducer2[1];

  var checkUrl = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
      var query, queryData, state, params;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              query = new URLSearchParams(window.location.search);
              queryData = {};
              query.forEach(function (value, key) {
                return queryData[key] = value;
              });
              state = queryData.state, params = _objectWithoutProperties(queryData, _excluded);

              if (!state) {
                _context.next = 8;
                break;
              }

              _context.next = 7;
              return onChangeState(state, params);

            case 7:
              return _context.abrupt("return");

            case 8:
              return _context.abrupt("return", checkUser());

            case 9:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function checkUrl() {
      return _ref.apply(this, arguments);
    };
  }();

  useEffect(function () {
    checkUrl();
  }, []);

  var checkUser = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
      var cognitoUser;
      return _regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              setState({
                checkingUser: true
              });
              _context2.prev = 1;
              _context2.next = 4;
              return Auth.currentSession();

            case 4:
              cognitoUser = _context2.sent;

              if (cognitoUser) {
                _context2.next = 11;
                break;
              }

              _context2.next = 8;
              return onChangeState("signIn");

            case 8:
              setState({
                checkingUser: false
              });
              _context2.next = 14;
              break;

            case 11:
              _context2.next = 13;
              return onChangeState("signedIn");

            case 13:
              setState({
                checkingUser: false
              });

            case 14:
              _context2.next = 20;
              break;

            case 16:
              _context2.prev = 16;
              _context2.t0 = _context2["catch"](1);
              console.log("error", _context2.t0);
              setState({
                checkingUser: false
              });

            case 20:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2, null, [[1, 16]]);
    }));

    return function checkUser() {
      return _ref2.apply(this, arguments);
    };
  }();

  var onChangeState = /*#__PURE__*/function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(state) {
      var data,
          message,
          user,
          _yield$props$getIdent,
          login,
          _data,
          _args3 = arguments;

      return _regeneratorRuntime.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              data = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : null;
              message = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : null;
              setState({
                message: message
              });

              if (!(state === state.authState)) {
                _context3.next = 5;
                break;
              }

              return _context3.abrupt("return");

            case 5:
              if (!(state === "signedIn")) {
                _context3.next = 17;
                break;
              }

              setState({
                checkingUser: true
              });
              _context3.next = 9;
              return Auth.currentSession();

            case 9:
              user = _context3.sent;
              _context3.next = 12;
              return props.getIdentityData({
                client: client,
                payload: user.getIdToken().payload
              });

            case 12:
              _yield$props$getIdent = _context3.sent;
              login = _yield$props$getIdent.login;
              _data = _objectWithoutProperties(_yield$props$getIdent, _excluded2);
              setIdentity(new SecurityIdentity(_objectSpread(_objectSpread({
                login: login
              }, _data), {}, {
                logout: function logout() {
                  Auth.signOut();
                  setIdentity(null);
                  setState({
                    authState: "signIn"
                  });
                }
              })));
              setState({
                checkingUser: false
              });

            case 17:
              setState({
                authState: state,
                authData: data
              });

            case 18:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    return function onChangeState(_x) {
      return _ref3.apply(this, arguments);
    };
  }();

  var value = useMemo(function () {
    return _objectSpread(_objectSpread({}, state), {}, {
      changeState: onChangeState
    });
  }, [state]);
  return /*#__PURE__*/React.createElement(AuthenticatorContext.Provider, {
    value: value
  }, props.children);
};
//# sourceMappingURL=Authenticator.js.map