{"version":3,"sources":["../../src/hooks/useForgotPassword.ts"],"names":["useCallback","useReducer","Auth","useAuthenticator","useForgotPassword","prev","next","codeSent","error","loading","state","setState","authState","changeState","requestCode","data","username","forgotPassword","toLowerCase","res","CodeDeliveryDetails","code","message","setPassword","shouldRender"],"mappings":";;;;AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,gBAAT;AAWA,OAAO,SAASC,iBAAT,GAA6C;AAChD,oBAA0BH,UAAU,CAAC,UAACI,IAAD,EAAOC,IAAP;AAAA,2CAAsBD,IAAtB,GAA+BC,IAA/B;AAAA,GAAD,EAAyC;AACzEC,IAAAA,QAAQ,EAAE,IAD+D;AAEzEC,IAAAA,KAAK,EAAE,IAFkE;AAGzEC,IAAAA,OAAO,EAAE;AAHgE,GAAzC,CAApC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAMA,0BAAmCR,gBAAgB,EAAnD;AAAA,MAAQS,SAAR,qBAAQA,SAAR;AAAA,MAAmBC,WAAnB,qBAAmBA,WAAnB;;AAEA,MAAMC,WAAW,GAAGd,WAAW;AAAA,wEAAC,iBAAMe,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BJ,cAAAA,QAAQ,CAAC;AAAEF,gBAAAA,OAAO,EAAE;AAAX,eAAD,CAAR;AACQO,cAAAA,QAFoB,GAEPD,IAFO,CAEpBC,QAFoB;AAAA;AAAA;AAAA,qBAINd,IAAI,CAACe,cAAL,CAAoBD,QAAQ,CAACE,WAAT,EAApB,CAJM;;AAAA;AAIlBC,cAAAA,GAJkB;AAKxBR,cAAAA,QAAQ,CAAC;AAAEF,gBAAAA,OAAO,EAAE,KAAX;AAAkBF,gBAAAA,QAAQ,EAAEY,GAAG,CAACC,mBAAhC;AAAqDZ,gBAAAA,KAAK,EAAE;AAA5D,eAAD,CAAR;AALwB;AAAA;;AAAA;AAAA;AAAA;;AAAA,oBAOpB,YAAIa,IAAJ,KAAa,wBAPO;AAAA;AAAA;AAAA;;AAQpBV,cAAAA,QAAQ,CAAC;AACLF,gBAAAA,OAAO,EAAE,KADJ;AAELD,gBAAAA,KAAK;AAFA,eAAD,CAAR;AARoB;;AAAA;AAexBG,cAAAA,QAAQ,CAAC;AAAEF,gBAAAA,OAAO,EAAE,KAAX;AAAkBD,gBAAAA,KAAK,EAAE,YAAIc;AAA7B,eAAD,CAAR;;AAfwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,OAiB5B,EAjB4B,CAA/B;AAmBA,MAAMC,WAAW,GAAGvB,WAAW;AAAA,yEAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASgB,cAAAA,QAAT,SAASA,QAAT;AACIL,cAAAA,QAAQ,CAAC;AAAEJ,gBAAAA,QAAQ,EAAE,IAAZ;AAAkBC,gBAAAA,KAAK,EAAE;AAAzB,eAAD,CAAR;AACAK,cAAAA,WAAW,CAAC,gBAAD,EAAmBG,QAAnB,CAAX;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD2B;;AAAA;AAAA;AAAA;AAAA,OAK3B,CAACH,WAAD,CAL2B,CAA/B;AAQA;AACIC,IAAAA,WAAW,EAAXA,WADJ;AAEIS,IAAAA,WAAW,EAAXA,WAFJ;AAGIC,IAAAA,YAAY,EAAEZ,SAAS,KAAK;AAHhC,KAIOF,KAJP;AAMH","sourcesContent":["import { useCallback, useReducer } from \"react\";\nimport Auth from \"@aws-amplify/auth\";\nimport { useAuthenticator } from \"./useAuthenticator\";\n\nexport interface ForgotPassword {\n    shouldRender: boolean;\n    requestCode(params: { username: string }): Promise<void>;\n    setPassword(params: { username: string }): Promise<void>;\n    codeSent: boolean;\n    error: Error;\n    loading: boolean;\n}\n\nexport function useForgotPassword(): ForgotPassword {\n    const [state, setState] = useReducer((prev, next) => ({ ...prev, ...next }), {\n        codeSent: null,\n        error: null,\n        loading: false\n    });\n\n    const { authState, changeState } = useAuthenticator();\n\n    const requestCode = useCallback(async data => {\n        setState({ loading: true });\n        const { username } = data;\n        try {\n            const res = await Auth.forgotPassword(username.toLowerCase());\n            setState({ loading: false, codeSent: res.CodeDeliveryDetails, error: null });\n        } catch (err) {\n            if (err.code === \"LimitExceededException\") {\n                setState({\n                    loading: false,\n                    error: `You can't change password that often. Please try later.`\n                });\n                return;\n            }\n\n            setState({ loading: false, error: err.message });\n        }\n    }, []);\n\n    const setPassword = useCallback(\n        async ({ username }) => {\n            setState({ codeSent: null, error: null });\n            changeState(\"setNewPassword\", username);\n        },\n        [changeState]\n    );\n\n    return {\n        requestCode,\n        setPassword,\n        shouldRender: authState === \"forgotPassword\",\n        ...state\n    };\n}\n"],"file":"useForgotPassword.js"}