{"version":3,"sources":["../../src/hooks/useSignIn.ts"],"names":["useCallback","useReducer","Auth","useAuthenticator","useSignIn","prev","next","error","loading","state","setState","authState","changeState","checkContact","user","verifiedContact","then","data","verified","signIn","input","username","password","toLowerCase","challengeName","console","log","code","system","shouldRender","includes"],"mappings":"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","sourcesContent":["import { useCallback, useReducer } from \"react\";\nimport Auth from \"@aws-amplify/auth\";\nimport { useAuthenticator } from \"./useAuthenticator\";\n\ninterface SignIn {\n    shouldRender: boolean;\n    signIn(params: { username: string; password: string }): void;\n    loading: boolean;\n    error: Error;\n}\n\nexport function useSignIn(): SignIn {\n    const [state, setState] = useReducer((prev, next) => ({ ...prev, ...next }), {\n        error: null,\n        loading: false\n    });\n    const { authState, changeState } = useAuthenticator();\n\n    const checkContact = useCallback(\n        user => {\n            Auth.verifiedContact(user).then(data => {\n                if (data.verified) {\n                    changeState(\"signedIn\", user);\n                } else {\n                    changeState(\"verifyContact\", { ...user, ...data });\n                }\n            });\n        },\n        [changeState]\n    );\n\n    const signIn = useCallback(\n        async input => {\n            setState({ loading: true, error: null });\n            const { username, password } = input;\n\n            try {\n                const user = await Auth.signIn(username.toLowerCase(), password);\n                setState({ loading: false });\n                if (\n                    user.challengeName === \"SMS_MFA\" ||\n                    user.challengeName === \"SOFTWARE_TOKEN_MFA\"\n                ) {\n                    changeState(\"confirmSignIn\", user);\n                } else if (user.challengeName === \"NEW_PASSWORD_REQUIRED\") {\n                    changeState(\"requireNewPassword\", user);\n                } else if (user.challengeName === \"MFA_SETUP\") {\n                    changeState(\"TOTPSetup\", user);\n                } else {\n                    checkContact(user);\n                }\n            } catch (err) {\n                console.log(err);\n                setState({ loading: false });\n                if (err.code === \"UserNotConfirmedException\") {\n                    changeState(\"confirmSignUp\", { username });\n                } else if (err.code === \"PasswordResetRequiredException\") {\n                    changeState(\"forgotPassword\", { username, system: true });\n                } else {\n                    setState({ error: err });\n                }\n            }\n        },\n        [changeState]\n    );\n\n    return {\n        shouldRender: [\"signIn\", \"signedOut\", \"signedUp\"].includes(authState),\n        signIn,\n        ...state\n    };\n}\n"],"file":"useSignIn.js"}