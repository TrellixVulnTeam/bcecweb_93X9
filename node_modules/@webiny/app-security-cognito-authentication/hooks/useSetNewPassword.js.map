{"version":3,"sources":["../../src/hooks/useSetNewPassword.ts"],"names":["useCallback","useReducer","Auth","useAuthenticator","useSetNewPassword","prev","next","error","loading","state","setState","authState","authData","changeState","setPassword","data","code","password","forgotPasswordSubmit","toLowerCase","title","text","type","message","shouldRender"],"mappings":";;;;AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,gBAAT;AASA,OAAO,SAASC,iBAAT,GAA6C;AAChD,oBAA0BH,UAAU,CAAC,UAACI,IAAD,EAAOC,IAAP;AAAA,2CAAsBD,IAAtB,GAA+BC,IAA/B;AAAA,GAAD,EAAyC;AACzEC,IAAAA,KAAK,EAAE,IADkE;AAEzEC,IAAAA,OAAO,EAAE;AAFgE,GAAzC,CAApC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAIA,0BAA6CP,gBAAgB,EAA7D;AAAA,MAAQQ,SAAR,qBAAQA,SAAR;AAAA,MAAmBC,QAAnB,qBAAmBA,QAAnB;AAAA,MAA6BC,WAA7B,qBAA6BA,WAA7B;;AAEA,MAAMC,WAAW,GAAGd,WAAW;AAAA,wEAC3B,iBAAMe,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACIL,cAAAA,QAAQ,CAAC;AAAEF,gBAAAA,OAAO,EAAE;AAAX,eAAD,CAAR;AACQQ,cAAAA,IAFZ,GAE+BD,IAF/B,CAEYC,IAFZ,EAEkBC,QAFlB,GAE+BF,IAF/B,CAEkBE,QAFlB;AAAA;AAAA;AAAA,qBAKcf,IAAI,CAACgB,oBAAL,CAA0BN,QAAQ,CAACO,WAAT,EAA1B,EAAkDH,IAAlD,EAAwDC,QAAxD,CALd;;AAAA;AAMQJ,cAAAA,WAAW,CAAC,QAAD,EAAW,IAAX,EAAiB;AACxBO,gBAAAA,KAAK,EAAE,kBADiB;AAExBC,gBAAAA,IAAI,EAAE,4CAFkB;AAGxBC,gBAAAA,IAAI,EAAE;AAHkB,eAAjB,CAAX;AAKAZ,cAAAA,QAAQ,CAAC;AAAEF,gBAAAA,OAAO,EAAE,KAAX;AAAkBD,gBAAAA,KAAK,EAAE;AAAzB,eAAD,CAAR;AAXR;AAAA;;AAAA;AAAA;AAAA;AAaQG,cAAAA,QAAQ,CAAC;AAAEF,gBAAAA,OAAO,EAAE,KAAX;AAAkBD,gBAAAA,KAAK,EAAE,YAAIgB;AAA7B,eAAD,CAAR;;AAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD2B;;AAAA;AAAA;AAAA;AAAA,OAiB3B,CAACV,WAAD,CAjB2B,CAA/B;AAoBA;AACIC,IAAAA,WAAW,EAAXA,WADJ;AAEIU,IAAAA,YAAY,EAAEb,SAAS,KAAK;AAFhC,KAGOF,KAHP;AAKH","sourcesContent":["import { useCallback, useReducer } from \"react\";\nimport Auth from \"@aws-amplify/auth\";\nimport { useAuthenticator } from \"./useAuthenticator\";\n\nexport interface SetNewPassword {\n    shouldRender: boolean;\n    setPassword(params: { code: string; password: string }): Promise<void>;\n    error: Error;\n    loading: boolean;\n}\n\nexport function useSetNewPassword(): SetNewPassword {\n    const [state, setState] = useReducer((prev, next) => ({ ...prev, ...next }), {\n        error: null,\n        loading: false\n    });\n    const { authState, authData, changeState } = useAuthenticator();\n\n    const setPassword = useCallback(\n        async data => {\n            setState({ loading: true });\n            const { code, password } = data;\n\n            try {\n                await Auth.forgotPasswordSubmit(authData.toLowerCase(), code, password);\n                changeState(\"signIn\", null, {\n                    title: \"Password updated\",\n                    text: \"You can now login using your new password!\",\n                    type: \"success\"\n                });\n                setState({ loading: false, error: null });\n            } catch (err) {\n                setState({ loading: false, error: err.message });\n            }\n        },\n        [changeState]\n    );\n\n    return {\n        setPassword,\n        shouldRender: authState === \"setNewPassword\",\n        ...state\n    };\n}\n"],"file":"useSetNewPassword.js"}