import { SecurityIdentity } from "@webiny/api-security";
import { HttpContext } from "@webiny/handler-http/types";
import { Context as HandlerContext } from "@webiny/handler/types";
import { AuthenticationPlugin } from "@webiny/api-security/plugins/AuthenticationPlugin";
declare type Context = HandlerContext<HttpContext>;
export interface Config {
    region: string;
    userPoolId: string;
    identityType: string;
    getIdentity?(params: {
        identityType: string;
        token: {
            [key: string]: any;
        };
    }, context: Context): SecurityIdentity;
}
export declare class CognitoAuthenticationPlugin extends AuthenticationPlugin {
    private _config;
    constructor(config: Config);
    authenticate(context: Context): Promise<SecurityIdentity | undefined>;
    private getJWKsURL;
    private getJWKs;
}
export {};
