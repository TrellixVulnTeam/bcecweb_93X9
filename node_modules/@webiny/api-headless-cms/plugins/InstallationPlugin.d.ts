import { Plugin } from "@webiny/plugins";
import { CmsContext } from "../types";
export declare type CallbackFunction<TParams> = (params: TParams) => void | Promise<void>;
interface InstallationParams {
    context: CmsContext;
}
interface Config {
    beforeInstall?: CallbackFunction<InstallationParams>;
    afterInstall?: CallbackFunction<InstallationParams>;
}
export declare class InstallationPlugin extends Plugin {
    static readonly type = "cms.install";
    private _config;
    constructor(config?: Config);
    beforeInstall(params: InstallationParams): void | Promise<void>;
    afterInstall(params: InstallationParams): void | Promise<void>;
    private _execute;
}
export {};
