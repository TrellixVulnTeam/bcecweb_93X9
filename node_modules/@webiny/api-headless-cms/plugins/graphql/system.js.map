{"version":3,"sources":["../../../src/plugins/graphql/system.ts"],"names":["typeDefs","resolvers","CmsQuery","version","_","__","context","cms","system","getVersion","e","ErrorResponse","CmsMutation","install","code","message","Response","upgrade"],"mappings":";;;;;;;AAAA;;eAGe;AACXA,EAAAA,QAAQ;AAAE;AAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAde;AAeXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,OAAO,EAAE,OAAOC,CAAP,EAAUC,EAAV,EAAcC,OAAd,KAAsC;AAC3C,YAAI;AACA,iBAAOA,OAAO,CAACC,GAAR,CAAYC,MAAZ,CAAmBC,UAAnB,EAAP;AACH,SAFD,CAEE,OAAOC,CAAP,EAAU;AACR,iBAAO,IAAIC,6BAAJ,CAAkBD,CAAlB,CAAP;AACH;AACJ;AAPK,KADH;AAUPE,IAAAA,WAAW,EAAE;AACTC,MAAAA,OAAO,EAAE,OAAOT,CAAP,EAAUC,EAAV,EAAc;AAAEE,QAAAA;AAAF,OAAd,KAAsC;AAC3C,YAAI;AACA,gBAAMJ,OAAO,GAAG,MAAMI,GAAG,CAACC,MAAJ,CAAWC,UAAX,EAAtB;;AACA,cAAIN,OAAJ,EAAa;AACT,mBAAO,IAAIQ,6BAAJ,CAAkB;AACrBG,cAAAA,IAAI,EAAE,wBADe;AAErBC,cAAAA,OAAO,EAAE;AAFY,aAAlB,CAAP;AAIH;;AAED,gBAAMR,GAAG,CAACC,MAAJ,CAAWK,OAAX,EAAN;AACA,iBAAO,IAAIG,wBAAJ,CAAa,IAAb,CAAP;AACH,SAXD,CAWE,OAAON,CAAP,EAAU;AACR,iBAAO,IAAIC,6BAAJ,CAAkBD,CAAlB,CAAP;AACH;AACJ,OAhBQ;AAiBTO,MAAAA,OAAO,EAAE,OAAOb,CAAP,EAAU;AAAED,QAAAA;AAAF,OAAV,EAAuB;AAAEI,QAAAA;AAAF,OAAvB,KAA+C;AACpD,YAAI;AACA,gBAAMA,GAAG,CAACC,MAAJ,CAAWS,OAAX,CAAmBd,OAAnB,CAAN;AACA,iBAAO,IAAIa,wBAAJ,CAAa,IAAb,CAAP;AACH,SAHD,CAGE,OAAON,CAAP,EAAU;AACR,iBAAO,IAAIC,6BAAJ,CAAkBD,CAAlB,CAAP;AACH;AACJ;AAxBQ;AAVN;AAfA,C","sourcesContent":["import { ErrorResponse, Response } from \"@webiny/handler-graphql\";\nimport { CmsContext } from \"../../types\";\n\nexport default {\n    typeDefs: /* GraphQL */ `\n        extend type CmsQuery {\n            # Get installed version\n            version: String\n        }\n\n        extend type CmsMutation {\n            # Install CMS\n            install: CmsBooleanResponse\n\n            # Upgrade CMS\n            upgrade(version: String!): CmsBooleanResponse\n        }\n    `,\n    resolvers: {\n        CmsQuery: {\n            version: async (_, __, context: CmsContext) => {\n                try {\n                    return context.cms.system.getVersion();\n                } catch (e) {\n                    return new ErrorResponse(e);\n                }\n            }\n        },\n        CmsMutation: {\n            install: async (_, __, { cms }: CmsContext) => {\n                try {\n                    const version = await cms.system.getVersion();\n                    if (version) {\n                        return new ErrorResponse({\n                            code: \"CMS_INSTALLATION_ERROR\",\n                            message: \"CMS is already installed.\"\n                        });\n                    }\n\n                    await cms.system.install();\n                    return new Response(true);\n                } catch (e) {\n                    return new ErrorResponse(e);\n                }\n            },\n            upgrade: async (_, { version }, { cms }: CmsContext) => {\n                try {\n                    await cms.system.upgrade(version);\n                    return new Response(true);\n                } catch (e) {\n                    return new ErrorResponse(e);\n                }\n            }\n        }\n    }\n};\n"],"file":"system.js"}