{"version":3,"sources":["../src/utils.ts"],"names":["hasRwd","permission","rwd","includes","hasPw","pw","isCustom","Object","keys","length","PW","r","c","p","u","RWD","w","d","checkPermissions","context","name","check","contentPermission","security","getPermission","NotAuthorizedError","data","reason","code","cms","getLocale","Array","isArray","locales","checkOwnership","record","own","identity","getIdentity","owner","id","creator","validateOwnership","checkModelAccess","model","validateModelAccess","modelId","modelGroupPermission","groups","modelPermission","models","locale","group","validateGroupAccess","toSlug","text","replacement","lower","remove","zeroPad","version","padStart","createCmsPK","tenancy","tenant","getCurrentTenant","Error","paginateBatch","items","perPage","execute","pages","Math","ceil","i","slice","filterAsync","predicate","filteredItems","item","valid","push","executeCallbacks","plugins","hook","args","plugin"],"mappings":"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","sourcesContent":["import slugify from \"slugify\";\nimport { Plugin } from \"@webiny/plugins/types\";\nimport { NotAuthorizedError } from \"@webiny/api-security\";\nimport { SecurityPermission } from \"@webiny/api-security/types\";\n\nimport {\n    CmsContentModelPermission,\n    CmsContentModel,\n    CmsContext,\n    CreatedBy,\n    CmsContentModelGroupPermission,\n    CmsContentModelGroup\n} from \"./types\";\n\nexport const hasRwd = (permission, rwd) => {\n    if (typeof permission.rwd !== \"string\") {\n        return true;\n    }\n\n    return permission.rwd.includes(rwd);\n};\n\nexport const hasPw = (permission, pw) => {\n    const isCustom = Object.keys(permission).length > 1; // \"name\" key is always present\n\n    if (!isCustom) {\n        // Means it's a \"full-access\" permission.\n        return true;\n    }\n\n    if (typeof permission.pw !== \"string\") {\n        return false;\n    }\n\n    return permission.pw.includes(pw);\n};\n\nconst PW = {\n    r: \"request review\",\n    c: \"request change\",\n    p: \"publish\",\n    u: \"unpublish\"\n};\n\nconst RWD = {\n    r: \"read\",\n    w: \"write\",\n    d: \"delete\"\n};\n\nexport const checkPermissions = async <TPermission = SecurityPermission>(\n    context: CmsContext,\n    name: string,\n    check?: { rwd?: string; pw?: string }\n): Promise<TPermission> => {\n    // Check if user is allowed to edit content in current language\n    const contentPermission: any = await context.security.getPermission(\"content.i18n\");\n\n    if (!contentPermission) {\n        throw new NotAuthorizedError({\n            data: {\n                reason: \"Missing access to content in any locale.\"\n            }\n        });\n    }\n\n    // We need to check this manually as CMS locale comes from the URL and not the default i18n app.\n    const code = context.cms.getLocale().code;\n\n    // IMPORTANT: If we have a `contentPermission`, and `locales` key is NOT SET - it means the user has access to all locales.\n    // However, if the the `locales` IS SET - check that it contains the required locale.\n    if (Array.isArray(contentPermission.locales) && !contentPermission.locales.includes(code)) {\n        throw new NotAuthorizedError({\n            data: {\n                reason: `Not allowed to access content in \"${code}.\"`\n            }\n        });\n    }\n\n    const permission = await context.security.getPermission<TPermission>(name);\n\n    if (!permission) {\n        throw new NotAuthorizedError({\n            data: {\n                reason: `Missing permission \"${name}\".`\n            }\n        });\n    }\n\n    if (!check) {\n        return permission;\n    }\n\n    if (check.rwd && !hasRwd(permission, check.rwd)) {\n        throw new NotAuthorizedError({\n            data: {\n                reason: `Not allowed to perform \"${RWD[check.rwd]}\" on \"${name}\".`\n            }\n        });\n    }\n\n    // r = request review\n    // c = request change\n    // p = publish\n    // u = unpublish\n    if (check.pw && !hasPw(permission, check.pw)) {\n        throw new NotAuthorizedError({\n            data: {\n                reason: `Not allowed to perform \"${PW[check.pw]}\" on \"${name}\".`\n            }\n        });\n    }\n\n    return permission;\n};\n\nexport const checkOwnership = (\n    context: CmsContext,\n    permission: SecurityPermission,\n    record: { createdBy?: CreatedBy; ownedBy?: CreatedBy }\n): void => {\n    if (!permission.own) {\n        return;\n    }\n\n    const identity = context.security.getIdentity();\n    const owner = identity && record[\"ownedBy\"] && record[\"ownedBy\"].id === identity.id;\n    const creator = identity && record[\"createdBy\"] && record[\"createdBy\"].id === identity.id;\n\n    if (!owner && !creator) {\n        throw new NotAuthorizedError({\n            data: {\n                reason: `You are not the owner of the record.`\n            }\n        });\n    }\n};\n\nexport const validateOwnership = (\n    context: CmsContext,\n    permission: SecurityPermission,\n    record: { createdBy?: CreatedBy; ownedBy?: CreatedBy }\n): boolean => {\n    try {\n        checkOwnership(context, permission, record);\n        return true;\n    } catch {\n        return false;\n    }\n};\n/**\n * model access is checking for both specific model or group access\n * if permission has specific models set as access pattern then groups will not matter (although both can be set)\n */\nexport const checkModelAccess = async (\n    context: CmsContext,\n    model: CmsContentModel\n): Promise<void> => {\n    if (await validateModelAccess(context, model)) {\n        return;\n    }\n    throw new NotAuthorizedError({\n        data: {\n            reason: `Not allowed to access model \"${model.modelId}\".`\n        }\n    });\n};\nexport const validateModelAccess = async (\n    context: CmsContext,\n    model: CmsContentModel\n): Promise<boolean> => {\n    const modelGroupPermission: CmsContentModelGroupPermission = await checkPermissions(\n        context,\n        \"cms.contentModelGroup\",\n        { rwd: \"r\" }\n    );\n    const { groups } = modelGroupPermission;\n\n    const modelPermission: CmsContentModelPermission = await checkPermissions(\n        context,\n        \"cms.contentModel\",\n        {\n            rwd: \"r\"\n        }\n    );\n    const { models } = modelPermission;\n    // when no models or groups defined on permission\n    // it means user has access to everything\n    if (!models && !groups) {\n        return true;\n    }\n    const locale = context.cms.getLocale().code;\n    // Check whether the model is question belongs to \"content model groups\" for which user has permission.\n    if (groups) {\n        if (\n            Array.isArray(groups[locale]) === false ||\n            groups[locale].includes(model.group.id) === false\n        ) {\n            return false;\n        }\n    }\n    // Check whether the model is question belongs to \"content models\" for which user has permission.\n    if (models) {\n        if (\n            Array.isArray(models[locale]) === false ||\n            models[locale].includes(model.modelId) === false\n        ) {\n            return false;\n        }\n    }\n\n    return true;\n};\nexport const validateGroupAccess = (\n    context: CmsContext,\n    permission: CmsContentModelGroupPermission,\n    group: CmsContentModelGroup\n): boolean => {\n    const { groups } = permission;\n    // when no groups defined on permission\n    // it means user has access to everything\n    if (!groups) {\n        return true;\n    }\n    const locale = context.cms.getLocale().code;\n    // when there is no locale in groups, it means that no access was given\n    // this happens when access control was set but no models or groups were added\n    if (Array.isArray(groups[locale]) === false || groups[locale].includes(group.id) === false) {\n        return false;\n    }\n    return true;\n};\n\nexport const toSlug = text => {\n    return slugify(text, {\n        replacement: \"-\",\n        lower: true,\n        remove: /[*#\\?<>_\\{\\}\\[\\]+~.()'\"!:;@]/g\n    });\n};\n\nexport const zeroPad = version => `${version}`.padStart(4, \"0\");\n\nexport const createCmsPK = (context: CmsContext) => {\n    const { tenancy, cms } = context;\n\n    const tenant = tenancy.getCurrentTenant();\n    if (!tenant) {\n        throw new Error(\"Tenant missing.\");\n    }\n\n    const locale = cms.getLocale();\n    if (!locale) {\n        throw new Error(\"Locale missing.\");\n    }\n\n    return `T#${tenant.id}#L#${locale.code}#CMS`;\n};\n\nexport const paginateBatch = async <T = Record<string, any>>(\n    items: T[],\n    perPage: number,\n    execute: (items: T[]) => Promise<any>\n) => {\n    const pages = Math.ceil(items.length / perPage);\n    for (let i = 0; i < pages; i++) {\n        await execute(items.slice(i * perPage, i * perPage + perPage));\n    }\n};\n\nexport const filterAsync = async <T = Record<string, any>>(\n    items: T[],\n    predicate: (T) => Promise<boolean>\n): Promise<T[]> => {\n    const filteredItems = [];\n\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        const valid = await predicate(item);\n        if (valid) {\n            filteredItems.push(item);\n        }\n    }\n\n    return filteredItems;\n};\n\ntype CallbackFallback = (args: any) => void | Promise<void>;\n\nexport const executeCallbacks = async <\n    TCallbackFunction extends CallbackFallback = CallbackFallback\n>(\n    plugins: Plugin[],\n    hook: string,\n    args: Parameters<TCallbackFunction>[0]\n) => {\n    for (const plugin of plugins) {\n        if (typeof plugin[hook] === \"function\") {\n            await plugin[hook](args);\n        }\n    }\n};\n"],"file":"utils.js"}