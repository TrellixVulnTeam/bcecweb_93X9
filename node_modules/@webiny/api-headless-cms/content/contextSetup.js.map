{"version":3,"sources":["../../src/content/contextSetup.ts"],"names":["extractHandlerHttpParameters","context","key","http","request","path","parameters","type","locale","split","WebinyError","ContextPlugin","method","cms","systemLocale","i18n","getLocale","READ","PREVIEW","MANAGE"],"mappings":";;;;;;;;;AACA;;AACA;;AAEA,MAAMA,4BAA4B,GAAIC,OAAD,IAAyB;AAAA;;AAC1D,QAAM;AAAEC,IAAAA,GAAG,GAAG;AAAR,MAAe,kBAAAD,OAAO,CAACE,IAAR,yFAAcC,OAAd,0GAAuBC,IAAvB,kFAA6BC,UAA7B,KAA2C,EAAhE;AACA,QAAM,CAACC,IAAD,EAAOC,MAAP,IAAiBN,GAAG,CAACO,KAAJ,CAAU,GAAV,CAAvB;;AACA,MAAI,CAACF,IAAL,EAAW;AACP,UAAM,IAAIG,cAAJ,CAAiB,qDAAjB,CAAN;AACH,GAFD,MAEO,IAAI,CAACF,MAAL,EAAa;AAChB,UAAM,IAAIE,cAAJ,CAAiB,uDAAjB,CAAN;AACH;;AAED,SAAO;AACHH,IAAAA,IADG;AAEHC,IAAAA;AAFG,GAAP;AAIH,CAbD;;eAee,MAAM;AACjB,SAAO,IAAIG,4BAAJ,CAA8B,MAAMV,OAAN,IAAiB;AAAA;;AAClD,QAAI,mBAAAA,OAAO,CAACE,IAAR,2FAAcC,OAAd,gFAAuBQ,MAAvB,MAAkC,SAAtC,EAAiD;AAC7C;AACH,KAFD,MAEO,IAAIX,OAAO,CAACY,GAAZ,EAAiB;AACpB,YAAM,IAAIH,cAAJ,CACF,sFADE,EAEF,+BAFE,CAAN;AAIH;;AAED,UAAM;AAAEH,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmBR,4BAA4B,CAACC,OAAD,CAArD;AAEA,UAAMa,YAAY,GAAGb,OAAO,CAACc,IAAR,CAAaC,SAAb,CAAuBR,MAAvB,CAArB;;AACA,QAAI,CAACM,YAAL,EAAmB;AACf,YAAM,IAAIJ,cAAJ,CAAiB,uBAAsBF,MAAO,kBAA9C,CAAN;AACH;;AAEDP,IAAAA,OAAO,CAACY,GAAR,GAAc;AACVN,MAAAA,IADU;AAEVC,MAAAA,MAFU;AAGVQ,MAAAA,SAAS,EAAE,MAAMF,YAHP;AAIVG,MAAAA,IAAI,EAAEV,IAAI,KAAK,MAJL;AAKVW,MAAAA,OAAO,EAAEX,IAAI,KAAK,SALR;AAMVY,MAAAA,MAAM,EAAEZ,IAAI,KAAK;AANP,KAAd;AAQH,GAzBM,CAAP;AA0BH,C","sourcesContent":["import { CmsContext } from \"~/types\";\nimport WebinyError from \"@webiny/error\";\nimport { ContextPlugin } from \"@webiny/handler/plugins/ContextPlugin\";\n\nconst extractHandlerHttpParameters = (context: CmsContext) => {\n    const { key = \"\" } = context.http?.request?.path?.parameters || {};\n    const [type, locale] = key.split(\"/\");\n    if (!type) {\n        throw new WebinyError(`Missing context.http.request.path parameter \"type\".`);\n    } else if (!locale) {\n        throw new WebinyError(`Missing context.http.request.path parameter \"locale\".`);\n    }\n\n    return {\n        type,\n        locale\n    };\n};\n\nexport default () => {\n    return new ContextPlugin<CmsContext>(async context => {\n        if (context.http?.request?.method === \"OPTIONS\") {\n            return;\n        } else if (context.cms) {\n            throw new WebinyError(\n                \"Context setup plugin must be first to be registered. Cannot have anything before it.\",\n                \"CMS_CONTEXT_INITIALIZED_ERROR\"\n            );\n        }\n\n        const { type, locale } = extractHandlerHttpParameters(context);\n\n        const systemLocale = context.i18n.getLocale(locale);\n        if (!systemLocale) {\n            throw new WebinyError(`There is no locale \"${locale}\" in the system.`);\n        }\n\n        context.cms = {\n            type,\n            locale,\n            getLocale: () => systemLocale,\n            READ: type === \"read\",\n            PREVIEW: type === \"preview\",\n            MANAGE: type === \"manage\"\n        } as any;\n    });\n};\n"],"file":"contextSetup.js"}