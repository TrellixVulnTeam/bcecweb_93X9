{"version":3,"sources":["../../../src/content/plugins/buildSchemaPlugins.ts"],"names":["context","filter","Boolean"],"mappings":";;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;eACe,MAAOA,OAAP,IAA2E;AACtF,SAAO,CACH;AACA,2BAAWA,OAAX,CAFG,EAGH,4BAAcA,OAAd,CAHG,EAIH,6BAAeA,OAAf,CAJG,EAKH,iCAAmBA,OAAnB,CALG,EAMH;AACA,MAAI,MAAM,0CAAsBA,OAAtB,CAAV,CAPG,EAQLC,MARK,CAQEC,OARF,CAAP;AASH,C","sourcesContent":["import { GraphQLSchemaPlugin } from \"@webiny/handler-graphql/plugins/GraphQLSchemaPlugin\";\nimport { CmsContext } from \"~/types\";\nimport contentModels from \"./schema/contentModels\";\nimport contentEntries from \"./schema/contentEntries\";\nimport contentModelGroups from \"./schema/contentModelGroups\";\nimport baseSchema from \"./schema/baseSchema\";\nimport { generateSchemaPlugins } from \"./schema/schemaPlugins\";\n\n/**\n * This factory is called whenever we need to generate graphql-schema plugins using the current context.\n */\nexport default async (context: CmsContext): Promise<GraphQLSchemaPlugin<CmsContext>[]> => {\n    return [\n        // Base GQL types and scalars\n        baseSchema(context),\n        contentModels(context),\n        contentEntries(context),\n        contentModelGroups(context),\n        // Dynamic schema\n        ...(await generateSchemaPlugins(context))\n    ].filter(Boolean);\n};\n"],"file":"buildSchemaPlugins.js"}