{"version":3,"sources":["../../../../../src/content/plugins/crud/contentModelGroup/beforeDelete.hook.ts"],"names":["beforeDeleteHook","group","context","storageOperations","groupPlugin","plugins","byType","ContentModelGroupPlugin","type","find","item","contentModelGroup","slug","Error","models","cms","noAuth","list","items","filter","model","id","length","WebinyError","beforeDelete"],"mappings":";;;;;;;;;AAAA;;AAMA;;AAMO,MAAMA,gBAAgB,GAAG,OAAO;AACnCC,EAAAA,KADmC;AAEnCC,EAAAA,OAFmC;AAGnCC,EAAAA;AAHmC,CAAP,KAIL;AACvB,QAAMC,WAAoC,GAAGF,OAAO,CAACG,OAAR,CACxCC,MADwC,CACRC,iDAAwBC,IADhB,EAExCC,IAFwC,CAElCC,IAAD,IAAmCA,IAAI,CAACC,iBAAL,CAAuBC,IAAvB,KAAgCX,KAAK,CAACW,IAFtC,CAA7C;;AAIA,MAAIR,WAAJ,EAAiB;AACb,UAAM,IAAIS,KAAJ,CAAW,6DAAX,CAAN;AACH;;AAED,QAAMC,MAAM,GAAG,MAAMZ,OAAO,CAACa,GAAR,CAAYD,MAAZ,CAAmBE,MAAnB,GAA4BC,IAA5B,EAArB;AACA,QAAMC,KAAK,GAAGJ,MAAM,CAACK,MAAP,CAAcC,KAAK,IAAI;AACjC,WAAOA,KAAK,CAACnB,KAAN,CAAYoB,EAAZ,KAAmBpB,KAAK,CAACoB,EAAhC;AACH,GAFa,CAAd;;AAIA,MAAIH,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAsB;AAClB,UAAM,IAAIC,cAAJ,CACF,sEADE,EAEF,qBAFE,EAGF;AACIF,MAAAA,EAAE,EAAEpB,KAAK,CAACoB;AADd,KAHE,CAAN;AAOH;;AACD,MAAI,CAAClB,iBAAiB,CAACqB,YAAvB,EAAqC;AACjC;AACH;;AACD,QAAMrB,iBAAiB,CAACqB,YAAlB,CAA+B;AACjCvB,IAAAA;AADiC,GAA/B,CAAN;AAGH,CAjCM","sourcesContent":["import WebinyError from \"@webiny/error\";\nimport {\n    CmsContentModelGroupStorageOperations,\n    CmsContentModelGroupStorageOperationsBeforeDeleteArgs,\n    CmsContext\n} from \"../../../../types\";\nimport { ContentModelGroupPlugin } from \"~/content/plugins/ContentModelGroupPlugin\";\n\ninterface Args extends CmsContentModelGroupStorageOperationsBeforeDeleteArgs {\n    context: CmsContext;\n    storageOperations: CmsContentModelGroupStorageOperations;\n}\nexport const beforeDeleteHook = async ({\n    group,\n    context,\n    storageOperations\n}: Args): Promise<void> => {\n    const groupPlugin: ContentModelGroupPlugin = context.plugins\n        .byType<ContentModelGroupPlugin>(ContentModelGroupPlugin.type)\n        .find((item: ContentModelGroupPlugin) => item.contentModelGroup.slug === group.slug);\n\n    if (groupPlugin) {\n        throw new Error(`Content model groups defined via plugins cannot be deleted.`);\n    }\n\n    const models = await context.cms.models.noAuth().list();\n    const items = models.filter(model => {\n        return model.group.id === group.id;\n    });\n\n    if (items.length > 0) {\n        throw new WebinyError(\n            \"Cannot delete this group because there are models that belong to it.\",\n            \"BEFORE_DELETE_ERROR\",\n            {\n                id: group.id\n            }\n        );\n    }\n    if (!storageOperations.beforeDelete) {\n        return;\n    }\n    await storageOperations.beforeDelete({\n        group\n    });\n};\n"],"file":"beforeDelete.hook.js"}