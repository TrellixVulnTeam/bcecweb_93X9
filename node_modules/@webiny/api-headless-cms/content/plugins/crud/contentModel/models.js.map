{"version":3,"sources":["../../../../../src/content/plugins/crud/contentModel/models.ts"],"names":["requiredShortString","validation","create","shortString","CreateContentModelModel","name","modelId","description","group","RendererModel","ContentModelFieldModel","id","fieldId","value","trim","idValidation","label","helpText","placeholderText","type","multipleValues","predefinedValues","instanceOf","enabled","values","list","renderer","message","settings","listValidation","UpdateContentModelModel","titleFieldId","fields","required","layout"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAMA,mBAAmB,GAAGC,uBAAWC,MAAX,CAAkB,wBAAlB,CAA5B;;AACA,MAAMC,WAAW,GAAGF,uBAAWC,MAAX,CAAkB,eAAlB,CAApB;;AAEO,MAAME,uBAAuB,GAAG,wBAAW;AAC9CC,EAAAA,IAAI,EAAE,oBAAO;AAAEJ,IAAAA,UAAU,EAAED;AAAd,GAAP,CADwC;AAE9CM,EAAAA,OAAO,EAAE,oBAAO;AAAEL,IAAAA,UAAU,EAAEE;AAAd,GAAP,CAFqC;AAG9CI,EAAAA,WAAW,EAAE,oBAAO;AAAEN,IAAAA,UAAU,EAAEE;AAAd,GAAP,CAHiC;AAI9CK,EAAAA,KAAK,EAAE,oBAAO;AAAEP,IAAAA,UAAU,EAAED;AAAd,GAAP;AAJuC,CAAX,GAAhC;;AAOP,MAAMS,aAAa,GAAG,wBAAW;AAC7BJ,EAAAA,IAAI,EAAE,oBAAO;AAAEJ,IAAAA,UAAU,EAAED;AAAd,GAAP;AADuB,CAAX,GAAtB;AAIO,MAAMU,sBAAsB,GAAG,wBAAW;AAC7CC,EAAAA,EAAE,EAAE,oBAAO;AAAEV,IAAAA,UAAU,EAAED;AAAd,GAAP,CADyC;AAE7CY,EAAAA,OAAO,EAAE,mBACL,mBAAMC,KAAK,IAAIA,KAAK,IAAIA,KAAK,CAACC,IAAN,EAAxB,CADK,EAEL,sBAFK,EAGP,oBAAO;AAAEb,IAAAA,UAAU,EAAEc;AAAd,GAAP,CAHO,CAFoC;AAM7CC,EAAAA,KAAK,EAAE,oBAAO;AAAEf,IAAAA,UAAU,EAAED;AAAd,GAAP,CANsC;AAO7CiB,EAAAA,QAAQ,EAAE,oBAAO;AAAEhB,IAAAA,UAAU,EAAEE;AAAd,GAAP,CAPmC;AAQ7Ce,EAAAA,eAAe,EAAE,oBAAO;AAAEjB,IAAAA,UAAU,EAAEE;AAAd,GAAP,CAR4B;AAS7CgB,EAAAA,IAAI,EAAE,uBAAU,oBAAO;AAAElB,IAAAA,UAAU,EAAED;AAAd,GAAP,CAAV,CATuC;AAU7CoB,EAAAA,cAAc,EAAE,qBAAQ;AAAEP,IAAAA,KAAK,EAAE;AAAT,GAAR,CAV6B;AAW7CQ,EAAAA,gBAAgB,EAAE,oBAAO;AACrBR,IAAAA,KAAK,EAAE,EADc;AAErBS,IAAAA,UAAU,EAAE,wBAAW;AACnBC,MAAAA,OAAO,EAAE,sBADU;AAEnBC,MAAAA,MAAM,EAAE,oBAAO;AACXX,QAAAA,KAAK,EAAE,EADI;AAEXY,QAAAA,IAAI,EAAE,IAFK;AAGXH,QAAAA,UAAU,EAAE,wBAAW;AACnBN,UAAAA,KAAK,EAAE,qBADY;AAEnBH,UAAAA,KAAK,EAAE;AAFY,SAAX;AAHD,OAAP;AAFW,KAAX;AAFS,GAAP,CAX2B;AAyB7Ca,EAAAA,QAAQ,EAAE,oBAAO;AAAEJ,IAAAA,UAAU,EAAEb,aAAd;AAA6BR,IAAAA,UAAU,EAAEE;AAAzC,GAAP,CAzBmC;AA0B7CF,EAAAA,UAAU,EAAE,oBAAO;AACfwB,IAAAA,IAAI,EAAE,IADS;AAEfZ,IAAAA,KAAK,EAAE,EAFQ;AAGfS,IAAAA,UAAU,EAAE,wBAAW;AACnBjB,MAAAA,IAAI,EAAE,oBAAO;AAAEJ,QAAAA,UAAU,EAAED;AAAd,OAAP,CADa;AAEnB2B,MAAAA,OAAO,EAAE,oBAAO;AAAE1B,QAAAA,UAAU,EAAEE;AAAd,OAAP,CAFU;AAGnByB,MAAAA,QAAQ,EAAE,iCAAO;AAAEf,QAAAA,KAAK,EAAE;AAAT,OAAP;AAHS,KAAX;AAHG,GAAP,CA1BiC;AAmC7CgB,EAAAA,cAAc,EAAE,oBAAO;AACnBJ,IAAAA,IAAI,EAAE,IADa;AAEnBZ,IAAAA,KAAK,EAAE,EAFY;AAGnBS,IAAAA,UAAU,EAAE,wBAAW;AACnBjB,MAAAA,IAAI,EAAE,oBAAO;AAAEJ,QAAAA,UAAU,EAAED;AAAd,OAAP,CADa;AAEnB2B,MAAAA,OAAO,EAAE,oBAAO;AAAE1B,QAAAA,UAAU,EAAEE;AAAd,OAAP,CAFU;AAGnByB,MAAAA,QAAQ,EAAE,iCAAO;AAAEf,QAAAA,KAAK,EAAE;AAAT,OAAP;AAHS,KAAX;AAHO,GAAP,CAnC6B;AA4C7Ce,EAAAA,QAAQ,EAAE,iCAAO;AAAEf,IAAAA,KAAK,EAAE;AAAT,GAAP;AA5CmC,CAAX,GAA/B;;AA+CA,MAAMiB,uBAAuB,GAAG,wBAAW;AAC9CzB,EAAAA,IAAI,EAAE,oBAAO;AAAEJ,IAAAA,UAAU,EAAEE;AAAd,GAAP,CADwC;AAE9CI,EAAAA,WAAW,EAAE,oBAAO;AAAEN,IAAAA,UAAU,EAAEE;AAAd,GAAP,CAFiC;AAG9CK,EAAAA,KAAK,EAAE,oBAAO;AAAEP,IAAAA,UAAU,EAAEE;AAAd,GAAP,CAHuC;AAI9C4B,EAAAA,YAAY,EAAE,qBAJgC;AAK9CC,EAAAA,MAAM,EAAE,oBAAO;AAAEV,IAAAA,UAAU,EAAEZ,sBAAd;AAAsCG,IAAAA,KAAK,EAAE,EAA7C;AAAiDY,IAAAA,IAAI,EAAE,IAAvD;AAA6DQ,IAAAA,QAAQ,EAAE;AAAvE,GAAP,CALsC;AAM9CC,EAAAA,MAAM,EAAE,iCAAO;AAAErB,IAAAA,KAAK,EAAE,EAAT;AAAaoB,IAAAA,QAAQ,EAAE;AAAvB,GAAP;AANsC,CAAX,GAAhC","sourcesContent":["import { validation } from \"@webiny/validation\";\nimport flow from \"lodash/flow\";\nimport { object } from \"commodo-fields-object\";\nimport { withFields, string, setOnce, onSet, boolean, fields } from \"@commodo/fields\";\nimport idValidation from \"./idValidation\";\n\nconst requiredShortString = validation.create(\"required,maxLength:255\");\nconst shortString = validation.create(\"maxLength:255\");\n\nexport const CreateContentModelModel = withFields({\n    name: string({ validation: requiredShortString }),\n    modelId: string({ validation: shortString }),\n    description: string({ validation: shortString }),\n    group: string({ validation: requiredShortString })\n})();\n\nconst RendererModel = withFields({\n    name: string({ validation: requiredShortString })\n})();\n\nexport const ContentModelFieldModel = withFields({\n    id: string({ validation: requiredShortString }),\n    fieldId: flow(\n        onSet(value => value && value.trim()),\n        setOnce()\n    )(string({ validation: idValidation })),\n    label: string({ validation: requiredShortString }),\n    helpText: string({ validation: shortString }),\n    placeholderText: string({ validation: shortString }),\n    type: setOnce()(string({ validation: requiredShortString })),\n    multipleValues: boolean({ value: false }),\n    predefinedValues: fields({\n        value: {},\n        instanceOf: withFields({\n            enabled: boolean(),\n            values: fields({\n                value: [],\n                list: true,\n                instanceOf: withFields({\n                    label: string(),\n                    value: string()\n                })()\n            })\n        })()\n    }),\n    renderer: fields({ instanceOf: RendererModel, validation: shortString }),\n    validation: fields({\n        list: true,\n        value: [],\n        instanceOf: withFields({\n            name: string({ validation: requiredShortString }),\n            message: string({ validation: shortString }),\n            settings: object({ value: {} })\n        })()\n    }),\n    listValidation: fields({\n        list: true,\n        value: [],\n        instanceOf: withFields({\n            name: string({ validation: requiredShortString }),\n            message: string({ validation: shortString }),\n            settings: object({ value: {} })\n        })()\n    }),\n    settings: object({ value: {} })\n})();\n\nexport const UpdateContentModelModel = withFields({\n    name: string({ validation: shortString }),\n    description: string({ validation: shortString }),\n    group: string({ validation: shortString }),\n    titleFieldId: string(),\n    fields: fields({ instanceOf: ContentModelFieldModel, value: [], list: true, required: true }),\n    layout: object({ value: [], required: true })\n})();\n"],"file":"models.js"}