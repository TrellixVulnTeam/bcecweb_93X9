"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UpdateContentModelModel = exports.ContentModelFieldModel = exports.CreateContentModelModel = void 0;

var _validation = require("@webiny/validation");

var _flow = _interopRequireDefault(require("lodash/flow"));

var _commodoFieldsObject = require("commodo-fields-object");

var _fields = require("@commodo/fields");

var _idValidation = _interopRequireDefault(require("./idValidation"));

const requiredShortString = _validation.validation.create("required,maxLength:255");

const shortString = _validation.validation.create("maxLength:255");

const CreateContentModelModel = (0, _fields.withFields)({
  name: (0, _fields.string)({
    validation: requiredShortString
  }),
  modelId: (0, _fields.string)({
    validation: shortString
  }),
  description: (0, _fields.string)({
    validation: shortString
  }),
  group: (0, _fields.string)({
    validation: requiredShortString
  })
})();
exports.CreateContentModelModel = CreateContentModelModel;
const RendererModel = (0, _fields.withFields)({
  name: (0, _fields.string)({
    validation: requiredShortString
  })
})();
const ContentModelFieldModel = (0, _fields.withFields)({
  id: (0, _fields.string)({
    validation: requiredShortString
  }),
  fieldId: (0, _flow.default)((0, _fields.onSet)(value => value && value.trim()), (0, _fields.setOnce)())((0, _fields.string)({
    validation: _idValidation.default
  })),
  label: (0, _fields.string)({
    validation: requiredShortString
  }),
  helpText: (0, _fields.string)({
    validation: shortString
  }),
  placeholderText: (0, _fields.string)({
    validation: shortString
  }),
  type: (0, _fields.setOnce)()((0, _fields.string)({
    validation: requiredShortString
  })),
  multipleValues: (0, _fields.boolean)({
    value: false
  }),
  predefinedValues: (0, _fields.fields)({
    value: {},
    instanceOf: (0, _fields.withFields)({
      enabled: (0, _fields.boolean)(),
      values: (0, _fields.fields)({
        value: [],
        list: true,
        instanceOf: (0, _fields.withFields)({
          label: (0, _fields.string)(),
          value: (0, _fields.string)()
        })()
      })
    })()
  }),
  renderer: (0, _fields.fields)({
    instanceOf: RendererModel,
    validation: shortString
  }),
  validation: (0, _fields.fields)({
    list: true,
    value: [],
    instanceOf: (0, _fields.withFields)({
      name: (0, _fields.string)({
        validation: requiredShortString
      }),
      message: (0, _fields.string)({
        validation: shortString
      }),
      settings: (0, _commodoFieldsObject.object)({
        value: {}
      })
    })()
  }),
  listValidation: (0, _fields.fields)({
    list: true,
    value: [],
    instanceOf: (0, _fields.withFields)({
      name: (0, _fields.string)({
        validation: requiredShortString
      }),
      message: (0, _fields.string)({
        validation: shortString
      }),
      settings: (0, _commodoFieldsObject.object)({
        value: {}
      })
    })()
  }),
  settings: (0, _commodoFieldsObject.object)({
    value: {}
  })
})();
exports.ContentModelFieldModel = ContentModelFieldModel;
const UpdateContentModelModel = (0, _fields.withFields)({
  name: (0, _fields.string)({
    validation: shortString
  }),
  description: (0, _fields.string)({
    validation: shortString
  }),
  group: (0, _fields.string)({
    validation: shortString
  }),
  titleFieldId: (0, _fields.string)(),
  fields: (0, _fields.fields)({
    instanceOf: ContentModelFieldModel,
    value: [],
    list: true,
    required: true
  }),
  layout: (0, _commodoFieldsObject.object)({
    value: [],
    required: true
  })
})();
exports.UpdateContentModelModel = UpdateContentModelModel;
//# sourceMappingURL=models.js.map