{"version":3,"sources":["../../../../../src/content/plugins/crud/contentModel/beforeDelete.hook.ts"],"names":["beforeDeleteHook","args","context","model","modelId","modelPlugin","plugins","byType","ContentModelPlugin","type","find","item","contentModel","WebinyError","manager","cms","getModel","entries","list","limit","ex","error","length","storageOperations","beforeDelete"],"mappings":";;;;;;;;;AAMA;;AACA;;AACA;;AAOO,MAAMA,gBAAgB,GAAG,MAAOC,IAAP,IAAsB;AAClD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBF,IAA3B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAcD,KAApB;AAEA,QAAME,WAA+B,GAAGH,OAAO,CAACI,OAAR,CACnCC,MADmC,CACRC,uCAAmBC,IADX,EAEnCC,IAFmC,CAE7BC,IAAD,IAA8BA,IAAI,CAACC,YAAL,CAAkBR,OAAlB,KAA8BA,OAF9B,CAAxC;;AAIA,MAAIC,WAAJ,EAAiB;AACb,UAAM,IAAIQ,cAAJ,CACF,uDADE,EAEF,4BAFE,EAGF;AACIT,MAAAA;AADJ,KAHE,CAAN;AAOH;;AAED,QAAMU,OAAO,GAAG,MAAMZ,OAAO,CAACa,GAAR,CAAYC,QAAZ,CAAqBZ,OAArB,CAAtB;AAEA,MAAIa,OAAO,GAAG,EAAd;;AACA,MAAI;AACA,KAACA,OAAD,IAAY,MAAMH,OAAO,CAACI,IAAR,CAAa;AAC3BC,MAAAA,KAAK,EAAE;AADoB,KAAb,CAAlB;AAGH,GAJD,CAIE,OAAOC,EAAP,EAAW;AACT,UAAM,IAAIP,cAAJ,CACF,8DADE,EAEF,eAFE,EAGF;AACIT,MAAAA,OADJ;AAEIiB,MAAAA,KAAK,EAAED;AAFX,KAHE,CAAN;AAQH;;AACD,MAAIH,OAAO,CAACK,MAAR,GAAiB,CAArB,EAAwB;AACpB,UAAM,IAAIT,cAAJ,CACD,gCAA+BT,OAAQ,uCADtC,EAEF,yCAFE,CAAN;AAIH;;AACD,MAAIH,IAAI,CAACsB,iBAAL,CAAuBC,YAA3B,EAAyC;AACrC,UAAMvB,IAAI,CAACsB,iBAAL,CAAuBC,YAAvB,CAAoCvB,IAApC,CAAN;AACH;;AACD,QAAM,kEAA6D,cAA7D,EAA6EA,IAA7E,CAAN;AACH,CA7CM","sourcesContent":["import {\n    CmsContentModelHookPluginArgs,\n    CmsContentModelStorageOperations,\n    CmsContentModelStorageOperationsBeforeDeleteArgs,\n    CmsContext\n} from \"../../../../types\";\nimport WebinyError from \"@webiny/error\";\nimport { runContentModelLifecycleHooks } from \"./runContentModelLifecycleHooks\";\nimport { ContentModelPlugin } from \"@webiny/api-headless-cms/content/plugins/ContentModelPlugin\";\n\ninterface Args extends CmsContentModelStorageOperationsBeforeDeleteArgs {\n    context: CmsContext;\n    storageOperations: CmsContentModelStorageOperations;\n}\n\nexport const beforeDeleteHook = async (args: Args) => {\n    const { context, model } = args;\n    const { modelId } = model;\n\n    const modelPlugin: ContentModelPlugin = context.plugins\n        .byType<ContentModelPlugin>(ContentModelPlugin.type)\n        .find((item: ContentModelPlugin) => item.contentModel.modelId === modelId);\n\n    if (modelPlugin) {\n        throw new WebinyError(\n            \"Content models defined via plugins cannot be deleted.\",\n            \"CONTENT_MODEL_DELETE_ERROR\",\n            {\n                modelId\n            }\n        );\n    }\n\n    const manager = await context.cms.getModel(modelId);\n\n    let entries = [];\n    try {\n        [entries] = await manager.list({\n            limit: 1\n        });\n    } catch (ex) {\n        throw new WebinyError(\n            \"Could not retrieve a list of content entries from the model.\",\n            \"ENTRIES_ERROR\",\n            {\n                modelId,\n                error: ex\n            }\n        );\n    }\n    if (entries.length > 0) {\n        throw new WebinyError(\n            `Cannot delete content model \"${modelId}\" because there are existing entries.`,\n            \"CONTENT_MODEL_BEFORE_DELETE_HOOK_FAILED\"\n        );\n    }\n    if (args.storageOperations.beforeDelete) {\n        await args.storageOperations.beforeDelete(args);\n    }\n    await runContentModelLifecycleHooks<CmsContentModelHookPluginArgs>(\"beforeDelete\", args);\n};\n"],"file":"beforeDelete.hook.js"}