{"version":3,"sources":["../../../../../src/content/plugins/crud/contentModel/contentModelManagerFactory.ts"],"names":["defaultName","contentModelManagerFactory","context","model","pluginsByType","plugins","byType","reverse","plugin","target","Array","isArray","modelId","includes","name","create","find","Error"],"mappings":";;;;;;AAEA,MAAMA,WAAW,GAAG,+BAApB;;AAEO,MAAMC,0BAA0B,GAAG,OAAOC,OAAP,EAA4BC,KAA5B,KAAuD;AAC7F,QAAMC,aAAa,GAAGF,OAAO,CAACG,OAAR,CACjBC,MADiB,CACiB,2BADjB,EAEjBC,OAFiB,EAAtB;;AAGA,OAAK,MAAMC,MAAX,IAAqBJ,aAArB,EAAoC;AAChC,UAAMK,MAAM,GAAGC,KAAK,CAACC,OAAN,CAAcH,MAAM,CAACI,OAArB,IAAgCJ,MAAM,CAACI,OAAvC,GAAiD,CAACJ,MAAM,CAACI,OAAR,CAAhE;;AACA,QAAIH,MAAM,CAACI,QAAP,CAAgBV,KAAK,CAACS,OAAtB,MAAmC,IAAnC,IAA2CJ,MAAM,CAACM,IAAP,KAAgBd,WAA/D,EAA4E;AACxE,aAAO,MAAMQ,MAAM,CAACO,MAAP,CAAcb,OAAd,EAAuBC,KAAvB,CAAb;AACH;AACJ;;AACD,QAAMK,MAAM,GAAGJ,aAAa,CAACY,IAAd,CAAmBR,MAAM,IAAIA,MAAM,CAACM,IAAP,KAAgBd,WAA7C,CAAf;;AACA,MAAI,CAACQ,MAAL,EAAa;AACT,UAAM,IAAIS,KAAJ,CAAU,0DAAV,CAAN;AACH;;AACD,SAAO,MAAMT,MAAM,CAACO,MAAP,CAAcb,OAAd,EAAuBC,KAAvB,CAAb;AACH,CAfM","sourcesContent":["import { CmsContentModel, CmsContext, ContentModelManagerPlugin } from \"../../../../types\";\n\nconst defaultName = \"content-model-manager-default\";\n\nexport const contentModelManagerFactory = async (context: CmsContext, model: CmsContentModel) => {\n    const pluginsByType = context.plugins\n        .byType<ContentModelManagerPlugin>(\"cms-content-model-manager\")\n        .reverse();\n    for (const plugin of pluginsByType) {\n        const target = Array.isArray(plugin.modelId) ? plugin.modelId : [plugin.modelId];\n        if (target.includes(model.modelId) === true && plugin.name !== defaultName) {\n            return await plugin.create(context, model);\n        }\n    }\n    const plugin = pluginsByType.find(plugin => plugin.name === defaultName);\n    if (!plugin) {\n        throw new Error(\"There is no default plugin to create ContentModelManager\");\n    }\n    return await plugin.create(context, model);\n};\n"],"file":"contentModelManagerFactory.js"}