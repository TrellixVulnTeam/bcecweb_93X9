{"version":3,"sources":["../../../../../src/content/plugins/crud/contentModel/afterUpdate.hook.ts"],"names":["afterUpdateHook","args","context","cms","settings","updateContentModelLastChange","storageOperations","afterUpdate"],"mappings":";;;;;;;AAMA;;AAMO,MAAMA,eAAe,GAAG,MAAOC,IAAP,IAAsB;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAcD,IAApB;AACA,QAAMC,OAAO,CAACC,GAAR,CAAYC,QAAZ,CAAqBC,4BAArB,EAAN;;AACA,MAAIJ,IAAI,CAACK,iBAAL,CAAuBC,WAA3B,EAAwC;AACpC,UAAMN,IAAI,CAACK,iBAAL,CAAuBC,WAAvB,CAAmCN,IAAnC,CAAN;AACH;;AACD,QAAM,kEAAmE,aAAnE,EAAkFA,IAAlF,CAAN;AACH,CAPM","sourcesContent":["import {\n    CmsContentModelUpdateHookPluginArgs,\n    CmsContentModelStorageOperations,\n    CmsContentModelStorageOperationsAfterUpdateArgs,\n    CmsContext\n} from \"../../../../types\";\nimport { runContentModelLifecycleHooks } from \"./runContentModelLifecycleHooks\";\n\ninterface Args extends CmsContentModelStorageOperationsAfterUpdateArgs {\n    context: CmsContext;\n    storageOperations: CmsContentModelStorageOperations;\n}\nexport const afterUpdateHook = async (args: Args) => {\n    const { context } = args;\n    await context.cms.settings.updateContentModelLastChange();\n    if (args.storageOperations.afterUpdate) {\n        await args.storageOperations.afterUpdate(args);\n    }\n    await runContentModelLifecycleHooks<CmsContentModelUpdateHookPluginArgs>(\"afterUpdate\", args);\n};\n"],"file":"afterUpdate.hook.js"}