{"version":3,"sources":["../../../../../src/content/plugins/crud/contentEntry/runContentEntryLifecycleHooks.ts"],"names":["runContentEntryLifecycleHooks","hookName","args","context","hookPlugins","plugins","byType","hookPlugin"],"mappings":";;;;;;;AAEO,MAAMA,6BAA6B,GAAG,OACzCC,QADyC,EAEzCC,IAFyC,KAGzB;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,IAApB;AACA,QAAME,WAAW,GAAGD,OAAO,CAACE,OAAR,CAAgBC,MAAhB,CAAkD,wBAAlD,CAApB;;AACA,OAAK,MAAMC,UAAX,IAAyBH,WAAzB,EAAsC;AAClC,QAAI,OAAOG,UAAU,CAACN,QAAD,CAAjB,KAAgC,UAApC,EAAgD;AAC5C;AACH;;AACD,UAAMM,UAAU,CAACN,QAAD,CAAV,CAAqBC,IAArB,CAAN;AACH;AACJ,CAZM","sourcesContent":["import { CmsContentEntryHookPlugin, CmsContext } from \"../../../../types\";\n\nexport const runContentEntryLifecycleHooks = async (\n    hookName: string,\n    args: { context: CmsContext }\n): Promise<void> => {\n    const { context } = args;\n    const hookPlugins = context.plugins.byType<CmsContentEntryHookPlugin>(\"cms-content-entry-hook\");\n    for (const hookPlugin of hookPlugins) {\n        if (typeof hookPlugin[hookName] !== \"function\") {\n            continue;\n        }\n        await hookPlugin[hookName](args);\n    }\n};\n"],"file":"runContentEntryLifecycleHooks.js"}