"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _builtInTypes = require("@webiny/handler-graphql/builtInTypes");

var _GraphQLSchemaPlugin = require("@webiny/handler-graphql/plugins/GraphQLSchemaPlugin");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const baseSchema = context => {
  const scalars = context.plugins.byType("graphql-scalar").map(item => item.scalar);
  return new _GraphQLSchemaPlugin.GraphQLSchemaPlugin({
    typeDefs:
    /* GraphQL */
    `
            ${scalars.map(scalar => `scalar ${scalar.name}`).join(" ")}
            scalar JSON
            scalar Long
            scalar RefInput
            scalar Number
            scalar Any
            scalar Date
            scalar DateTime
            scalar DateTimeZ
            scalar Time

            type Query

            type Mutation {
                _empty: String
            }

            type CmsError {
                code: String
                message: String
                data: JSON
            }

            type CmsListMeta {
                cursor: String
                hasMoreItems: Boolean
                totalCount: Int
            }

            type CmsDeleteResponse {
                data: Boolean
                error: CmsError
            }

            type CmsBooleanResponse {
                data: Boolean
                error: CmsError
            }

            type CmsCreatedBy {
                id: String
                displayName: String
                type: String
            }

            type CmsOwnedBy {
                id: String
                displayName: String
                type: String
            }
        `,
    resolvers: _objectSpread(_objectSpread({}, scalars.reduce((acc, s) => {
      acc[s.name] = s;
      return acc;
    }, {})), {}, {
      JSON: _builtInTypes.JsonScalar,
      Long: _builtInTypes.LongScalar,
      RefInput: _builtInTypes.RefInput,
      Number: _builtInTypes.Number,
      Any: _builtInTypes.Any,
      DateTime: _builtInTypes.DateTimeScalar,
      DateTimeZ: _builtInTypes.DateTimeZScalar,
      Date: _builtInTypes.DateScalar,
      Time: _builtInTypes.TimeScalar,
      Mutation: {
        _empty: () => "_empty"
      }
    })
  });
};

var _default = baseSchema;
exports.default = _default;
//# sourceMappingURL=baseSchema.js.map