{"version":3,"sources":["../../../../src/content/plugins/schema/createManageSDL.ts"],"names":["createManageSDL","model","fieldTypePlugins","typeName","modelId","mTypeName","listFilterFieldsRender","type","sortEnumRender","getFilterFieldsRender","inputFields","fields","description","map","f","typeDefs","filter","Boolean","join"],"mappings":"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","sourcesContent":["import { CmsFieldTypePlugins, CmsContentModel } from \"~/types\";\nimport { createManageTypeName, createTypeName } from \"../utils/createTypeName\";\nimport { renderInputFields } from \"../utils/renderInputFields\";\nimport { renderSortEnum } from \"../utils/renderSortEnum\";\nimport { renderFields } from \"../utils/renderFields\";\nimport { renderListFilterFields } from \"../utils/renderListFilterFields\";\nimport { renderGetFilterFields } from \"../utils/renderGetFilterFields\";\nimport { pluralizedTypeName } from \"../utils/pluralizedTypeName\";\n\ninterface CreateManageSDL {\n    (params: { model: CmsContentModel; fieldTypePlugins: CmsFieldTypePlugins }): string;\n}\n\nexport const createManageSDL: CreateManageSDL = ({ model, fieldTypePlugins }): string => {\n    const typeName = createTypeName(model.modelId);\n    const mTypeName = createManageTypeName(typeName);\n\n    const listFilterFieldsRender = renderListFilterFields({\n        model,\n        type: \"manage\",\n        fieldTypePlugins\n    });\n\n    const sortEnumRender = renderSortEnum({ model, fieldTypePlugins });\n    const getFilterFieldsRender = renderGetFilterFields({ model, fieldTypePlugins });\n    const inputFields = renderInputFields({ model, fieldTypePlugins });\n    const fields = renderFields({ model, type: \"manage\", fieldTypePlugins });\n\n    return /* GraphQL */ `\n        \"\"\"${model.description}\"\"\"\n        ${fields\n            .map(f => f.typeDefs)\n            .filter(Boolean)\n            .join(\"\\n\")}\n\n        type ${mTypeName} {\n            id: ID!\n            entryId: String!\n            createdOn: DateTime!\n            savedOn: DateTime!\n            createdBy: CmsCreatedBy!\n            ownedBy: CmsOwnedBy!\n            meta: ${mTypeName}Meta\n            ${fields.map(f => f.fields).join(\"\\n\")}\n        }\n\n        type ${mTypeName}Meta {\n            modelId: String\n            version: Int\n            locked: Boolean\n            publishedOn: DateTime\n            status: String\n            \"\"\"\n            CAUTION: this field is resolved by making an extra query to DB. \n            RECOMMENDATION: Use it only with \"get\" queries (avoid in \"list\") \n            \"\"\"\n            revisions: [${mTypeName}]\n            title: String\n        }\n        \n                    \n        ${inputFields\n            .map(f => f.typeDefs)\n            .filter(Boolean)\n            .join(\"\\n\")}\n\n        ${\n            inputFields &&\n            `input ${mTypeName}Input {\n            ${inputFields.map(f => f.fields).join(\"\\n\")}\n        }`\n        }\n\n        ${\n            getFilterFieldsRender &&\n            `input ${mTypeName}GetWhereInput {\n            ${getFilterFieldsRender}\n        }`\n        }\n\n\n        ${\n            listFilterFieldsRender &&\n            `input ${mTypeName}ListWhereInput {\n            ${listFilterFieldsRender}\n        }`\n        }\n\n        type ${mTypeName}Response {\n            data: ${mTypeName}\n            error: CmsError\n        }\n        \n        type ${mTypeName}ArrayResponse {\n            data: [${mTypeName}]\n            error: CmsError\n        }\n\n        type ${mTypeName}ListResponse {\n            data: [${mTypeName}]\n            meta: CmsListMeta\n            error: CmsError\n        }\n\n        ${\n            sortEnumRender &&\n            `enum ${mTypeName}ListSorter {\n            ${sortEnumRender}\n        }`\n        }\n\n        extend type Query {\n            get${typeName}(revision: ID!): ${mTypeName}Response\n            \n            get${typeName}Revisions(id: ID!): ${mTypeName}ArrayResponse\n            \n            get${pluralizedTypeName(typeName)}ByIds(revisions: [ID!]!): ${mTypeName}ArrayResponse\n\n            list${pluralizedTypeName(typeName)}(\n                where: ${mTypeName}ListWhereInput\n                sort: [${mTypeName}ListSorter]\n                limit: Int\n                after: String\n            ): ${mTypeName}ListResponse\n        }\n\n        extend type Mutation{\n            create${typeName}(data: ${mTypeName}Input!): ${mTypeName}Response\n\n            create${typeName}From(revision: ID!, data: ${mTypeName}Input): ${mTypeName}Response\n\n            update${typeName}(revision: ID!, data: ${mTypeName}Input!): ${mTypeName}Response\n\n            delete${typeName}(revision: ID!): CmsDeleteResponse\n\n            publish${typeName}(revision: ID!): ${mTypeName}Response\n\n            unpublish${typeName}(revision: ID!): ${mTypeName}Response\n            \n            request${typeName}Review(revision: ID!): ${mTypeName}Response\n            \n            request${typeName}Changes(revision: ID!): ${mTypeName}Response\n        }\n    `;\n};\n"],"file":"createManageSDL.js"}