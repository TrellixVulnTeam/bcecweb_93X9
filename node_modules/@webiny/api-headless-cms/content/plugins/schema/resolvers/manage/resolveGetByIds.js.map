{"version":3,"sources":["../../../../../../src/content/plugins/schema/resolvers/manage/resolveGetByIds.ts"],"names":["resolveGetByIds","model","root","args","cms","response","entries","getByIds","revisions","Response","e","ErrorResponse"],"mappings":";;;;;;;AAAA;;AAMO,MAAMA,eAAgC,GACzC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACA,OAAOC,IAAP,EAAaC,IAAb,EAAmB;AAAEC,EAAAA;AAAF,CAAnB,KAA+B;AAC3B,MAAI;AACA,UAAMC,QAA2B,GAAG,MAAMD,GAAG,CAACE,OAAJ,CAAYC,QAAZ,CAAqBN,KAArB,EAA4BE,IAAI,CAACK,SAAjC,CAA1C;AAEA,WAAO,IAAIC,mBAAJ,CAAaJ,QAAb,CAAP;AACH,GAJD,CAIE,OAAOK,CAAP,EAAU;AACR,WAAO,IAAIC,wBAAJ,CAAkBD,CAAlB,CAAP;AACH;AACJ,CAVE","sourcesContent":["import { ErrorResponse, Response } from \"@webiny/handler-graphql/responses\";\nimport {\n    CmsContentEntryResolverFactory as ResolverFactory,\n    CmsContentEntry\n} from \"../../../../../types\";\n\nexport const resolveGetByIds: ResolverFactory =\n    ({ model }) =>\n    async (root, args, { cms }) => {\n        try {\n            const response: CmsContentEntry[] = await cms.entries.getByIds(model, args.revisions);\n\n            return new Response(response);\n        } catch (e) {\n            return new ErrorResponse(e);\n        }\n    };\n"],"file":"resolveGetByIds.js"}