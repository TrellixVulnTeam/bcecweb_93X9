"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resolveGet = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _responses = require("@webiny/handler-graphql/responses");

var _handlerGraphql = require("@webiny/handler-graphql");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const resolveGet = ({
  model
}) => async (root, args, context) => {
  try {
    const [[entry]] = await context.cms.entries.listPublished(model, _objectSpread(_objectSpread({}, args), {}, {
      limit: 1
    }));

    if (!entry) {
      throw new _handlerGraphql.NotFoundError(`Entry not found!`);
    }

    return new _responses.Response(entry);
  } catch (e) {
    return new _responses.ErrorResponse(e);
  }
};

exports.resolveGet = resolveGet;
//# sourceMappingURL=resolveGet.js.map