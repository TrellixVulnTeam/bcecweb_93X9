{"version":3,"sources":["../../../../src/content/plugins/schema/baseSchema.ts"],"names":["baseSchema","context","scalars","plugins","byType","map","item","scalar","GraphQLSchemaPlugin","typeDefs","name","join","resolvers","reduce","acc","s","JSON","JsonScalar","Long","LongScalar","RefInput","Number","NumberScalar","Any","AnyScalar","DateTime","DateTimeScalar","DateTimeZ","DateTimeZScalar","Date","DateScalar","Time","TimeScalar","Mutation","_empty"],"mappings":";;;;;;;;;;;AAEA;;AAWA;;;;;;AAEA,MAAMA,UAAU,GAAIC,OAAD,IAA8C;AAC7D,QAAMC,OAAO,GAAGD,OAAO,CAACE,OAAR,CACXC,MADW,CACiB,gBADjB,EAEXC,GAFW,CAEPC,IAAI,IAAIA,IAAI,CAACC,MAFN,CAAhB;AAIA,SAAO,IAAIC,wCAAJ,CAAwB;AAC3BC,IAAAA,QAAQ;AAAE;AAAe;AACjC,cAAcP,OAAO,CAACG,GAAR,CAAYE,MAAM,IAAK,UAASA,MAAM,CAACG,IAAK,EAA5C,EAA+CC,IAA/C,CAAoD,GAApD,CAAyD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SApDmC;AAqD3BC,IAAAA,SAAS,kCACFV,OAAO,CAACW,MAAR,CAAe,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC1BD,MAAAA,GAAG,CAACC,CAAC,CAACL,IAAH,CAAH,GAAcK,CAAd;AACA,aAAOD,GAAP;AACH,KAHE,EAGA,EAHA,CADE;AAKLE,MAAAA,IAAI,EAAEC,wBALD;AAMLC,MAAAA,IAAI,EAAEC,wBAND;AAOLC,MAAAA,QAAQ,EAARA,sBAPK;AAQLC,MAAAA,MAAM,EAAEC,oBARH;AASLC,MAAAA,GAAG,EAAEC,iBATA;AAULC,MAAAA,QAAQ,EAAEC,4BAVL;AAWLC,MAAAA,SAAS,EAAEC,6BAXN;AAYLC,MAAAA,IAAI,EAAEC,wBAZD;AAaLC,MAAAA,IAAI,EAAEC,wBAbD;AAcLC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,MAAM,EAAE,MAAM;AADR;AAdL;AArDkB,GAAxB,CAAP;AAwEH,CA7ED;;eA+EelC,U","sourcesContent":["import { GraphQLScalarPlugin } from \"@webiny/handler-graphql/types\";\nimport { CmsContext } from \"~/types\";\nimport {\n    RefInput,\n    Number as NumberScalar,\n    Any as AnyScalar,\n    DateTimeScalar,\n    DateScalar,\n    TimeScalar,\n    LongScalar,\n    JsonScalar,\n    DateTimeZScalar\n} from \"@webiny/handler-graphql/builtInTypes\";\nimport { GraphQLSchemaPlugin } from \"@webiny/handler-graphql/plugins/GraphQLSchemaPlugin\";\n\nconst baseSchema = (context: CmsContext): GraphQLSchemaPlugin => {\n    const scalars = context.plugins\n        .byType<GraphQLScalarPlugin>(\"graphql-scalar\")\n        .map(item => item.scalar);\n\n    return new GraphQLSchemaPlugin({\n        typeDefs: /* GraphQL */ `\n            ${scalars.map(scalar => `scalar ${scalar.name}`).join(\" \")}\n            scalar JSON\n            scalar Long\n            scalar RefInput\n            scalar Number\n            scalar Any\n            scalar Date\n            scalar DateTime\n            scalar DateTimeZ\n            scalar Time\n\n            type Query\n\n            type Mutation {\n                _empty: String\n            }\n\n            type CmsError {\n                code: String\n                message: String\n                data: JSON\n            }\n\n            type CmsListMeta {\n                cursor: String\n                hasMoreItems: Boolean\n                totalCount: Int\n            }\n\n            type CmsDeleteResponse {\n                data: Boolean\n                error: CmsError\n            }\n\n            type CmsBooleanResponse {\n                data: Boolean\n                error: CmsError\n            }\n\n            type CmsCreatedBy {\n                id: String\n                displayName: String\n                type: String\n            }\n\n            type CmsOwnedBy {\n                id: String\n                displayName: String\n                type: String\n            }\n        `,\n        resolvers: {\n            ...scalars.reduce((acc, s) => {\n                acc[s.name] = s;\n                return acc;\n            }, {}),\n            JSON: JsonScalar,\n            Long: LongScalar,\n            RefInput,\n            Number: NumberScalar,\n            Any: AnyScalar,\n            DateTime: DateTimeScalar,\n            DateTimeZ: DateTimeZScalar,\n            Date: DateScalar,\n            Time: TimeScalar,\n            Mutation: {\n                _empty: () => \"_empty\"\n            }\n        }\n    });\n};\n\nexport default baseSchema;\n"],"file":"baseSchema.js"}