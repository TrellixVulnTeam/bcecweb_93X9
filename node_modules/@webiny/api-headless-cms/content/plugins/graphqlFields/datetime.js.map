{"version":3,"sources":["../../../../src/content/plugins/graphqlFields/datetime.ts"],"names":["fieldGraphQLTypes","time","dateTimeWithoutTimezone","dateTimeWithTimezone","date","getFieldGraphQLType","field","type","settings","createListFilters","fieldId","plugin","name","fieldType","isSortable","isSearchable","read","createGetFilters","createTypeField","multipleValues","manage","createInputField"],"mappings":";;;;;;AAEA,MAAMA,iBAAiB,GAAG;AACtBC,EAAAA,IAAI,EAAE,MADgB;AAEtBC,EAAAA,uBAAuB,EAAE,UAFH;AAGtBC,EAAAA,oBAAoB,EAAE,WAHA;AAItBC,EAAAA,IAAI,EAAE;AAJgB,CAA1B;;AAOA,MAAMC,mBAAmB,GAAIC,KAAD,IAAyC;AACjE,QAAMC,IAAI,GAAGD,KAAK,CAACE,QAAN,CAAeD,IAA5B;;AACA,MAAI,CAACA,IAAD,IAAS,CAACP,iBAAiB,CAACO,IAAD,CAA/B,EAAuC;AACnC,WAAO,UAAP;AACH;;AACD,SAAOP,iBAAiB,CAACO,IAAD,CAAxB;AACH,CAND;;AAQA,MAAME,iBAAiB,GAAG,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAe;AACrC,SAAQ;AACZ,UAAUA,KAAK,CAACI,OAAQ,KAAIL,mBAAmB,CAACC,KAAD,CAAQ;AACvD,UAAUA,KAAK,CAACI,OAAQ,SAAQL,mBAAmB,CAACC,KAAD,CAAQ;AAC3D,UAAUA,KAAK,CAACI,OAAQ,SAAQL,mBAAmB,CAACC,KAAD,CAAQ;AAC3D,UAAUA,KAAK,CAACI,OAAQ,aAAYL,mBAAmB,CAACC,KAAD,CAAQ;AAC/D,UAAUA,KAAK,CAACI,OAAQ,QAAOL,mBAAmB,CAACC,KAAD,CAAQ;AAC1D,UAAUA,KAAK,CAACI,OAAQ,SAAQL,mBAAmB,CAACC,KAAD,CAAQ;AAC3D,UAAUA,KAAK,CAACI,OAAQ,QAAOL,mBAAmB,CAACC,KAAD,CAAQ;AAC1D,UAAUA,KAAK,CAACI,OAAQ,SAAQL,mBAAmB,CAACC,KAAD,CAAQ;AAC3D,KATI;AAUH,CAXD;;AAaA,MAAMK,MAAoC,GAAG;AACzCC,EAAAA,IAAI,EAAE,qCADmC;AAEzCL,EAAAA,IAAI,EAAE,4BAFmC;AAGzCM,EAAAA,SAAS,EAAE,UAH8B;AAIzCC,EAAAA,UAAU,EAAE,IAJ6B;AAKzCC,EAAAA,YAAY,EAAE,IAL2B;AAMzCC,EAAAA,IAAI,EAAE;AACFP,IAAAA,iBADE;;AAEFQ,IAAAA,gBAAgB,CAAC;AAAEX,MAAAA;AAAF,KAAD,EAAY;AACxB,aAAQ,GAAEA,KAAK,CAACI,OAAQ,KAAIL,mBAAmB,CAACC,KAAD,CAAQ,EAAvD;AACH,KAJC;;AAKFY,IAAAA,eAAe,CAAC;AAAEZ,MAAAA;AAAF,KAAD,EAAY;AACvB,UAAIA,KAAK,CAACa,cAAV,EAA0B;AACtB,eAAQ,GAAEb,KAAK,CAACI,OAAQ,MAAKL,mBAAmB,CAACC,KAAD,CAAQ,GAAxD;AACH;;AAED,aAAQ,GAAEA,KAAK,CAACI,OAAQ,KAAIL,mBAAmB,CAACC,KAAD,CAAQ,EAAvD;AACH;;AAXC,GANmC;AAmBzCc,EAAAA,MAAM,EAAE;AACJX,IAAAA,iBADI;;AAEJS,IAAAA,eAAe,CAAC;AAAEZ,MAAAA;AAAF,KAAD,EAAY;AACvB,aAAQ,GAAEA,KAAK,CAACI,OAAQ,KAAIL,mBAAmB,CAACC,KAAD,CAAQ,EAAvD;AACH,KAJG;;AAKJe,IAAAA,gBAAgB,CAAC;AAAEf,MAAAA;AAAF,KAAD,EAAY;AACxB,aAAQ,GAAEA,KAAK,CAACI,OAAQ,KAAIL,mBAAmB,CAACC,KAAD,CAAQ,EAAvD;AACH;;AAPG;AAnBiC,CAA7C;eA8BeK,M","sourcesContent":["import { CmsContentModelField, CmsModelFieldToGraphQLPlugin } from \"../../../types\";\n\nconst fieldGraphQLTypes = {\n    time: \"Time\",\n    dateTimeWithoutTimezone: \"DateTime\",\n    dateTimeWithTimezone: \"DateTimeZ\",\n    date: \"Date\"\n};\n\nconst getFieldGraphQLType = (field: CmsContentModelField): string => {\n    const type = field.settings.type;\n    if (!type || !fieldGraphQLTypes[type]) {\n        return \"DateTime\";\n    }\n    return fieldGraphQLTypes[type];\n};\n\nconst createListFilters = ({ field }) => {\n    return `\n        ${field.fieldId}: ${getFieldGraphQLType(field)}\n        ${field.fieldId}_not: ${getFieldGraphQLType(field)}\n        ${field.fieldId}_in: [${getFieldGraphQLType(field)}]\n        ${field.fieldId}_not_in: [${getFieldGraphQLType(field)}]\n        ${field.fieldId}_lt: ${getFieldGraphQLType(field)}\n        ${field.fieldId}_lte: ${getFieldGraphQLType(field)}\n        ${field.fieldId}_gt: ${getFieldGraphQLType(field)}\n        ${field.fieldId}_gte: ${getFieldGraphQLType(field)}\n    `;\n};\n\nconst plugin: CmsModelFieldToGraphQLPlugin = {\n    name: \"cms-model-field-to-graphql-datetime\",\n    type: \"cms-model-field-to-graphql\",\n    fieldType: \"datetime\",\n    isSortable: true,\n    isSearchable: true,\n    read: {\n        createListFilters,\n        createGetFilters({ field }) {\n            return `${field.fieldId}: ${getFieldGraphQLType(field)}`;\n        },\n        createTypeField({ field }) {\n            if (field.multipleValues) {\n                return `${field.fieldId}: [${getFieldGraphQLType(field)}]`;\n            }\n\n            return `${field.fieldId}: ${getFieldGraphQLType(field)}`;\n        }\n    },\n    manage: {\n        createListFilters,\n        createTypeField({ field }) {\n            return `${field.fieldId}: ${getFieldGraphQLType(field)}`;\n        },\n        createInputField({ field }) {\n            return `${field.fieldId}: ${getFieldGraphQLType(field)}`;\n        }\n    }\n};\n\nexport default plugin;\n"],"file":"datetime.js"}