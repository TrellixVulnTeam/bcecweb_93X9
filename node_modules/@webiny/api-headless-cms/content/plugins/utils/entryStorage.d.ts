import { CmsContentEntry, CmsContentModel, CmsContentModelField, CmsContext } from "../../../types";
/**
 * A function that is used in crud to transform entry into the storage type.
 */
export declare const entryToStorageTransform: (context: CmsContext, model: CmsContentModel, entry: CmsContentEntry) => Promise<CmsContentEntry>;
/**
 * A function that is used to transform the whole entry from storage into its native form.
 */
export declare const entryFromStorageTransform: (context: CmsContext, model: CmsContentModel, entry?: CmsContentEntry & Record<string, any>) => Promise<CmsContentEntry>;
interface EntryFieldFromStorageTransformParams {
    context: CmsContext;
    model: CmsContentModel;
    field: CmsContentModelField;
    value: any;
}
export declare const entryFieldFromStorageTransform: (params: EntryFieldFromStorageTransformParams) => Promise<any>;
export {};
