"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InternalAuthenticationPlugin = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _AuthenticationPlugin = require("@webiny/api-security/plugins/AuthenticationPlugin");

var _apiSecurity = require("@webiny/api-security");

class InternalAuthenticationPlugin extends _AuthenticationPlugin.AuthenticationPlugin {
  constructor(identityType) {
    super();
    (0, _defineProperty2.default)(this, "_identityType", void 0);
    this._identityType = identityType;
  }

  async authenticate(context) {
    const {
      headers
    } = context.http.request;
    const header = headers["Authorization"] || headers["authorization"];
    const apiKey = header ? header.split(" ").pop() : null;

    if (!apiKey || apiKey !== (await context.cms.system.getReadAPIKey())) {
      return;
    }
    /**
     * This is an internal identity, which has access to `read` endpoint, all content models,
     * content entries, and all content locales.
     */


    return new _apiSecurity.SecurityIdentity({
      id: "read-api-key",
      displayName: "Read API key",
      type: this._identityType,
      permissions: [{
        name: "cms.endpoint.read"
      }, {
        name: "cms.content*"
      }, {
        name: "content.i18n"
      }]
    });
  }

}

exports.InternalAuthenticationPlugin = InternalAuthenticationPlugin;
//# sourceMappingURL=InternalAuthenticationPlugin.js.map