import { CmsContentModelManager, CmsContentModel, CmsContext } from "../../../types";
export declare class DefaultContentModelManager implements CmsContentModelManager {
    private readonly _context;
    private readonly _model;
    constructor(context: CmsContext, model: CmsContentModel);
    create(data: any): Promise<import("../../../types").CmsContentEntry>;
    delete(id: string): Promise<void>;
    get(args: any): Promise<import("../../../types").CmsContentEntry>;
    list(args: any): Promise<[import("../../../types").CmsContentEntry[], import("../../../types").CmsContentEntryMeta]>;
    listPublished(args: any): Promise<[import("../../../types").CmsContentEntry[], import("../../../types").CmsContentEntryMeta]>;
    listLatest(args: any): Promise<[import("../../../types").CmsContentEntry[], import("../../../types").CmsContentEntryMeta]>;
    getPublishedByIds(ids: string[]): Promise<import("../../../types").CmsContentEntry[]>;
    getLatestByIds(ids: string[]): Promise<import("../../../types").CmsContentEntry[]>;
    update(id: any, data: any): Promise<import("../../../types").CmsContentEntry>;
}
