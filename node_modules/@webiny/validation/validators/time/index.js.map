{"version":3,"sources":["../../../src/validators/time/index.ts"],"names":["parseTime","value","parsed","split","map","Number","length","ValidationError","hours","minutes","seconds","compareTime","time","compareTo","timeHours","timeMinutes","timeSeconds","compareToHours","compareToMinutes","compareToSeconds"],"mappings":";;;;;;;;;AAAA;;AAEA,MAAMA,SAAS,GAAIC,KAAD,IAAmB;AACjC,QAAMC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,CAAqBC,MAArB,CAAf;;AACA,MAAIH,MAAM,CAACI,MAAP,GAAgB,CAApB,EAAuB;AACnB,UAAM,IAAIC,wBAAJ,CAAqB,UAASN,KAAM,4BAApC,CAAN;AACH;;AACD,QAAM,CAACO,KAAD,EAAQC,OAAR,EAAiBC,OAAO,GAAG,CAA3B,IAAgCR,MAAtC;;AACA,MAAIM,KAAK,IAAI,EAAb,EAAiB;AACb,UAAM,IAAID,wBAAJ,CACD,wDAAuDN,KAAM,IAD5D,CAAN;AAGH,GAJD,MAIO,IAAIO,KAAK,GAAG,CAAZ,EAAe;AAClB,UAAM,IAAID,wBAAJ,CAAqB,mDAAkDN,KAAM,IAA7E,CAAN;AACH,GAFM,MAEA,IAAIQ,OAAO,IAAI,EAAf,EAAmB;AACtB,UAAM,IAAIF,wBAAJ,CACD,0DAAyDN,KAAM,IAD9D,CAAN;AAGH,GAJM,MAIA,IAAIQ,OAAO,GAAG,CAAd,EAAiB;AACpB,UAAM,IAAIF,wBAAJ,CAAqB,qDAAoDN,KAAM,IAA/E,CAAN;AACH,GAFM,MAEA,IAAIS,OAAO,IAAI,EAAf,EAAmB;AACtB,UAAM,IAAIH,wBAAJ,CACD,0DAAyDN,KAAM,IAD9D,CAAN;AAGH,GAJM,MAIA,IAAIS,OAAO,GAAG,CAAd,EAAiB;AACpB,UAAM,IAAIH,wBAAJ,CAAqB,qDAAoDN,KAAM,IAA/E,CAAN;AACH;;AACD,SAAO;AACHO,IAAAA,KADG;AAEHC,IAAAA,OAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH,CA9BD;AA+BA;AACA;AACA;AACA;AACA;;;AACO,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAeC,SAAf,KAA6C;AACpE,QAAM;AAAEL,IAAAA,KAAK,EAAEM,SAAT;AAAoBL,IAAAA,OAAO,EAAEM,WAA7B;AAA0CL,IAAAA,OAAO,EAAEM;AAAnD,MAAmEhB,SAAS,CAACY,IAAD,CAAlF;AACA,QAAM;AACFJ,IAAAA,KAAK,EAAES,cADL;AAEFR,IAAAA,OAAO,EAAES,gBAFP;AAGFR,IAAAA,OAAO,EAAES;AAHP,MAIFnB,SAAS,CAACa,SAAD,CAJb;;AAKA,MAAIC,SAAS,GAAGG,cAAhB,EAAgC;AAC5B,WAAO,CAAP;AACH;;AACD,MAAIH,SAAS,KAAKG,cAAlB,EAAkC;AAC9B,QAAIF,WAAW,GAAGG,gBAAlB,EAAoC;AAChC,aAAO,CAAP;AACH,KAFD,MAEO,IAAIH,WAAW,KAAKG,gBAApB,EAAsC;AACzC,UAAIF,WAAW,GAAGG,gBAAlB,EAAoC;AAChC,eAAO,CAAP;AACH,OAFD,MAEO,IAAIH,WAAW,KAAKG,gBAApB,EAAsC;AACzC,eAAO,CAAP;AACH;AACJ;AACJ;;AACD,SAAO,CAAC,CAAR;AACH,CAtBM","sourcesContent":["import ValidationError from \"../../validationError\";\n\nconst parseTime = (value: string) => {\n    const parsed = value.split(\":\").map(Number);\n    if (parsed.length < 2) {\n        throw new ValidationError(`Value \"${value}\" does not look like time.`);\n    }\n    const [hours, minutes, seconds = 0] = parsed;\n    if (hours >= 24) {\n        throw new ValidationError(\n            `There cannot be more than 24 hours. Value parsed is \"${value}\".`\n        );\n    } else if (hours < 0) {\n        throw new ValidationError(`Hours cannot go into negative. Value parsed is \"${value}\".`);\n    } else if (minutes >= 60) {\n        throw new ValidationError(\n            `There cannot be more than 59 minutes. Value parsed is \"${value}\".`\n        );\n    } else if (minutes < 0) {\n        throw new ValidationError(`Minutes cannot go into negative. Value parsed is \"${value}\".`);\n    } else if (seconds >= 60) {\n        throw new ValidationError(\n            `There cannot be more than 59 seconds. Value parsed is \"${value}\".`\n        );\n    } else if (seconds < 0) {\n        throw new ValidationError(`Seconds cannot go into negative. Value parsed is \"${value}\".`);\n    }\n    return {\n        hours,\n        minutes,\n        seconds\n    };\n};\n/**\n * returns 1 if time is greater than compareTo\n * returns 0 if they are equal\n * returns -1 if compareTo is greater than time\n */\nexport const compareTime = (time: string, compareTo: string): number => {\n    const { hours: timeHours, minutes: timeMinutes, seconds: timeSeconds } = parseTime(time);\n    const {\n        hours: compareToHours,\n        minutes: compareToMinutes,\n        seconds: compareToSeconds\n    } = parseTime(compareTo);\n    if (timeHours > compareToHours) {\n        return 1;\n    }\n    if (timeHours === compareToHours) {\n        if (timeMinutes > compareToMinutes) {\n            return 1;\n        } else if (timeMinutes === compareToMinutes) {\n            if (timeSeconds > compareToSeconds) {\n                return 1;\n            } else if (timeSeconds === compareToSeconds) {\n                return 0;\n            }\n        }\n    }\n    return -1;\n};\n"],"file":"index.js"}