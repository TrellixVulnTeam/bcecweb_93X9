{"version":3,"sources":["../../../src/plugins/definitions/InstallationPlugin.ts"],"names":["InstallationPlugin","Plugin","constructor","config","_config","beforeInstall","params","_execute","afterInstall","callback"],"mappings":";;;;;;;;;;;AACA;;AAaO,MAAeA,kBAAf,SAA0CC,eAA1C,CAAiD;AAIpDC,EAAAA,WAAW,CAACC,MAAD,EAA2B;AAClC;AADkC;AAElC,SAAKC,OAAL,GAAeD,MAAM,IAAI,EAAzB;AACH;;AAEyB,QAAbE,aAAa,CAACC,MAAD,EAAgC;AACtD,WAAO,KAAKC,QAAL,CAAc,eAAd,EAA+BD,MAA/B,CAAP;AACH;;AAEwB,QAAZE,YAAY,CAACF,MAAD,EAAgC;AACrD,WAAO,KAAKC,QAAL,CAAc,cAAd,EAA8BD,MAA9B,CAAP;AACH;;AAEqB,QAARC,QAAQ,CAACE,QAAD,EAAWH,MAAX,EAAkC;AACpD,QAAI,OAAO,KAAKF,OAAL,CAAaK,QAAb,CAAP,KAAkC,UAAtC,EAAkD;AAC9C;AACH;;AACD,WAAO,KAAKL,OAAL,CAAaK,QAAb,EAAuBH,MAAvB,CAAP;AACH;;AAtBmD;;;8BAAlCN,kB,UACY,Y","sourcesContent":["import { FileManagerContext } from \"~/types\";\nimport { Plugin } from \"@webiny/plugins\";\n\nexport type CallbackFunction<TParams> = (params: TParams) => Promise<void>;\n\nexport interface Params {\n    context: FileManagerContext;\n}\n\ninterface Config {\n    beforeInstall?: CallbackFunction<Params>;\n    afterInstall?: CallbackFunction<Params>;\n}\n\nexport abstract class InstallationPlugin extends Plugin {\n    public static readonly type = \"fm.install\";\n    private readonly _config: Partial<Config>;\n\n    constructor(config?: Partial<Config>) {\n        super();\n        this._config = config || {};\n    }\n\n    public async beforeInstall(params: Params): Promise<void> {\n        return this._execute(\"beforeInstall\", params);\n    }\n\n    public async afterInstall(params: Params): Promise<void> {\n        return this._execute(\"afterInstall\", params);\n    }\n\n    private async _execute(callback, params): Promise<void> {\n        if (typeof this._config[callback] !== \"function\") {\n            return;\n        }\n        return this._config[callback](params);\n    }\n}\n"],"file":"InstallationPlugin.js"}