/// <reference types="node" />
import { FileManagerContext } from "../../types";
export declare type Args = {
    name: string;
    type: string;
    size: number;
    buffer: Buffer;
    keyPrefix?: string;
};
export declare type Result = Record<string, any>;
export interface FileStoragePlugin {
    upload: (args: Args) => Promise<Result>;
    delete: (args: {
        key: string;
    }) => Promise<void>;
}
export declare class FileStorage {
    storagePlugin: FileStoragePlugin;
    context: FileManagerContext;
    constructor({ context }: {
        context: any;
    });
    upload(args: any): Promise<Result>;
    uploadFiles(args: any): Promise<import("../../types").File[]>;
    delete(args: {
        id: string;
        key: string;
    }): Promise<boolean>;
}
