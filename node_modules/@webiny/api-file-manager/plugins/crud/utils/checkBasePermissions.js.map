{"version":3,"sources":["../../../../src/plugins/crud/utils/checkBasePermissions.ts"],"names":["context","check","i18nContent","checkI18NContentPermission","filePermission","security","getPermission","NotAuthorizedError","rwd","hasRwd","filesFilePermission","includes"],"mappings":";;;;;;;AACA;;eAEe,OACXA,OADW,EAEXC,KAAuB,GAAG,EAFf,KAGe;AAC1B,QAAMD,OAAO,CAACE,WAAR,CAAoBC,0BAApB,EAAN;AACA,QAAMC,cAAc,GAAG,MAAMJ,OAAO,CAACK,QAAR,CAAiBC,aAAjB,CAA+C,SAA/C,CAA7B;;AACA,MAAI,CAACF,cAAL,EAAqB;AACjB,UAAM,IAAIG,+BAAJ,EAAN;AACH;;AACD,MAAIN,KAAK,CAACO,GAAN,IAAa,CAACC,MAAM,CAACL,cAAD,EAAiBH,KAAK,CAACO,GAAvB,CAAxB,EAAqD;AACjD,UAAM,IAAID,+BAAJ,EAAN;AACH;;AAED,SAAOH,cAAP;AACH,C;;;;AAED,MAAMK,MAAM,GAAG,CAACC,mBAAD,EAAsBF,GAAtB,KAA8B;AACzC,MAAI,OAAOE,mBAAmB,CAACF,GAA3B,KAAmC,QAAvC,EAAiD;AAC7C,WAAO,IAAP;AACH;;AAED,SAAOE,mBAAmB,CAACF,GAApB,CAAwBG,QAAxB,CAAiCH,GAAjC,CAAP;AACH,CAND","sourcesContent":["import { FileManagerContext, FilePermission } from \"~/types\";\nimport { NotAuthorizedError } from \"@webiny/api-security\";\n\nexport default async (\n    context: FileManagerContext,\n    check: { rwd?: string } = {}\n): Promise<FilePermission> => {\n    await context.i18nContent.checkI18NContentPermission();\n    const filePermission = await context.security.getPermission<FilePermission>(\"fm.file\");\n    if (!filePermission) {\n        throw new NotAuthorizedError();\n    }\n    if (check.rwd && !hasRwd(filePermission, check.rwd)) {\n        throw new NotAuthorizedError();\n    }\n\n    return filePermission;\n};\n\nconst hasRwd = (filesFilePermission, rwd) => {\n    if (typeof filesFilePermission.rwd !== \"string\") {\n        return true;\n    }\n\n    return filesFilePermission.rwd.includes(rwd);\n};\n"],"file":"checkBasePermissions.js"}