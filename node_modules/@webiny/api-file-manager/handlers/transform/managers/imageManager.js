"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = require("../../utils");

var _utils2 = require("../utils");

var _default = {
  canProcess: opts => {
    const {
      key,
      extension
    } = opts;

    if (!_utils2.SUPPORTED_IMAGES.includes(extension)) {
      return false;
    }

    if (key.startsWith(_utils2.OPTIMIZED_IMAGE_PREFIX || key.startsWith(_utils2.OPTIMIZED_TRANSFORMED_IMAGE_PREFIX))) {
      return false;
    }

    return true;
  },

  async process({
    s3,
    key,
    extension
  }) {
    // 1. Get optimized image's key.
    await s3.deleteObject((0, _utils.getObjectParams)((0, _utils2.getImageKey)({
      key
    }))).promise(); // 2. Search for all transformed images and delete those too.

    if (_utils2.SUPPORTED_TRANSFORMABLE_IMAGES.includes(extension)) {
      const env = (0, _utils.getEnvironment)();
      const imagesList = await s3.listObjects({
        Bucket: env.bucket,
        Prefix: (0, _utils2.getOptimizedTransformedImageKeyPrefix)(key)
      }).promise();

      for (let i = 0; i < imagesList.Contents.length; i++) {
        const imageObject = imagesList.Contents[i];
        await s3.deleteObject((0, _utils.getObjectParams)(imageObject.Key)).promise();
      }
    }
  }

};
exports.default = _default;
//# sourceMappingURL=imageManager.js.map