{"version":3,"sources":["../../../../src/handlers/transform/loaders/sanitizeImageTransformations.ts"],"names":["SUPPORTED_IMAGE_RESIZE_WIDTHS","args","transformations","width","parseInt","i","length","Object","keys"],"mappings":";;;;;;AAAA,MAAMA,6BAA6B,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,CAAtC;AAEA;AACA;AACA;;eACeC,IAAI,IAAI;AACnB,QAAMC,eAAuC,GAAG,EAAhD;;AAEA,MAAID,IAAJ,EAAU;AACN,UAAME,KAAK,GAAGC,QAAQ,CAACH,IAAI,CAACE,KAAN,CAAtB;;AACA,QAAIA,KAAK,GAAG,CAAZ,EAAe;AACXD,MAAAA,eAAe,CAACC,KAAhB,GAAwBH,6BAA6B,CAAC,CAAD,CAArD;AACA,UAAIK,CAAC,GAAGL,6BAA6B,CAACM,MAAtC;;AACA,aAAOD,CAAC,IAAI,CAAZ,EAAe;AACX,YAAIF,KAAK,KAAKH,6BAA6B,CAACK,CAAD,CAA3C,EAAgD;AAC5CH,UAAAA,eAAe,CAACC,KAAhB,GAAwBH,6BAA6B,CAACK,CAAD,CAArD;AACA;AACH;;AAED,YAAIF,KAAK,GAAGH,6BAA6B,CAACK,CAAD,CAAzC,EAA8C;AAC1C;AACAH,UAAAA,eAAe,CAACC,KAAhB,GAAwBH,6BAA6B,CAACK,CAAC,GAAG,CAAL,CAArD;;AACA,cAAI,CAACH,eAAe,CAACC,KAArB,EAA4B;AACxBD,YAAAA,eAAe,CAACC,KAAhB,GAAwBH,6BAA6B,CAACK,CAAD,CAArD;AACH;;AACD;AACH;;AAEDA,QAAAA,CAAC;AACJ;AACJ;AACJ;;AAED,MAAIE,MAAM,CAACC,IAAP,CAAYN,eAAZ,EAA6BI,MAA7B,GAAsC,CAA1C,EAA6C;AACzC,WAAOJ,eAAP;AACH;;AAED,SAAO,IAAP;AACH,C","sourcesContent":["const SUPPORTED_IMAGE_RESIZE_WIDTHS = [100, 300, 500, 750, 1000, 1500, 2500];\n\n/**\n * Takes only allowed transformations into consideration, and discards the rest.\n */\nexport default args => {\n    const transformations: { [key: string]: any } = {};\n\n    if (args) {\n        const width = parseInt(args.width);\n        if (width > 0) {\n            transformations.width = SUPPORTED_IMAGE_RESIZE_WIDTHS[0];\n            let i = SUPPORTED_IMAGE_RESIZE_WIDTHS.length;\n            while (i >= 0) {\n                if (width === SUPPORTED_IMAGE_RESIZE_WIDTHS[i]) {\n                    transformations.width = SUPPORTED_IMAGE_RESIZE_WIDTHS[i];\n                    break;\n                }\n\n                if (width > SUPPORTED_IMAGE_RESIZE_WIDTHS[i]) {\n                    // Use next larger width. If there isn't any, use current.\n                    transformations.width = SUPPORTED_IMAGE_RESIZE_WIDTHS[i + 1];\n                    if (!transformations.width) {\n                        transformations.width = SUPPORTED_IMAGE_RESIZE_WIDTHS[i];\n                    }\n                    break;\n                }\n\n                i--;\n            }\n        }\n    }\n\n    if (Object.keys(transformations).length > 0) {\n        return transformations;\n    }\n\n    return null;\n};\n"],"file":"sanitizeImageTransformations.js"}