{"version":3,"sources":["../../../src/graphql/graphql/locales.ts"],"names":["resolve","fn","Response","ex","NotFoundError","NotFoundResponse","message","NotAuthorizedError","NotAuthorizedResponse","ErrorResponse","plugin","type","name","schema","typeDefs","resolvers","I18NQuery","getI18NLocale","_","args","context","i18n","locales","get","code","listI18NLocales","items","meta","list","ListResponse","searchLocaleCodes","getI18NInformation","I18NMutation","createI18NLocale","create","data","updateI18NLocale","update","deleteI18NLocale","delete"],"mappings":";;;;;;;;;AAAA;;AAQA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAMA,OAAO,GAAG,MAAMC,EAAN,IAAY;AACxB,MAAI;AACA,WAAO,IAAIC,mBAAJ,CAAa,MAAMD,EAAE,EAArB,CAAP;AACH,GAFD,CAEE,OAAOE,EAAP,EAAW;AACT,QAAIA,EAAE,YAAYC,6BAAlB,EAAiC;AAC7B,aAAO,IAAIC,2BAAJ,CAAqBF,EAAE,CAACG,OAAxB,CAAP;AACH,KAFD,MAEO,IAAIH,EAAE,YAAYI,+BAAlB,EAAsC;AACzC,aAAO,IAAIC,8BAAJ,CAA0BL,EAA1B,CAAP;AACH;;AACD,WAAO,IAAIM,wBAAJ,CAAkBN,EAAlB,CAAP;AACH;AACJ,CAXD;;AAaA,MAAMO,MAAwC,GAAG;AAC7CC,EAAAA,IAAI,EAAE,gBADuC;AAE7CC,EAAAA,IAAI,EAAE,6BAFuC;AAG7CC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ;AAAE;AAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAhGY;AAiGJC,IAAAA,SAAS,EAAE;AACPC,MAAAA,SAAS,EAAE;AACPC,QAAAA,aAAa,EAAE,OAAOC,CAAP,EAAUC,IAAV,EAAkCC,OAAlC,KAA8C;AACzD,iBAAOpB,OAAO,CAAC,MAAMoB,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqBC,GAArB,CAAyBJ,IAAI,CAACK,IAA9B,CAAP,CAAd;AACH,SAHM;AAIPC,QAAAA,eAAe,EAAE,OAAOP,CAAP,EAAUC,IAAV,EAAgBC,OAAhB,KAA4B;AACzC,cAAI;AACA,kBAAM,CAACM,KAAD,EAAQC,IAAR,IAAgB,MAAMP,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqBM,IAArB,CAA0BT,IAA1B,CAA5B;AACA,mBAAO,IAAIU,uBAAJ,CAAiBH,KAAjB,EAAwBC,IAAxB,CAAP;AACH,WAHD,CAGE,OAAOxB,EAAP,EAAW;AACT,mBAAO,IAAIM,wBAAJ,CAAkBN,EAAlB,CAAP;AACH;AACJ,SAXM;AAYP2B,QAAAA,iBAAiB,EAAjBA,0BAZO;AAaPC,QAAAA,kBAAkB,EAAlBA;AAbO,OADJ;AAgBPC,MAAAA,YAAY,EAAE;AACVC,QAAAA,gBAAgB,EAAE,OAAOf,CAAP,EAAUC,IAAV,EAA6CC,OAA7C,KAAyD;AACvE,iBAAOpB,OAAO,CAAC,MAAMoB,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqBY,MAArB,CAA4Bf,IAAI,CAACgB,IAAjC,CAAP,CAAd;AACH,SAHS;AAIVC,QAAAA,gBAAgB,EAAE,OACdlB,CADc,EAEdC,IAFc,EAGdC,OAHc,KAIb;AACD,iBAAOpB,OAAO,CAAC,MAAMoB,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqBe,MAArB,CAA4BlB,IAAI,CAACK,IAAjC,EAAuCL,IAAI,CAACgB,IAA5C,CAAP,CAAd;AACH,SAVS;AAWVG,QAAAA,gBAAgB,EAAE,OAAOpB,CAAP,EAAUC,IAAV,EAAkCC,OAAlC,KAA8C;AAC5D,iBAAOpB,OAAO,CAAC,MAAMoB,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqBiB,MAArB,CAA4BpB,IAAI,CAACK,IAAjC,CAAP,CAAd;AACH;AAbS;AAhBP;AAjGP;AAHqC,CAAjD;eAuIed,M","sourcesContent":["import {\n    Response,\n    ErrorResponse,\n    NotFoundResponse,\n    ListResponse\n} from \"@webiny/handler-graphql/responses\";\nimport { GraphQLSchemaPlugin } from \"@webiny/handler-graphql/types\";\nimport { I18NContext, LocalesCRUDCreate, LocalesCRUDUpdate } from \"~/types\";\nimport searchLocaleCodes from \"./resolvers/searchLocaleCodes\";\nimport getI18NInformation from \"./resolvers/getI18NInformation\";\nimport NotAuthorizedResponse from \"@webiny/api-security/NotAuthorizedResponse\";\nimport { NotFoundError } from \"@webiny/handler-graphql\";\nimport { NotAuthorizedError } from \"@webiny/api-security\";\n\nconst resolve = async fn => {\n    try {\n        return new Response(await fn());\n    } catch (ex) {\n        if (ex instanceof NotFoundError) {\n            return new NotFoundResponse(ex.message);\n        } else if (ex instanceof NotAuthorizedError) {\n            return new NotAuthorizedResponse(ex);\n        }\n        return new ErrorResponse(ex);\n    }\n};\n\nconst plugin: GraphQLSchemaPlugin<I18NContext> = {\n    type: \"graphql-schema\",\n    name: \"graphql-schema-i18n-locales\",\n    schema: {\n        typeDefs: /* GraphQL */ `\n            type I18NCreatedBy {\n                id: ID\n                displayName: String\n                type: String\n            }\n\n            type I18NLocale {\n                code: String\n                default: Boolean\n                createdOn: DateTime\n                createdBy: I18NCreatedBy\n            }\n\n            input I18NLocaleInput {\n                code: String\n                default: Boolean\n            }\n\n            input I18NLocaleUpdateInput {\n                default: Boolean!\n            }\n\n            type I18NLocaleResponse {\n                data: I18NLocale\n                error: I18NError\n            }\n\n            type I18NLocaleListResponse {\n                data: [I18NLocale]\n                meta: I18NListMeta\n                error: I18NError\n            }\n\n            type SearchLocaleCodesResponse {\n                data: [String]\n            }\n\n            type I18NInformationLocale {\n                code: String\n                default: Boolean\n            }\n\n            type I18NInformationCurrentLocale {\n                context: String\n                locale: String\n            }\n\n            type I18NInformationResponse {\n                locales: [I18NInformationLocale]\n                currentLocales: [I18NInformationCurrentLocale]\n                defaultLocale: I18NInformationLocale\n            }\n\n            input I18NListLocalesWhere {\n                code: String\n                code_in: [String!]\n                code_not_in: [String!]\n                code_not: String\n                default: Boolean\n                createdBy: String\n                createdOn: String\n                createdOn_not: String\n                createdOn_not_in: [String!]\n                createdOn_lt: String\n                createdOn_lte: String\n                createdOn_gt: String\n                createdOn_gte: String\n            }\n\n            enum I18NListLocalesSorter {\n                code_ASC\n                code_DESC\n                createdOn_ASC\n                createdOn_DESC\n                createdBy_ASC\n                createdBy_DESC\n            }\n\n            extend type I18NQuery {\n                getI18NLocale(code: String!): I18NLocaleResponse\n                listI18NLocales(\n                    where: I18NListLocalesWhere\n                    sort: I18NListLocalesSorter\n                    limit: Int\n                ): I18NLocaleListResponse\n                getI18NInformation: I18NInformationResponse\n                searchLocaleCodes(search: String): SearchLocaleCodesResponse\n            }\n\n            extend type I18NMutation {\n                createI18NLocale(data: I18NLocaleInput!): I18NLocaleResponse\n                updateI18NLocale(code: String!, data: I18NLocaleUpdateInput!): I18NLocaleResponse\n                deleteI18NLocale(code: String!): I18NLocaleResponse\n            }\n        `,\n        resolvers: {\n            I18NQuery: {\n                getI18NLocale: async (_, args: { code: string }, context) => {\n                    return resolve(() => context.i18n.locales.get(args.code));\n                },\n                listI18NLocales: async (_, args, context) => {\n                    try {\n                        const [items, meta] = await context.i18n.locales.list(args);\n                        return new ListResponse(items, meta);\n                    } catch (ex) {\n                        return new ErrorResponse(ex);\n                    }\n                },\n                searchLocaleCodes,\n                getI18NInformation\n            },\n            I18NMutation: {\n                createI18NLocale: async (_, args: { data: LocalesCRUDCreate }, context) => {\n                    return resolve(() => context.i18n.locales.create(args.data));\n                },\n                updateI18NLocale: async (\n                    _,\n                    args: { code: string; data: LocalesCRUDUpdate },\n                    context\n                ) => {\n                    return resolve(() => context.i18n.locales.update(args.code, args.data));\n                },\n                deleteI18NLocale: async (_, args: { code: string }, context) => {\n                    return resolve(() => context.i18n.locales.delete(args.code));\n                }\n            }\n        }\n    }\n};\n\nexport default plugin;\n"],"file":"locales.js"}