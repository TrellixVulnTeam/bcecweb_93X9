{"version":3,"sources":["../../src/graphql/context.ts"],"names":["parseXI18NLocaleHeader","value","cache","split","filter","Boolean","map","item","reduce","current","context","locale","getLocaleFromHeaders","http","localeContext","headers","request","acceptLanguageHeader","contextLocaleHeader","key","hasOwnProperty","lcKey","toLowerCase","parsed","ContextPlugin","locales","tenancy","getCurrentTenant","plugin","plugins","byName","Error","resolve","__i18n","acceptLanguage","defaultLocale","getDefaultLocale","allLocales","getLocales","find","default","getCurrentLocales","localeContexts","byType","name","getCurrentLocale","code","currentLocale","localeFromHeaders","acceptLanguageParser","pick","getLocale","i18n","localesCRUD","systemCRUD"],"mappings":"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","sourcesContent":["import acceptLanguageParser from \"accept-language-parser\";\nimport { ContextI18NGetLocales, I18NContext, I18NLocaleContextPlugin } from \"~/types\";\nimport localesCRUD from \"./crud/locales.crud\";\nimport systemCRUD from \"./crud/system.crud\";\nimport { ContextPlugin } from \"@webiny/handler/plugins/ContextPlugin\";\n\n/**\n * Parses \"x-i18n-locale\" header value (e.g. \"default:en-US;content:hr-HR;\").\n */\nconst parseXI18NLocaleHeader = value => {\n    if (parseXI18NLocaleHeader.cache[value]) {\n        return parseXI18NLocaleHeader.cache[value];\n    }\n\n    /**\n     * Parsing x-i18n-locale value (e.g. \"default:en-US;content:hr-HR;\").\n     */\n    parseXI18NLocaleHeader.cache[value] = value\n        .split(\";\")\n        .filter(Boolean)\n        .map(item => item.split(\":\"))\n        .reduce((current, [context, locale]) => {\n            current[context] = locale;\n            return current;\n        }, {});\n\n    return parseXI18NLocaleHeader.cache[value];\n};\n\nparseXI18NLocaleHeader.cache = {};\n\nconst getLocaleFromHeaders = (http, localeContext = \"default\") => {\n    if (!http) {\n        return null;\n    }\n\n    const { headers = {} } = http.request;\n\n    let acceptLanguageHeader, contextLocaleHeader;\n    for (const key in headers) {\n        if (headers.hasOwnProperty(key) === false) {\n            continue;\n        }\n        const lcKey = key.toLowerCase();\n        if (lcKey === \"accept-language\") {\n            acceptLanguageHeader = headers[key];\n        } else if (lcKey === \"x-i18n-locale\") {\n            const parsed = parseXI18NLocaleHeader(headers[key]);\n            contextLocaleHeader = parsed[localeContext];\n        }\n\n        if (acceptLanguageHeader && contextLocaleHeader) {\n            break;\n        }\n    }\n\n    return { acceptLanguageHeader, contextLocaleHeader };\n};\n\nconst context = new ContextPlugin<I18NContext>(async context => {\n    let locales = [];\n    if (context.tenancy.getCurrentTenant()) {\n        const plugin = context.plugins.byName<ContextI18NGetLocales>(\"context-i18n-get-locales\");\n        if (!plugin) {\n            throw new Error('Cannot load locales - missing \"context-i18n-get-locales\" plugin.');\n        }\n        locales = await plugin.resolve({ context });\n    }\n\n    const { http, plugins } = context;\n\n    const __i18n = {\n        acceptLanguage: null,\n        defaultLocale: null,\n        locale: {}, // Contains one or more locales - for multiple locale contexts.\n        locales\n    };\n    const getDefaultLocale = () => {\n        const allLocales = getLocales();\n        return allLocales.find(item => item.default === true);\n    };\n    const getCurrentLocales = () => {\n        const localeContexts = plugins.byType<I18NLocaleContextPlugin>(\"i18n-locale-context\");\n        return localeContexts.map(plugin => ({\n            context: plugin.context.name,\n            locale: getCurrentLocale(plugin.context.name)?.code\n        }));\n    };\n    const getCurrentLocale = (localeContext = \"default\") => {\n        if (__i18n.locale[localeContext]) {\n            return __i18n.locale[localeContext];\n        }\n\n        const allLocales = getLocales();\n\n        let currentLocale;\n        const { acceptLanguageHeader, contextLocaleHeader } = getLocaleFromHeaders(\n            http,\n            localeContext\n        );\n\n        // Try to select from received context locale.\n        let localeFromHeaders = contextLocaleHeader;\n        if (!localeFromHeaders && acceptLanguageHeader) {\n            localeFromHeaders = acceptLanguageParser.pick(\n                allLocales.map(item => item.code),\n                acceptLanguageHeader\n            );\n        }\n\n        if (localeFromHeaders) {\n            currentLocale = allLocales.find(item => item.code === localeFromHeaders);\n        }\n\n        if (!currentLocale) {\n            currentLocale = getDefaultLocale();\n        }\n\n        __i18n.locale[localeContext] = currentLocale;\n\n        return __i18n.locale[localeContext];\n    };\n    const getLocales = () => {\n        return __i18n.locales;\n    };\n    const getLocale = code => {\n        const item = __i18n.locales.find(\n            locale => locale.code.toLowerCase() === code.toLowerCase()\n        );\n        if (!item) {\n            return null;\n        }\n        return item;\n    };\n\n    context.i18n = {\n        ...context.i18n,\n        __i18n,\n        getDefaultLocale,\n        getCurrentLocales,\n        getCurrentLocale,\n        getLocales,\n        getLocale\n    };\n});\n\nexport default () => [localesCRUD, systemCRUD, context];\n"],"file":"context.js"}