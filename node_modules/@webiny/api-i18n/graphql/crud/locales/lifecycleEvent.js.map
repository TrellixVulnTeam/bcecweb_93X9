{"version":3,"sources":["../../../../src/graphql/crud/locales/lifecycleEvent.ts"],"names":["runLifecycleEvent","hook","params","plugins","rest","length","plugin"],"mappings":";;;;;;;;;;;;;AAGO,MAAMA,iBAAiB,GAAG,OAC7BC,IAD6B,EAE7BC,MAF6B,KAGb;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAuBD,MAA7B;AAAA,QAAoBE,IAApB,0CAA6BF,MAA7B;;AACA,MAAIC,OAAO,CAACE,MAAR,KAAmB,CAAvB,EAA0B;AACtB;AACH;;AACD,OAAK,MAAMC,MAAX,IAAqBH,OAArB,EAA8B;AAC1B,QAAI,CAACG,MAAM,CAACL,IAAD,CAAX,EAAmB;AACf;AACH;;AACD,UAAMK,MAAM,CAACL,IAAD,CAAN,CAAaG,IAAb,CAAN;AACH;AACJ,CAdM","sourcesContent":["import { LocalePlugin } from \"~/plugins/LocalePlugin\";\nimport { I18NContext } from \"~/types\";\n\nexport const runLifecycleEvent = async (\n    hook: string,\n    params: { context: I18NContext; plugins: LocalePlugin[] } & Record<string, any>\n): Promise<void> => {\n    const { plugins, ...rest } = params;\n    if (plugins.length === 0) {\n        return;\n    }\n    for (const plugin of plugins) {\n        if (!plugin[hook]) {\n            continue;\n        }\n        await plugin[hook](rest);\n    }\n};\n"],"file":"lifecycleEvent.js"}