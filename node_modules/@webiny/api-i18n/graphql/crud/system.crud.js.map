{"version":3,"sources":["../../../src/graphql/crud/system.crud.ts"],"names":["ContextPlugin","context","i18n","pluginType","SystemStorageOperationsProviderPlugin","type","providerPlugin","plugins","byType","find","WebinyError","storageOperations","provide","system","getVersion","get","version","setVersion","original","update","ex","message","code","create","install","locales","default","WEBINY_VERSION"],"mappings":";;;;;;;;;;;AACA;;AACA;;AACA;;;;;;eAEe,IAAIA,4BAAJ,CAA+B,MAAMC,OAAN,IAAiB;AAC3D,MAAI,CAACA,OAAO,CAACC,IAAb,EAAmB;AACfD,IAAAA,OAAO,CAACC,IAAR,GAAe,EAAf;AACH;;AACD,QAAMC,UAAU,GAAGC,6EAAsCC,IAAzD;AAEA,QAAMC,cAAc,GAAGL,OAAO,CAACM,OAAR,CAClBC,MADkB,CAC4BL,UAD5B,EAElBM,IAFkB,CAEb,MAAM,IAFO,CAAvB;;AAIA,MAAI,CAACH,cAAL,EAAqB;AACjB,UAAM,IAAII,cAAJ,CAAiB,YAAWP,UAAW,WAAvC,EAAmD,kBAAnD,EAAuE;AACzEE,MAAAA,IAAI,EAAEF;AADmE,KAAvE,CAAN;AAGH;;AAED,QAAMQ,iBAAiB,GAAG,MAAML,cAAc,CAACM,OAAf,CAAuB;AACnDX,IAAAA;AADmD,GAAvB,CAAhC;AAIAA,EAAAA,OAAO,CAACC,IAAR,CAAaW,MAAb,GAAsB;AAClBC,IAAAA,UAAU,EAAE,YAAY;AACpB,YAAMD,MAAM,GAAG,MAAMF,iBAAiB,CAACI,GAAlB,EAArB;AAEA,aAAOF,MAAM,GAAGA,MAAM,CAACG,OAAV,GAAoB,IAAjC;AACH,KALiB;AAMlBC,IAAAA,UAAU,EAAE,MAAMD,OAAN,IAAiB;AACzB,YAAME,QAAQ,GAAG,MAAMP,iBAAiB,CAACI,GAAlB,EAAvB;;AAEA,YAAMF,MAAkB,mCAChBK,QAAQ,IAAK,EADG;AAEpBF,QAAAA;AAFoB,QAAxB;;AAIA,UAAIE,QAAJ,EAAc;AACV,YAAI;AACA,gBAAMP,iBAAiB,CAACQ,MAAlB,CAAyB;AAC3BD,YAAAA,QAD2B;AAE3BL,YAAAA;AAF2B,WAAzB,CAAN;AAIH,SALD,CAKE,OAAOO,EAAP,EAAW;AACT,gBAAM,IAAIV,cAAJ,CACFU,EAAE,CAACC,OAAH,IAAc,8BADZ,EAEFD,EAAE,CAACE,IAAH,IAAW,qBAFT,EAGF;AACIJ,YAAAA,QADJ;AAEIL,YAAAA;AAFJ,WAHE,CAAN;AAQH;;AACD;AACH;;AACD,UAAI;AACA,cAAMF,iBAAiB,CAACY,MAAlB,CAAyB;AAC3BV,UAAAA;AAD2B,SAAzB,CAAN;AAGH,OAJD,CAIE,OAAOO,EAAP,EAAW;AACT,cAAM,IAAIV,cAAJ,CACFU,EAAE,CAACC,OAAH,IAAc,8BADZ,EAEFD,EAAE,CAACE,IAAH,IAAW,qBAFT,EAGF;AACIN,UAAAA;AADJ,SAHE,CAAN;AAOH;AACJ,KA5CiB;AA6ClBQ,IAAAA,OAAO,EAAE,OAAO;AAAEF,MAAAA;AAAF,KAAP,KAAoB;AACzB,YAAM;AAAEpB,QAAAA;AAAF,UAAWD,OAAjB;AACA,YAAMe,OAAO,GAAG,MAAMd,IAAI,CAACW,MAAL,CAAYC,UAAZ,EAAtB;;AACA,UAAIE,OAAJ,EAAa;AACT,cAAM,IAAIN,cAAJ,CAAgB,4BAAhB,EAA8C,eAA9C,EAA+D;AACjEM,UAAAA;AADiE,SAA/D,CAAN;AAGH;;AACD,YAAMd,IAAI,CAACuB,OAAL,CAAaF,MAAb,CAAoB;AACtBD,QAAAA,IADsB;AAEtBI,QAAAA,OAAO,EAAE;AAFa,OAApB,CAAN;AAIA,YAAMxB,IAAI,CAACW,MAAL,CAAYI,UAAZ,CAAuBhB,OAAO,CAAC0B,cAA/B,CAAN;AACH;AA1DiB,GAAtB;AA4DH,CAhFc,C","sourcesContent":["import { I18NContext, I18NContextObject, I18NSystem } from \"~/types\";\nimport { ContextPlugin } from \"@webiny/handler/plugins/ContextPlugin\";\nimport WebinyError from \"@webiny/error\";\nimport { SystemStorageOperationsProviderPlugin } from \"~/plugins/SystemStorageOperationsProviderPlugin\";\n\nexport default new ContextPlugin<I18NContext>(async context => {\n    if (!context.i18n) {\n        context.i18n = {} as I18NContextObject;\n    }\n    const pluginType = SystemStorageOperationsProviderPlugin.type;\n\n    const providerPlugin = context.plugins\n        .byType<SystemStorageOperationsProviderPlugin>(pluginType)\n        .find(() => true);\n\n    if (!providerPlugin) {\n        throw new WebinyError(`Missing \"${pluginType}\" plugin.`, \"PLUGIN_NOT_FOUND\", {\n            type: pluginType\n        });\n    }\n\n    const storageOperations = await providerPlugin.provide({\n        context\n    });\n\n    context.i18n.system = {\n        getVersion: async () => {\n            const system = await storageOperations.get();\n\n            return system ? system.version : null;\n        },\n        setVersion: async version => {\n            const original = await storageOperations.get();\n\n            const system: I18NSystem = {\n                ...(original || ({} as any)),\n                version\n            };\n            if (original) {\n                try {\n                    await storageOperations.update({\n                        original,\n                        system\n                    });\n                } catch (ex) {\n                    throw new WebinyError(\n                        ex.message || \"Could not update the system.\",\n                        ex.code || \"SYSTEM_UPDATE_ERROR\",\n                        {\n                            original,\n                            system\n                        }\n                    );\n                }\n                return;\n            }\n            try {\n                await storageOperations.create({\n                    system\n                });\n            } catch (ex) {\n                throw new WebinyError(\n                    ex.message || \"Could not create the system.\",\n                    ex.code || \"SYSTEM_CREATE_ERROR\",\n                    {\n                        version\n                    }\n                );\n            }\n        },\n        install: async ({ code }) => {\n            const { i18n } = context;\n            const version = await i18n.system.getVersion();\n            if (version) {\n                throw new WebinyError(\"I18N is already installed.\", \"INSTALL_ERROR\", {\n                    version\n                });\n            }\n            await i18n.locales.create({\n                code,\n                default: true\n            });\n            await i18n.system.setVersion(context.WEBINY_VERSION);\n        }\n    };\n});\n"],"file":"system.crud.js"}