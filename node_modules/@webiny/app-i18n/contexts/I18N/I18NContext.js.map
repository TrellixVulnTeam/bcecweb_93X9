{"version":3,"sources":["../../../src/contexts/I18N/I18NContext.tsx"],"names":["React","useState","useQuery","gql","GET_I18N_INFORMATION","I18NContext","createContext","defaultState","currentLocales","locales","updateLocaleStorage","localStorage","setItem","reduce","current","context","locale","I18NProvider","props","children","loader","state","setState","onCompleted","data","i18n","getI18NInformation","fetchedCurrentLocales","parsedLocales","getItem","split","filter","Boolean","forEach","item","i","length","push","loading","refetch","value","refetchLocales"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nexport const GET_I18N_INFORMATION = gql`\n    query GetI18NInformation {\n        i18n {\n            getI18NInformation {\n                currentLocales {\n                    context\n                    locale\n                }\n                locales {\n                    code\n                    default\n                }\n            }\n        }\n    }\n`;\n\nexport const I18NContext = React.createContext(null);\nconst defaultState = { currentLocales: [], locales: [] };\n\ntype CurrentLocale = {\n    context: string;\n    locale: string;\n};\n\ntype I18NContextState = {\n    locales: { code: string; default: boolean }[];\n    currentLocales: CurrentLocale[];\n};\n\nexport type I18NContextValue = {\n    refetchLocales(variables?: Record<string, any>): Promise<any>;\n    updateLocaleStorage: (currentLocales: CurrentLocale[]) => void;\n    state: I18NContextState;\n    setState: typeof useState;\n};\n\nexport type I18NProviderProps = {\n    children?: React.ReactNode;\n    loader?: React.ReactElement;\n};\n\nconst updateLocaleStorage = currentLocales => {\n    localStorage.setItem(\n        \"wby_i18n_locale\",\n        currentLocales.reduce(\n            (current, { context, locale }) => `${current}${context}:${locale};`,\n            \"\"\n        )\n    );\n};\n\nexport const I18NProvider = (props: I18NProviderProps) => {\n    const { children, loader } = props;\n    const [state, setState] = useState<I18NContextState>(defaultState);\n    const { loading, refetch } = useQuery(GET_I18N_INFORMATION, {\n        onCompleted(data) {\n            const { currentLocales: fetchedCurrentLocales, locales } =\n                data?.i18n?.getI18NInformation || {};\n\n            // wby_i18n_locale: \"default:en-US;content:en-US;\"\n            const parsedLocales = {};\n            if (localStorage.getItem(\"wby_i18n_locale\")) {\n                localStorage\n                    .getItem(\"wby_i18n_locale\")\n                    .split(\";\")\n                    .filter(Boolean)\n                    .forEach(item => {\n                        const [context, locale] = item.split(\":\");\n                        parsedLocales[context] = locale;\n                    });\n            }\n\n            const currentLocales = [];\n            for (let i = 0; i < fetchedCurrentLocales.length; i++) {\n                const item = fetchedCurrentLocales[i];\n                currentLocales.push({\n                    context: item.context,\n                    locale: parsedLocales[item.context] || item.locale\n                });\n            }\n\n            updateLocaleStorage(currentLocales);\n            setState({ locales, currentLocales });\n        }\n    });\n\n    if (loading && loader) {\n        return loader;\n    }\n\n    const value = {\n        refetchLocales: refetch,\n        updateLocaleStorage,\n        state,\n        setState\n    };\n\n    return <I18NContext.Provider value={value}>{children}</I18NContext.Provider>;\n};\n"],"file":"I18NContext.js"}