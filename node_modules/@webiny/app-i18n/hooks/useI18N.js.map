{"version":3,"sources":["../../src/hooks/useI18N.ts"],"names":["useContext","I18NContext","useI18N","context","state","setState","refetchLocales","updateLocaleStorage","self","getDefaultLocale","locales","find","item","default","getCurrentLocales","currentLocales","getCurrentLocale","localeContext","locale","getLocale","setCurrentLocale","code","newCurrentLocales","i","length","prev","next","getLocales"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT;AAEA,OAAO,SAASC,OAAT,GAAmB;AACtB,MAAMC,OAAO,GAAGH,UAAU,CAAmBC,WAAnB,CAA1B;;AAEA,aAAiEE,OAAO,IAAI,EAA5E;AAAA,MAAQC,KAAR,QAAQA,KAAR;AAAA,MAAeC,QAAf,QAAeA,QAAf;AAAA,MAAyBC,cAAzB,QAAyBA,cAAzB;AAAA,MAAyCC,mBAAzC,QAAyCA,mBAAzC;;AACA,MAAMC,IAAI,GAAG;AACTF,IAAAA,cAAc,EAAdA,cADS;AAETG,IAAAA,gBAFS,8BAEU;AACf,aAAOL,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,OAAL,KAAiB,IAArB;AAAA,OAAvB,CAAP;AACH,KAJQ;AAKTC,IAAAA,iBALS,+BAKW;AAChB,aAAOV,KAAK,CAACW,cAAb;AACH,KAPQ;AAQTC,IAAAA,gBARS,8BAQmC;AAAA;;AAAA,UAA3BC,aAA2B,uEAAX,SAAW;AACxC,sCAAOb,KAAK,CAACW,cAAN,CAAqBJ,IAArB,CAA0B,UAAAO,MAAM;AAAA,eAAIA,MAAM,CAACf,OAAP,KAAmBc,aAAvB;AAAA,OAAhC,CAAP,0DAAO,sBAAuEC,MAA9E;AACH,KAVQ;AAWTC,IAAAA,SAXS,uBAWU;AACf,aAAOX,IAAI,CAACQ,gBAAL,OAAAR,IAAI,YAAX;AACH,KAbQ;AAcTY,IAAAA,gBAdS,4BAcQC,IAdR,EAcyC;AAAA,UAA3BJ,aAA2B,uEAAX,SAAW;;AAC9C,UAAMK,iBAAiB,sBAAOd,IAAI,CAACM,iBAAL,EAAP,CAAvB;;AACA,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,iBAAiB,CAACE,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,YAAMX,IAAI,GAAGU,iBAAiB,CAACC,CAAD,CAA9B;;AACA,YAAIX,IAAI,CAACT,OAAL,KAAiBc,aAArB,EAAoC;AAChCL,UAAAA,IAAI,CAACM,MAAL,GAAcG,IAAd;AACA;AACH;AACJ;;AAEDd,MAAAA,mBAAmB,CAACe,iBAAD,CAAnB;AAEAjB,MAAAA,QAAQ,CAAC,UAAAoB,IAAI,EAAI;AACb,YAAMC,IAAI,qBAAQD,IAAR,CAAV;;AACAC,QAAAA,IAAI,CAACX,cAAL,GAAsBO,iBAAtB;AACA,eAAOI,IAAP;AACH,OAJO,CAAR;AAKH,KA/BQ;AAgCTC,IAAAA,UAhCS,wBAgCI;AACT,aAAOvB,KAAK,CAACM,OAAb;AACH,KAlCQ;AAmCTN,IAAAA,KAAK,EAALA;AAnCS,GAAb;AAsCA,SAAOI,IAAP;AACH","sourcesContent":["import { useContext } from \"react\";\nimport { I18NContext, I18NContextValue } from \"../contexts/I18N\";\n\nexport function useI18N() {\n    const context = useContext<I18NContextValue>(I18NContext);\n\n    const { state, setState, refetchLocales, updateLocaleStorage } = context || {};\n    const self = {\n        refetchLocales,\n        getDefaultLocale() {\n            return state.locales.find(item => item.default === true);\n        },\n        getCurrentLocales() {\n            return state.currentLocales;\n        },\n        getCurrentLocale(localeContext = \"default\") {\n            return state.currentLocales.find(locale => locale.context === localeContext)?.locale;\n        },\n        getLocale(...args) {\n            return self.getCurrentLocale(...args);\n        },\n        setCurrentLocale(code, localeContext = \"default\") {\n            const newCurrentLocales = [...self.getCurrentLocales()];\n            for (let i = 0; i < newCurrentLocales.length; i++) {\n                const item = newCurrentLocales[i];\n                if (item.context === localeContext) {\n                    item.locale = code;\n                    break;\n                }\n            }\n\n            updateLocaleStorage(newCurrentLocales);\n\n            setState(prev => {\n                const next = { ...prev };\n                next.currentLocales = newCurrentLocales;\n                return next;\n            });\n        },\n        getLocales() {\n            return state.locales;\n        },\n        state\n    };\n\n    return self;\n}\n"],"file":"useI18N.js"}