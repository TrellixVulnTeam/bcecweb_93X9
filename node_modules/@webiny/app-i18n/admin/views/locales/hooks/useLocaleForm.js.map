{"version":3,"sources":["../../../../../src/admin/views/locales/hooks/useLocaleForm.ts"],"names":["useCallback","useMutation","useQuery","isEmpty","pick","omit","i18n","useRouter","useSnackbar","useI18N","GET_LOCALE","CREATE_LOCALE","UPDATE_LOCALE","LIST_LOCALES","useCurrentLocale","t","ns","useLocaleForm","refetchLocales","location","history","showSnackbar","newEntry","URLSearchParams","search","get","currentLocaleCode","getQuery","variables","code","skip","onCompleted","data","error","getI18NLocale","push","message","refetchQueries","query","create","createMutation","update","updateMutation","loading","some","item","onSubmit","isUpdate","createdOn","operation","args","response","locale","window","reload","showEmptyView","createLocale","cancelEditing"],"mappings":"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","sourcesContent":["import { useCallback } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport isEmpty from \"lodash/isEmpty\";\nimport pick from \"lodash/pick\";\nimport omit from \"lodash/omit\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useI18N } from \"~/hooks/useI18N\";\nimport { GET_LOCALE, CREATE_LOCALE, UPDATE_LOCALE, LIST_LOCALES } from \"./graphql\";\nimport { useCurrentLocale } from \"./useCurrentLocale\";\n\nconst t = i18n.ns(\"app-i18n/admin/locales/form\");\n\nexport const useLocaleForm = () => {\n    const { refetchLocales } = useI18N();\n    const { location, history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    const newEntry = new URLSearchParams(location.search).get(\"new\") === \"true\";\n    const currentLocaleCode = useCurrentLocale();\n    const getQuery = useQuery(GET_LOCALE, {\n        variables: { code: currentLocaleCode },\n        skip: !currentLocaleCode,\n        onCompleted: data => {\n            const error = data?.i18n?.getI18NLocale?.error;\n            if (error) {\n                history.push(\"/i18n/locales\");\n                showSnackbar(error.message);\n            }\n        }\n    });\n\n    const [create, createMutation] = useMutation(CREATE_LOCALE, {\n        refetchQueries: [{ query: LIST_LOCALES }]\n    });\n\n    const [update, updateMutation] = useMutation(UPDATE_LOCALE, {\n        refetchQueries: [{ query: LIST_LOCALES }]\n    });\n\n    const loading = [getQuery, createMutation, updateMutation].some(item => item.loading);\n\n    const onSubmit = useCallback(\n        async data => {\n            const isUpdate = data.createdOn;\n            const [operation, args] = isUpdate\n                ? [update, { variables: { code: data.code, data: pick(data, \"default\") } }]\n                : [create, { variables: { data: omit(data, [\"createdOn\"]) } }];\n\n            const response = await operation(args);\n\n            const error = response?.data?.i18n?.locale?.error;\n            if (error) {\n                return showSnackbar(error.message);\n            }\n\n            !isUpdate && history.push(`/i18n/locales?code=${data.code}`);\n            showSnackbar(t`Locale saved successfully.`);\n            refetchLocales();\n            // Reload page\n            window.location.reload();\n        },\n        [currentLocaleCode]\n    );\n\n    const locale = getQuery?.data?.i18n?.getI18NLocale.data || {};\n\n    const showEmptyView = !newEntry && !loading && isEmpty(locale);\n    const createLocale = useCallback(() => history.push(\"/i18n/locales?new=true\"), []);\n    const cancelEditing = useCallback(() => history.push(\"/i18n/locales\"), []);\n\n    return {\n        loading,\n        showEmptyView,\n        createLocale,\n        cancelEditing,\n        locale,\n        onSubmit\n    };\n};\n"],"file":"useLocaleForm.js"}