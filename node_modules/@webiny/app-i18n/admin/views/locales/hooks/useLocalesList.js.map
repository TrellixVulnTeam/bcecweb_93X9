{"version":3,"sources":["../../../../../src/admin/views/locales/hooks/useLocalesList.ts"],"names":["useCallback","useState","orderBy","i18n","useRouter","useQuery","useMutation","useSnackbar","useConfirmationDialog","useI18N","LIST_LOCALES","DELETE_LOCALE","useCurrentLocale","t","ns","serializeSorters","data","Object","entries","key","value","deserializeSorters","split","useLocalesList","config","defaultSorter","sorters","length","filter","setFilter","sort","setSort","refetchLocales","getDefaultLocale","getCurrentLocale","setCurrentLocale","history","showSnackbar","listQuery","currentLocaleCode","refetchQueries","query","deleteIt","deleteMutation","dataTestId","showConfirmation","filterLocales","code","toLowerCase","includes","sortLocaleList","locales","loading","listI18NLocales","deleteLocale","item","variables","response","error","deleteI18NLocale","message","defaultLocale","push","window","location","reload","some","filteredData","createLocale","editLocale"],"mappings":"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","sourcesContent":["import { useCallback, useState } from \"react\";\nimport orderBy from \"lodash/orderBy\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport { useI18N } from \"~/hooks/useI18N\";\nimport { LIST_LOCALES, DELETE_LOCALE } from \"./graphql\";\nimport { useCurrentLocale } from \"./useCurrentLocale\";\n\nconst t = i18n.ns(\"app-i18n/admin/locales/data-list\");\n\nconst serializeSorters = data => {\n    if (!data) {\n        return data;\n    }\n    const [[key, value]] = Object.entries(data);\n    return `${key}:${value}`;\n};\n\nconst deserializeSorters = (data: string): Record<string, \"asc\" | \"desc\" | boolean> => {\n    if (typeof data !== \"string\") {\n        return data;\n    }\n\n    const [key, value] = data.split(\":\") as [string, \"asc\" | \"desc\" | boolean];\n    return {\n        [key]: value\n    };\n};\n\ninterface Config {\n    sorters: { label: string; sorters: Record<string, string> }[];\n}\n\ninterface UseLocalesListHook {\n    (config: Config): {\n        loading: boolean;\n        locales: Array<{\n            code: string;\n            default: boolean;\n            createdOn: string;\n            [key: string]: any;\n        }>;\n        currentLocaleCode: string;\n        createLocale: () => void;\n        filter: string;\n        setFilter: (filter: string) => void;\n        sort: string;\n        setSort: (sort: string) => void;\n        serializeSorters: (data: Record<string, string>) => string;\n        editLocale: (code: string) => void;\n        deleteLocale: (code: string) => void;\n    };\n}\n\nexport const useLocalesList: UseLocalesListHook = (config: Config) => {\n    const defaultSorter = config.sorters.length ? config.sorters[0].sorters : null;\n    const [filter, setFilter] = useState<string>(\"\");\n    const [sort, setSort] = useState<string>(serializeSorters(defaultSorter));\n    const { refetchLocales, getDefaultLocale, getCurrentLocale, setCurrentLocale } = useI18N();\n    const { history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    const listQuery = useQuery(LIST_LOCALES);\n    const currentLocaleCode = useCurrentLocale();\n    const [deleteIt, deleteMutation] = useMutation(DELETE_LOCALE, {\n        refetchQueries: [{ query: LIST_LOCALES }]\n    });\n\n    const { showConfirmation } = useConfirmationDialog({\n        dataTestId: \"default-data-list.delete-dialog\"\n    });\n\n    const filterLocales = useCallback(\n        ({ code }) => {\n            return code.toLowerCase().includes(filter);\n        },\n        [filter]\n    );\n\n    const sortLocaleList = useCallback(\n        locales => {\n            if (!sort) {\n                return locales;\n            }\n            const [[key, value]] = Object.entries(deserializeSorters(sort));\n            return orderBy(locales, [key], [value]);\n        },\n        [sort]\n    );\n\n    const data = listQuery.loading ? [] : listQuery.data.i18n.listI18NLocales.data;\n\n    const deleteLocale = useCallback(\n        item => {\n            showConfirmation(async () => {\n                const response = await deleteIt({\n                    variables: item\n                });\n\n                const { error } = response.data.i18n.deleteI18NLocale;\n                if (error) {\n                    return showSnackbar(error.message);\n                }\n\n                showSnackbar(t`Locale \"{code}\" deleted.`({ code: item.code }));\n\n                if (getCurrentLocale(\"content\") === item.code) {\n                    // Update current \"content\" locale\n                    const defaultLocale = getDefaultLocale();\n                    setCurrentLocale(defaultLocale.code, \"content\");\n                }\n\n                if (currentLocaleCode === item.code) {\n                    history.push(`/i18n/locales`);\n                }\n\n                refetchLocales();\n                // Reload page\n                window.location.reload();\n            });\n        },\n        [currentLocaleCode]\n    );\n\n    const loading = [listQuery, deleteMutation].some(item => item.loading);\n    const filteredData = filter === \"\" ? data : data.filter(filterLocales);\n    const locales = sortLocaleList(filteredData);\n\n    const createLocale = useCallback(() => history.push(\"/i18n/locales?new=true\"), []);\n\n    const editLocale = useCallback(code => {\n        history.push(`/i18n/locales?code=${code}`);\n    }, []);\n\n    return {\n        locales,\n        loading,\n        currentLocaleCode,\n        createLocale,\n        filter,\n        setFilter,\n        sort,\n        setSort,\n        serializeSorters,\n        editLocale,\n        deleteLocale\n    };\n};\n"],"file":"useLocalesList.js"}