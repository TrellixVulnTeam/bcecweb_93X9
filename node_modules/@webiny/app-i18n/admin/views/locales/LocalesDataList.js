import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7;

import React, { useMemo } from "react";
import { i18n } from "@webiny/app/i18n";
import { DataList, ScrollList, ListItem, ListItemText, ListItemMeta, ListActions, ListItemTextSecondary, DataListModalOverlay, DataListModalOverlayAction } from "@webiny/ui/List";
import { DeleteIcon } from "@webiny/ui/List/DataList/icons";
import { ButtonIcon, ButtonSecondary } from "@webiny/ui/Button";
import { Cell, Grid } from "@webiny/ui/Grid";
import { Select } from "@webiny/ui/Select";
import SearchUI from "@webiny/app-admin/components/SearchUI";
import { ReactComponent as AddIcon } from "@svgr/webpack!@webiny/app-admin/assets/icons/add-18px.svg";
import { ReactComponent as FilterIcon } from "@svgr/webpack!@webiny/app-admin/assets/icons/filter-24px.svg";
import { useLocalesList } from "./hooks/useLocalesList";
var t = i18n.ns("app-i18n/admin/locales/data-list");
var SORTERS = [{
  label: t(_templateObject || (_templateObject = _taggedTemplateLiteral(["Code A-Z"]))),
  sorters: {
    code: "asc"
  }
}, {
  label: t(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Code Z-A"]))),
  sorters: {
    code: "desc"
  }
}];

var LocalesDataList = function LocalesDataList() {
  var _useLocalesList = useLocalesList({
    sorters: SORTERS
  }),
      locales = _useLocalesList.locales,
      loading = _useLocalesList.loading,
      currentLocaleCode = _useLocalesList.currentLocaleCode,
      createLocale = _useLocalesList.createLocale,
      filter = _useLocalesList.filter,
      setFilter = _useLocalesList.setFilter,
      sort = _useLocalesList.sort,
      setSort = _useLocalesList.setSort,
      serializeSorters = _useLocalesList.serializeSorters,
      editLocale = _useLocalesList.editLocale,
      deleteLocale = _useLocalesList.deleteLocale;

  var localesDataListModalOverlay = useMemo(function () {
    return /*#__PURE__*/React.createElement(DataListModalOverlay, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Select, {
      value: sort,
      onChange: setSort,
      label: t(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["Sort by"])))
    }, SORTERS.map(function (_ref) {
      var label = _ref.label,
          sorters = _ref.sorters;
      return /*#__PURE__*/React.createElement("option", {
        key: label,
        value: serializeSorters(sorters)
      }, label);
    })))));
  }, [sort]);
  return /*#__PURE__*/React.createElement(DataList, {
    loading: loading,
    actions: /*#__PURE__*/React.createElement(ButtonSecondary, {
      "data-testid": "new-record-button",
      onClick: createLocale
    }, /*#__PURE__*/React.createElement(ButtonIcon, {
      icon: /*#__PURE__*/React.createElement(AddIcon, null)
    }), " ", t(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["New Locale"])))),
    data: locales,
    title: t(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["Locales"]))),
    search: /*#__PURE__*/React.createElement(SearchUI, {
      value: filter,
      onChange: setFilter,
      inputPlaceholder: t(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["Search locales"])))
    }),
    modalOverlay: localesDataListModalOverlay,
    modalOverlayAction: /*#__PURE__*/React.createElement(DataListModalOverlayAction, {
      icon: /*#__PURE__*/React.createElement(FilterIcon, null)
    })
  }, function (_ref2) {
    var data = _ref2.data;
    return /*#__PURE__*/React.createElement(ScrollList, {
      "data-testid": "default-data-list"
    }, data.map(function (item) {
      return /*#__PURE__*/React.createElement(ListItem, {
        key: item.code,
        selected: item.code === currentLocaleCode
      }, /*#__PURE__*/React.createElement(ListItemText, {
        onClick: function onClick() {
          return editLocale(item.code);
        }
      }, item.code, /*#__PURE__*/React.createElement(ListItemTextSecondary, null, item.default && t(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["Default locale"]))))), /*#__PURE__*/React.createElement(ListItemMeta, null, /*#__PURE__*/React.createElement(ListActions, null, /*#__PURE__*/React.createElement(DeleteIcon, {
        onClick: function onClick() {
          return deleteLocale(item);
        },
        "data-testid": "default-data-list.delete"
      }))));
    }));
  });
};

export default LocalesDataList;
//# sourceMappingURL=LocalesDataList.js.map