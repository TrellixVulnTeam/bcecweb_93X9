{"version":3,"sources":["../../../../src/admin/views/locales/LocalesDataList.tsx"],"names":["React","useMemo","i18n","DataList","ScrollList","ListItem","ListItemText","ListItemMeta","ListActions","ListItemTextSecondary","DataListModalOverlay","DataListModalOverlayAction","DeleteIcon","ButtonIcon","ButtonSecondary","Cell","Grid","Select","SearchUI","useLocalesList","t","ns","SORTERS","label","sorters","code","LocalesDataList","locales","loading","currentLocaleCode","createLocale","filter","setFilter","sort","setSort","serializeSorters","editLocale","deleteLocale","localesDataListModalOverlay","map","data","item","default"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport {\n    DataList,\n    ScrollList,\n    ListItem,\n    ListItemText,\n    ListItemMeta,\n    ListActions,\n    ListItemTextSecondary,\n    DataListModalOverlay,\n    DataListModalOverlayAction\n} from \"@webiny/ui/List\";\n\nimport { DeleteIcon } from \"@webiny/ui/List/DataList/icons\";\nimport { ButtonIcon, ButtonSecondary } from \"@webiny/ui/Button\";\nimport { Cell, Grid } from \"@webiny/ui/Grid\";\nimport { Select } from \"@webiny/ui/Select\";\nimport SearchUI from \"@webiny/app-admin/components/SearchUI\";\nimport { ReactComponent as AddIcon } from \"@webiny/app-admin/assets/icons/add-18px.svg\";\nimport { ReactComponent as FilterIcon } from \"@webiny/app-admin/assets/icons/filter-24px.svg\";\nimport { useLocalesList } from \"./hooks/useLocalesList\";\n\nconst t = i18n.ns(\"app-i18n/admin/locales/data-list\");\n\nconst SORTERS = [\n    {\n        label: t`Code A-Z` as string,\n        sorters: { code: \"asc\" }\n    },\n    {\n        label: t`Code Z-A` as string,\n        sorters: { code: \"desc\" }\n    }\n];\n\nconst LocalesDataList = () => {\n    const {\n        locales,\n        loading,\n        currentLocaleCode,\n        createLocale,\n        filter,\n        setFilter,\n        sort,\n        setSort,\n        serializeSorters,\n        editLocale,\n        deleteLocale\n    } = useLocalesList({ sorters: SORTERS });\n\n    const localesDataListModalOverlay = useMemo(\n        () => (\n            <DataListModalOverlay>\n                <Grid>\n                    <Cell span={12}>\n                        <Select value={sort} onChange={setSort} label={t`Sort by`}>\n                            {SORTERS.map(({ label, sorters }) => {\n                                return (\n                                    <option key={label} value={serializeSorters(sorters)}>\n                                        {label}\n                                    </option>\n                                );\n                            })}\n                        </Select>\n                    </Cell>\n                </Grid>\n            </DataListModalOverlay>\n        ),\n        [sort]\n    );\n\n    return (\n        <DataList\n            loading={loading}\n            actions={\n                <ButtonSecondary data-testid=\"new-record-button\" onClick={createLocale}>\n                    <ButtonIcon icon={<AddIcon />} /> {t`New Locale`}\n                </ButtonSecondary>\n            }\n            data={locales}\n            title={t`Locales`}\n            search={\n                <SearchUI\n                    value={filter}\n                    onChange={setFilter}\n                    inputPlaceholder={t`Search locales`}\n                />\n            }\n            modalOverlay={localesDataListModalOverlay}\n            modalOverlayAction={<DataListModalOverlayAction icon={<FilterIcon />} />}\n        >\n            {({ data }) => (\n                <ScrollList data-testid=\"default-data-list\">\n                    {data.map(item => (\n                        <ListItem key={item.code} selected={item.code === currentLocaleCode}>\n                            <ListItemText onClick={() => editLocale(item.code)}>\n                                {item.code}\n                                <ListItemTextSecondary>\n                                    {item.default && t`Default locale`}\n                                </ListItemTextSecondary>\n                            </ListItemText>\n\n                            <ListItemMeta>\n                                <ListActions>\n                                    <DeleteIcon\n                                        onClick={() => deleteLocale(item)}\n                                        data-testid={\"default-data-list.delete\"}\n                                    />\n                                </ListActions>\n                            </ListItemMeta>\n                        </ListItem>\n                    ))}\n                </ScrollList>\n            )}\n        </DataList>\n    );\n};\n\nexport default LocalesDataList;\n"],"file":"LocalesDataList.js"}