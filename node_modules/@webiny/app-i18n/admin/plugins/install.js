import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;

import _regeneratorRuntime from "@babel/runtime/regenerator";
import React, { useState, useCallback } from "react";
import gql from "graphql-tag";
import { useApolloClient } from "@apollo/react-hooks";
import { i18n } from "@webiny/app/i18n";
import { Form } from "@webiny/form";
import { Alert } from "@webiny/ui/Alert";
import { Grid, Cell } from "@webiny/ui/Grid";
import { ButtonPrimary } from "@webiny/ui/Button";
import { CircularProgress } from "@webiny/ui/Progress";
import { validation } from "@webiny/validation";
import { SimpleForm, SimpleFormHeader, SimpleFormFooter, SimpleFormContent } from "@webiny/app-admin/components/SimpleForm";
import LocaleCodesAutoComplete from "../components/LocaleCodesAutoComplete";
var t = i18n.ns("app-i18n/admin/installation");
var IS_INSTALLED = gql(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    query IsI18NInstalled {\n        i18n {\n            version\n        }\n    }\n"])));
var INSTALL = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    mutation InstallI18N($data: I18NInstallInput!) {\n        i18n {\n            install(data: $data) {\n                data\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n"])));

var I18NInstaller = function I18NInstaller(_ref) {
  var onInstalled = _ref.onInstalled;
  var client = useApolloClient();

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      loading = _useState2[0],
      setLoading = _useState2[1];

  var _useState3 = useState(null),
      _useState4 = _slicedToArray(_useState3, 2),
      error = _useState4[0],
      setError = _useState4[1];

  var onSubmit = useCallback( /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(form) {
      var _yield$client$mutate, res, error;

      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              setLoading(true);
              setError(null);
              _context.next = 4;
              return client.mutate({
                mutation: INSTALL,
                variables: {
                  data: form
                }
              });

            case 4:
              _yield$client$mutate = _context.sent;
              res = _yield$client$mutate.data;
              setLoading(false);
              error = res.i18n.install.error;

              if (!error) {
                _context.next = 11;
                break;
              }

              setError(error.message);
              return _context.abrupt("return");

            case 11:
              onInstalled();

            case 12:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref2.apply(this, arguments);
    };
  }(), []);
  var label = error ? /*#__PURE__*/React.createElement(Alert, {
    title: t(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["Something went wrong"]))),
    type: "danger"
  }, error) : t(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["Installing I18N..."])));
  return /*#__PURE__*/React.createElement(Form, {
    onSubmit: onSubmit,
    data: {
      code: "en-US"
    }
  }, function (_ref3) {
    var Bind = _ref3.Bind,
        submit = _ref3.submit;
    return /*#__PURE__*/React.createElement(SimpleForm, null, loading && /*#__PURE__*/React.createElement(CircularProgress, {
      label: label
    }), /*#__PURE__*/React.createElement(SimpleFormHeader, {
      title: "Install I18N"
    }), /*#__PURE__*/React.createElement(SimpleFormContent, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "code",
      validators: validation.create("required")
    }, /*#__PURE__*/React.createElement(LocaleCodesAutoComplete, {
      label: t(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["Select default locale"])))
    }))))), /*#__PURE__*/React.createElement(SimpleFormFooter, null, /*#__PURE__*/React.createElement(ButtonPrimary, {
      "data-testid": "install-i18n-button",
      onClick: submit
    }, "Install I18N")));
  });
};

export default {
  name: "admin-installation-i18n",
  type: "admin-installation",
  title: "I18N",
  dependencies: ["admin-installation-security"],
  secure: true,
  getInstalledVersion: function getInstalledVersion(_ref4) {
    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
      var client, _yield$client$query, data;

      return _regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              client = _ref4.client;
              _context2.next = 3;
              return client.query({
                query: IS_INSTALLED
              });

            case 3:
              _yield$client$query = _context2.sent;
              data = _yield$client$query.data;
              return _context2.abrupt("return", data.i18n.version);

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }))();
  },
  render: function render(_ref5) {
    var onInstalled = _ref5.onInstalled;
    return /*#__PURE__*/React.createElement(I18NInstaller, {
      onInstalled: onInstalled
    });
  }
};
//# sourceMappingURL=install.js.map