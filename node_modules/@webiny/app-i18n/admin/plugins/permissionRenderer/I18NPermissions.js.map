{"version":3,"sources":["../../../../src/admin/plugins/permissionRenderer/I18NPermissions.tsx"],"names":["React","Fragment","useCallback","useMemo","Grid","Cell","Select","i18n","PermissionInfo","gridNoPaddingClass","Form","t","ns","I18N","I18N_FULL_ACCESS","I18N_LOCALES","FULL_ACCESS","NO_ACCESS","I18NPermissions","value","onChange","onFormChange","data","newValue","Array","isArray","filter","item","name","startsWith","permission","level","locales","push","formData","hasFullAccess","find","Bind"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,EAAyBC,kBAAzB,QAAmD,0CAAnD;AACA,SAASC,IAAT,QAAqB,cAArB;AAEA,IAAMC,CAAC,GAAGJ,IAAI,CAACK,EAAL,CAAQ,2CAAR,CAAV;AAEA,IAAMC,IAAI,GAAG,MAAb;AACA,IAAMC,gBAAgB,aAAMD,IAAN,OAAtB;AACA,IAAME,YAAY,aAAMF,IAAN,aAAlB;AACA,IAAMG,WAAW,GAAG,MAApB;AACA,IAAMC,SAAS,GAAG,IAAlB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACpD,MAAMC,YAAY,GAAGnB,WAAW,CAC5B,UAAAoB,IAAI,EAAI;AACJ,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAIC,KAAK,CAACC,OAAN,CAAcN,KAAd,CAAJ,EAA0B;AACtB;AACAI,MAAAA,QAAQ,GAAGJ,KAAK,CAACO,MAAN,CAAa,UAAAC,IAAI;AAAA,eAAI,CAACA,IAAI,CAACC,IAAL,CAAUC,UAAV,CAAqBhB,IAArB,CAAL;AAAA,OAAjB,CAAX;AACH;;AAED,QAAIiB,UAAJ;;AACA,QAAIR,IAAI,CAACS,KAAL,KAAef,WAAnB,EAAgC;AAC5Bc,MAAAA,UAAU,GAAG;AAAEF,QAAAA,IAAI,EAAEd;AAAR,OAAb;AACH,KAFD,MAEO,IAAIQ,IAAI,CAACU,OAAT,EAAkB;AACrBF,MAAAA,UAAU,GAAG;AAAEF,QAAAA,IAAI,EAAEb;AAAR,OAAb;AACH;;AAED,QAAIe,UAAJ,EAAgB;AACZP,MAAAA,QAAQ,CAACU,IAAT,CAAcH,UAAd;AACH;;AAEDV,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACH,GApB2B,EAqB5B,CAACJ,KAAD,CArB4B,CAAhC;AAwBA,MAAMe,QAAQ,GAAG/B,OAAO,CAAC,YAAM;AAC3B,QAAI,CAACqB,KAAK,CAACC,OAAN,CAAcN,KAAd,CAAL,EAA2B;AACvB,aAAO;AAAEY,QAAAA,KAAK,EAAEd;AAAT,OAAP;AACH;;AAED,QAAMkB,aAAa,GAAGhB,KAAK,CAACiB,IAAN,CAClB,UAAAT,IAAI;AAAA,aAAIA,IAAI,CAACC,IAAL,KAAcd,gBAAd,IAAkCa,IAAI,CAACC,IAAL,KAAc,GAApD;AAAA,KADc,CAAtB;;AAGA,QAAIO,aAAJ,EAAmB;AACf,aAAO;AAAEJ,QAAAA,KAAK,EAAEf;AAAT,OAAP;AACH;;AAED,QAAMc,UAAU,GAAGX,KAAK,CAACiB,IAAN,CAAW,UAAAT,IAAI;AAAA,aAAIA,IAAI,CAACC,IAAL,CAAUC,UAAV,CAAqBhB,IAArB,CAAJ;AAAA,KAAf,CAAnB;;AACA,QAAI,CAACiB,UAAL,EAAiB;AACb,aAAO;AAAEC,QAAAA,KAAK,EAAEd;AAAT,OAAP;AACH;AACJ,GAhBuB,EAgBrB,EAhBqB,CAAxB;AAkBA,sBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEiB,QAAZ;AAAsB,IAAA,QAAQ,EAAEb;AAAhC,KACK;AAAA,QAAGgB,IAAH,SAAGA,IAAH;AAAA,wBACG,oBAAC,QAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE5B;AAAjB,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAEE,CAAF;AAArB,MADJ,CADJ,eAII,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,CAAF;AAAb,oBACI;AAAQ,MAAA,KAAK,EAAEM;AAAf,OAA2BN,CAA3B,iFADJ,eAEI;AAAQ,MAAA,KAAK,EAAEK;AAAf,OAA6BL,CAA7B,mFAFJ,CADJ,CADJ,CAJJ,CADJ,CADH;AAAA,GADL,CADJ;AAqBH,CAhEM","sourcesContent":["import React, { Fragment, useCallback, useMemo } from \"react\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { PermissionInfo, gridNoPaddingClass } from \"@webiny/app-admin/components/Permissions\";\nimport { Form } from \"@webiny/form\";\n\nconst t = i18n.ns(\"app-i18n/admin/plugins/permissionRenderer\");\n\nconst I18N = \"i18n\";\nconst I18N_FULL_ACCESS = `${I18N}.*`;\nconst I18N_LOCALES = `${I18N}.locales`;\nconst FULL_ACCESS = \"full\";\nconst NO_ACCESS = \"no\";\n\nexport const I18NPermissions = ({ value, onChange }) => {\n    const onFormChange = useCallback(\n        data => {\n            let newValue = [];\n            if (Array.isArray(value)) {\n                // Let's just filter out the `i18n*` permission objects, it's easier to build new ones from scratch.\n                newValue = value.filter(item => !item.name.startsWith(I18N));\n            }\n\n            let permission;\n            if (data.level === FULL_ACCESS) {\n                permission = { name: I18N_FULL_ACCESS };\n            } else if (data.locales) {\n                permission = { name: I18N_LOCALES };\n            }\n\n            if (permission) {\n                newValue.push(permission);\n            }\n\n            onChange(newValue);\n        },\n        [value]\n    );\n\n    const formData = useMemo(() => {\n        if (!Array.isArray(value)) {\n            return { level: NO_ACCESS };\n        }\n\n        const hasFullAccess = value.find(\n            item => item.name === I18N_FULL_ACCESS || item.name === \"*\"\n        );\n        if (hasFullAccess) {\n            return { level: FULL_ACCESS };\n        }\n\n        const permission = value.find(item => item.name.startsWith(I18N));\n        if (!permission) {\n            return { level: NO_ACCESS };\n        }\n    }, []);\n\n    return (\n        <Form data={formData} onChange={onFormChange}>\n            {({ Bind }) => (\n                <Fragment>\n                    <Grid className={gridNoPaddingClass}>\n                        <Cell span={6}>\n                            <PermissionInfo title={t`Access Level`} />\n                        </Cell>\n                        <Cell span={6}>\n                            <Bind name={\"level\"}>\n                                <Select label={t`Access Level`}>\n                                    <option value={NO_ACCESS}>{t`No access`}</option>\n                                    <option value={FULL_ACCESS}>{t`Full access`}</option>\n                                </Select>\n                            </Bind>\n                        </Cell>\n                    </Grid>\n                </Fragment>\n            )}\n        </Form>\n    );\n};\n"],"file":"I18NPermissions.js"}