"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UpdateSettingsModel = exports.UpdateDataModel = exports.VisibilityModel = exports.CreateDataModel = void 0;

var _fields = require("@commodo/fields");

var _commodoFieldsObject = require("commodo-fields-object");

var _validation = require("@webiny/validation");

var _error = _interopRequireDefault(require("@webiny/error"));

var _normalizePath = _interopRequireDefault(require("./normalizePath"));

const CreateDataModel = (0, _fields.withFields)({
  category: (0, _fields.string)({
    validation: _validation.validation.create("required,maxLength:100")
  })
})();
exports.CreateDataModel = CreateDataModel;
const VisibilityModel = (0, _fields.withFields)({
  get: (0, _fields.fields)({
    instanceOf: (0, _fields.withFields)({
      latest: (0, _fields.boolean)(),
      published: (0, _fields.boolean)()
    })()
  }),
  list: (0, _fields.fields)({
    instanceOf: (0, _fields.withFields)({
      latest: (0, _fields.boolean)(),
      published: (0, _fields.boolean)()
    })()
  })
})();
exports.VisibilityModel = VisibilityModel;
const UpdateDataModel = (0, _fields.withFields)({
  title: (0, _fields.string)({
    validation: _validation.validation.create("maxLength:150")
  }),
  path: (0, _fields.onSet)(_normalizePath.default)((0, _fields.string)({
    validation: _validation.validation.create("minLength:2,maxLength:100")
  })),
  visibility: (0, _fields.fields)({
    instanceOf: VisibilityModel
  }),
  category: (0, _fields.string)({
    validation: _validation.validation.create("maxLength:100")
  }),
  content: (0, _commodoFieldsObject.object)()
})();
exports.UpdateDataModel = UpdateDataModel;
const UpdateSettingsModel = (0, _fields.withFields)({
  general: (0, _fields.fields)({
    value: {},
    instanceOf: (0, _fields.withFields)({
      tags: (0, _fields.string)({
        list: true,
        validation: value => {
          if (!Array.isArray(value)) {
            return;
          }

          if (value.length > 30) {
            throw new _error.default("Cannot store more than 30 tags.");
          }

          for (let i = 0; i < value.length; i++) {
            _validation.validation.validateSync(value[i], "maxLength:50");
          }
        }
      }),
      snippet: (0, _fields.string)({
        validation: _validation.validation.create("maxLength:500")
      }),
      layout: (0, _fields.string)({
        validation: _validation.validation.create("maxLength:50")
      }),
      image: (0, _commodoFieldsObject.object)()
    })()
  }),
  seo: (0, _fields.fields)({
    value: {},
    instanceOf: (0, _fields.withFields)({
      title: (0, _fields.string)({
        validation: _validation.validation.create("maxLength:500")
      }),
      description: (0, _fields.string)({
        validation: _validation.validation.create("maxLength:500")
      }),
      meta: (0, _fields.fields)({
        list: true,
        value: [],
        validation: value => {
          if (!Array.isArray(value)) {
            return;
          }

          if (value.length > 30) {
            throw new _error.default("Cannot store more than 30 SEO tags.");
          }

          for (let i = 0; i < value.length; i++) {
            _validation.validation.validateSync(value[i], "maxLength:50");
          }
        },
        instanceOf: (0, _fields.withFields)({
          name: (0, _fields.string)({
            validation: _validation.validation.create("maxLength:100")
          }),
          content: (0, _fields.string)({
            validation: _validation.validation.create("maxLength:200")
          })
        })()
      })
    })()
  }),
  social: (0, _fields.fields)({
    value: {},
    instanceOf: (0, _fields.withFields)({
      meta: (0, _fields.fields)({
        value: [],
        list: true,
        validation: value => {
          if (!Array.isArray(value)) {
            return;
          }

          if (value.length > 30) {
            throw new _error.default("Cannot store more than 30 social tags.");
          }

          for (let i = 0; i < value.length; i++) {
            _validation.validation.validateSync(value[i], "maxLength:50");
          }
        },
        instanceOf: (0, _fields.withFields)({
          property: (0, _fields.string)({
            validation: _validation.validation.create("maxLength:100")
          }),
          content: (0, _fields.string)({
            validation: _validation.validation.create("maxLength:200")
          })
        })()
      }),
      title: (0, _fields.string)({
        validation: _validation.validation.create("maxLength:500")
      }),
      description: (0, _fields.string)({
        validation: _validation.validation.create("maxLength:500")
      }),
      image: (0, _commodoFieldsObject.object)()
    })()
  })
})();
exports.UpdateSettingsModel = UpdateSettingsModel;
//# sourceMappingURL=models.js.map