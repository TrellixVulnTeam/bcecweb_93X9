{"version":3,"sources":["../../../../src/graphql/crud/pages/esPageData.ts"],"names":["getESPageData","context","page","__type","tenant","tenancy","getCurrentTenant","id","webinyVersion","WEBINY_VERSION","pid","editor","locale","createdOn","savedOn","createdBy","ownedBy","category","version","title","titleLC","toLowerCase","path","status","locked","publishedOn","tags","settings","general","snippet","images","image","getESLatestPageData","data","latest","modifyData","getESPublishedPageData","published","pagePlugins","plugins","byType","IndexPageDataPlugin","type","plugin","apply"],"mappings":"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","sourcesContent":["import { Page, PbContext } from \"~/types\";\nimport { IndexPageDataPlugin } from \"~/plugins/IndexPageDataPlugin\";\n\nexport const getESPageData = (context: PbContext, page) => {\n    return {\n        __type: \"page\",\n        tenant: context.tenancy.getCurrentTenant().id,\n        webinyVersion: context.WEBINY_VERSION,\n        id: page.id,\n        pid: page.pid,\n        editor: page.editor,\n        locale: page.locale,\n        createdOn: page.createdOn,\n        savedOn: page.savedOn,\n        createdBy: page.createdBy,\n        ownedBy: page.ownedBy,\n        category: page.category,\n        version: page.version,\n        title: page.title,\n        titleLC: page.title.toLowerCase(),\n        path: page.path,\n        status: page.status,\n        locked: page.locked,\n        publishedOn: page.publishedOn,\n\n        // Pull tags & snippet from settings.general.\n        tags: page?.settings?.general?.tags || [],\n        snippet: page?.settings?.general?.snippet || null,\n\n        // Save some images that could maybe be used on listing pages.\n        images: {\n            general: page?.settings?.general?.image\n        }\n    };\n};\n\nexport const getESLatestPageData = (context: PbContext, page: Page) => {\n    const data = { ...getESPageData(context, page), latest: true };\n    return modifyData(data, page, context);\n};\n\nexport const getESPublishedPageData = (context: PbContext, page: Page) => {\n    const data = { ...getESPageData(context, page), published: true };\n    return modifyData(data, page, context);\n};\n\nconst modifyData = (data: Record<string, any>, page: Page, context: PbContext) => {\n    const pagePlugins = context.plugins.byType<IndexPageDataPlugin>(IndexPageDataPlugin.type);\n\n    for (const plugin of pagePlugins) {\n        plugin.apply({ context, page, data });\n    }\n\n    return data;\n};\n"],"file":"esPageData.js"}