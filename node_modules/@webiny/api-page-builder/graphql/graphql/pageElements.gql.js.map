{"version":3,"sources":["../../../src/graphql/graphql/pageElements.gql.ts"],"names":["plugin","type","schema","typeDefs","resolvers","PbQuery","getPageElement","_","args","context","pageBuilder","pageElements","get","id","listPageElements","list","PbMutation","createPageElement","create","data","updatePageElement","update","deletePageElement","delete"],"mappings":";;;;;;;;;AACA;;AAGA,MAAMA,MAAsC,GAAG;AAC3CC,EAAAA,IAAI,EAAE,gBADqC;AAE3CC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ;AAAE;AAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SA3CY;AA4CJC,IAAAA,SAAS,EAAE;AACPC,MAAAA,OAAO,EAAE;AACLC,QAAAA,cAAc,EAAE,OAAOC,CAAP,EAAUC,IAAV,EAAgCC,OAAhC,KAA4C;AACxD,iBAAO,sBAAQ,MAAM;AACjB,mBAAOA,OAAO,CAACC,WAAR,CAAoBC,YAApB,CAAiCC,GAAjC,CAAqCJ,IAAI,CAACK,EAA1C,CAAP;AACH,WAFM,CAAP;AAGH,SALI;AAMLC,QAAAA,gBAAgB,EAAE,OAAOP,CAAP,EAAUC,IAAV,EAAgBC,OAAhB,KAA4B;AAC1C,iBAAO,sBAAQ,MAAM;AACjB,mBAAOA,OAAO,CAACC,WAAR,CAAoBC,YAApB,CAAiCI,IAAjC,EAAP;AACH,WAFM,CAAP;AAGH;AAVI,OADF;AAaPC,MAAAA,UAAU,EAAE;AACRC,QAAAA,iBAAiB,EAAE,OAAOV,CAAP,EAAUC,IAAV,EAA+CC,OAA/C,KAA2D;AAC1E,iBAAO,sBAAQ,MAAM;AACjB,mBAAOA,OAAO,CAACC,WAAR,CAAoBC,YAApB,CAAiCO,MAAjC,CAAwCV,IAAI,CAACW,IAA7C,CAAP;AACH,WAFM,CAAP;AAGH,SALO;AAMRC,QAAAA,iBAAiB,EAAE,OACfb,CADe,EAEfC,IAFe,EAGfC,OAHe,KAId;AACD,iBAAO,sBAAQ,MAAM;AACjB,mBAAOA,OAAO,CAACC,WAAR,CAAoBC,YAApB,CAAiCU,MAAjC,CAAwCb,IAAI,CAACK,EAA7C,EAAiDL,IAAI,CAACW,IAAtD,CAAP;AACH,WAFM,CAAP;AAGH,SAdO;AAeRG,QAAAA,iBAAiB,EAAE,OAAOf,CAAP,EAAUC,IAAV,EAAgCC,OAAhC,KAA4C;AAC3D,iBAAO,sBAAQ,MAAM;AACjB,mBAAOA,OAAO,CAACC,WAAR,CAAoBC,YAApB,CAAiCY,MAAjC,CAAwCf,IAAI,CAACK,EAA7C,CAAP;AACH,WAFM,CAAP;AAGH;AAnBO;AAbL;AA5CP;AAFmC,CAA/C;eAoFeb,M","sourcesContent":["import { GraphQLSchemaPlugin } from \"@webiny/handler-graphql/types\";\nimport resolve from \"./utils/resolve\";\nimport { PbContext } from \"../types\";\n\nconst plugin: GraphQLSchemaPlugin<PbContext> = {\n    type: \"graphql-schema\",\n    schema: {\n        typeDefs: /* GraphQL */ `\n            type PbPageElement {\n                id: ID\n                createdOn: DateTime\n                createdBy: PbCreatedBy\n                name: String\n                category: String\n                type: String\n                content: JSON\n                preview: JSON\n            }\n\n            input PbPageElementInput {\n                id: ID\n                name: String\n                type: String\n                category: String\n                content: JSON\n                preview: JSON\n            }\n\n            # Response types\n            type PbPageElementResponse {\n                data: PbPageElement\n                error: PbError\n            }\n\n            type PbPageElementListResponse {\n                data: [PbPageElement]\n                error: PbError\n            }\n\n            extend type PbQuery {\n                listPageElements: PbPageElementListResponse\n                getPageElement(id: ID!): PbPageElementResponse\n            }\n\n            extend type PbMutation {\n                createPageElement(data: PbPageElementInput!): PbPageElementResponse\n                updatePageElement(id: ID!, data: PbPageElementInput!): PbPageElementResponse\n                deletePageElement(id: ID!): PbPageElementResponse\n            }\n        `,\n        resolvers: {\n            PbQuery: {\n                getPageElement: async (_, args: { id: string }, context) => {\n                    return resolve(() => {\n                        return context.pageBuilder.pageElements.get(args.id);\n                    });\n                },\n                listPageElements: async (_, args, context) => {\n                    return resolve(() => {\n                        return context.pageBuilder.pageElements.list();\n                    });\n                }\n            },\n            PbMutation: {\n                createPageElement: async (_, args: { data: Record<string, any> }, context) => {\n                    return resolve(() => {\n                        return context.pageBuilder.pageElements.create(args.data);\n                    });\n                },\n                updatePageElement: async (\n                    _,\n                    args: { id: string; data: Record<string, any> },\n                    context\n                ) => {\n                    return resolve(() => {\n                        return context.pageBuilder.pageElements.update(args.id, args.data);\n                    });\n                },\n                deletePageElement: async (_, args: { id: string }, context) => {\n                    return resolve(() => {\n                        return context.pageBuilder.pageElements.delete(args.id);\n                    });\n                }\n            }\n        }\n    }\n};\n\nexport default plugin;\n"],"file":"pageElements.gql.js"}