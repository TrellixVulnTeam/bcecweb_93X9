{"version":3,"sources":["../../../src/utils/models/DefaultSettings.model.ts"],"names":["trimTrailingSlashes","value","extractPid","pid","split","name","validation","websiteUrl","websitePreviewUrl","favicon","logo","prerendering","instanceOf","app","url","storage","meta","social","facebook","twitter","instagram","image","pages","home","notFound"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;AACA,MAAMA,mBAAmB,GAAGC,KAAK,IAAI,sBAAQA,KAAR,EAAe,GAAf,CAArC,C,CAEA;;;AACA,MAAMC,UAAU,GAAID,KAAD,IAA2B;AAC1C,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,WAAO,IAAP;AACH;;AAED,QAAM,CAACE,GAAD,IAAQF,KAAK,CAACG,KAAN,CAAY,GAAZ,CAAd;AACA,SAAOD,GAAG,IAAI,IAAd;AACH,CAPD;;eASe,wBAAW;AACtBE,EAAAA,IAAI,EAAE,oBAAO;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAP,CADgB;AAEtBC,EAAAA,UAAU,EAAE,mBAAMP,mBAAN,EAA2B,oBAAO;AAAEM,IAAAA,UAAU,EAAE;AAAd,GAAP,CAA3B,CAFU;AAGtBE,EAAAA,iBAAiB,EAAE,mBAAMR,mBAAN,EAA2B,oBAAO;AAAEM,IAAAA,UAAU,EAAE;AAAd,GAAP,CAA3B,CAHG;AAItBG,EAAAA,OAAO,EAAE,iCAAO,EAAP,CAJa;AAKtBC,EAAAA,IAAI,EAAE,iCAAO,EAAP,CALgB;AAMtBC,EAAAA,YAAY,EAAE,oBAAO;AACjBC,IAAAA,UAAU,EAAE,wBAAW;AACnBC,MAAAA,GAAG,EAAE,oBAAO;AACRD,QAAAA,UAAU,EAAE,wBAAW;AACnBE,UAAAA,GAAG,EAAE,mBAAMd,mBAAN,EAA2B,oBAAO;AAAEM,YAAAA,UAAU,EAAE;AAAd,WAAP,CAA3B;AADc,SAAX;AADJ,OAAP,CADc;AAMnBS,MAAAA,OAAO,EAAE,oBAAO;AACZH,QAAAA,UAAU,EAAE,wBAAW;AACnBP,UAAAA,IAAI,EAAE,oBAAO;AAAEC,YAAAA,UAAU,EAAE;AAAd,WAAP;AADa,SAAX;AADA,OAAP,CANU;AAWnBU,MAAAA,IAAI,EAAE;AAXa,KAAX;AADK,GAAP,CANQ;AAqBtBC,EAAAA,MAAM,EAAE,oBAAO;AACXhB,IAAAA,KAAK,EAAE,EADI;AAEXW,IAAAA,UAAU,EAAE,wBAAW;AACnBM,MAAAA,QAAQ,EAAE,oBAAO;AAAEZ,QAAAA,UAAU,EAAE;AAAd,OAAP,CADS;AAEnBa,MAAAA,OAAO,EAAE,oBAAO;AAAEb,QAAAA,UAAU,EAAE;AAAd,OAAP,CAFU;AAGnBc,MAAAA,SAAS,EAAE,oBAAO;AAAEd,QAAAA,UAAU,EAAE;AAAd,OAAP,CAHQ;AAInBe,MAAAA,KAAK,EAAE,iCAAO,EAAP;AAJY,KAAX;AAFD,GAAP,CArBc;AA8BtBC,EAAAA,KAAK,EAAE,oBAAO;AACVrB,IAAAA,KAAK,EAAE,EADG;AAEVW,IAAAA,UAAU,EAAE,wBAAW;AACnBW,MAAAA,IAAI,EAAE,mBAAMrB,UAAN,EAAkB,qBAAlB,CADa;AAEnBsB,MAAAA,QAAQ,EAAE,mBAAMtB,UAAN,EAAkB,qBAAlB;AAFS,KAAX;AAFF,GAAP;AA9Be,CAAX,G","sourcesContent":["import { withFields, string, fields, onSet } from \"@commodo/fields\";\nimport { object } from \"commodo-fields-object\";\nimport trimEnd from \"lodash/trimEnd\";\n\n// We don't want trailing slashes in Page Builder app's important URLs (website URL, website preview URL, app URL).\nconst trimTrailingSlashes = value => trimEnd(value, \"/\");\n\n// `pid` (page ID) is an ID consisting only of the unique page ID, without the version suffix (e.g. #0002).\nconst extractPid = (value: string): string => {\n    if (typeof value !== \"string\") {\n        return null;\n    }\n\n    const [pid] = value.split(\"#\");\n    return pid || null;\n};\n\nexport default withFields({\n    name: string({ validation: \"required,maxLength:500\" }),\n    websiteUrl: onSet(trimTrailingSlashes)(string({ validation: \"url,maxLength:500\" })),\n    websitePreviewUrl: onSet(trimTrailingSlashes)(string({ validation: \"url,maxLength:500\" })),\n    favicon: object({}),\n    logo: object({}),\n    prerendering: fields({\n        instanceOf: withFields({\n            app: fields({\n                instanceOf: withFields({\n                    url: onSet(trimTrailingSlashes)(string({ validation: \"url\" }))\n                })()\n            }),\n            storage: fields({\n                instanceOf: withFields({\n                    name: string({ validation: \"maxLength:500\" })\n                })()\n            }),\n            meta: object()\n        })()\n    }),\n    social: fields({\n        value: {},\n        instanceOf: withFields({\n            facebook: string({ validation: \"url,maxLength:500\" }),\n            twitter: string({ validation: \"url,maxLength:500\" }),\n            instagram: string({ validation: \"url,maxLength:500\" }),\n            image: object({})\n        })()\n    }),\n    pages: fields({\n        value: {},\n        instanceOf: withFields({\n            home: onSet(extractPid)(string()),\n            notFound: onSet(extractPid)(string())\n        })()\n    })\n})();\n"],"file":"DefaultSettings.model.js"}