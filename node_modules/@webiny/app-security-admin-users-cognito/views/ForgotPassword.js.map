{"version":3,"sources":["../../src/views/ForgotPassword.tsx"],"names":["React","Form","validation","ButtonPrimary","ButtonDefault","Input","Grid","Cell","Typography","Alert","Elevation","StateContainer","alignRight","InnerContent","Title","CircularProgress","useAuthenticator","useForgotPassword","ForgotPassword","checkingUser","authData","changeState","loading","codeSent","shouldRender","setPassword","requestCode","error","username","Bind","submit","data","create","val","cb","toLowerCase","textAlign"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,mBAA7C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,cAAP;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,KAAnC;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,gBAAT,QAAiC,oEAAjC;AACA,SAASC,iBAAT,QAAkC,qEAAlC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,0BAAgDF,gBAAgB,EAAhE;AAAA,MAAQG,YAAR,qBAAQA,YAAR;AAAA,MAAsBC,QAAtB,qBAAsBA,QAAtB;AAAA,MAAgCC,WAAhC,qBAAgCA,WAAhC;;AACA,2BACIJ,iBAAiB,EADrB;AAAA,MAAQK,OAAR,sBAAQA,OAAR;AAAA,MAAiBC,QAAjB,sBAAiBA,QAAjB;AAAA,MAA2BC,YAA3B,sBAA2BA,YAA3B;AAAA,MAAyCC,WAAzC,sBAAyCA,WAAzC;AAAA,MAAsDC,WAAtD,sBAAsDA,WAAtD;AAAA,MAAmEC,KAAnE,sBAAmEA,KAAnE;;AAGA,MAAI,CAACH,YAAD,IAAiBL,YAArB,EAAmC;AAC/B,WAAO,IAAP;AACH;;AAED,aAA0BC,QAAQ,IAAI,EAAtC;AAAA,2BAAQQ,QAAR;AAAA,MAAQA,QAAR,8BAAmB,EAAnB;;AAEA,sBACI,oBAAC,cAAD,qBACI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAE;AAAEA,MAAAA,QAAQ,EAARA;AAAF,KADV;AAEI,IAAA,QAAQ,EAAE;AAAA,UAAGA,QAAH,SAAGA,QAAH;AAAA,aACNL,QAAQ,GAAGE,WAAW,CAAC;AAAEG,QAAAA,QAAQ,EAARA;AAAF,OAAD,CAAd,GAA+BF,WAAW,CAAC;AAAEE,QAAAA,QAAQ,EAARA;AAAF,OAAD,CAD5C;AAAA,KAFd;AAKI,IAAA,aAAa;AALjB,KAOK;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,QAASC,MAAT,SAASA,MAAT;AAAA,QAAiBC,IAAjB,SAAiBA,IAAjB;AAAA,wBACG,uDACI,oBAAC,SAAD;AAAW,MAAA,CAAC,EAAE;AAAd,oBACI,oBAAC,YAAD,QACKT,OAAO,iBAAI,oBAAC,gBAAD,OADhB,eAEI,oBAAC,KAAD,qBACI,6CACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAC;AAAhB,2BADJ,CADJ,eAII,4CACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAC;AAAhB,uCADJ,CAJJ,CAFJ,EAaKK,KAAK,iBACF,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,sBAAd;AAAsC,MAAA,IAAI,EAAE;AAA5C,OACKA,KADL,CADJ,CADJ,CAdR,EAuBK,CAACJ,QAAD,gBACG,uDACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,UAAU,EAAErB,UAAU,CAAC8B,MAAX,CAAkB,UAAlB,CAFhB;AAGI,MAAA,YAAY,EAAE,sBAACC,GAAD,EAAMC,EAAN;AAAA,eACVA,EAAE,CAACD,GAAG,CAACE,WAAJ,EAAD,CADQ;AAAA;AAHlB,oBAOI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAE,OADX;AAEI,MAAA,WAAW,EACP;AAHR,MAPJ,CADJ,CADJ,CADJ,eAoBI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,EAAZ;AAAgB,MAAA,SAAS,EAAEvB;AAA3B,oBACI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAEkB;AAAxB,OACK,kBADL,CADJ,CADJ,CApBJ,CADH,gBA8BG,uDACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAC;AAAhB,uEAEI,+BAFJ,eAGI,+BAHJ,8GADJ,CADJ,CADJ,eAaI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,EAAZ;AAAgB,MAAA,SAAS,EAAElB;AAA3B,oBACI,oBAAC,aAAD;AACI,MAAA,OAAO,EAAE;AAAA,eACLc,WAAW,CAAC;AAAEE,UAAAA,QAAQ,EAAEG,IAAI,CAACH;AAAjB,SAAD,CADN;AAAA;AADb,OAKK,aALL,CADJ,eAQI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAEE;AAAxB,yBARJ,CADJ,CAbJ,CArDR,CADJ,CADJ,eAsFI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,EAAZ;AAAgB,MAAA,KAAK,EAAE;AAAEM,QAAAA,SAAS,EAAE;AAAb;AAAvB,yCAEI;AAAG,MAAA,IAAI,EAAE,GAAT;AAAc,MAAA,OAAO,EAAE;AAAA,eAAMf,WAAW,CAAC,QAAD,CAAjB;AAAA;AAAvB,iBAFJ,CADJ,CAtFJ,CADH;AAAA,GAPL,CADJ,CADJ;AA6GH,CAxHD;;AA0HA,eAAeH,cAAf","sourcesContent":["import * as React from \"react\";\nimport { Form } from \"@webiny/form\";\nimport { validation } from \"@webiny/validation\";\nimport { ButtonPrimary, ButtonDefault } from \"@webiny/ui/Button\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Alert } from \"@webiny/ui/Alert\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport StateContainer from \"./StateContainer\";\nimport { alignRight, InnerContent, Title } from \"./StyledComponents\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { useAuthenticator } from \"@webiny/app-security-cognito-authentication/hooks/useAuthenticator\";\nimport { useForgotPassword } from \"@webiny/app-security-cognito-authentication/hooks/useForgotPassword\";\n\nconst ForgotPassword = () => {\n    const { checkingUser, authData, changeState } = useAuthenticator();\n    const { loading, codeSent, shouldRender, setPassword, requestCode, error } =\n        useForgotPassword();\n\n    if (!shouldRender || checkingUser) {\n        return null;\n    }\n\n    const { username = \"\" } = authData || {};\n\n    return (\n        <StateContainer>\n            <Form\n                data={{ username }}\n                onSubmit={({ username }) =>\n                    codeSent ? setPassword({ username }) : requestCode({ username })\n                }\n                submitOnEnter\n            >\n                {({ Bind, submit, data }) => (\n                    <>\n                        <Elevation z={2}>\n                            <InnerContent>\n                                {loading && <CircularProgress />}\n                                <Title>\n                                    <h1>\n                                        <Typography use=\"headline4\">Password Recovery</Typography>\n                                    </h1>\n                                    <p>\n                                        <Typography use=\"subtitle2\">\n                                            request a password reset code\n                                        </Typography>\n                                    </p>\n                                </Title>\n\n                                {error && (\n                                    <Grid>\n                                        <Cell span={12}>\n                                            <Alert title={\"Something went wrong\"} type={\"danger\"}>\n                                                {error}\n                                            </Alert>\n                                        </Cell>\n                                    </Grid>\n                                )}\n\n                                {!codeSent ? (\n                                    <>\n                                        <Grid>\n                                            <Cell span={12}>\n                                                <Bind\n                                                    name=\"username\"\n                                                    validators={validation.create(\"required\")}\n                                                    beforeChange={(val, cb) =>\n                                                        cb(val.toLowerCase())\n                                                    }\n                                                >\n                                                    <Input\n                                                        label={\"Email\"}\n                                                        description={\n                                                            \"A reset code will be sent to your email.\"\n                                                        }\n                                                    />\n                                                </Bind>\n                                            </Cell>\n                                        </Grid>\n\n                                        <Grid>\n                                            <Cell span={12} className={alignRight}>\n                                                <ButtonPrimary onClick={submit}>\n                                                    {\"Send me the code\"}\n                                                </ButtonPrimary>\n                                            </Cell>\n                                        </Grid>\n                                    </>\n                                ) : (\n                                    <>\n                                        <Grid>\n                                            <Cell span={12}>\n                                                <Typography use=\"body1\">\n                                                    We have sent you a code to reset your password!\n                                                    <br />\n                                                    <br />\n                                                    Click the &quot;Resend code&quot; button below\n                                                    to resend the code in case you haven&apos;t\n                                                    received it the first time.\n                                                </Typography>\n                                            </Cell>\n                                        </Grid>\n                                        <Grid>\n                                            <Cell span={12} className={alignRight}>\n                                                <ButtonDefault\n                                                    onClick={() =>\n                                                        requestCode({ username: data.username })\n                                                    }\n                                                >\n                                                    {\"Resend code\"}\n                                                </ButtonDefault>\n                                                <ButtonPrimary onClick={submit}>\n                                                    I got the code!\n                                                </ButtonPrimary>\n                                            </Cell>\n                                        </Grid>\n                                    </>\n                                )}\n                            </InnerContent>\n                        </Elevation>\n                        <Grid>\n                            <Cell span={12} style={{ textAlign: \"center\" }}>\n                                Want to sign in? {/* eslint-disable-next-line */}\n                                <a href={\"#\"} onClick={() => changeState(\"signIn\")}>\n                                    Sign in\n                                </a>\n                            </Cell>\n                        </Grid>\n                    </>\n                )}\n            </Form>\n        </StateContainer>\n    );\n};\n\nexport default ForgotPassword;\n"],"file":"ForgotPassword.js"}