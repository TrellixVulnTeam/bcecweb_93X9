{"version":3,"sources":["../../src/views/RequireNewPassword.tsx"],"names":["React","Form","validation","ButtonPrimary","Input","Grid","Cell","Typography","Elevation","useAuthenticator","useRequireNewPassword","StateContainer","alignRight","InnerContent","Title","sentenceCase","str","lower","toLowerCase","toUpperCase","substring","RequireNewPassword","checkingUser","shouldRender","requiredAttributes","confirm","password","Bind","submit","create","length","map","name"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Form } from \"@webiny/form\";\nimport { validation } from \"@webiny/validation\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { useAuthenticator } from \"@webiny/app-security-cognito-authentication/hooks/useAuthenticator\";\nimport { useRequireNewPassword } from \"@webiny/app-security-cognito-authentication/hooks/useRequireNewPassword\";\nimport StateContainer from \"./StateContainer\";\nimport { alignRight, InnerContent, Title } from \"./StyledComponents\";\n\nconst sentenceCase = str => {\n    const lower = str.toLowerCase();\n    return lower[0].toUpperCase() + lower.substring(1);\n};\n\nconst RequireNewPassword = () => {\n    const { checkingUser } = useAuthenticator();\n    const { shouldRender, requiredAttributes, confirm } = useRequireNewPassword();\n\n    if (!shouldRender || checkingUser) {\n        return null;\n    }\n\n    return (\n        <StateContainer>\n            <Form\n                onSubmit={({ password, requiredAttributes }) =>\n                    confirm({ password, requiredAttributes })\n                }\n                submitOnEnter\n            >\n                {({ Bind, submit }) => (\n                    <Elevation z={2}>\n                        <InnerContent>\n                            <Title>\n                                <Typography use=\"headline4\">Set New Password</Typography>\n                            </Title>\n\n                            <Grid>\n                                <Cell span={12}>\n                                    <Bind\n                                        name=\"password\"\n                                        validators={validation.create(\"required\")}\n                                    >\n                                        <Input\n                                            type={\"password\"}\n                                            label={\"New password\"}\n                                            outlined={true}\n                                        />\n                                    </Bind>\n                                </Cell>\n                            </Grid>\n                            {requiredAttributes.length > 0 && (\n                                <Title>\n                                    <Typography use=\"headline6\">\n                                        Please enter additional information\n                                    </Typography>\n                                </Title>\n                            )}\n                            <Grid>\n                                {requiredAttributes.map(name => (\n                                    <Cell key={name} span={12}>\n                                        <Bind\n                                            name={name}\n                                            validators={validation.create(\"required\")}\n                                        >\n                                            <Input label={sentenceCase(name)} outlined={true} />\n                                        </Bind>\n                                    </Cell>\n                                ))}\n                            </Grid>\n\n                            <Grid>\n                                <Cell span={12} className={alignRight}>\n                                    <ButtonPrimary onClick={submit}>{\"Set password\"}</ButtonPrimary>\n                                </Cell>\n                            </Grid>\n                        </InnerContent>\n                    </Elevation>\n                )}\n            </Form>\n        </StateContainer>\n    );\n};\n\nexport default RequireNewPassword;\n"],"file":"RequireNewPassword.js"}