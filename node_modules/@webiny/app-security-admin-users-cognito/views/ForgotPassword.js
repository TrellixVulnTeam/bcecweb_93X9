import * as React from "react";
import { Form } from "@webiny/form";
import { validation } from "@webiny/validation";
import { ButtonPrimary, ButtonDefault } from "@webiny/ui/Button";
import { Input } from "@webiny/ui/Input";
import { Grid, Cell } from "@webiny/ui/Grid";
import { Typography } from "@webiny/ui/Typography";
import { Alert } from "@webiny/ui/Alert";
import { Elevation } from "@webiny/ui/Elevation";
import StateContainer from "./StateContainer";
import { alignRight, InnerContent, Title } from "./StyledComponents";
import { CircularProgress } from "@webiny/ui/Progress";
import { useAuthenticator } from "@webiny/app-security-cognito-authentication/hooks/useAuthenticator";
import { useForgotPassword } from "@webiny/app-security-cognito-authentication/hooks/useForgotPassword";

var ForgotPassword = function ForgotPassword() {
  var _useAuthenticator = useAuthenticator(),
      checkingUser = _useAuthenticator.checkingUser,
      authData = _useAuthenticator.authData,
      changeState = _useAuthenticator.changeState;

  var _useForgotPassword = useForgotPassword(),
      loading = _useForgotPassword.loading,
      codeSent = _useForgotPassword.codeSent,
      shouldRender = _useForgotPassword.shouldRender,
      setPassword = _useForgotPassword.setPassword,
      requestCode = _useForgotPassword.requestCode,
      error = _useForgotPassword.error;

  if (!shouldRender || checkingUser) {
    return null;
  }

  var _ref = authData || {},
      _ref$username = _ref.username,
      username = _ref$username === void 0 ? "" : _ref$username;

  return /*#__PURE__*/React.createElement(StateContainer, null, /*#__PURE__*/React.createElement(Form, {
    data: {
      username: username
    },
    onSubmit: function onSubmit(_ref2) {
      var username = _ref2.username;
      return codeSent ? setPassword({
        username: username
      }) : requestCode({
        username: username
      });
    },
    submitOnEnter: true
  }, function (_ref3) {
    var Bind = _ref3.Bind,
        submit = _ref3.submit,
        data = _ref3.data;
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Elevation, {
      z: 2
    }, /*#__PURE__*/React.createElement(InnerContent, null, loading && /*#__PURE__*/React.createElement(CircularProgress, null), /*#__PURE__*/React.createElement(Title, null, /*#__PURE__*/React.createElement("h1", null, /*#__PURE__*/React.createElement(Typography, {
      use: "headline4"
    }, "Password Recovery")), /*#__PURE__*/React.createElement("p", null, /*#__PURE__*/React.createElement(Typography, {
      use: "subtitle2"
    }, "request a password reset code"))), error && /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Alert, {
      title: "Something went wrong",
      type: "danger"
    }, error))), !codeSent ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "username",
      validators: validation.create("required"),
      beforeChange: function beforeChange(val, cb) {
        return cb(val.toLowerCase());
      }
    }, /*#__PURE__*/React.createElement(Input, {
      label: "Email",
      description: "A reset code will be sent to your email."
    })))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12,
      className: alignRight
    }, /*#__PURE__*/React.createElement(ButtonPrimary, {
      onClick: submit
    }, "Send me the code")))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Typography, {
      use: "body1"
    }, "We have sent you a code to reset your password!", /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("br", null), "Click the \"Resend code\" button below to resend the code in case you haven't received it the first time."))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12,
      className: alignRight
    }, /*#__PURE__*/React.createElement(ButtonDefault, {
      onClick: function onClick() {
        return requestCode({
          username: data.username
        });
      }
    }, "Resend code"), /*#__PURE__*/React.createElement(ButtonPrimary, {
      onClick: submit
    }, "I got the code!")))))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12,
      style: {
        textAlign: "center"
      }
    }, "Want to sign in? ", /*#__PURE__*/React.createElement("a", {
      href: "#",
      onClick: function onClick() {
        return changeState("signIn");
      }
    }, "Sign in"))));
  }));
};

export default ForgotPassword;
//# sourceMappingURL=ForgotPassword.js.map