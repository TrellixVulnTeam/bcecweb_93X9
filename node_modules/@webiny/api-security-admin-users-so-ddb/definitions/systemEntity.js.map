{"version":3,"sources":["../../src/definitions/systemEntity.ts"],"names":["createSystemEntity","params","context","table","entityName","attributes","Entity","name","PK","partitionKey","SK","sortKey","version","type"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;;;AAMO,MAAMA,kBAAkB,GAAIC,MAAD,IAAiC;AAC/D,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBF,MAA3B;AACA,QAAMG,UAAU,GAAG,gBAAnB;AACA,QAAMC,UAAU,GAAG,oCAAmBH,OAAnB,EAA4BE,UAA5B,CAAnB;AACA,SAAO,IAAIE,uBAAJ,CAAW;AACdH,IAAAA,KADc;AAEdI,IAAAA,IAAI,EAAEH,UAFQ;AAGdC,IAAAA,UAAU;AACNG,MAAAA,EAAE,EAAE;AACAC,QAAAA,YAAY,EAAE;AADd,OADE;AAINC,MAAAA,EAAE,EAAE;AACAC,QAAAA,OAAO,EAAE;AADT,OAJE;AAONC,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD;AAPH,OAUHR,UAVG;AAHI,GAAX,CAAP;AAgBH,CApBM","sourcesContent":["import { Entity, Table } from \"dynamodb-toolbox\";\nimport { AdminUsersContext } from \"@webiny/api-security-admin-users/types\";\nimport { getExtraAttributes } from \"@webiny/db-dynamodb/utils/attributes\";\n\ninterface Params {\n    context: AdminUsersContext;\n    table: Table;\n}\nexport const createSystemEntity = (params: Params): Entity<any> => {\n    const { context, table } = params;\n    const entityName = \"SecuritySystem\";\n    const attributes = getExtraAttributes(context, entityName);\n    return new Entity({\n        table,\n        name: entityName,\n        attributes: {\n            PK: {\n                partitionKey: true\n            },\n            SK: {\n                sortKey: true\n            },\n            version: {\n                type: \"string\"\n            },\n            ...attributes\n        }\n    });\n};\n"],"file":"systemEntity.js"}