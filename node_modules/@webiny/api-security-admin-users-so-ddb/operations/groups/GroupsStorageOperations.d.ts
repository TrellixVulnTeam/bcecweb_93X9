import { AdminUsersContext, Group, GroupsStorageOperations, GroupsStorageOperationsCreateParams, GroupsStorageOperationsDeleteParams, GroupsStorageOperationsGetParams, GroupsStorageOperationsListParams, GroupsStorageOperationsUpdateParams, GroupsStorageOperationsUpdateUserLinksParams } from "@webiny/api-security-admin-users/types";
import { Tenant } from "@webiny/api-tenancy/types";
interface Params {
    context: AdminUsersContext;
}
export declare class GroupsStorageOperationsDdb implements GroupsStorageOperations {
    private readonly context;
    private readonly table;
    private readonly entity;
    private readonly linksEntity;
    constructor({ context }: Params);
    get(tenant: Tenant, { slug }: GroupsStorageOperationsGetParams): Promise<Group | null>;
    list(tenant: Tenant, { sort }: GroupsStorageOperationsListParams): Promise<Group[]>;
    create(tenant: Tenant, { group }: GroupsStorageOperationsCreateParams): Promise<Group>;
    update(tenant: Tenant, { group }: GroupsStorageOperationsUpdateParams): Promise<Group>;
    delete(tenant: Tenant, { group }: GroupsStorageOperationsDeleteParams): Promise<Group>;
    updateUserLinks(tenant: Tenant, { group }: GroupsStorageOperationsUpdateUserLinksParams): Promise<void>;
    private cleanupItem;
    private createPartitionKey;
    private createSortKey;
}
export {};
