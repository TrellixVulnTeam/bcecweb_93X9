{"version":3,"sources":["../src/types.ts"],"names":["TYPE"],"mappings":";;;;;;IAOYA,I,EAMZ;;;;WANYA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;GAAAA,I,oBAAAA,I","sourcesContent":["import { Args as QueueAddArgs } from \"./queue/add/types\";\n\nexport type HandlerResponse<TData = Record<string, any>, TError = Record<string, any>> = {\n    data: TData;\n    error: TError;\n};\n\nexport enum TYPE {\n    DbRender = \"ps.render\",\n    DbTagUrlLink = \"ps.tagUrlLink\",\n    DbQueueJob = \"ps.queue.job\"\n}\n\n// Contains data about the previously performed render process for given URL.\nexport type DbRender = {\n    PK: string;\n    SK: string;\n    TYPE: TYPE.DbRender;\n    url: string;\n    args?: Record<string, any>;\n    configuration?: Record<string, any>;\n    files: { name: string; type: string; meta: Record<string, any> }[];\n};\n\n// Represents a link between a tag (that contains a key and value) and a URL.\n// Note that if you want to get URL and all of its tags, use DbRender.\nexport type DbTagUrlLink = {\n    PK: string;\n    SK: string;\n    TYPE: TYPE.DbTagUrlLink;\n    url: string;\n    key: string;\n    value: string;\n};\n\n// Represents a single queue job. A single job can include multiple paths or tags that need to be rendered / flushed.\nexport type DbQueueJob = {\n    PK: \"PS#Q#JOB\";\n    SK: string;\n    TYPE: TYPE.DbQueueJob;\n    args: QueueAddArgs;\n};\n"],"file":"types.js"}