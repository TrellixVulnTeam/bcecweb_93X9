{"version":3,"sources":["../../src/client/index.ts"],"names":["configuration","type","apply","context","handlerClient","Error","prerenderingServiceClient","render","args","invoke","name","handlers","await","payload","flush","queue","add","process"],"mappings":";;;;;;;;;AAQA;;eAEgBA,aAAD,IAAkD;AAC7D,SAAO,CACH;AACIC,IAAAA,IAAI,EAAE,SADV;;AAEIC,IAAAA,KAAK,CAACC,OAAD,EAAU;AACX,UAAI,CAACA,OAAO,CAACC,aAAb,EAA4B;AACxB,cAAM,IAAIC,cAAJ,CACD,oKADC,CAAN;AAGH;;AACD,UAAIF,OAAO,CAACG,yBAAZ,EAAuC;AACnC;AACH;;AAEDH,MAAAA,OAAO,CAACG,yBAAR,GAAoC;AAChC,cAAMC,MAAN,CAAaC,IAAb,EAAmB;AACf,gBAAML,OAAO,CAACC,aAAR,CAAsBK,MAAtB,CAAgD;AAClDC,YAAAA,IAAI,EAAEV,aAAa,CAACW,QAAd,CAAuBJ,MADqB;AAElDK,YAAAA,KAAK,EAAE,KAF2C;AAGlDC,YAAAA,OAAO,EAAEL;AAHyC,WAAhD,CAAN;AAKH,SAP+B;;AAQhC,cAAMM,KAAN,CAAYN,IAAZ,EAAkB;AACd,gBAAML,OAAO,CAACC,aAAR,CAAsBK,MAAtB,CAA+C;AACjDC,YAAAA,IAAI,EAAEV,aAAa,CAACW,QAAd,CAAuBG,KADoB;AAEjDF,YAAAA,KAAK,EAAE,KAF0C;AAGjDC,YAAAA,OAAO,EAAEL;AAHwC,WAA/C,CAAN;AAKH,SAd+B;;AAehCO,QAAAA,KAAK,EAAE;AACH,gBAAMC,GAAN,CAAUR,IAAV,EAAgB;AACZ,kBAAML,OAAO,CAACC,aAAR,CAAsBK,MAAtB,CAA+C;AACjDC,cAAAA,IAAI,EAAEV,aAAa,CAACW,QAAd,CAAuBI,KAAvB,CAA6BC,GADc;AAEjDJ,cAAAA,KAAK,EAAE,KAF0C;AAGjDC,cAAAA,OAAO,EAAEL;AAHwC,aAA/C,CAAN;AAKH,WAPE;;AAQH,gBAAMS,OAAN,GAAgB;AACZ,mBAAOd,OAAO,CAACC,aAAR,CAAsBK,MAAtB,CAA6B;AAChCC,cAAAA,IAAI,EAAEV,aAAa,CAACW,QAAd,CAAuBI,KAAvB,CAA6BE,OADH;AAEhCL,cAAAA,KAAK,EAAE;AAFyB,aAA7B,CAAP;AAIH;;AAbE;AAfyB,OAApC;AA+BH;;AA3CL,GADG,CAAP;AA+CH,C","sourcesContent":["import { ClientContext } from \"@webiny/handler-client/types\";\nimport { ContextPlugin } from \"@webiny/handler/types\";\nimport { PrerenderingServiceClientArgs, PrerenderingServiceClientContext } from \"./types\";\n\nimport { HandlerArgs as RenderHandlerArgs } from \"../render/types\";\nimport { HandlerArgs as FlushHandlerArgs } from \"../flush/types\";\nimport { HandlerArgs as QueueHandlerArgs } from \"../queue/add/types\";\n\nimport Error from \"@webiny/error\";\n\nexport default (configuration: PrerenderingServiceClientArgs) => {\n    return [\n        {\n            type: \"context\",\n            apply(context) {\n                if (!context.handlerClient) {\n                    throw new Error(\n                        `Prerendering service's client relies on the \"context.handlerClient\", defined by the \"@webiny/handler-client\" package. Please add it to your handler and try again.`\n                    );\n                }\n                if (context.prerenderingServiceClient) {\n                    return;\n                }\n\n                context.prerenderingServiceClient = {\n                    async render(args) {\n                        await context.handlerClient.invoke<RenderHandlerArgs>({\n                            name: configuration.handlers.render,\n                            await: false,\n                            payload: args\n                        });\n                    },\n                    async flush(args) {\n                        await context.handlerClient.invoke<FlushHandlerArgs>({\n                            name: configuration.handlers.flush,\n                            await: false,\n                            payload: args\n                        });\n                    },\n                    queue: {\n                        async add(args) {\n                            await context.handlerClient.invoke<QueueHandlerArgs>({\n                                name: configuration.handlers.queue.add,\n                                await: false,\n                                payload: args\n                            });\n                        },\n                        async process() {\n                            return context.handlerClient.invoke({\n                                name: configuration.handlers.queue.process,\n                                await: false\n                            });\n                        }\n                    }\n                };\n            }\n        } as ContextPlugin<ClientContext, PrerenderingServiceClientContext>\n    ];\n};\n"],"file":"index.js"}