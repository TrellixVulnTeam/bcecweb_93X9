import { Args as BaseHandlerArgs, Configuration, HandlerContext } from "./types";
export declare type File = {
    type: string;
    body: any;
    name: string;
    meta: Record<string, any>;
};
declare const _default: (url: string, args: Args) => Promise<[File[], Meta]>;
export default _default;
declare type RenderResult = {
    content: string;
    meta: Record<string, any>;
};
declare type Args = {
    context: HandlerContext;
    args: BaseHandlerArgs;
    configuration: Configuration;
    renderUrlFunction?: (url: string) => RenderResult;
};
declare type Meta = {
    url: string;
    id: string;
    ts: number;
    render: RenderResult;
    args: Args;
};
export declare const defaultRenderUrlFunction: (url: string, args: Args) => Promise<RenderResult>;
