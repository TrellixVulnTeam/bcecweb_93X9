import { Args as QueueAddArgs } from "./queue/add/types";
export declare type HandlerResponse<TData = Record<string, any>, TError = Record<string, any>> = {
    data: TData;
    error: TError;
};
export declare enum TYPE {
    DbRender = "ps.render",
    DbTagUrlLink = "ps.tagUrlLink",
    DbQueueJob = "ps.queue.job"
}
export declare type DbRender = {
    PK: string;
    SK: string;
    TYPE: TYPE.DbRender;
    url: string;
    args?: Record<string, any>;
    configuration?: Record<string, any>;
    files: {
        name: string;
        type: string;
        meta: Record<string, any>;
    }[];
};
export declare type DbTagUrlLink = {
    PK: string;
    SK: string;
    TYPE: TYPE.DbTagUrlLink;
    url: string;
    key: string;
    value: string;
};
export declare type DbQueueJob = {
    PK: "PS#Q#JOB";
    SK: string;
    TYPE: TYPE.DbQueueJob;
    args: QueueAddArgs;
};
